cscope 15 $HOME/Jimpe               0000921953
	@/users/info/etu-s4/royetju/Jimpe/DoubleBuffer.cpp

1 
	~"DoubÀBuf„r.h
"

3 
	gDoubÀBuf„r
::
	$DoubÀBuf„r
(Ë: 
	`c⁄dôi⁄_back
(
muãx_back
), 
	$c⁄dôi⁄_‰⁄t
(
muãx_‰⁄t
)

5 
cuºít
 = 0;

6 
°©e
 = 0;

7 
‰ames
[0] = 
cv
::
	`M©
(800, 600, 
CV_8UC3
);

8 
‰ames
[1] = 
cv
::
	`M©
(800, 600, 
CV_8UC3
);

9 
	}
}

11 
	gDoubÀBuf„r
::~
	$DoubÀBuf„r
()

14 
	}
}

15 
cv
::
M©
* 
DoubÀBuf„r
::
	$GëBack
(){

16 
muãx_back
.
	`Lock
();

18 
°©e
 & 1)

19 
c⁄dôi⁄_back
.
	`Waô
();

21 
muãx_back
.
	`U∆ock
();

22  &
‰ames
[
cuºít
];

23 
	}
}

24 
	gcv
::
M©
* 
DoubÀBuf„r
::
	$GëFr⁄t
(){

25 
muãx_‰⁄t
.
	`Lock
();

27 
°©e
 & 2)

28 
c⁄dôi⁄_‰⁄t
.
	`Waô
();

30 
muãx_‰⁄t
.
	`U∆ock
();

32  &
‰ames
[1-
cuºít
];

33 
	}
}

35 
	gDoubÀBuf„r
::
	$FœgBack
(){

36 
muãx_back
.
	`Lock
();

38 
°©e
 |= 1;

39 
	`Sw≠
();

41 
muãx_back
.
	`U∆ock
();

43 
	}
}

45 
	gDoubÀBuf„r
::
	$FœgFr⁄t
(){

46 
muãx_‰⁄t
.
	`Lock
();

48 
°©e
 |= 2;

49 
	`Sw≠
();

51 
muãx_‰⁄t
.
	`U∆ock
();

52 
	}
}

54 
	gDoubÀBuf„r
::
	$Sw≠
(){

55 if(
°©e
 == 3){

56 
cuºít
 = 1 - current;

57 
°©e
 = 0;

58 
c⁄dôi⁄_back
.
	`Sig«l
();

59 
c⁄dôi⁄_‰⁄t
.
	`Sig«l
();

62 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/DoubleBuffer.h

1 #i‚de‡
DOUBLEBUFFER_H


2 
	#DOUBLEBUFFER_H


	)

3 
	~<wx/wx.h
>

4 
	~<›ícv2/›ícv.hµ
>

6 ˛as†
	cDoubÀBuf„r


8 
	mpublic
:

9 
DoubÀBuf„r
();

10 
	mvútuÆ
 ~
DoubÀBuf„r
();

11 
	mcv
::
M©
* 
GëBack
();

12 
	mcv
::
M©
* 
GëFr⁄t
();

14 
FœgFr⁄t
();

15 
FœgBack
();

16 
	m¥iv©e
:

17 
Sw≠
();

18 
	mcuºít
;

19 
	m°©e
;

20 
	mcv
::
M©
 
‰ames
[2];

21 
wxMuãx
 
	mmuãx_back
;

22 
wxMuãx
 
	mmuãx_‰⁄t
;

23 
wxC⁄dôi⁄
 
	mc⁄dôi⁄_back
;

24 
wxC⁄dôi⁄
 
	mc⁄dôi⁄_‰⁄t
;

	@/users/info/etu-s4/royetju/Jimpe/GeneratePaletteThread.cpp

1 
	~"Gíî©ePÆëãThªad.h
"

3 
	gGíî©ePÆëãThªad
::
	$Gíî©ePÆëãThªad
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
, 
KDTªe
*& 
t
Ë: 
	`∑√l
’), 
	$åì
(
t
)

5 
img
 = *
b
.
	`GëFr⁄t
();

6 
	}
}

8 
	gGíî©ePÆëãThªad
::~
	$Gíî©ePÆëãThªad
()

11 
	}
}

12 * 
Gíî©ePÆëãThªad
::
	$E¡ry
(){

14 
åì
 = 
√w
 
	`KDTªe
(
img
);

15 
åì
->
	`gíî©ePÆëã
(8);

17 
wxComm™dEvít
* 
evt
 = 
√w
 
	`wxComm™dEvít
(
END_TASK_GEN_PALETTE
);

18 
	`wxQueueEvít
(
∑√l
, 
evt
);

20  
NULL
 ;

21 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/GeneratePaletteThread.h

1 #i‚de‡
GENERATEPALETTETHREAD_H


2 
	#GENERATEPALETTETHREAD_H


	)

3 
	~"KDTªe.h
"

4 
	~<wx/wx.h
>

5 
	~"DoubÀBuf„r.h
"

7 
wxDECLARE_EVENT
(
END_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

9 
˛ass
 
	gMyP™ñ
;

11 ˛as†
	cGíî©ePÆëãThªad
 : 
public
 
wxThªad


13 
public
:

14 
Gíî©ePÆëãThªad
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
, 
KDTªe
*& 
t
);

15 
	mvútuÆ
 ~
Gíî©ePÆëãThªad
();

17 
	m¥Ÿe˘ed
:

19 
¥iv©e
:

20 
MyP™ñ
* 
∑√l
;

21 
	mcv
::
M©
 
img
;

22 
	mKDTªe
*& 
	måì
;

23 
vútuÆ
 * 
E¡ry
();

25 
	~"MyP™ñ.h
"

	@/users/info/etu-s4/royetju/Jimpe/KDTree.cpp

1 
	~"KDTªe.h
"

3 
	gNode
::
Node
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
, * 
•lôs_v¨
Ë: 
	$nb_•lô
(
•lôs_v¨
){

4 (*
nb_•lô
) = 0;

5 
poöts
 = 
d©a
;

7 
åeshﬁd
 = 0;

8 
•lô_axis
 = 0;

9 
•lô_numbî
 = 1;

10 
highî
 = 
Ál£
;

12 
∑ª¡
 = 
nuŒ±r
;

13 
chûdªn
 = 
nuŒ±r
;

14 
	`upd©eAvîage
();

15 
	}
}

16 
	gNode
::
	$Node
(){

18 
	}
}

20 
Node
::Node(Node* 
p
, 
°d
::
ve˘‹
<
poöt_ty≥
>& 
∑ª¡_poöts
, 
boﬁ
 
h
Ë: 
nb_•lô
(p->nb_split){

21 
åeshﬁd
 = 0;

22 
	g•lô_axis
 = 0;

23 
	g•lô_numbî
 = (*
nb_•lô
)+1;

24 
	ghighî
 = 
h
;

26 
	g∑ª¡
 = 
p
;

27 
	gchûdªn
 = 
nuŒ±r
;

28 
£tPoöts
(
∑ª¡_poöts
);

31 
	gNode
::~
	$Node
(){

32 if(
chûdªn
)

33 
dñëe
[] 
chûdªn
;

34 
	}
}

36 
	gNode
::
£tPoöts
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
){

37 
xmö
, 
	gxmax
, 
	gymö
, 
	gymax
, 
	gzmö
, 
	gzmax
;

38 
gëLimôs
(0, 
xmö
, 
xmax
);

39 
gëLimôs
(1, 
ymö
, 
ymax
);

40 
gëLimôs
(2, 
zmö
, 
zmax
);

42 
size_t
 
	gi
 = 0; i < 
	gd©a
.
size
(); i++){

43 if(
	gd©a
[
i
].
	gfú°
[0] >
xmö
 && 
d©a
[i].
fú°
[0] <
xmax
 &&

44 
d©a
[
i
].
fú°
[1] >
ymö
 && d©a[i].fú°[1] <
ymax
 &&

45 
d©a
[
i
].
fú°
[2] >
zmö
 && d©a[i].fú°[2] <
zmax
){

47 
poöts
.
push_back
(
d©a
[
i
]);

50 
upd©eAvîage
();

53 
	gNode
::
	$upd©eAvîage
(){

54 
tŸÆ
, 
x
, 
y
, 
z
;

55 
tŸÆ
 = 
x
 = 
y
 = 
z
 = 0;

57 
i
 = 0; i < 
poöts
.
	`size
(); i++){

58 
tŸÆ
 +
poöts
[
i
].
£c⁄d
;

59 
x
 +
poöts
[
i
].
fú°
[0] *Öoöts[i].
£c⁄d
;

60 
y
 +
poöts
[
i
].
fú°
[1] *Öoöts[i].
£c⁄d
;

61 
z
 +
poöts
[
i
].
fú°
[2] *Öoöts[i].
£c⁄d
;

63 
avîage
[0] = 
x
/
tŸÆ
;

64 
avîage
[1] = 
x
/
tŸÆ
;

65 
avîage
[2] = 
x
/
tŸÆ
;

66 
	}
}

68 
	gNode
::
	$•lô
(
åesh
, 
axis
){

69 
åeshﬁd
 = 
åesh
;

70 
•lô_axis
 = 
axis
;

71 (*
nb_•lô
)++;

73 
chûdªn
 = 
√w
 
Node
[2];

74 
chûdªn
[0] = 
	`Node
(
this
, 
poöts
, 
Ál£
);

75 
chûdªn
[1] = 
	`Node
(
this
, 
poöts
, 
åue
);

77 
	}
}

78 
	gcv
::
Vec
<, 3> 
	gNode
::
	$gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
){

79 if(
•lô_numbî
 < 
N_cﬁ‹
 && 
chûdªn
){

80 if(
cﬁ‹
[
∑ª¡
->
•lô_axis
] >
åeshﬁd
){

81  
chûdªn
[1].
	`gëCﬁ‹
(
cﬁ‹
, 
N_cﬁ‹
);

84  
chûdªn
[0].
	`gëCﬁ‹
(
cﬁ‹
, 
N_cﬁ‹
);

88  
avîage
;

90 
	}
}

92 
	gNode
::
	$gëLimôs
(
axis
, & 
lmö
, & 
lmax
){

93 
lmö
 = 0;

94 
lmax
 = 255;

95 
	`gëLow
(
axis
, 
lmö
);

96 
	`gëHigh
(
axis
, 
lmax
);

97 
	}
}

98 
	gNode
::
	$gëLow
(
axis
, & 
cuºít
){

99 if(!
∑ª¡
){

102 if(
axis
 =
∑ª¡
->
•lô_axis
 && 
highî
 && 
cuºít
 <Ö¨ít->
åeshﬁd
){

103 
cuºít
 = 
∑ª¡
->
åeshﬁd
;

105 
∑ª¡
->
	`gëLow
(
axis
, 
cuºít
);

108 
	}
}

109 
	gNode
::
	$gëHigh
(
axis
, & 
cuºít
){

110 if(!
∑ª¡
){

113 if(
axis
 =
∑ª¡
->
•lô_axis
 && !
highî
 && 
cuºít
 >∑ª¡->
åeshﬁd
){

114 
cuºít
 = 
∑ª¡
->
åeshﬁd
-1;

116 
∑ª¡
->
	`gëHigh
(
axis
, 
cuºít
);

118 
	}
}

120 
	gNode
::
	$Ÿsu
(
lmö
, 
lmax
, 
axis
, & 
maxV¨
, & 
åesh
){

121 
nb_poöts
 = 
poöts
.
	`size
();

122 
tŸÆ
 = 0;

124 
wL
 = 0;

125 
wH
 = 0;

127 
avgL
 = 0.0f;

128 
avgH
 = 0.0f;

130 
sumL
 = 0.0f;

132 
bV¨
 = 0.0f;

134 
i
 = 0; i < 
nb_poöts
; i++){

135 
tŸÆ
 +
poöts
[
i
].
£c⁄d
 *Öoöts[i].
fú°
[
axis
];

138 
°d
::
	`s‹t
(
poöts
.
	`begö
(),Öoöts.
	`íd
(), [
axis
](
poöt_ty≥
& 
p1
,Öoöt_ty≥& 
p2
)->
boﬁ
{

139  
p1
.
fú°
[
axis
] < 
p2
.first[axis];

142 
i
 = 0; i < 
nb_poöts
; i++){

143 
wL
 +
poöts
[
i
].
£c⁄d
;

144 if(
wL
 == 0) ;

146 
wH
 = 
nb_poöts
 - 
wL
;

147 if(
wH
 == 0) ;

149 
sumL
 +(Ë
poöts
[
i
].
£c⁄d
 *Öoöts[i].
fú°
[
axis
];

150 
avgL
 = 
sumL
/
wL
;

151 
avgH
 = (
tŸÆ
 - 
sumL
Ë/ 
wH
;

153 
bV¨
 = ()
wL
 * ()
wH
 * (
avgL
 - 
avgH
) * (avgL -ávgH);

154 if(
bV¨
 > 
maxV¨
){

155 
maxV¨
 = 
bV¨
;

156 
åesh
 = 
poöts
[
i
].
fú°
[
axis
];

159 
	}
}

161 
	gNode
::
	$ŸsuAxes
(& 
maxV¨
, & 
axis
, & 
åesh
){

162 
t_åesh
 = 0;

163 
t_maxV¨
 = 0.0f;

164 
lmö
;

165 
lmax
;

167 
a
 = 0;á < 3;á++){

168 
	`gëLimôs
(
a
, 
lmö
, 
lmax
);

170 
	`Ÿsu
(
lmö
, 
lmax
, 
a
, 
t_maxV¨
, 
t_åesh
);

172 if(
t_maxV¨
 > 
maxV¨
){

173 
maxV¨
 = 
t_maxV¨
;

174 
axis
 = 
a
;

175 
åesh
 = 
t_åesh
;

179 
	}
}

181 
	gNode
::
	$gëMaxV¨
(
Node
*& 
node
, & 
maxV¨
, & 
axis
, & 
åesh
){

182 
t_maxV¨
 = 0.0f;

183 
t_axis
 = 0;

184 
t_åeshﬁd
 = 0;

186 if(!
chûdªn
){

187 
	`ŸsuAxes
(
t_maxV¨
, 
t_axis
, 
t_åeshﬁd
);

188 if(
t_maxV¨
 > 
maxV¨
){

189 
maxV¨
 = 
t_maxV¨
;

190 
axis
 = 
t_axis
;

191 
node
 = 
this
;

192 
åesh
 = 
t_åeshﬁd
;

197 
chûdªn
[0].
	`gëMaxV¨
(
node
, 
maxV¨
, 
axis
, 
åesh
);

198 
chûdªn
[1].
	`gëMaxV¨
(
node
, 
maxV¨
, 
axis
, 
åesh
);

199 
	}
}

201 
	gNode
::
	$maxV¨S∂ô
(){

202 
Node
* 
node
 = 
this
;

203 
maxV¨
 = 0.0f;

204 
axis
 = 0;

205 
åesh
 = 0;

206 
	`gëMaxV¨
(
node
, 
maxV¨
, 
axis
, 
åesh
);

207 
node
->
	`•lô
(
åesh
, 
axis
);

209 
	}
}

216 
	gKDTªe
::
	$KDTªe
(
cv
::
M©
& 
image
)

218 
nb_•lô
 = 0;

219 
uch¨
* 
p
 = 
image
.
d©a
;

220 
°d
::
un‹dîed_m≠
<
cv
::
Vec
<, 3>, > 
d©a
;

221 
size_t
 
s
 = 
image
.
rows
 * image.
cﬁs
 * 3;

222 
cv
::
Vec
<, 3> 
poöt
;

223 
size_t
 
i
 = 0; i < 
s
; i+=3){

224 
poöt
[0] = 
p
[
i
];

225 
poöt
[1] = 
p
[
i
+1];

226 
poöt
[2] = 
p
[
i
+2];

228 autÿ
±r
 = 
d©a
.
	`föd
(
poöt
);

229 if(
±r
 =
d©a
.
	`íd
()){

230 
d©a
.
	`em∂a˚
(
poöt
, ()0);

233 
±r
->
£c⁄d
++;

237 
°d
::
ve˘‹
<
poöt_ty≥
> 
	`ouçut
(
d©a
.
	`begö
(), d©a.
	`íd
());

238 
roŸ
 = 
√w
 
	`Node
(
ouçut
, &
nb_•lô
);

239 
	}
}

241 
	gKDTªe
::~
	$KDTªe
()

243 
dñëe
 
roŸ
;

244 
	}
}

246 
	gcv
::
Vec
<, 3> 
	gKDTªe
::
	$gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
){

247  
roŸ
->
	`gëCﬁ‹
(
cﬁ‹
, 
N_cﬁ‹
);

248 
	}
}

250 
	gKDTªe
::
	$gíî©ePÆëã
(
max_cﬁ‹s
){

251 
i
 = 0; i < 
max_cﬁ‹s
-1; i++){

252 
roŸ
->
	`maxV¨S∂ô
();

254 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/KDTree.h

1 #i‚de‡
KDTREE_H


2 
	#KDTREE_H


	)

4 
	~<›ícv2/›ícv.hµ
>

5 
	~<ve˘‹
>

6 
	~<¨øy
>

7 
	~<un‹dîed_m≠
>

8 
	g°d
::
	t∑ú
<
	tcv
::
	tVec
<, 3>, > 
	tpoöt_ty≥
;

10 ˛as†
	cNode
{

12 
	mpublic
:

13 
Node
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
, * 
•lôs_v¨
);

14 ~
Node
();

15 
maxV¨S∂ô
();

16 
gëMaxV¨
(
Node
*& 
node
, & 
maxV¨
, & 
axis
, & 
åesh
);

17 
•lô
(
åesh
, 
axis
);

18 
	mcv
::
Vec
<, 3> 
gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
);

20 
	m¥iv©e
:

21 
Node
();

22 
Node
(Node* 
p
, 
°d
::
ve˘‹
<
poöt_ty≥
>& 
∑ª¡_poöts
, 
boﬁ
 
h
);

24 
ŸsuAxes
(& 
maxV¨
, & 
axis
, & 
åesh
);

25 
Ÿsu
(
lmö
, 
lmax
, 
axis
, & 
maxV¨
, & 
åesh
);

26 
gëLimôs
(
axis
, & 
lmö
, & 
lmax
);

27 
gëLow
(
axis
, & 
cuºít
);

28 
gëHigh
(
axis
, & 
cuºít
);

29 
£tPoöts
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
);

30 
upd©eAvîage
();

32 * 
	mnb_•lô
;

34 
	m°d
::
ve˘‹
<
poöt_ty≥
> 
poöts
;

36 
	mcv
::
Vec
<, 3> 
	mavîage
;

37 
	måeshﬁd
;

38 
	m•lô_axis
;

39 
	m•lô_numbî
;

41 
boﬁ
 
	mhighî
;

43 
Node
* 
	m∑ª¡
;

44 
Node
* 
	mchûdªn
;

47 
«me•a˚
 
	g°d
{

48 
	gãm∂©e
<>

49 
	ghash
<
	gcv
::
Vec
<, 3>>{

50 
	g°d
::
size_t
 
›î©‹
()(c⁄° 
cv
::
Vec
<, 3>& 
	göput
) const{

51 
usög
 
	g°d
::
hash
;

52 
usög
 
	g°d
::
size_t
;

54 
size_t
 
	gouçut
;

55 * 
	g±r
 = (*)&
ouçut
;

56 *(
	g±r
++Ë
öput
[0];

57 *(
	g±r
++Ë
öput
[1];

58 *(
	g±r
++Ë
öput
[2];

60  
	gouçut
;

64 ˛as†
	cKDTªe


66 
	mpublic
:

67 
KDTªe
(
cv
::
M©
& 
image
);

68 
	mvútuÆ
 ~
KDTªe
();

69 
	mcv
::
Vec
<, 3> 
gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
);

70 
gíî©ePÆëã
(
max_cﬁ‹s
);

71 
	m¥Ÿe˘ed
:

73 
¥iv©e
:

74 
Node
* 
roŸ
;

75 
	mnb_•lô
;

	@/users/info/etu-s4/royetju/Jimpe/MyFrame.cpp

1 
	~"MyFøme.h
"

3 
wxDEFINE_EVENT
(
DO_ROTATE
, 
wxComm™dEvít
);

4 
wxDEFINE_EVENT
(
START_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

6 
	gMyFøme
::
	$MyFøme
(c⁄° 
wxSåög
& 
tôÀ
, c⁄° 
wxPoöt
& 
pos
, c⁄° 
wxSize
& 
size
)

7 : 
	$wxFøme
(
NULL
, 
wxID_ANY
, 
tôÀ
, 
pos
, 
size
)

9 
m_∑√l
 = 
√w
 
	`MyP™ñ
(
this
);

10 
m_∑√l
->
	`debug
(1);

11 
m_∑√l
->
	`SëBackgroundCﬁour
(
	`wxCﬁour
(
	`wxT
("RED")));

12 
m_∑√l
->
	`debug
(2);

17 
m_toﬁb¨
 = 
√w
 
	`wxToﬁB¨
(
this
, 
wxID_ANY
, 
wxDeÁu…Posôi⁄
, 
wxDeÁu…Size
, 
wxTB_VERTICAL
);

20 
wxBôm≠
 
	`√g©iveIc⁄
(
	`wxT
("√g©ive.≤g"), 
wxBITMAP_TYPE_PNG
);

21 
wxBôm≠
 
	`múr‹HIc⁄
(
	`wxT
("múroúh.≤g"), 
wxBITMAP_TYPE_PNG
);

22 
wxBôm≠
 
	`múr‹VIc⁄
(
	`wxT
("múr‹v.≤g"), 
wxBITMAP_TYPE_PNG
);

23 
wxBôm≠
 
	`rŸ©eIc⁄
(
	`wxT
("rŸ©e.≤g"), 
wxBITMAP_TYPE_PNG
);

26 
m_toﬁb¨
->
	`AddToﬁ
(
ID_Neg©ive
, 
	`wxT
("Neg©if"), 
√g©iveIc⁄
);

27 
m_toﬁb¨
->
	`AddToﬁ
(
ID_MúoúH
, 
	`wxT
("Múoú Vîtiˇl"), 
múr‹HIc⁄
);

28 
m_toﬁb¨
->
	`AddToﬁ
(
ID_MúoúV
, 
	`wxT
("Múoú H‹iz⁄èl"), 
múr‹VIc⁄
);

29 
m_toﬁb¨
->
	`AddToﬁ
(
ID_RŸ©e
, 
	`wxT
("RŸ©i⁄"), 
rŸ©eIc⁄
);

32 
m_toﬁb¨
->
	`Rólize
();

33 
	`SëToﬁB¨
(
m_toﬁb¨
);

38 
m_∑√l
->
	`debug
(3);

39 
wxMíu
 *
míuFûe
 = 
√w
 wxMenu ;

41 
míuFûe
->
	`Aµíd
(
wxID_ABOUT
) ;

42 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnAbout
, 
this
, 
wxID_ABOUT
) ;

44 
míuFûe
->
	`Aµíd
(
wxID_EXIT
) ;

45 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnExô
, 
this
, 
wxID_EXIT
) ;

47 
wxMíu
 *
míuPro˚ss
 = 
√w
 wxMenu ;

48 
míuPro˚ss
->
	`Aµíd
(
ID_MúoúH
, 
	`wxT
("Múoú h‹iz⁄è»\tCål-H"), 
	`_
("Applique unÉffet mirroir horizontal")) ;

49 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_MúoúH
) ;

50 
míuPro˚ss
->
	`Aµíd
(
ID_MúoúV
, 
	`wxT
("Múoú vîtiˇ»\tCål-V"), 
	`_
("Applique unÉffet mirroir vertical")) ;

51 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_MúoúV
) ;

52 
míuPro˚ss
->
	`Aµíd
(
ID_Blur
, 
	`wxT
("Flou \tCål-F"), 
	`_
("Applique unÉffet de flou")) ;

53 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_Blur
);

54 
míuPro˚ss
->
	`Aµíd
(
ID_RŸ©e
, 
	`wxT
("RŸ©i⁄ \tCål-R"), 
	`_
("Applique uneÑotationáÜ'image")) ;

55 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_RŸ©e
);

56 
míuPro˚ss
->
	`Aµíd
(
ID_Neg©ive
, 
	`wxT
("Neg©i‡\tCål-N"), 
	`_
("NegativerÜ\'image")) ;

57 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_Neg©ive
);

58 
míuPro˚ss
->
	`Aµíd
(
ID_Thªshﬁd
, 
	`wxT
("Seuûœgê\tCål-T"), 
	`_
("Applique un seuillageáÜ\'image")) ;

59 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_Thªshﬁd
);

60 
míuPro˚ss
->
	`Aµíd
(
ID_Po°îize
, 
	`wxT
("Po°√©rißti⁄ \tCål-P"), 
	`_
("Applique uneÖosterisationáÜ\'image")) ;

61 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_Po°îize
);

62 
míuPro˚ss
->
	`Aµíd
(
ID_B‹dîDëe˘
, 
	`wxT
("D√©t√©˘i⁄ dêb‹d†\tCål-D"), 
	`_
("Applique une d√©t√©ction de bordsáÜ\'image")) ;

63 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_B‹dîDëe˘
);

64 
míuPro˚ss
->
	`Aµíd
(
ID_Qu™tiz©i⁄
, 
	`wxT
("Qu™tiz©i⁄ \tCål-Q"), 
	`_
("Applique une quantizationáÜ\'image")) ;

65 
	`Böd
(
wxEVT_MENU
, &
MyFøme
::
OnPro˚ss
, 
this
, 
ID_Qu™tiz©i⁄
);

67 
m_∑√l
->
	`debug
(4);

69 
wxMíuB¨
 *
míuB¨
 = 
√w
 wxMenuBar ;

70 
míuB¨
->
	`Aµíd
–
míuFûe
, 
	`wxT
("File" )) ;

71 
míuB¨
->
	`Aµíd
–
míuPro˚ss
, 
	`wxT
("Process" )) ;

72 
	`SëMíuB¨
(
míuB¨
) ;

74 
	`Cª©eSètusB¨
();

75 
	`SëSètusText
(
	`wxT
("Mon visualiseur d'image"));

76 
m_∑√l
->
	`debug
(5);

77 
	`SëClõ¡Size
(
m_∑√l
->
	`GëSize
());

78 
m_∑√l
->
	`debug
(6);

79 
	}
}

81 
	gMyFøme
::
	$OnO≥n
(
wxComm™dEvít
& 
evít
)

84 
	}
}

86 
MyFøme
::
	$OnExô
(
wxComm™dEvít
& 
evít
)

88 
	`Clo£
–
åue
 );

89 
	}
}

91 
	gMyFøme
::
	$OnSave
(
wxComm™dEvít
& 
evít
)

93 
wxSåög
 
fûeName
;

94 
wxSåög
 
°r
;

95 
fûeName
 = 
	`wxSaveFûeSñe˘‹
(
	`wxT
("Sauveg¨dî"), wxT(""), 
°r
);

96 if(
fûeName
 != "") {

97 
m_∑√l
->
	`ßveImage
(
fûeName
);

99 
	}
}

101 
	gMyFøme
::
	$OnAbout
(
wxComm™dEvít
& 
evít
)

103 
	`wxLogMesßge
(
	`wxT
("Auteur : moi !!!"));

104 
	}
}

106 
	gMyFøme
::
	$OnPro˚ss
(
wxComm™dEvít
& 
evít
)

109 
evít
.
	`GëId
()){

110 
ID_MúoúH
 :

111 
m_∑√l
->
	`Múoú
(
åue
);

113 
ID_MúoúV
 : 
m_∑√l
->
	`Múoú
(
Ál£
); ;

114 
ID_Blur
 : 
m_∑√l
->
	`Blur
(); ;

115 
ID_RŸ©e
:

117 if(
m_¥o˚ss_∑√l
){

118 
dñëe
 
m_¥o˚ss_∑√l
;

119 
m_¥o˚ss_∑√l
 = 
nuŒ±r
;

122 if(
cuºítPro˚ssP™ñ
 !
ID_RŸ©e
){

123 
cuºítPro˚ssP™ñ
 = 
ID_RŸ©e
;

124 
m_¥o˚ss_∑√l
 = 
√w
 
	`RŸ©eP™ñ
(
this
);

125 
m_∑√l
->
	`SëPosôi⁄
(
	`wxPoöt
(
m_¥o˚ss_∑√l
->
	`GëSize
().
	`GëWidth
(),0));

126 
	`Böd
(
DO_ROTATE
, &
MyFøme
::
OnRŸ©e
, 
this
);

127 
	`SëClõ¡Size
(
m_¥o˚ss_∑√l
->
	`GëSize
().
	`GëWidth
(Ë+ 
m_∑√l
->GëSize().GëWidth(), 
°d
::
	`max
(m_¥o˚ss_∑√l->GëSize().
	`GëHeight
(), m_panel->GetSize().GetHeight()));

129 
cuºítPro˚ssP™ñ
 = -1;

130 
m_∑√l
->
	`SëPosôi⁄
(
	`wxPoöt
(0,0));

133 
ID_Neg©ive
 : 
m_∑√l
->
	`Neg©ive
(); ;

134 
ID_Thªshﬁd
 : 
m_∑√l
->
	`Thªshﬁd
(); ;

135 
ID_Po°îize
 : 
m_∑√l
->
	`Po°îize
(); ;

136 
ID_B‹dîDëe˘
 : 
m_∑√l
->
	`B‹dîDëe˘
(); ;

137 
ID_Qu™tiz©i⁄
:

138 if(
m_¥o˚ss_∑√l
){

139 
dñëe
 
m_¥o˚ss_∑√l
;

140 
m_¥o˚ss_∑√l
 = 
nuŒ±r
;

142 if(
cuºítPro˚ssP™ñ
 !
ID_Qu™tiz©i⁄
){

143 
cuºítPro˚ssP™ñ
 = 
ID_Qu™tiz©i⁄
;

144 
m_¥o˚ss_∑√l
 = 
√w
 
	`Qu™tiz©i⁄P™ñ
(
this
);

145 
m_∑√l
->
	`SëPosôi⁄
(
	`wxPoöt
(
m_¥o˚ss_∑√l
->
	`GëSize
().
	`GëWidth
(),0));

146 
	`Böd
(
START_TASK_GEN_PALETTE
, &
MyFøme
::
OnGíî©ePÆëã
, 
this
);

147 
	`SëClõ¡Size
(
m_¥o˚ss_∑√l
->
	`GëSize
().
	`GëWidth
(Ë+ 
m_∑√l
->GëSize().GëWidth(), 
°d
::
	`max
(m_¥o˚ss_∑√l->GëSize().
	`GëHeight
(), m_panel->GetSize().GetHeight()));

149 
cuºítPro˚ssP™ñ
 = -1;

150 
m_∑√l
->
	`SëPosôi⁄
(
	`wxPoöt
(0,0));

156 
	}
}

158 
	gMyFøme
::
	$OnRŸ©e
(
wxComm™dEvít
& 
evít
){

159 
m_∑√l
->
	`RŸ©e
(
evít
.
	`GëI¡
());

160 if(
evít
.
	`GëI¡
()!= 2)

161 
	`SëClõ¡Size
(
m_¥o˚ss_∑√l
->
	`GëSize
().
	`GëWidth
(Ë+ 
°d
::
	`max
(m_¥o˚ss_∑√l->GëSize().
	`GëHeight
(), 
m_∑√l
->GetSize().GetHeight()), m_panel->GetSize().GetWidth());

162 
	}
}

164 
	gMyFøme
::
	$OnGíî©ePÆëã
(
wxComm™dEvít
& 
evít
){

165 
m_∑√l
->
	`gíî©ePÆëã
();

167 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyFrame.h

1 #i‚de‡
MYFRAME_H


2 
	#MYFRAME_H


	)

3 
	~<wx/wx.h
>

4 
	~"MyP™ñ.h
"

5 
	~"RŸ©eP™ñ.h
"

6 
	~"Qu™tiz©i⁄P™ñ.h
"

8 ˛as†
	cMyFøme
: 
public
 
wxFøme


10 
public
:

11 
MyFøme
(c⁄° 
wxSåög
& 
tôÀ
, c⁄° 
wxPoöt
& 
pos
, c⁄° 
wxSize
& 
size
);

12 
OnPro˚ss
(
wxComm™dEvít
& 
evít
);

13 
	m¥iv©e
:

14 
OnSave
(
wxComm™dEvít
& 
evít
);

15 
OnO≥n
(
wxComm™dEvít
& 
evít
);

16 
OnExô
(
wxComm™dEvít
& 
evít
);

17 
OnAbout
(
wxComm™dEvít
& 
evít
);

18 
OnRŸ©e
(
wxComm™dEvít
& 
evít
);

19 
OnGíî©ePÆëã
(
wxComm™dEvít
& 
evít
);

20 
wxP™ñ
 *
	mm_¥o˚ss_∑√l
;

21 
MyP™ñ
 *
	mm_∑√l
;

22 
wxToﬁB¨
 *
	mm_toﬁb¨
;

23 
	mcuºítPro˚ssP™ñ
;

27 
	mID_Rec‹d
 = 1001,

28 
	mID_St›


	@/users/info/etu-s4/royetju/Jimpe/MyImage.cpp

1 
	~"MyImage.h
"

2 
	~<c°dlib
>

4 
	gMyImage
::
	$MyImage
(
œrgeur
, 
hauãur
, 
DoubÀBuf„r
& 
img
): 
	`wxImage
÷¨geur, hauãur), 
	$image
(
img
){
	}
}

6 
	gMyImage
::
	$MyImage
(
DoubÀBuf„r
& 
img
Ë: 
	`wxImage
(), 
	$image
(
img
){
	}
}

9 
	gMyImage
::~
	$MyImage
()

12 
	}
}

14 
MyImage
::
	$Blur
(
amou¡
){

16 
	}
}

17 
MyImage
::
	$Neg©ive
(){

18 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

19 
cv
::
	`bôwi£_nŸ
(*
img
, *img);

20 
	}
}

21 
	gMyImage
::
	$Deßtuøã
(){

22 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

23 
cv
::
	`cvtCﬁ‹
(*
img
, *img, 
CV_RGB2GRAY
);

24 
cv
::
	`cvtCﬁ‹
(*
img
, *img, 
CV_GRAY2RGB
);

25 
	}
}

26 
	gMyImage
::
	$Thªshﬁd
(
£uû
){

27 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

28 
cv
::
	`thªshﬁd
(*
img
, *img, ()
£uû
, ()255, 
CV_THRESH_BINARY
);

29 
	}
}

30 
	gMyImage
::
	$Múr‹
(
boﬁ
 
h‹iz⁄èŒy
){

31 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

32 
cv
::
M©
 
d°
 = cv::
	`M©
(
img
->
rows
, img->
cﬁs
, 
CV_8UC3
);

33 
cv
::
	`Êù
(*
img
, 
d°
, ()
h‹iz⁄èŒy
);

34 *
img
 = 
d°
;

35 
	}
}

36 
	gMyImage
::
	$RŸ©e90
(
boﬁ
 
˛ockwi£
){

37 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

38 
cv
::
M©
 
d°
 = cv::
	`M©
(
img
->
rows
, img->
cﬁs
, 
CV_8UC3
);

39 
cv
::
	`å™•o£
(*
img
, 
d°
);

40 
cv
::
	`Êù
(
d°
, *
img
, ()
˛ockwi£
);

41 
	}
}

42 
	gMyImage
::
	$RŸ©e180
(){

43 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

44 
cv
::
M©
 
d°
 = cv::
	`M©
(
img
->
rows
, img->
cﬁs
, 
CV_8UC3
);

45 
cv
::
	`Êù
(*
img
, 
d°
, -1);

46 *
img
 = 
d°
;

47 
	}
}

48 
	gMyImage
::
	$Po°îize
(
nb
){

49 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

50 * 
d©a
 = 
img
->
	`±r
();

51 
lookup_èbÀ
[256];

52 
m
 = 255;

53 
Àngth
 = (
img
->
rows
 * img->
cﬁs
 * 3);

54 
nbCouÀurs
 = 1 << 
nb
;

56 
i
 = 0; i < 256; i++){

57 
lookup_èbÀ
[
i
] = (ò/ (256/
nbCouÀurs
)Ë* (
m
 / (nbCouleurs - 1));

60 
i
 = 0; i < 
Àngth
; i++){

61 
d©a
[
i
] = 
lookup_èbÀ
[data[i]];

63 
	}
}

64 
	gMyImage
::
	$B‹dîDëe˘
(){

65 
d©a
[9] = {1, 1, 1, 1, -8, 1, 1, 1, 1};

66 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

67 
cv
::
M©
 
kî√l
 = cv::
	`M©
(3, 3, 
CV_32F
, 
d©a
);

68 
cv
::
M©
 
d°
 = cv::
	`M©
(
img
->
rows
, img->
cﬁs
, 
CV_8UC3
);

69 
cv
::
	`fûãr2D
(*
img
, 
d°
, -1, 
kî√l
, cv::
	`Poöt
(-1, -1), 0, cv::
BORDER_CONSTANT
);

70 *
img
 = 
d°
;

71 
	}
}

73 
	gMyImage
::
	$Qu™tiz©i⁄
(
KDTªe
* 
∑Àâe
){

74 
cv
::
Vec
<, 3> 
cﬁ‹
;

75 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

76 
uch¨
* 
d©a
 = 
img
->data;

77 
size_t
 
s
 = 
img
->
rows
 * img->
cﬁs
 * 3;

78 
size_t
 
i
 = 0; i < 
s
; i+=3){

79 
cﬁ‹
 = 
∑Àâe
->
	`gëCﬁ‹
(
d©a
 + 
i
, 8);

80 
d©a
[
i
] = 
cﬁ‹
[0];

81 
d©a
[
i
+1] = 
cﬁ‹
[1];

82 
d©a
[
i
+2] = 
cﬁ‹
[2];

84 
	}
}

86 
	gMyImage
::
	$Rñﬂd
(){

87 
cv
::
M©
* 
img
 = 
image
.
	`GëFr⁄t
();

88 
	`SëD©a
(
img
->
d©a
, img->
cﬁs
, img->
rows
, 
åue
);

89 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyImage.h

1 #i‚de‡
MYIMAGE_H


2 
	#MYIMAGE_H


	)

3 
	~<wx/wx.h
>

4 
	~<io°ªam
>

5 
	~<›ícv2/›ícv.hµ
>

6 
	~"DoubÀBuf„r.h
"

7 
	~"KDTªe.h
"

8 ˛as†
	cMyImage
 : 
public
 
wxImage


10 
public
:

11 
MyImage
(
œrgeur
, 
hauãur
, 
DoubÀBuf„r
& 
img
);

12 
MyImage
(
DoubÀBuf„r
& 
img
);

14 
	mvútuÆ
 ~
MyImage
();

15 
Blur
(
amou¡
);

16 
Neg©ive
();

17 
Deßtuøã
();

18 
Thªshﬁd
(
£uû
);

19 
Múr‹
(
boﬁ
 
h‹iz⁄èŒy
);

20 
RŸ©e90
(
boﬁ
 
˛ockwi£
);

21 
RŸ©e180
();

22 
Po°îize
(
nb
 = 1);

23 
Rñﬂd
();

24 
B‹dîDëe˘
();

25 
Qu™tiz©i⁄
(
KDTªe
* 
∑Àâe
);

26 
	m¥iv©e
:

27 
DoubÀBuf„r
& 
image
;

	@/users/info/etu-s4/royetju/Jimpe/MyPanel.cpp

1 
	~"MyP™ñ.h
"

2 
	~<thªad
>

3 
	~<chr⁄o
>

4 
	~<c°rög
>

6 
wxDEFINE_EVENT
(
NEW_FRAME_EVENT
, 
wxComm™dEvít
);

7 
wxDEFINE_EVENT
(
END_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

10 
	gMyP™ñ
::
⁄Paöt
(
wxPaötEvít
 &
	$WXUNUSED
(
evít
)){

11 
wxPaötDC
 
	`dc
(
this
);

12 if(
m_image
){

13 
m_bôm≠
 = 
	`wxBôm≠
(*
m_image
);

14 
dc
.
	`DøwBôm≠
(
m_bôm≠
, 0, 0);

16 
	}
}

18 
	gMyP™ñ
::
	$MyP™ñ
(
wxWödow
 *
∑ª¡
Ë: 
	`wxP™ñ
’¨ít), 
	`rŸ©i⁄
(0), 
	$thªad
(
this
, 
buf„r
){

19 
	`Böd
(
wxEVT_PAINT
, &
MyP™ñ
::
⁄Paöt
, 
this
) ;

20 
	`Böd
(
NEW_FRAME_EVENT
, &
MyP™ñ
::
showSåóm
, 
this
);

21 
	`Böd
(
END_TASK_GEN_PALETTE
, &
MyP™ñ
::
∑ÀâeGíî©ed
, 
this
);

23 
cuºít_∑Àâe
 = 
nuŒ±r
;

24 
¥o˚ssög_∑Àâe
 = 
nuŒ±r
;

25 
∑Àâe_thªad
 = 
nuŒ±r
;

27 
i
 = 0; i < 
EFFECTS_COUNT
; i++){

28 
ef„˘s
[
i
] = 
	`Ef„˘
(i, 0);

31 
m_image
 = 
√w
 
	`MyImage
(
buf„r
);

32 
m_image
->
	`Rñﬂd
();

33 
wxComm™dEvít
 
ev
;

35 
thªad
.
	`F‹˚Ród
();

36 
	`showSåóm
(
ev
);

39 
thªad
.
	`Cª©e
();

40 
thªad
.
	`Run
();

42 
	}
}

45 
	gMyP™ñ
::~
	$MyP™ñ
(){

46 if(
m_image
){

47 
dñëe
 
m_image
;

48 
m_image
 = 
nuŒ±r
;

50 
	}
}

53 
	gMyP™ñ
::
	$ßveImage
(
wxSåög
 
fûeName
){

54 if(
m_image
){

55 
m_bôm≠
.
	`SaveFûe
(
fûeName
, 
wxBITMAP_DEFAULT_TYPE
);

57 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

58 
îr‹
.
	`ShowModÆ
();

60 
	}
}

66 
	gMyP™ñ
::
	$Múoú
(
boﬁ
 
h‹iz⁄èl
){

67 if(
m_image
){

68 
m_image
->
	`Múr‹
(
h‹iz⁄èl
);

69 if(
h‹iz⁄èl
)

70 
ef„˘s
[
ID_MúoúH
].
	`toggÀ
();

72 
ef„˘s
[
ID_MúoúV
].
	`toggÀ
();

75 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

76 
îr‹
.
	`ShowModÆ
();

78 
	}
}

80 
	gMyP™ñ
::
	$Blur
(){

81 if(
m_image
){

82 
ef„˘s
[
ID_Blur
].
	`£tP¨am
(3);

83 
ef„˘s
[
ID_Blur
].
	`toggÀ
();

86 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

87 
îr‹
.
	`ShowModÆ
();

89 
	}
}

92 
	gMyP™ñ
::
	$RŸ©e
(
r
){

93 
rŸ©i⁄
 +
r
;

94 if(
rŸ©i⁄
 >= 4)

95 
rŸ©i⁄
 -= 4;

96 if(
rŸ©i⁄
 < 0)

97 
rŸ©i⁄
 += 4;

99 if(
m_image
){

100 
ef„˘s
[
ID_RŸ©e
].
	`£tP¨am
(
rŸ©i⁄
);

101 
ef„˘s
[
ID_RŸ©e
].
	`£tA˘ive
(
åue
);

104 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

105 
îr‹
.
	`ShowModÆ
();

107 
	}
}

109 
	gMyP™ñ
::
	$Neg©ive
(){

110 if(
m_image
){

111 
ef„˘s
[
ID_Neg©ive
].
	`toggÀ
();

113 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

114 
îr‹
.
	`ShowModÆ
();

118 
	}
}

120 
	gMyP™ñ
::
	$Thªshﬁd
(){

121 if(
m_image
){

122 if(
ef„˘s
[
ID_Thªshﬁd
].
	`toggÀ
()){

123 
MyThªshﬁdDülog
 *
dlg
 = 
√w
 
	`MyThªshﬁdDülog
(
this
, -1, 
	`wxT
("Seuûœge"), 
wxDeÁu…Posôi⁄
, 
	`wxSize
(210,140)) ;

124 
¥o˚ss
 = 
dlg
->
	`ShowModÆ
();

125 if(
¥o˚ss
 =
wxID_OK
){

126 
ef„˘s
[
ID_Thªshﬁd
].
	`£tP¨am
(
dlg
->
m_thªshﬁd
->
	`GëVÆue
());

127 
dñëe
 
dlg
;

132 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

133 
îr‹
.
	`ShowModÆ
();

135 
	}
}

137 
	gMyP™ñ
::
	$Po°îize
(){

138 if(
m_image
){

139 
ef„˘s
[
ID_Po°îize
].
	`£tP¨am
(2);

140 
ef„˘s
[
ID_Po°îize
].
	`toggÀ
();

142 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

143 
îr‹
.
	`ShowModÆ
();

146 
	}
}

148 
	gMyP™ñ
::
	$B‹dîDëe˘
(){

149 if(
m_image
){

150 
ef„˘s
[
ID_B‹dîDëe˘
].
	`toggÀ
();

152 
wxMesßgeDülog
 
	`îr‹
(
this
, "Pas d'image ouverte");

153 
îr‹
.
	`ShowModÆ
();

157 
	}
}

158 
	gMyP™ñ
::
	$debug
(
i
){

159 
debug_v¨
 = 
i
;

161 
	}
}

162 
	gMyP™ñ
::
	$showSåóm
(
wxComm™dEvít
& 
evt
){

164 
buf„r
.
	`FœgFr⁄t
();

165 
i
 = 0; i < 
EFFECTS_COUNT
; i++){

166 
ef„˘s
[
i
].
	`≠∂y
(
m_image
);

168 
m_image
->
	`Rñﬂd
();

170 
	`Re‰esh
();

171 
	`SëSize
(
m_image
->
	`GëSize
());

172 
	}
}

174 
	gMyP™ñ
::
	$gíî©ePÆëã
(){

175 if(
∑Àâe_thªad
){

176 
∑Àâe_thªad
->
	`Kûl
();

177 
dñëe
 
∑Àâe_thªad
;

179 if(
¥o˚ssög_∑Àâe
){

180 
dñëe
 
¥o˚ssög_∑Àâe
;

181 
¥o˚ssög_∑Àâe
 = 
nuŒ±r
;

183 
∑Àâe_thªad
 = 
√w
 
	`Gíî©ePÆëãThªad
(
this
, 
buf„r
, 
¥o˚ssög_∑Àâe
);

185 
∑Àâe_thªad
->
	`Cª©e
();

186 
∑Àâe_thªad
->
	`Run
();

187 
	}
}

189 
	gMyP™ñ
::
	$∑ÀâeGíî©ed
(
wxComm™dEvít
& 
evt
){

190 if(
cuºít_∑Àâe
)

191 
dñëe
 
cuºít_∑Àâe
;

193 
dñëe
 
∑Àâe_thªad
;

194 
∑Àâe_thªad
 = 
nuŒ±r
;

196 
cuºít_∑Àâe
 = 
¥o˚ssög_∑Àâe
;

197 
¥o˚ssög_∑Àâe
 = 
nuŒ±r
;

199 
ef„˘s
[
ID_Qu™tiz©i⁄
].
	`£tPoöãr
(
cuºít_∑Àâe
);

200 
ef„˘s
[
ID_Qu™tiz©i⁄
].
	`£tA˘ive
(
åue
);

201 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyPanel.h

1 #i‚de‡
MYPANEL_H


2 
	#MYPANEL_H


	)

4 
	~<wx/wx.h
>

5 
	~<›ícv2/›ícv.hµ
>

6 
	~"MyImage.h
"

7 
	~"MyThªshﬁdDülog.h
"

8 
	~"MyRŸ©eDülog.h
"

9 
	~"MyPo°îizeDülog.h
"

10 
	~"VideoSåóm.h
"

11 
	~"Gíî©ePÆëãThªad.h
"

12 
	~<io°ªam
>

16 
	mID_MúoúH
 = 0,

17 
	mID_MúoúV
,

18 
	mID_RŸ©e
,

19 
	mID_B‹dîDëe˘
,

20 
	mID_Po°îize
,

21 
	mID_Thªshﬁd
,

22 
	mID_Blur
,

23 
	mID_Neg©ive
,

24 
	mID_Qu™tiz©i⁄
,

26 
	mEFFECTS_COUNT


29 ˛as†
	cEf„˘
{

30 
	m¥iv©e
:

31 
boﬁ
 
a˘ive
;

32 
	m∑ømëî
;

33 
	mty≥
;

34 * 
	mpoöãr
;

36 
	mpublic
:

37 
	$Ef„˘
(
ty≥_
 = 0, 
∑øm
 = 0, * 
±r
 = 
nuŒ±r
Ë: 
	`a˘ive
(
Ál£
), 
	`∑ømëî
’¨am), 
	`ty≥
—y≥_), 
	$poöãr
(
±r
)

39 
boﬁ
 
	$toggÀ
(){

40  
a˘ive
 = !active;

41 
	}
}

42 
boﬁ
 
	$isA˘ive
(){

43  
a˘ive
;

44 
	}
}

45 
	$£tA˘ive
(
boﬁ
 
a˘ive_
){

46 
a˘ive
 = 
a˘ive_
;

47 
	}
}

48 
	$£tP¨am
(
∑øm
){

49 
∑ømëî
 = 
∑øm
;

50 
	}
}

51 
	$£tPoöãr
(* 
±r
){

52 
poöãr
 = 
±r
;

53 
	}
}

54 
	$≠∂y
(
MyImage
* 
image
){

55 if(!
a˘ive
)

58 
ty≥
){

59 
ID_MúoúH
:

60 
image
->
	`Múr‹
(
åue
);

62 
ID_MúoúV
:

63 
image
->
	`Múr‹
(
Ál£
);

65 
ID_Blur
:

66 
image
->
	`Blur
(
∑ømëî
);

68 
ID_RŸ©e
:

69 if(
∑ømëî
 == 1)

70 
image
->
	`RŸ©e90
(
åue
);

71 if(
∑ømëî
 == 2)

72 
image
->
	`RŸ©e180
();

73 if(
∑ømëî
 == 3)

74 
image
->
	`RŸ©e90
(
Ál£
);

77 
ID_Neg©ive
:

78 
image
->
	`Neg©ive
();

80 
ID_Thªshﬁd
:

81 
image
->
	`Thªshﬁd
(
∑ømëî
);

83 
ID_Po°îize
:

84 
image
->
	`Po°îize
(
∑ømëî
);

86 
ID_B‹dîDëe˘
:

87 
image
->
	`B‹dîDëe˘
();

89 
ID_Qu™tiz©i⁄
:

90 
image
->
	`Qu™tiz©i⁄
((
KDTªe
*)
poöãr
);

93 
	}
}

96 ˛as†
	cMyP™ñ
: 
public
 
wxP™ñ


98 
public
:

99 
MyP™ñ
–
wxWödow
 *
∑ª¡
 ) ;

100 ~
MyP™ñ
() ;

101 
›íImage
(
wxSåög
 
fûeName
);

102 
⁄Paöt
(
wxPaötEvít
 &
WXUNUSED
(
evít
));

103 
ßveImage
(
wxSåög
 
fûeName
);

104 
Múoú
(
boﬁ
 
h‹iz⁄èl
);

105 
RŸ©e
(
r
);

106 
Blur
();

107 
Neg©ive
();

108 
Thªshﬁd
();

109 
Po°îize
();

110 
B‹dîDëe˘
();

111 
showSåóm
(
wxComm™dEvít
& 
evt
);

112 
gíî©ePÆëã
();

113 
∑ÀâeGíî©ed
(
wxComm™dEvít
& 
evt
);

114 
debug
(
i
);

116 
	m¥iv©e
:

117 
rŸ©i⁄
;

118 
wxBôm≠
 
	mm_bôm≠
;

119 
Ef„˘
 
	mef„˘s
[
EFFECTS_COUNT
];

120 
MyImage
 *
	mm_image
;

121 
DoubÀBuf„r
 
	mbuf„r
;

122 
VideoSåóm
 
	mthªad
;

123 
	mdebug_v¨
;

124 
KDTªe
* 
	mcuºít_∑Àâe
;

125 
KDTªe
* 
	m¥o˚ssög_∑Àâe
;

126 
Gíî©ePÆëãThªad
* 
	m∑Àâe_thªad
;

	@/users/info/etu-s4/royetju/Jimpe/MyPosterizeDialog.cpp

1 
	~"MyPo°îizeDülog.h
"

3 
	gMyPo°îizeDülog
::
	$MyPo°îizeDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
, c⁄° 
wxSåög
& 
tôÀ
,

4 c⁄° 
wxPoöt
& 
pos
, c⁄° 
wxSize
& 
size
, 
°yÀ
)

5 : 
	$wxDülog
(
∑ª¡
, 
id
, 
tôÀ
, 
pos
, 
size
, 
°yÀ
)

7 
m_po°îize
 = 
√w
 
	`wxSlidî
–
this
, 
wxID_ANY
, 1, 1, 7, 
	`wxPoöt
(20,10), 
	`wxSize
(165,60), 
wxSL_HORIZONTAL
|
wxSL_LABELS
 );

8 
m_okBuâ⁄
 = 
√w
 
	`wxBuâ⁄
–
this
, 
wxID_OK
, 
	`wxT
("OK"), 
	`wxPoöt
(16,70), 
wxDeÁu…Size
, 0 );

9 
m_ˇn˚lBuâ⁄
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_CANCEL
, 
	`_
("C™˚l"), 
	`wxPoöt
(104,70), 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("wxID_CANCEL"));

10 
	}
}

12 
	gMyPo°îizeDülog
::~
	$MyPo°îizeDülog
()

15 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyPosterizeDialog.h

1 #i‚de‡
MYPOSTERIZEDIALOG_H


2 
	#MYPOSTERIZEDIALOG_H


	)

4 
	~<wx/wx.h
>

6 ˛as†
	cMyPo°îizeDülog
 : 
public
 
wxDülog


8 
public
:

9 
MyPo°îizeDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
 = 
wxID_ANY
,c⁄° 
wxSåög
& 
tôÀ
 = 
wxEm±ySåög
,

10 c⁄° 
wxPoöt
& 
pos
 = 
wxDeÁu…Posôi⁄
,

11 c⁄° 
wxSize
& 
size
 = 
wxDeÁu…Size
, 
°yÀ
 = 
wxDEFAULT_DIALOG_STYLE
 );

12 
	mvútuÆ
 ~
MyPo°îizeDülog
();

14 
wxSlidî
* 
	mm_po°îize
;

15 
	m¥Ÿe˘ed
:

16 
wxBuâ⁄
* 
m_okBuâ⁄
;

17 
wxBuâ⁄
* 
	mm_ˇn˚lBuâ⁄
;

18 
	m¥iv©e
:

	@/users/info/etu-s4/royetju/Jimpe/MyRotateDialog.cpp

1 
	~"MyRŸ©eDülog.h
"

3 
	~<wx/öé.h
>

4 
	~<wx/°rög.h
>

6 
	gMyRŸ©eDülog
::
	$MyRŸ©eDülog
(
wxWödow
* 
∑ª¡
,
wxWödowID
 
id
,c⁄° 
wxPoöt
& 
pos
,c⁄° 
wxSize
& 
size
)

7 :
	`wxDülog
(
∑ª¡
, 
id
, 
	`wxT
("RŸ©i⁄"), 
pos
, 
size
)

9 
	`SëClõ¡Size
(
	`wxSize
(200,150));

11 
wxSåög
 
__wxRadioBoxChoi˚s_1
[3] =

13 
	`wxT
("90 "),

14 
	`wxT
("180 "),

15 
	`wxT
("-90 ")

17 
RadioBox1
 = 
√w
 
	`wxRadioBox
(
this
, 
wxID_ANY
, 
	`_
("RŸ©i⁄ángÀ"), 
	`wxPoöt
(16,8), 
	`wxSize
(175,90), 3, 
__wxRadioBoxChoi˚s_1
, 3, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_RADIOBOX1"));

18 
Buâ⁄1
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_OK
, 
	`_
("OK"), 
	`wxPoöt
(16,110), 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("wxID_OK"));

19 
Buâ⁄2
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_CANCEL
, 
	`_
("C™˚l"), 
	`wxPoöt
(104,110), 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("wxID_CANCEL"));

20 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyRotateDialog.h

3 #i‚de‡
MYROTATEDIALOG_H


4 
	#MYROTATEDIALOG_H


	)

6 
	~<wx/ødiobox.h
>

7 
	~<wx/buâ⁄.h
>

8 
	~<wx/dülog.h
>

10 ˛as†
	cMyRŸ©eDülog
: 
public
 
wxDülog


12 
public
:

13 
MyRŸ©eDülog
(
wxWödow
* 
∑ª¡
,

15 
wxWödowID
 
id
=
wxID_ANY
,

17 c⁄° 
wxPoöt
& 
pos
=
wxDeÁu…Posôi⁄
,

19 c⁄° 
wxSize
& 
size
=
wxDeÁu…Size
);

20 
wxBuâ⁄
* 
	mBuâ⁄1
;

21 
wxBuâ⁄
* 
	mBuâ⁄2
;

22 
wxRadioBox
* 
	mRadioBox1
;

	@/users/info/etu-s4/royetju/Jimpe/MyThresholdDialog.cpp

1 
	~"MyThªshﬁdDülog.h
"

3 
	gMyThªshﬁdDülog
::
	$MyThªshﬁdDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
, c⁄° 
wxSåög
& 
tôÀ
,

4 c⁄° 
wxPoöt
& 
pos
, c⁄° 
wxSize
& 
size
, 
°yÀ
)

5 : 
	$wxDülog
(
∑ª¡
, 
id
, 
tôÀ
, 
pos
, 
size
, 
°yÀ
)

7 
m_thªshﬁd
 = 
√w
 
	`wxSlidî
–
this
, 
wxID_ANY
, 128, 0, 255, 
	`wxPoöt
(20,10), 
	`wxSize
(165,60), 
wxSL_HORIZONTAL
|
wxSL_LABELS
 );

8 
m_okBuâ⁄
 = 
√w
 
	`wxBuâ⁄
–
this
, 
wxID_OK
, 
	`wxT
("OK"), 
	`wxPoöt
(16,70), 
wxDeÁu…Size
, 0 );

9 
m_ˇn˚lBuâ⁄
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_CANCEL
, 
	`_
("C™˚l"), 
	`wxPoöt
(104,70), 
wxDeÁu…Size
, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("wxID_CANCEL"));

10 
	}
}

12 
	gMyThªshﬁdDülog
::~
	$MyThªshﬁdDülog
()

15 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/MyThresholdDialog.h

1 #i‚de‡
MYTHRESHOLDDIALOG_H


2 
	#MYTHRESHOLDDIALOG_H


	)

4 
	~<wx/wx.h
>

7 ˛as†
	cMyThªshﬁdDülog
 : 
public
 
wxDülog


9 
public
:

10 
MyThªshﬁdDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
 = 
wxID_ANY
,c⁄° 
wxSåög
& 
tôÀ
 = 
wxEm±ySåög
,

11 c⁄° 
wxPoöt
& 
pos
 = 
wxDeÁu…Posôi⁄
,

12 c⁄° 
wxSize
& 
size
 = 
wxDeÁu…Size
, 
°yÀ
 = 
wxDEFAULT_DIALOG_STYLE
 );

13 
	mvútuÆ
 ~
MyThªshﬁdDülog
();

15 
wxSlidî
* 
	mm_thªshﬁd
;

18 
	m¥Ÿe˘ed
:

20 
¥iv©e
:

21 
wxBuâ⁄
* 
m_okBuâ⁄
;

22 
wxBuâ⁄
* 
	mm_ˇn˚lBuâ⁄
;

	@/users/info/etu-s4/royetju/Jimpe/QuantizationPanel.cpp

1 
	~"Qu™tiz©i⁄P™ñ.h
"

3 
	gQu™tiz©i⁄P™ñ
::
	$Qu™tiz©i⁄P™ñ
(
wxWödow
* 
∑ª¡
Ë: 
	`wxP™ñ
’¨ít, 
wxID_ANY
, 
	`wxPoöt
(0, 0), 
	`wxSize
(200, 500), 
wxSIMPLE_BORDER
)

7 
Gíî©ePÆëã
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_OK
, 
	`_
("Gíî©êPÆëã"), 
	`wxPoöt
(16,110), 
wxDeÁu…Size
);

8 
Gíî©ePÆëã
->
	`Böd
(
wxEVT_BUTTON
, &
Qu™tiz©i⁄P™ñ
::
£ndMesßge
, 
this
);

9 
	}
}

11 
	gQu™tiz©i⁄P™ñ
::~
	$Qu™tiz©i⁄P™ñ
()

14 
	}
}

16 
Qu™tiz©i⁄P™ñ
::
	$£ndMesßge
(
wxComm™dEvít
& 
evít
){

17 
wxComm™dEvít
 
	`outEvít
(
START_TASK_GEN_PALETTE
) ;

19 
	`wxPo°Evít
(
	`GëP¨ít
(), 
outEvít
);

20 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/QuantizationPanel.h

1 #i‚de‡
QUANTIZATIONPANEL_H


2 
	#QUANTIZATIONPANEL_H


	)

4 
	~<wx/wx.h
>

6 
wxDECLARE_EVENT
(
START_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

8 ˛as†
	cQu™tiz©i⁄P™ñ
 : 
public
 
wxP™ñ


10 
public
:

11 
Qu™tiz©i⁄P™ñ
(
wxWödow
* 
∑ª¡
);

12 
	mvútuÆ
 ~
Qu™tiz©i⁄P™ñ
();

13 
£ndMesßge
(
wxComm™dEvít
& 
evít
);

14 
wxBuâ⁄
* 
	mGíî©ePÆëã
;

16 
	m¥Ÿe˘ed
:

18 
¥iv©e
:

	@/users/info/etu-s4/royetju/Jimpe/RotatePanel.cpp

1 
	~"RŸ©eP™ñ.h
"

3 
	gRŸ©eP™ñ
::
	$RŸ©eP™ñ
(
wxWödow
* 
∑ª¡
Ë: 
	`wxP™ñ
’¨ít, 
wxID_ANY
, 
	`wxPoöt
(0, 0), 
	`wxSize
(200, 500), 
wxSIMPLE_BORDER
)

5 
wxSåög
 
__wxRadioBoxChoi˚s_1
[3] =

7 
	`wxT
("90 "),

8 
	`wxT
("180 "),

9 
	`wxT
("-90 ")

11 
RadioBox1
 = 
√w
 
	`wxRadioBox
(
this
, 
wxID_ANY
, 
	`_
("RŸ©i⁄ángÀ"), 
	`wxPoöt
(16,8), 
	`wxSize
(175,90), 3, 
__wxRadioBoxChoi˚s_1
, 3, 0, 
wxDeÁu…VÆid©‹
, 
	`_T
("ID_RADIOBOX1"));

12 
Buâ⁄1
 = 
√w
 
	`wxBuâ⁄
(
this
, 
wxID_OK
, 
	`_
("OK"), 
	`wxPoöt
(16,110), 
wxDeÁu…Size
);

13 
Buâ⁄1
->
	`Böd
(
wxEVT_BUTTON
, &
RŸ©eP™ñ
::
£ndMesßge
, 
this
);

14 
	}
}

16 
	gRŸ©eP™ñ
::~
	$RŸ©eP™ñ
()

19 
	}
}

21 
RŸ©eP™ñ
::
	$£ndMesßge
(
wxComm™dEvít
& 
evít
){

22 
wxComm™dEvít
 
	`outEvít
(
DO_ROTATE
) ;

23 
lookup
[3] = {1, 2, -1};

24 
outEvít
.
	`SëI¡
(
lookup
[
RadioBox1
->
	`GëSñe˘i⁄
()]);

25 
	`wxPo°Evít
(
	`GëP¨ít
(), 
outEvít
);

26 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/RotatePanel.h

1 #i‚de‡
ROTATEPANEL_H


2 
	#ROTATEPANEL_H


	)

4 
	~<wx/wx.h
>

6 
wxDECLARE_EVENT
(
DO_ROTATE
, 
wxComm™dEvít
);

8 ˛as†
	cRŸ©eP™ñ
 : 
public
 
wxP™ñ


10 
public
:

11 
RŸ©eP™ñ
(
wxWödow
* 
∑ª¡
);

12 
	mvútuÆ
 ~
RŸ©eP™ñ
();

13 
£ndMesßge
(
wxComm™dEvít
& 
evít
);

14 
wxBuâ⁄
* 
	mBuâ⁄1
;

15 
wxRadioBox
* 
	mRadioBox1
;

16 
	m¥Ÿe˘ed
:

18 
¥iv©e
:

	@/users/info/etu-s4/royetju/Jimpe/VideoStream.cpp

1 
	~"VideoSåóm.h
"

4 
	gVideoSåóm
::
	$VideoSåóm
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
Ë: 
	`°ªam
("vid.mp4"), 
	`∑√l
’), 
	$buf„r
(
b
)

6 
‰ameDñay
 = 1000 / 
°ªam
.
	`gë
(
CV_CAP_PROP_FPS
);

7 
	}
}

9 
	gVideoSåóm
::~
	$VideoSåóm
()

12 
	}
}

13 * 
VideoSåóm
::
	$E¡ry
(){

14 !
	`Te°De°roy
())

16 if(
°ªam
.
	`isO≥√d
()){

17 
cuºítTime
;

18 
wxL⁄gL⁄g
 
t
 = 
	`wxGëLoˇlTimeMûlis
();

19 *((*)((*)(&
cuºítTime
))Ë
t
.
	`GëLo
();

20 *((*)((*)(&
cuºítTime
))+1Ë
t
.
	`GëHi
();

21 
	`wxMûliSÀï
(
°d
::
	`max
(0LL, 
‰ameDñay
 + 
time
 - 
cuºítTime
));

22 
cv
::
M©
* 
‰ame
 = 
buf„r
.
	`GëBack
();

23 
°ªam
 >> *
‰ame
;

24 
cv
::
	`cvtCﬁ‹
(*
‰ame
, *‰ame, 
CV_BGR2RGB
);

25 
buf„r
.
	`FœgBack
();

27 
wxComm™dEvít
* 
evt
 = 
√w
 
	`wxComm™dEvít
(
NEW_FRAME_EVENT
);

28 
	`wxQueueEvít
(
∑√l
, 
evt
);

29 
t
 = 
	`wxGëLoˇlTimeMûlis
();

30 *((*)((*)(&
time
))Ë
t
.
	`GëLo
();

31 *((*)((*)(&
time
))+1Ë
t
.
	`GëHi
();

36  
NULL
 ;

37 
	}
}

38 
	gVideoSåóm
::
	$F‹˚Ród
(){

39 
cv
::
M©
* 
‰ame
 = 
buf„r
.
	`GëBack
();

40 
°ªam
 >> *
‰ame
;

41 
cv
::
	`cvtCﬁ‹
(*
‰ame
, *‰ame, 
CV_BGR2RGB
);

42 
buf„r
.
	`FœgBack
();

43 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/VideoStream.h

1 #i‚de‡
VIDEOSTREAM_H


2 
	#VIDEOSTREAM_H


	)

3 
	~"DoubÀBuf„r.h
"

4 
	~<wx/wx.h
>

5 
	~<›ícv2/›ícv.hµ
>

6 
˛ass
 
	gMyP™ñ
;

8 
wxDECLARE_EVENT
(
NEW_FRAME_EVENT
, 
wxComm™dEvít
);

10 ˛as†
	cVideoSåóm
 : 
public
 
wxThªad


12 
public
:

13 
VideoSåóm
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
);

14 ~
VideoSåóm
();

15 
F‹˚Ród
();

16 
	m¥iv©e
:

17 
cv
::
VideoC≠tuª
 
°ªam
;

18 
MyP™ñ
* 
	m∑√l
;

19 
	mDoubÀBuf„r
& 
	mbuf„r
;

20 
	m‰ameDñay
;

21 
	mtime
;

22 
vútuÆ
 * 
E¡ry
();

24 
	~"MyP™ñ.h
"

	@/users/info/etu-s4/royetju/Jimpe/oldFunctions.cpp

	@/users/info/etu-s4/royetju/Jimpe/tp2App.cpp

	@/users/info/etu-s4/royetju/Jimpe/tp2App.h

10 #i‚de‡
TP2APP_H


11 
	#TP2APP_H


	)

13 
	~<wx/≠p.h
>

15 ˛as†
	cç2Aµ
 : 
public
 
wxAµ


17 
public
:

18 
vútuÆ
 
boﬁ
 
OnInô
();

	@/users/info/etu-s4/royetju/Jimpe/tp2Main.cpp

3 
	~<wx/wx¥ec.h
>

4 
	~<›ícv2/c‹e/c‹e.hµ
>

6 #i‚de‡
WX_PRECOMP


8 
	~<wx/wx.h
>

9 
	~<Æg‹ôhm
>

10 
	~"MyImage.h
"

11 
	~"MyFøme.h
"

13 ˛as†
	cMyAµ
: 
public
 
wxAµ


15 
public
:

16 
vútuÆ
 
boﬁ
 
OnInô
();

19 
	$IMPLEMENT_APP
(
MyAµ
)

21 
boﬁ
 
MyAµ
::
	$OnInô
()

23 
	`wxInôAŒImageH™dÀrs
();

24 
MyFøme
 *
‰ame
 = 
√w
 
	`MyFøme
–
	`wxT
("Jim≥"), 
	`wxPoöt
(50, 50), 
	`wxSize
(450, 340) );

25 
‰ame
->
	`Show
(
åue
);

26 
‰ame
->
	`Cíåe
();

27  
åue
;

28 
	}
}

	@/users/info/etu-s4/royetju/Jimpe/tp2Main.h

10 #i‚de‡
TP2MAIN_H


11 
	#TP2MAIN_H


	)

13 #i‚de‡
WX_PRECOMP


14 
	~<wx/wx.h
>

17 
	~"ç2Aµ.h
"

20 
	~<wx/buâ⁄.h
>

21 
	~<wx/°©löe.h
>

22 ˛as†
	cç2Dülog
: 
public
 
wxDülog


24 
public
:

25 
ç2Dülog
(
wxDülog
 *
dlg
, c⁄° 
wxSåög
& 
tôÀ
);

26 ~
ç2Dülog
();

28 
	m¥Ÿe˘ed
:

31 
idBäQuô
 = 1000,

32 
	midBäAbout


34 
wxSèticText
* 
	gm_°©icText1
;

35 
wxBuâ⁄
* 
	gBäAbout
;

36 
wxSèticLöe
* 
	gm_°©i˛öe1
;

37 
wxBuâ⁄
* 
	gBäQuô
;

39 
	g¥iv©e
:

40 
OnClo£
(
wxClo£Evít
& 
evít
);

41 
OnQuô
(
wxComm™dEvít
& 
evít
);

42 
OnAbout
(
wxComm™dEvít
& 
evít
);

43 
DECLARE_EVENT_TABLE
()

	@/usr/include/opencv2/core/core.hpp

46 #i‚de‡
__OPENCV_CORE_HPP__


47 
	#__OPENCV_CORE_HPP__


	)

49 
	~"›ícv2/c‹e/ty≥s_c.h
"

50 
	~"›ícv2/c‹e/vîsi⁄.hµ
"

52 #ifde‡
__˝lu•lus


54 #i‚de‡
SKIP_INCLUDES


55 
	~<limôs.h
>

56 
	~<Æg‹ôhm
>

57 
	~<cm©h
>

58 
	~<c°ddef
>

59 
	~<com∂ex
>

60 
	~<m≠
>

61 
	~<√w
>

62 
	~<°rög
>

63 
	~<ve˘‹
>

64 
	~<s°ªam
>

70 
«me•a˚
 
	gcv
 {

72 #unde‡
abs


73 #unde‡
mö


74 #unde‡
max


75 #unde‡
Com∂ex


77 
usög
 
	g°d
::
ve˘‹
;

78 
usög
 
	g°d
::
°rög
;

79 
usög
 
	g°d
::
±rdiff_t
;

81 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSize_
;

82 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gPoöt_
;

83 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gRe˘_
;

84 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gVec
;

85 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
˛ass
 
	gM©x
;

87 
	g°d
::
	t°rög
 
	tSåög
;

89 
˛ass
 
	gM©
;

90 
˛ass
 
	gS∑r£M©
;

91 
M©
 
	tM©ND
;

93 
«me•a˚
 
	gogl
 {

94 
˛ass
 
	gBuf„r
;

95 
˛ass
 
	gTextuª2D
;

96 
˛ass
 
	gAºays
;

100 
˛ass
 
	gGlBuf„r
;

101 
˛ass
 
	gGlTextuª
;

102 
˛ass
 
	gGlAºays
;

103 
˛ass
 
	gGlCamîa
;

106 
«me•a˚
 
	ggpu
 {

107 
˛ass
 
	gGpuM©
;

110 
˛ass
 
CV_EXPORTS
 
	gM©Ex¥
;

111 
˛ass
 
CV_EXPORTS
 
	gM©Op_Ba£
;

112 
˛ass
 
CV_EXPORTS
 
	gM©Arg
;

113 
˛ass
 
CV_EXPORTS
 
	gM©C⁄°Iãøt‹
;

115 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©_
;

116 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©Iãøt‹_
;

117 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©C⁄°Iãøt‹_
;

118 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©CommaInôülizî_
;

120 #i‡!
deföed
(
ANDROID
Ë|| (deföed(
_GLIBCXX_USE_WCHAR_T
) && _GLIBCXX_USE_WCHAR_T)

121 
	g°d
::
	tbasic_°rög
<
	twch¨_t
> 
	tWSåög
;

123 
CV_EXPORTS
 
°rög
 
‰omUtf16
(c⁄° 
WSåög
& 
°r
);

124 
CV_EXPORTS
 
WSåög
 
toUtf16
(c⁄° 
°rög
& 
°r
);

127 
CV_EXPORTS
 
°rög
 
f‹m©
–c⁄° * 
fmt
, ... );

128 
CV_EXPORTS
 
°rög
 
ãmpfûe
–c⁄° * 
suffix
 
CV_DEFAULT
(0));

131 íum { 
	gDECOMP_LU
=0, 
	gDECOMP_SVD
=1, 
	gDECOMP_EIG
=2, 
	gDECOMP_CHOLESKY
=3, 
	gDECOMP_QR
=4, 
	gDECOMP_NORMAL
=16 };

132 íum { 
	gNORM_INF
=1, 
	gNORM_L1
=2, 
	gNORM_L2
=4, 
	gNORM_L2SQR
=5, 
	gNORM_HAMMING
=6, 
	gNORM_HAMMING2
=7, 
	gNORM_TYPE_MASK
=7, 
	gNORM_RELATIVE
=8, 
	gNORM_MINMAX
=32 };

133 íum { 
	gCMP_EQ
=0, 
	gCMP_GT
=1, 
	gCMP_GE
=2, 
	gCMP_LT
=3, 
	gCMP_LE
=4, 
	gCMP_NE
=5 };

134 íum { 
	gGEMM_1_T
=1, 
	gGEMM_2_T
=2, 
	gGEMM_3_T
=4 };

135 íum { 
	gDFT_INVERSE
=1, 
	gDFT_SCALE
=2, 
	gDFT_ROWS
=4, 
	gDFT_COMPLEX_OUTPUT
=16, 
	gDFT_REAL_OUTPUT
=32,

136 
	gDCT_INVERSE
 = 
DFT_INVERSE
, 
	gDCT_ROWS
=
DFT_ROWS
 };

143 ˛as†
	cCV_EXPORTS
 
	gEx˚±i⁄
 : 
public
 
°d
::
ex˚±i⁄


145 
public
:

149 
Ex˚±i⁄
();

154 
Ex˚±i⁄
(
_code
, c⁄° 
°rög
& 
_îr
, c⁄° såög& 
_func
, c⁄° såög& 
_fûe
, 
_löe
);

155 
	gvútuÆ
 ~
Ex˚±i⁄
(Ë
throw
();

160 
vútuÆ
 c⁄° *
wh©
(Ëc⁄° 
throw
();

161 
f‹m©Mesßge
();

163 
°rög
 
	gmsg
;

165 
	gcode
;

166 
°rög
 
	gîr
;

167 
°rög
 
	gfunc
;

168 
°rög
 
	gfûe
;

169 
	glöe
;

182 
CV_EXPORTS
 
îr‹
–c⁄° 
Ex˚±i⁄
& 
exc
 );

192 
CV_EXPORTS
 
boﬁ
 
£tBªakOnEº‹
(boﬁ 
Êag
);

194 (
	tCV_CDECL
 *
	tEº‹CÆlback
)–
	t°©us
, c⁄° * 
	tfunc_«me
,

195 c⁄° * 
	tîr_msg
, c⁄° * 
	tfûe_«me
,

196 
	tlöe
, * 
	tu£rd©a
 );

209 
CV_EXPORTS
 
Eº‹CÆlback
 
	`ªdúe˘Eº‹
–Eº‹CÆlback 
îrCÆlback
,

210 * 
u£rd©a
=0, ** 
¥evU£rd©a
=0);

213 #i‡
deföed
 
__GNUC__


214 
	#CV_Func
 
__func__


	)

215 #ñi‡
deföed
 
_MSC_VER


216 
	#CV_Func
 
__FUNCTION__


	)

218 
	#CV_Func
 ""

	)

221 
	#CV_Eº‹
–
code
, 
msg
 ) 
cv
::
	`îr‹
–cv::
	$Ex˚±i⁄
(
code
, 
msg
, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

222 
	#CV_Eº‹_
–
code
, 
¨gs
 ) 
cv
::
	`îr‹
–cv::
	$Ex˚±i⁄
(
code
, 
cv
::
f‹m©
 
¨gs
, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

223 
	#CV_As£π
–
ex¥
 ) if(!!”x¥)Ë; 
cv
::
	`îr‹
–cv::
	`Ex˚±i⁄
(
CV_StsAs£π
, #ex¥, 
CV_Func
, 
__FILE__
, 
__LINE__
Ë)

	)

225 #ifde‡
_DEBUG


226 
	#CV_DbgAs£π
(
ex¥
Ë
	$CV_As£π
(
ex¥
)

	)

228 
	#CV_DbgAs£π
(
ex¥
)

	)

231 
CV_EXPORTS
 
	`glob
(
Såög
 
∑âîn
, 
°d
::
ve˘‹
<Såög>& 
ªsu…
, 
boﬁ
 
ªcursive
 = 
Ál£
);

233 
CV_EXPORTS
 
	`£tNumThªads
(
¡hªads
);

234 
CV_EXPORTS
 
	`gëNumThªads
();

235 
CV_EXPORTS
 
	`gëThªadNum
();

237 
CV_EXPORTS_W
 c⁄° 
°rög
& 
	`gëBuûdInf‹m©i⁄
();

247 
CV_EXPORTS_W
 
öt64
 
	`gëTickCou¡
();

261 
CV_EXPORTS_W
 
	`gëTickFªquícy
();

271 
CV_EXPORTS_W
 
öt64
 
	`gëCPUTickCou¡
();

292 
CV_EXPORTS_W
 
boﬁ
 
	`checkH¨dw¨eSuµ‹t
(
„©uª
);

295 
CV_EXPORTS_W
 
	`gëNumbîOfCPUs
();

307 
CV_EXPORTS
 * 
	`Á°MÆloc
(
size_t
 
bufSize
);

315 
CV_EXPORTS
 
	`Á°Fªe
(* 
±r
);

317 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 _Tp* 
	$Æloˇã
(
size_t
 
n
)

319  
√w
 
_Tp
[
n
];

320 
	}
}

322 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	$dóŒoˇã
(
_Tp
* 
±r
, 
size_t
)

324 
dñëe
[] 
±r
;

325 
	}
}

333 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
ÆignPå
(_Tp* 
±r
, 
n
=()(_Tp))

335  (
_Tp
*)(((
size_t
)
±r
 + 
n
-1) & -n);

336 
	}
}

343 
ölöe
 
size_t
 
	$ÆignSize
(
size_t
 
sz
, 
n
)

345 
	`as£π
((
n
 & (n - 1)) == 0);

346  (
sz
 + 
n
-1) & -n;

347 
	}
}

358 
CV_EXPORTS_W
 
£tU£O±imized
(
boﬁ
 
⁄off
);

365 
CV_EXPORTS_W
 
boﬁ
 
u£O±imized
();

370 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cAŒoˇt‹


372 
	gpublic
:

373 
_Tp
 
	tvÆue_ty≥
;

374 
vÆue_ty≥
* 
	tpoöãr
;

375 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

376 
	gvÆue_ty≥
& 
	tª„ªn˚
;

377 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

378 
size_t
 
	tsize_ty≥
;

379 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

380 
	gãm∂©e
<
ty≥«me
 
	gU
> cœs†
	cªböd
 { 
	gAŒoˇt‹
<
	tU
> 
	tŸhî
; };

382 
ex∂icô
 
AŒoˇt‹
() {}

383 ~
AŒoˇt‹
() {}

384 
ex∂icô
 
AŒoˇt‹
(Allocator const&) {}

385 
	gãm∂©e
<
ty≥«me
 
	gU
>

386 
ex∂icô
 
AŒoˇt‹
(AŒoˇt‹<
U
> const&) {}

389 
poöãr
 
addªss
(
ª„ªn˚
 
r
Ë{  &
	gr
; }

390 
c⁄°_poöãr
 
addªss
(
c⁄°_ª„ªn˚
 
r
Ë{  &
	gr
; }

392 
poöãr
 
Æloˇã
(
size_ty≥
 
cou¡
, const * =0)

393 {  
ªöãΩªt_ˇ°
<
poöãr
>(
Á°MÆloc
(
cou¡
 *  (
_Tp
))); }

395 
dóŒoˇã
(
poöãr
 
p
, 
size_ty≥
Ë{
Á°Fªe
(p); }

397 
size_ty≥
 
max_size
() const

398 {  
max
(
°©ic_ˇ°
<
_Tp
>(-1)/(_Tp), 1); }

400 
c⁄°ru˘
(
poöãr
 
p
, c⁄° 
_Tp
& 
v
Ë{ 
√w
(
°©ic_ˇ°
<*>(p)) _Tp(v); }

401 
de°roy
(
poöãr
 
p
Ë{ 
	gp
->~
_Tp
(); }

412 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cD©aDïth
 {};

414 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gboﬁ
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8U
, 
	gfmt
=()'u' }; };

415 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	guch¨
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8U
, 
	gfmt
=()'u' }; };

416 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gsch¨
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8S
, 
	gfmt
=()'c' }; };

417 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_8S
, 
	gfmt
=()'c' }; };

418 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<
	gush‹t
> { 
	gpublic
:Énum { 
vÆue
 = 
CV_16U
, 
	gfmt
=()'w' }; };

419 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_16S
, 
	gfmt
=()'s' }; };

420 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32S
, 
	gfmt
=()'i' }; };

422 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32S
, 
	gfmt
=()'i' }; };

423 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_32F
, 
	gfmt
=()'f' }; };

424 
	gãm∂©e
<> 
˛ass
 
	gD©aDïth
<> { 
	gpublic
:Énum { 
vÆue
 = 
CV_64F
, 
	gfmt
=()'d' }; };

425 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aDïth
<_Tp*> { 
	gpublic
:Énum { 
vÆue
 = 
CV_USRTYPE1
, 
	gfmt
=()'r' }; };

446 
CV_EXPORTS
 
	gM©x_AddOp
 {};

447 
CV_EXPORTS
 
	gM©x_SubOp
 {};

448 
CV_EXPORTS
 
	gM©x_SˇÀOp
 {};

449 
CV_EXPORTS
 
	gM©x_MulOp
 {};

450 
CV_EXPORTS
 
	gM©x_M©MulOp
 {};

451 
CV_EXPORTS
 
	gM©x_TOp
 {};

453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> cœs†
	cM©x


455 
	gpublic
:

456 
_Tp
 
	tvÆue_ty≥
;

457 
	gM©x
<
	t_Tp
, (
	tm
 < 
	tn
 ? m :Ç), 1> 
	tdüg_ty≥
;

458 
	gM©x
<
	t_Tp
, 
	tm
, 
	tn
> 
	tm©_ty≥
;

459 íum { 
	gdïth
 = 
D©aDïth
<
_Tp
>::
vÆue
, 
	grows
 = 
m
, 
	gcﬁs
 = 
n
, 
	gch™√ls
 = 
rows
*
cﬁs
,

460 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

463 
M©x
();

465 
M©x
(
_Tp
 
v0
);

466 
M©x
(
_Tp
 
v0
, _T∞
v1
);

467 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
);

468 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
);

469 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
);

470 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
);

471 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
);

472 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
);

473 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
);

474 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
, _T∞
v9
);

475 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

476 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

477 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
);

478 
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

479 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

480 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
,

481 
_Tp
 
v12
, _T∞
v13
, _T∞
v14
, _T∞
v15
);

482 
ex∂icô
 
M©x
(c⁄° 
_Tp
* 
vÆs
);

484 
M©x
 
Æl
(
_Tp
 
Æpha
);

485 
M©x
 
zîos
();

486 
M©x
 
⁄es
();

487 
M©x
 
eye
();

488 
M©x
 
düg
(c⁄° 
düg_ty≥
& 
d
);

489 
M©x
 
øndu
(
_Tp
 
a
, _T∞
b
);

490 
M©x
 
øndn
(
_Tp
 
a
, _T∞
b
);

493 
_Tp
 
dŸ
(c⁄° 
M©x
<_Tp, 
m
, 
n
>& 
v
) const;

496 
ddŸ
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
v
) const;

499 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gM©x
<T2, 
	gm
, 
	gn
>() const;

502 
	gãm∂©e
<
	gm1
, 
	gn1
> 
	gM©x
<
	g_Tp
, m1,Ç1> 
ªsh≠e
() const;

505 
	gãm∂©e
<
	gm1
, 
	gn1
> 
	gM©x
<
	g_Tp
, m1,Ç1> 
gë_mö‹
(
i
, 
j
) const;

508 
	gM©x
<
	g_Tp
, 1, 
	gn
> 
row
(
i
) const;

511 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
cﬁ
(
i
) const;

514 
düg_ty≥
 
düg
() const;

517 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> 
t
() const;

520 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> 
öv
(
mëhod
=
DECOMP_LU
) const;

523 
	gãm∂©e
<
	gl
> 
	gM©x
<
	g_Tp
, 
	gn
,Ü> 
sﬁve
(c⁄° 
M©x
<
_Tp
, 
m
, 
l
>& 
rhs
, 
Êags
=
DECOMP_LU
) const;

524 
	gVec
<
	g_Tp
, 
	gn
> 
sﬁve
(c⁄° 
Vec
<
_Tp
, 
m
>& 
rhs
, 
mëhod
) const;

527 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
mul
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
) const;

530 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
, 
	gj
) const;

531 
	g_Tp
& 
›î©‹
 ()(
	gi
, 
	gj
);

534 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
) const;

535 
	g_Tp
& 
›î©‹
 ()(
	gi
);

537 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_AddOp
);

538 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_SubOp
);

539 
	gãm∂©e
<
ty≥«me
 
	g_T2
> 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
);

540 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_MulOp
);

541 
	gãm∂©e
<
	gl
> 
M©x
(c⁄° M©x<
_Tp
, 
m
, 
l
>& 
a
, c⁄° M©x<_Tp,Ü, 
n
>& 
b
, 
M©x_M©MulOp
);

542 
M©x
(c⁄° M©x<
_Tp
, 
n
, 
m
>& 
a
, 
M©x_TOp
);

544 
_Tp
 
	gvÆ
[
m
*
n
];

548 
	gM©x
<, 1, 2> 
	tM©x12f
;

549 
	gM©x
<, 1, 2> 
	tM©x12d
;

550 
	gM©x
<, 1, 3> 
	tM©x13f
;

551 
	gM©x
<, 1, 3> 
	tM©x13d
;

552 
	gM©x
<, 1, 4> 
	tM©x14f
;

553 
	gM©x
<, 1, 4> 
	tM©x14d
;

554 
	gM©x
<, 1, 6> 
	tM©x16f
;

555 
	gM©x
<, 1, 6> 
	tM©x16d
;

557 
	gM©x
<, 2, 1> 
	tM©x21f
;

558 
	gM©x
<, 2, 1> 
	tM©x21d
;

559 
	gM©x
<, 3, 1> 
	tM©x31f
;

560 
	gM©x
<, 3, 1> 
	tM©x31d
;

561 
	gM©x
<, 4, 1> 
	tM©x41f
;

562 
	gM©x
<, 4, 1> 
	tM©x41d
;

563 
	gM©x
<, 6, 1> 
	tM©x61f
;

564 
	gM©x
<, 6, 1> 
	tM©x61d
;

566 
	gM©x
<, 2, 2> 
	tM©x22f
;

567 
	gM©x
<, 2, 2> 
	tM©x22d
;

568 
	gM©x
<, 2, 3> 
	tM©x23f
;

569 
	gM©x
<, 2, 3> 
	tM©x23d
;

570 
	gM©x
<, 3, 2> 
	tM©x32f
;

571 
	gM©x
<, 3, 2> 
	tM©x32d
;

573 
	gM©x
<, 3, 3> 
	tM©x33f
;

574 
	gM©x
<, 3, 3> 
	tM©x33d
;

576 
	gM©x
<, 3, 4> 
	tM©x34f
;

577 
	gM©x
<, 3, 4> 
	tM©x34d
;

578 
	gM©x
<, 4, 3> 
	tM©x43f
;

579 
	gM©x
<, 4, 3> 
	tM©x43d
;

581 
	gM©x
<, 4, 4> 
	tM©x44f
;

582 
	gM©x
<, 4, 4> 
	tM©x44d
;

583 
	gM©x
<, 6, 6> 
	tM©x66f
;

584 
	gM©x
<, 6, 6> 
	tM©x66d
;

602 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gVec
 : 
public
 
M©x
<
_Tp
, cn, 1>

604 
	gpublic
:

605 
_Tp
 
	tvÆue_ty≥
;

606 íum { 
	gdïth
 = 
D©aDïth
<
_Tp
>::
vÆue
, 
	gch™√ls
 = 
˙
, 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

609 
Vec
();

611 
Vec
(
_Tp
 
v0
);

612 
Vec
(
_Tp
 
v0
, _T∞
v1
);

613 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
);

614 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
);

615 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
);

616 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
);

617 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
);

618 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
);

619 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
);

620 
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
, _T∞
v8
, _T∞
v9
);

621 
ex∂icô
 
Vec
(c⁄° 
_Tp
* 
vÆues
);

623 
Vec
(c⁄° Vec<
_Tp
, 
˙
>& 
v
);

625 
Vec
 
Æl
(
_Tp
 
Æpha
);

628 
Vec
 
mul
(c⁄° Vec<
_Tp
, 
˙
>& 
v
) const;

631 
Vec
 
c⁄j
() const;

638 
Vec
 
¸oss
(c⁄° Vec& 
v
) const;

640 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gVec
<T2, 
	g˙
>() const;

642 
›î©‹
 
CvSˇœr
() const;

645 c⁄° 
	g_Tp
& 
	g›î©‹
 [](
	gi
) const;

646 
	g_Tp
& 
	g›î©‹
[](
	gi
);

647 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gi
) const;

648 
	g_Tp
& 
›î©‹
 ()(
	gi
);

650 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_AddOp
);

651 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_SubOp
);

652 
	gãm∂©e
<
ty≥«me
 
	g_T2
> 
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
);

660 
	gVec
<
	tuch¨
, 2> 
	tVec2b
;

661 
	gVec
<
	tuch¨
, 3> 
	tVec3b
;

662 
	gVec
<
	tuch¨
, 4> 
	tVec4b
;

664 
	gVec
<, 2> 
	tVec2s
;

665 
	gVec
<, 3> 
	tVec3s
;

666 
	gVec
<, 4> 
	tVec4s
;

668 
	gVec
<
	tush‹t
, 2> 
	tVec2w
;

669 
	gVec
<
	tush‹t
, 3> 
	tVec3w
;

670 
	gVec
<
	tush‹t
, 4> 
	tVec4w
;

672 
	gVec
<, 2> 
	tVec2i
;

673 
	gVec
<, 3> 
	tVec3i
;

674 
	gVec
<, 4> 
	tVec4i
;

675 
	gVec
<, 6> 
	tVec6i
;

676 
	gVec
<, 8> 
	tVec8i
;

678 
	gVec
<, 2> 
	tVec2f
;

679 
	gVec
<, 3> 
	tVec3f
;

680 
	gVec
<, 4> 
	tVec4f
;

681 
	gVec
<, 6> 
	tVec6f
;

683 
	gVec
<, 2> 
	tVec2d
;

684 
	gVec
<, 3> 
	tVec3d
;

685 
	gVec
<, 4> 
	tVec4d
;

686 
	gVec
<, 6> 
	tVec6d
;

698 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cCom∂ex


700 
	gpublic
:

703 
Com∂ex
();

704 
Com∂ex
–
_Tp
 
_ª
, _T∞
_im
=0 );

705 
Com∂ex
–c⁄° 
°d
::
com∂ex
<
_Tp
>& 
c
 );

708 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gCom∂ex
<T2>() const;

710 
Com∂ex
 
c⁄j
() const;

712 
›î©‹
 
	g°d
::
com∂ex
<
_Tp
>() const;

714 
_Tp
 
	gª
, 
	gim
;

721 
	gCom∂ex
<> 
	tCom∂exf
;

722 
	gCom∂ex
<> 
	tCom∂exd
;

734 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPoöt_


736 
	gpublic
:

737 
_Tp
 
	tvÆue_ty≥
;

740 
Poöt_
();

741 
Poöt_
(
_Tp
 
_x
, _T∞
_y
);

742 
Poöt_
(c⁄° Poöt_& 
±
);

743 
Poöt_
(c⁄° 
CvPoöt
& 
±
);

744 
Poöt_
(c⁄° 
CvPoöt2D32f
& 
±
);

745 
Poöt_
(c⁄° 
Size_
<
_Tp
>& 
sz
);

746 
Poöt_
(c⁄° 
Vec
<
_Tp
, 2>& 
v
);

748 
	gPoöt_
& 
	g›î©‹
 = (c⁄° 
Poöt_
& 
±
);

750 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gPoöt_
<_Tp2>() const;

753 
›î©‹
 
CvPoöt
() const;

754 
›î©‹
 
CvPoöt2D32f
() const;

755 
›î©‹
 
	gVec
<
	g_Tp
, 2>() const;

758 
_Tp
 
dŸ
(c⁄° 
Poöt_
& 
±
) const;

760 
ddŸ
(c⁄° 
Poöt_
& 
±
) const;

762 
¸oss
(c⁄° 
Poöt_
& 
±
) const;

764 
boﬁ
 
öside
(c⁄° 
Re˘_
<
_Tp
>& 
r
) const;

766 
_Tp
 
	gx
, 
	gy
;

777 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPoöt3_


779 
	gpublic
:

780 
_Tp
 
	tvÆue_ty≥
;

783 
Poöt3_
();

784 
Poöt3_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_z
);

785 
Poöt3_
(c⁄° Poöt3_& 
±
);

786 
ex∂icô
 
Poöt3_
(c⁄° 
Poöt_
<
_Tp
>& 
±
);

787 
Poöt3_
(c⁄° 
CvPoöt3D32f
& 
±
);

788 
Poöt3_
(c⁄° 
Vec
<
_Tp
, 3>& 
v
);

790 
	gPoöt3_
& 
	g›î©‹
 = (c⁄° 
Poöt3_
& 
±
);

792 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gPoöt3_
<_Tp2>() const;

794 
›î©‹
 
CvPoöt3D32f
() const;

796 
›î©‹
 
	gVec
<
	g_Tp
, 3>() const;

799 
_Tp
 
dŸ
(c⁄° 
Poöt3_
& 
±
) const;

801 
ddŸ
(c⁄° 
Poöt3_
& 
±
) const;

803 
Poöt3_
 
¸oss
(c⁄° Poöt3_& 
±
) const;

805 
_Tp
 
	gx
, 
	gy
, 
	gz
;

816 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSize_


818 
	gpublic
:

819 
_Tp
 
	tvÆue_ty≥
;

822 
Size_
();

823 
Size_
(
_Tp
 
_width
, _T∞
_height
);

824 
Size_
(c⁄° Size_& 
sz
);

825 
Size_
(c⁄° 
CvSize
& 
sz
);

826 
Size_
(c⁄° 
CvSize2D32f
& 
sz
);

827 
Size_
(c⁄° 
Poöt_
<
_Tp
>& 
±
);

829 
	gSize_
& 
	g›î©‹
 = (c⁄° 
Size_
& 
sz
);

831 
_Tp
 
¨ó
() const;

834 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gSize_
<_Tp2>() const;

837 
›î©‹
 
CvSize
() const;

838 
›î©‹
 
CvSize2D32f
() const;

840 
_Tp
 
	gwidth
, 
	gheight
;

851 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cRe˘_


853 
	gpublic
:

854 
_Tp
 
	tvÆue_ty≥
;

857 
Re˘_
();

858 
Re˘_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_width
, _T∞
_height
);

859 
Re˘_
(c⁄° Re˘_& 
r
);

860 
Re˘_
(c⁄° 
CvRe˘
& 
r
);

861 
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
‹g
, c⁄° 
Size_
<_Tp>& 
sz
);

862 
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
±1
, c⁄° Poöt_<_Tp>& 
±2
);

864 
	gRe˘_
& 
	g›î©‹
 = ( c⁄° 
Re˘_
& 
r
 );

866 
	gPoöt_
<
	g_Tp
> 
é
() const;

868 
	gPoöt_
<
	g_Tp
> 
br
() const;

871 
	gSize_
<
	g_Tp
> 
size
() const;

873 
_Tp
 
¨ó
() const;

876 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
›î©‹
 
	gRe˘_
<_Tp2>() const;

878 
›î©‹
 
CvRe˘
() const;

881 
boﬁ
 
c⁄èös
(c⁄° 
Poöt_
<
_Tp
>& 
±
) const;

883 
_Tp
 
	gx
, 
	gy
, 
	gwidth
, 
	gheight
;

892 
	gPoöt_
<> 
	tPoöt2i
;

893 
Poöt2i
 
	tPoöt
;

894 
	gSize_
<> 
	tSize2i
;

895 
	gSize_
<> 
	tSize2d
;

896 
Size2i
 
	tSize
;

897 
	gRe˘_
<> 
	tRe˘
;

898 
	gPoöt_
<> 
	tPoöt2f
;

899 
	gPoöt_
<> 
	tPoöt2d
;

900 
	gSize_
<> 
	tSize2f
;

901 
	gPoöt3_
<> 
	tPoöt3i
;

902 
	gPoöt3_
<> 
	tPoöt3f
;

903 
	gPoöt3_
<> 
	tPoöt3d
;

913 ˛as†
	cCV_EXPORTS
 
	gRŸ©edRe˘


915 
	gpublic
:

917 
RŸ©edRe˘
();

918 
RŸ©edRe˘
(c⁄° 
Poöt2f
& 
˚¡î
, c⁄° 
Size2f
& 
size
, 
™gÀ
);

919 
RŸ©edRe˘
(c⁄° 
CvBox2D
& 
box
);

922 
poöts
(
Poöt2f
 
±s
[]) const;

924 
Re˘
 
boundögRe˘
() const;

926 
›î©‹
 
CvBox2D
() const;

928 
Poöt2f
 
	g˚¡î
;

929 
Size2f
 
	gsize
;

930 
	g™gÀ
;

941 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSˇœr_
 : 
public
 
Vec
<
_Tp
, 4>

943 
	gpublic
:

945 
Sˇœr_
();

946 
Sˇœr_
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
=0, _T∞
v3
=0);

947 
Sˇœr_
(c⁄° 
CvSˇœr
& 
s
);

948 
Sˇœr_
(
_Tp
 
v0
);

951 
	gSˇœr_
<
	g_Tp
> 
Æl
(
_Tp
 
v0
);

953 
›î©‹
 
CvSˇœr
() const;

956 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gSˇœr_
<T2>() const;

959 
	gSˇœr_
<
	g_Tp
> 
mul
(c⁄° 
Sˇœr_
<
_Tp
>& 
t
, 
sˇÀ
=1 ) const;

962 
	gSˇœr_
<
	g_Tp
> 
c⁄j
() const;

965 
boﬁ
 
isRól
() const;

968 
	gSˇœr_
<> 
	tSˇœr
;

970 
CV_EXPORTS
 
sˇœrToRawD©a
(c⁄° 
Sˇœr
& 
s
, * 
buf
, 
ty≥
, 
uƒﬁl_to
=0);

979 ˛as†
	cCV_EXPORTS
 
	gR™ge


981 
	gpublic
:

982 
R™ge
();

983 
R™ge
(
_°¨t
, 
_íd
);

984 
R™ge
(c⁄° 
CvSli˚
& 
¶i˚
);

985 
size
() const;

986 
boﬁ
 
em±y
() const;

987 
R™ge
 
Æl
();

988 
›î©‹
 
CvSli˚
() const;

990 
	g°¨t
, 
	gíd
;

1006 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cD©aTy≥


1008 
	gpublic
:

1009 
_Tp
 
	tvÆue_ty≥
;

1010 
vÆue_ty≥
 
	tw‹k_ty≥
;

1011 
vÆue_ty≥
 
	tch™√l_ty≥
;

1012 
vÆue_ty≥
 
	tvec_ty≥
;

1013 íum { 
	ggíîic_ty≥
 = 1, 
	gdïth
 = -1, 
	gch™√ls
 = 1, 
	gfmt
=0,

1014 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1017 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gboﬁ
>

1019 
	gpublic
:

1020 
boﬁ
 
	tvÆue_ty≥
;

1021 
	tw‹k_ty≥
;

1022 
vÆue_ty≥
 
	tch™√l_ty≥
;

1023 
vÆue_ty≥
 
	tvec_ty≥
;

1024 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1025 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1026 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1029 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	guch¨
>

1031 
	gpublic
:

1032 
uch¨
 
	tvÆue_ty≥
;

1033 
	tw‹k_ty≥
;

1034 
vÆue_ty≥
 
	tch™√l_ty≥
;

1035 
vÆue_ty≥
 
	tvec_ty≥
;

1036 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1037 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1038 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1041 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gsch¨
>

1043 
	gpublic
:

1044 
sch¨
 
	tvÆue_ty≥
;

1045 
	tw‹k_ty≥
;

1046 
vÆue_ty≥
 
	tch™√l_ty≥
;

1047 
vÆue_ty≥
 
	tvec_ty≥
;

1048 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1049 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1050 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1053 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1055 
	gpublic
:

1056 
sch¨
 
	tvÆue_ty≥
;

1057 
	tw‹k_ty≥
;

1058 
vÆue_ty≥
 
	tch™√l_ty≥
;

1059 
vÆue_ty≥
 
	tvec_ty≥
;

1060 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1061 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1062 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1065 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gush‹t
>

1067 
	gpublic
:

1068 
ush‹t
 
	tvÆue_ty≥
;

1069 
	tw‹k_ty≥
;

1070 
vÆue_ty≥
 
	tch™√l_ty≥
;

1071 
vÆue_ty≥
 
	tvec_ty≥
;

1072 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1073 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1074 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1077 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1079 
	gpublic
:

1080 
	tvÆue_ty≥
;

1081 
	tw‹k_ty≥
;

1082 
vÆue_ty≥
 
	tch™√l_ty≥
;

1083 
vÆue_ty≥
 
	tvec_ty≥
;

1084 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1085 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1086 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1089 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1091 
	gpublic
:

1092 
	tvÆue_ty≥
;

1093 
vÆue_ty≥
 
	tw‹k_ty≥
;

1094 
vÆue_ty≥
 
	tch™√l_ty≥
;

1095 
vÆue_ty≥
 
	tvec_ty≥
;

1096 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1097 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1098 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1101 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1103 
	gpublic
:

1104 
	tvÆue_ty≥
;

1105 
vÆue_ty≥
 
	tw‹k_ty≥
;

1106 
vÆue_ty≥
 
	tch™√l_ty≥
;

1107 
vÆue_ty≥
 
	tvec_ty≥
;

1108 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1109 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1110 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1113 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<>

1115 
	gpublic
:

1116 
	tvÆue_ty≥
;

1117 
vÆue_ty≥
 
	tw‹k_ty≥
;

1118 
vÆue_ty≥
 
	tch™√l_ty≥
;

1119 
vÆue_ty≥
 
	tvec_ty≥
;

1120 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 1,

1121 
	gfmt
=
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1122 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1125 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
˛ass
 
	gD©aTy≥
<
	gM©x
<_Tp, m,Ç> >

1127 
	gpublic
:

1128 
M©x
<
	t_Tp
, 
	tm
, 
	tn
> 
	tvÆue_ty≥
;

1129 
	gM©x
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
, 
	tm
, 
	tn
> work_type;

1130 
_Tp
 
	tch™√l_ty≥
;

1131 
vÆue_ty≥
 
	tvec_ty≥
;

1132 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 
m
*
n
,

1133 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1134 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
˛ass
 
	gD©aTy≥
<
	gVec
<_Tp, cn> >

1139 
	gpublic
:

1140 
Vec
<
	t_Tp
, 
	t˙
> 
	tvÆue_ty≥
;

1141 
	gVec
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
, 
	t˙
> work_type;

1142 
_Tp
 
	tch™√l_ty≥
;

1143 
vÆue_ty≥
 
	tvec_ty≥
;

1144 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 
˙
,

1145 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1146 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1149 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	g°d
::
com∂ex
<
_Tp
> >

1151 
public
:

1152 
°d
::
	tcom∂ex
<
	t_Tp
> 
	tvÆue_ty≥
;

1153 
vÆue_ty≥
 
	tw‹k_ty≥
;

1154 
_Tp
 
	tch™√l_ty≥
;

1155 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1156 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1157 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1158 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1161 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gCom∂ex
<_Tp> >

1163 
	gpublic
:

1164 
Com∂ex
<
	t_Tp
> 
	tvÆue_ty≥
;

1165 
vÆue_ty≥
 
	tw‹k_ty≥
;

1166 
_Tp
 
	tch™√l_ty≥
;

1167 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1168 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1169 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1170 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1173 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gPoöt_
<_Tp> >

1175 
	gpublic
:

1176 
Poöt_
<
	t_Tp
> 
	tvÆue_ty≥
;

1177 
	gPoöt_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1178 
_Tp
 
	tch™√l_ty≥
;

1179 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1180 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1181 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1182 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1185 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gPoöt3_
<_Tp> >

1187 
	gpublic
:

1188 
Poöt3_
<
	t_Tp
> 
	tvÆue_ty≥
;

1189 
	gPoöt3_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1190 
_Tp
 
	tch™√l_ty≥
;

1191 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 3,

1192 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1193 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1194 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1197 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gSize_
<_Tp> >

1199 
	gpublic
:

1200 
Size_
<
	t_Tp
> 
	tvÆue_ty≥
;

1201 
	gSize_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1202 
_Tp
 
	tch™√l_ty≥
;

1203 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1204 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1205 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1206 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1209 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gRe˘_
<_Tp> >

1211 
	gpublic
:

1212 
Re˘_
<
	t_Tp
> 
	tvÆue_ty≥
;

1213 
	gRe˘_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1214 
_Tp
 
	tch™√l_ty≥
;

1215 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 4,

1216 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1217 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1218 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1221 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gD©aTy≥
<
	gSˇœr_
<_Tp> >

1223 
	gpublic
:

1224 
Sˇœr_
<
	t_Tp
> 
	tvÆue_ty≥
;

1225 
	gSˇœr_
<
	tty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
> work_type;

1226 
_Tp
 
	tch™√l_ty≥
;

1227 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 4,

1228 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1229 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1230 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1233 
	gãm∂©e
<> 
˛ass
 
	gD©aTy≥
<
	gR™ge
>

1235 
	gpublic
:

1236 
R™ge
 
	tvÆue_ty≥
;

1237 
vÆue_ty≥
 
	tw‹k_ty≥
;

1238 
	tch™√l_ty≥
;

1239 íum { 
	ggíîic_ty≥
 = 0, 
	gdïth
 = 
D©aDïth
<
ch™√l_ty≥
>::
vÆue
, 
	gch™√ls
 = 2,

1240 
	gfmt
 = ((
ch™√ls
-1)<<8Ë+ 
D©aDïth
<
ch™√l_ty≥
>::
fmt
,

1241 
	gty≥
 = 
CV_MAKETYPE
(
dïth
, 
ch™√ls
) };

1242 
	gVec
<
	tch™√l_ty≥
, 
	tch™√ls
> 
	tvec_ty≥
;

1268 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cPå


1270 
	gpublic
:

1272 
På
();

1274 
På
(
_Tp
* 
_obj
);

1276 ~
På
();

1278 
På
(c⁄° På& 
±r
);

1279 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
På
(c⁄° På<
_Tp2
>& 
±r
);

1281 
	gPå
& 
	g›î©‹
 = (c⁄° 
På
& 
±r
);

1283 
addªf
();

1285 
ªÀa£
();

1287 
dñëe_obj
();

1289 
boﬁ
 
em±y
() const;

1292 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> 
	gPå
<_Tp2> 
±r
();

1293 
	gãm∂©e
<
ty≥«me
 
	g_Tp2
> c⁄° 
	gPå
<_Tp2> 
±r
() const;

1296 
_Tp
* 
	g›î©‹
 -> ();

1297 c⁄° 
_Tp
* 
	g›î©‹
 -> () const;

1299 
›î©‹
 
	g_Tp
* ();

1300 
›î©‹
 c⁄° 
	g_Tp
*() const;

1302 
_Tp
* 
	gobj
;

1303 
_Atomic_w‹d
* 
	gªfcou¡
;

1312 ˛as†
	cCV_EXPORTS
 
	g_I≈utAºay


1314 
	gpublic
:

1316 
KIND_SHIFT
 = 16,

1317 
	gFIXED_TYPE
 = 0x8000 << 
KIND_SHIFT
,

1318 
	gFIXED_SIZE
 = 0x4000 << 
KIND_SHIFT
,

1319 
	gKIND_MASK
 = ~(
FIXED_TYPE
|
FIXED_SIZE
Ë- (1 << 
KIND_SHIFT
) + 1,

1321 
	gNONE
 = 0 << 
KIND_SHIFT
,

1322 
	gMAT
 = 1 << 
KIND_SHIFT
,

1323 
	gMATX
 = 2 << 
KIND_SHIFT
,

1324 
	gSTD_VECTOR
 = 3 << 
KIND_SHIFT
,

1325 
	gSTD_VECTOR_VECTOR
 = 4 << 
KIND_SHIFT
,

1326 
	gSTD_VECTOR_MAT
 = 5 << 
KIND_SHIFT
,

1327 
	gEXPR
 = 6 << 
KIND_SHIFT
,

1328 
	gOPENGL_BUFFER
 = 7 << 
KIND_SHIFT
,

1329 
	gOPENGL_TEXTURE
 = 8 << 
KIND_SHIFT
,

1330 
	gGPU_MAT
 = 9 << 
KIND_SHIFT
,

1331 
	gOCL_MAT
 =10 << 
KIND_SHIFT


1333 
_I≈utAºay
();

1335 
_I≈utAºay
(c⁄° 
M©
& 
m
);

1336 
_I≈utAºay
(c⁄° 
M©Ex¥
& 
ex¥
);

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
_Tp
* 
vec
, 
n
);

1338 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
);

1339 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1340 
_I≈utAºay
(c⁄° 
ve˘‹
<
M©
>& 
vec
);

1341 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1342 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_I≈utAºay
(c⁄° 
M©_
<
_Tp
>& 
m
);

1343 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_I≈utAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1344 
_I≈utAºay
(c⁄° 
Sˇœr
& 
s
);

1345 
_I≈utAºay
(c⁄° & 
vÆ
);

1347 
_I≈utAºay
(c⁄° 
GlBuf„r
& 
buf
);

1348 
_I≈utAºay
(c⁄° 
GlTextuª
& 
ãx
);

1350 
_I≈utAºay
(c⁄° 
gpu
::
GpuM©
& 
d_m©
);

1351 
_I≈utAºay
(c⁄° 
ogl
::
Buf„r
& 
buf
);

1352 
_I≈utAºay
(c⁄° 
ogl
::
Textuª2D
& 
ãx
);

1354 
vútuÆ
 
M©
 
gëM©
(
i
=-1) const;

1355 
vútuÆ
 
gëM©Ve˘‹
(
ve˘‹
<
M©
>& 
mv
) const;

1357 
vútuÆ
 
GlBuf„r
 
gëGlBuf„r
() const;

1358 
vútuÆ
 
GlTextuª
 
gëGlTextuª
() const;

1360 
vútuÆ
 
	ggpu
::
GpuM©
 
gëGpuM©
() const;

1361  
	gogl
::
Buf„r
 
gëOGlBuf„r
() const;

1362  
	gogl
::
Textuª2D
 
gëOGlTextuª2D
() const;

1364 
vútuÆ
 
köd
() const;

1365 
vútuÆ
 
Size
 
size
(
i
=-1) const;

1366 
vútuÆ
 
size_t
 
tŸÆ
(
i
=-1) const;

1367 
vútuÆ
 
ty≥
(
i
=-1) const;

1368 
vútuÆ
 
dïth
(
i
=-1) const;

1369 
vútuÆ
 
ch™√ls
(
i
=-1) const;

1370 
vútuÆ
 
boﬁ
 
em±y
() const;

1372 #ifde‡
OPENCV_CAN_BREAK_BINARY_COMPATIBILITY


1373 
	gvútuÆ
 ~
_I≈utAºay
();

1376 
	gÊags
;

1377 * 
	gobj
;

1378 
Size
 
	gsz
;

1384 
	gDEPTH_MASK_8U
 = 1 << 
CV_8U
,

1385 
	gDEPTH_MASK_8S
 = 1 << 
CV_8S
,

1386 
	gDEPTH_MASK_16U
 = 1 << 
CV_16U
,

1387 
	gDEPTH_MASK_16S
 = 1 << 
CV_16S
,

1388 
	gDEPTH_MASK_32S
 = 1 << 
CV_32S
,

1389 
	gDEPTH_MASK_32F
 = 1 << 
CV_32F
,

1390 
	gDEPTH_MASK_64F
 = 1 << 
CV_64F
,

1391 
	gDEPTH_MASK_ALL
 = (
DEPTH_MASK_64F
<<1)-1,

1392 
	gDEPTH_MASK_ALL_BUT_8S
 = 
DEPTH_MASK_ALL
 & ~
DEPTH_MASK_8S
,

1393 
	gDEPTH_MASK_FLT
 = 
DEPTH_MASK_32F
 + 
DEPTH_MASK_64F


1400 ˛as†
	cCV_EXPORTS
 
	g_OuçutAºay
 : 
public
 
_I≈utAºay


1402 
public
:

1403 
_OuçutAºay
();

1405 
_OuçutAºay
(
M©
& 
m
);

1406 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<
_Tp
>& 
vec
);

1407 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1408 
_OuçutAºay
(
ve˘‹
<
M©
>& 
vec
);

1409 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
M©_
<
_Tp
>& 
m
);

1411 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_OuçutAºay
(
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1412 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(
_Tp
* 
vec
, 
n
);

1413 
_OuçutAºay
(
gpu
::
GpuM©
& 
d_m©
);

1414 
_OuçutAºay
(
ogl
::
Buf„r
& 
buf
);

1415 
_OuçutAºay
(
ogl
::
Textuª2D
& 
ãx
);

1417 
_OuçutAºay
(c⁄° 
M©
& 
m
);

1418 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
);

1419 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
);

1420 
_OuçutAºay
(c⁄° 
ve˘‹
<
M©
>& 
vec
);

1421 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
);

1422 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
M©_
<
_Tp
>& 
m
);

1423 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
_OuçutAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
m©x
);

1424 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_OuçutAºay
(c⁄° 
_Tp
* 
vec
, 
n
);

1425 
_OuçutAºay
(c⁄° 
gpu
::
GpuM©
& 
d_m©
);

1426 
_OuçutAºay
(c⁄° 
ogl
::
Buf„r
& 
buf
);

1427 
_OuçutAºay
(c⁄° 
ogl
::
Textuª2D
& 
ãx
);

1429 
vútuÆ
 
boﬁ
 
fixedSize
() const;

1430 
vútuÆ
 
boﬁ
 
fixedTy≥
() const;

1431 
vútuÆ
 
boﬁ
 
√eded
() const;

1432 
vútuÆ
 
	gM©
& 
gëM©Ref
(
i
=-1) const;

1433  
	ggpu
::
GpuM©
& 
gëGpuM©Ref
() const;

1434  
	gogl
::
Buf„r
& 
gëOGlBuf„rRef
() const;

1435  
	gogl
::
Textuª2D
& 
gëOGlTextuª2DRef
() const;

1436 
vútuÆ
 
¸óã
(
Size
 
sz
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1437 
vútuÆ
 
¸óã
(
rows
, 
cﬁs
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1438 
vútuÆ
 
¸óã
(
dims
, c⁄° * 
size
, 
ty≥
, 
i
=-1, 
boﬁ
 
ÆlowTøn•o£d
=
Ál£
, 
fixedDïthMask
=0) const;

1439 
vútuÆ
 
ªÀa£
() const;

1440 
vútuÆ
 
˛ór
() const;

1442 #ifde‡
OPENCV_CAN_BREAK_BINARY_COMPATIBILITY


1443 
	gvútuÆ
 ~
_OuçutAºay
();

1447 c⁄° 
	t_I≈utAºay
& 
	tI≈utAºay
;

1448 
I≈utAºay
 
	tI≈utAºayOfAºays
;

1449 c⁄° 
	t_OuçutAºay
& 
	tOuçutAºay
;

1450 
OuçutAºay
 
	tOuçutAºayOfAºays
;

1451 
OuçutAºay
 
	tI≈utOuçutAºay
;

1452 
OuçutAºay
 
	tI≈utOuçutAºayOfAºays
;

1454 
CV_EXPORTS
 
OuçutAºay
 
noAºay
();

1458 íum { 
	gMAGIC_MASK
=0xFFFF0000, 
	gTYPE_MASK
=0x00000FFF, 
	gDEPTH_MASK
=7 };

1460 
ölöe
 
size_t
 
	$gëEÀmSize
(
ty≥
Ë{  
	`CV_ELEM_SIZE
—y≥); 
	}
}

1466 ˛as†
	cCV_EXPORTS
 
	gM©AŒoˇt‹


1468 
	gpublic
:

1469 
M©AŒoˇt‹
() {}

1470 
vútuÆ
 ~
M©AŒoˇt‹
() {}

1471 
vútuÆ
 
Æloˇã
(
dims
, c⁄° * 
sizes
, 
ty≥
, 
_Atomic_w‹d
*& 
ªfcou¡
,

1472 
uch¨
*& 
d©a°¨t
, uch¨*& 
d©a
, 
size_t
* 
°ï
) = 0;

1473 
vútuÆ
 
dóŒoˇã
(
_Atomic_w‹d
* 
ªfcou¡
, 
uch¨
* 
d©a°¨t
, uch¨* 
d©a
) = 0;

1688 ˛as†
	cCV_EXPORTS
 
	gM©


1690 
	gpublic
:

1692 
M©
();

1695 
M©
(
rows
, 
cﬁs
, 
ty≥
);

1696 
M©
(
Size
 
size
, 
ty≥
);

1698 
M©
(
rows
, 
cﬁs
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1699 
M©
(
Size
 
size
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1702 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
);

1703 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
, c⁄° 
Sˇœr
& 
s
);

1706 
M©
(c⁄° M©& 
m
);

1708 
M©
(
rows
, 
cﬁs
, 
ty≥
, * 
d©a
, 
size_t
 
°ï
=
AUTO_STEP
);

1709 
M©
(
Size
 
size
, 
ty≥
, * 
d©a
, 
size_t
 
°ï
=
AUTO_STEP
);

1710 
M©
(
ndims
, c⁄° * 
sizes
, 
ty≥
, * 
d©a
, c⁄° 
size_t
* 
°ïs
=0);

1713 
M©
(c⁄° M©& 
m
, c⁄° 
R™ge
& 
rowR™ge
, c⁄° R™ge& 
cﬁR™ge
=R™ge::
Æl
());

1714 
M©
(c⁄° M©& 
m
, c⁄° 
Re˘
& 
roi
);

1715 
M©
(c⁄° M©& 
m
, c⁄° 
R™ge
* 
ønges
);

1717 
M©
(c⁄° 
CvM©
* 
m
, 
boﬁ
 
c›yD©a
=
Ál£
);

1719 
M©
(c⁄° 
CvM©ND
* 
m
, 
boﬁ
 
c›yD©a
=
Ál£
);

1721 
M©
(c⁄° 
I∂Image
* 
img
, 
boﬁ
 
c›yD©a
=
Ál£
);

1723 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
=
Ál£
);

1725 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ex∂icô
 
M©
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
=
åue
);

1727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ex∂icô
 
M©
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
, 
boﬁ
 
c›yD©a
=
åue
);

1729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
Poöt_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

1731 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
Poöt3_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

1733 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ex∂icô
 
M©
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
);

1736 
ex∂icô
 
M©
(c⁄° 
gpu
::
GpuM©
& 
m
);

1739 ~
M©
();

1741 
	gM©
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

1742 
	gM©
& 
	g›î©‹
 = (c⁄° 
M©Ex¥
& 
ex¥
);

1745 
M©
 
row
(
y
) const;

1747 
M©
 
cﬁ
(
x
) const;

1749 
M©
 
rowR™ge
(
°¨åow
, 
ídrow
) const;

1750 
M©
 
rowR™ge
(c⁄° 
R™ge
& 
r
) const;

1752 
M©
 
cﬁR™ge
(
°¨tcﬁ
, 
ídcﬁ
) const;

1753 
M©
 
cﬁR™ge
(c⁄° 
R™ge
& 
r
) const;

1758 
M©
 
düg
(
d
=0) const;

1760 
M©
 
düg
(c⁄° M©& 
d
);

1763 
M©
 
˛⁄e
() const;

1766 
c›yTo
–
OuçutAºay
 
m
 ) const;

1768 
c›yTo
–
OuçutAºay
 
m
, 
I≈utAºay
 
mask
 ) const;

1770 
c⁄vîtTo
–
OuçutAºay
 
m
, 
πy≥
, 
Æpha
=1, 
bëa
=0 ) const;

1772 
assignTo
–
M©
& 
m
, 
ty≥
=-1 ) const;

1775 
	gM©
& 
	g›î©‹
 = (c⁄° 
Sˇœr
& 
s
);

1777 
	gM©
& 
£tTo
(
I≈utAºay
 
vÆue
, I≈utAºay 
mask
=
noAºay
());

1780 
M©
 
ªsh≠e
(
˙
, 
rows
=0) const;

1781 
M©
 
ªsh≠e
(
˙
, 
√wndims
, c⁄° * 
√wsz
) const;

1784 
M©Ex¥
 
t
() const;

1786 
M©Ex¥
 
öv
(
mëhod
=
DECOMP_LU
) const;

1788 
M©Ex¥
 
mul
(
I≈utAºay
 
m
, 
sˇÀ
=1) const;

1791 
M©
 
¸oss
(
I≈utAºay
 
m
) const;

1793 
dŸ
(
I≈utAºay
 
m
) const;

1796 
M©Ex¥
 
zîos
(
rows
, 
cﬁs
, 
ty≥
);

1797 
M©Ex¥
 
zîos
(
Size
 
size
, 
ty≥
);

1798 
M©Ex¥
 
zîos
(
ndims
, c⁄° * 
sz
, 
ty≥
);

1799 
M©Ex¥
 
⁄es
(
rows
, 
cﬁs
, 
ty≥
);

1800 
M©Ex¥
 
⁄es
(
Size
 
size
, 
ty≥
);

1801 
M©Ex¥
 
⁄es
(
ndims
, c⁄° * 
sz
, 
ty≥
);

1802 
M©Ex¥
 
eye
(
rows
, 
cﬁs
, 
ty≥
);

1803 
M©Ex¥
 
eye
(
Size
 
size
, 
ty≥
);

1807 
¸óã
(
rows
, 
cﬁs
, 
ty≥
);

1808 
¸óã
(
Size
 
size
, 
ty≥
);

1809 
¸óã
(
ndims
, c⁄° * 
sizes
, 
ty≥
);

1812 
addªf
();

1815 
ªÀa£
();

1818 
dóŒoˇã
();

1820 
c›ySize
(c⁄° 
M©
& 
m
);

1823 
ª£rve
(
size_t
 
sz
);

1825 
ªsize
(
size_t
 
sz
);

1827 
ªsize
(
size_t
 
sz
, c⁄° 
Sˇœr
& 
s
);

1829 
push_back_
(c⁄° * 
ñem
);

1831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
push_back
(c⁄° 
_Tp
& 
ñem
);

1832 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
push_back
(c⁄° 
M©_
<
_Tp
>& 
ñem
);

1833 
push_back
(c⁄° 
M©
& 
m
);

1835 
p›_back
(
size_t
 
√Àms
=1);

1838 
loˇãROI
–
Size
& 
whﬁeSize
, 
Poöt
& 
ofs
 ) const;

1840 
	gM©
& 
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 );

1843 
M©
 
›î©‹
()–
R™ge
 
	growR™ge
, R™gê
	gcﬁR™ge
 ) const;

1844 
M©
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

1845 
M©
 
›î©‹
()–c⁄° 
R™ge
* 
	gønges
 ) const;

1848 
›î©‹
 
CvM©
() const;

1850 
›î©‹
 
CvM©ND
() const;

1852 
›î©‹
 
I∂Image
() const;

1854 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
›î©‹
 
	gve˘‹
<_Tp>() const;

1855 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
›î©‹
 
	gVec
<_Tp,Ç>() const;

1856 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
›î©‹
 
	gM©x
<_Tp, m,Ç>() const;

1861 
boﬁ
 
isC⁄töuous
() const;

1864 
boﬁ
 
isSubm©rix
() const;

1868 
size_t
 
ñemSize
() const;

1870 
size_t
 
ñemSize1
() const;

1872 
ty≥
() const;

1874 
dïth
() const;

1876 
ch™√ls
() const;

1878 
size_t
 
°ï1
(
i
=0) const;

1880 
boﬁ
 
em±y
() const;

1882 
size_t
 
tŸÆ
() const;

1885 
checkVe˘‹
(
ñemCh™√ls
, 
dïth
=-1, 
boﬁ
 
ªquúeC⁄töuous
=
åue
) const;

1888 
uch¨
* 
±r
(
i0
=0);

1889 c⁄° 
uch¨
* 
±r
(
i0
=0) const;

1892 
uch¨
* 
±r
(
i0
, 
i1
);

1893 c⁄° 
uch¨
* 
±r
(
i0
, 
i1
) const;

1896 
uch¨
* 
±r
(
i0
, 
i1
, 
i2
);

1897 c⁄° 
uch¨
* 
±r
(
i0
, 
i1
, 
i2
) const;

1900 
uch¨
* 
±r
(c⁄° * 
idx
);

1902 c⁄° 
uch¨
* 
±r
(c⁄° * 
idx
) const;

1904 
	gãm∂©e
<
	gn
> 
uch¨
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
);

1905 
	gãm∂©e
<
	gn
> c⁄° 
uch¨
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1908 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
=0);

1909 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
=0) const;

1911 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
, 
i1
);

1912 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
, 
i1
) const;

1914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(
i0
, 
i1
, 
i2
);

1915 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(
i0
, 
i1
, 
i2
) const;

1917 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
_Tp
* 
±r
(c⁄° * 
idx
);

1918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° 
_Tp
* 
±r
(c⁄° * 
idx
) const;

1920 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
_Tp
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
);

1921 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> c⁄° 
_Tp
* 
±r
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
=0);

1925 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
=0) const;

1927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
, 
i1
);

1928 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
, 
i1
) const;

1930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
i0
, 
i1
, 
i2
);

1931 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
i0
, 
i1
, 
i2
) const;

1933 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(c⁄° * 
idx
);

1934 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(c⁄° * 
idx
) const;

1936 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> _Tp& 
©
(c⁄° 
Vec
<, 
n
>& 
idx
);

1937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> c⁄° _Tp& 
©
(c⁄° 
Vec
<, 
n
>& 
idx
) const;

1940 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
©
(
Poöt
 
±
);

1941 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
©
(
Poöt
 
±
) const;

1945 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©Iãøt‹_
<_Tp> 
begö
();

1946 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©Iãøt‹_
<_Tp> 
íd
();

1947 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©C⁄°Iãøt‹_
<_Tp> 
begö
() const;

1948 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©C⁄°Iãøt‹_
<_Tp> 
íd
() const;

1950 íum { 
	gMAGIC_VAL
=0x42FF0000, 
	gAUTO_STEP
=0, 
	gCONTINUOUS_FLAG
=
CV_MAT_CONT_FLAG
, 
	gSUBMATRIX_FLAG
=
CV_SUBMAT_FLAG
 };

1958 
	gÊags
;

1960 
	gdims
;

1962 
	grows
, 
	gcﬁs
;

1964 
uch¨
* 
	gd©a
;

1968 
_Atomic_w‹d
* 
	gªfcou¡
;

1971 
uch¨
* 
	gd©a°¨t
;

1972 
uch¨
* 
	gd©´nd
;

1973 
uch¨
* 
	gd©Æimô
;

1976 
M©AŒoˇt‹
* 
	gÆloˇt‹
;

1978 
CV_EXPORTS
 
	gMSize


1980 
MSize
(* 
_p
);

1981 
Size
 
›î©‹
()() const;

1982 c⁄° & 
	g›î©‹
[](
	gi
) const;

1983 & 
	g›î©‹
[](
	gi
);

1984 
›î©‹
 const *() const;

1985 
boﬁ
 
	g›î©‹
 =(c⁄° 
MSize
& 
sz
) const;

1986 
boﬁ
 
	g›î©‹
 !(c⁄° 
MSize
& 
sz
) const;

1988 * 
	gp
;

1991 
CV_EXPORTS
 
	gMSãp


1993 
MSãp
();

1994 
MSãp
(
size_t
 
s
);

1995 c⁄° 
	gsize_t
& 
	g›î©‹
[](
	gi
) const;

1996 
	gsize_t
& 
	g›î©‹
[](
	gi
);

1997 
›î©‹
 
size_t
() const;

1998 
	gMSãp
& 
	g›î©‹
 = (
size_t
 
s
);

2000 
size_t
* 
	gp
;

2001 
size_t
 
	gbuf
[2];

2002 
	g¥Ÿe˘ed
:

2003 
MSãp
& 
›î©‹
 = (const MStep&);

2006 
MSize
 
	gsize
;

2007 
MSãp
 
	g°ï
;

2009 
	g¥Ÿe˘ed
:

2010 
öôEm±y
();

2019 ˛as†
	cCV_EXPORTS
 
	gRNG


2021 
	gpublic
:

2022 íum { 
UNIFORM
=0, 
	gNORMAL
=1 };

2024 
RNG
();

2025 
RNG
(
uöt64
 
°©e
);

2027 
√xt
();

2029 
›î©‹
 
uch¨
();

2030 
›î©‹
 
sch¨
();

2031 
›î©‹
 
ush‹t
();

2032 
›î©‹
 ();

2033 
›î©‹
 ();

2035 
›î©‹
 ()(
	gN
);

2036 
›î©‹
 ()();

2037 
›î©‹
 ();

2038 
›î©‹
 ();

2039 
›î©‹
 ();

2041 
unif‹m
(
a
, 
b
);

2043 
unif‹m
(
a
, 
b
);

2045 
unif‹m
(
a
, 
b
);

2046 
fûl
–
I≈utOuçutAºay
 
m©
, 
di°Ty≥
, 
I≈utAºay
 
a
, I≈utAºay 
b
, 
boﬁ
 
ßtuøãR™ge
=
Ál£
 );

2048 
gaussün
(
sigma
);

2050 
uöt64
 
	g°©e
;

2058 ˛as†
	cCV_EXPORTS
 
	gRNG_MT19937


2060 
	gpublic
:

2061 
RNG_MT19937
();

2062 
RNG_MT19937
(
s
);

2063 
£ed
(
s
);

2065 
√xt
();

2067 
›î©‹
 ();

2068 
›î©‹
 ();

2069 
›î©‹
 ();

2070 
›î©‹
 ();

2072 
›î©‹
 ()(
	gN
);

2073 
›î©‹
 ()();

2076 
unif‹m
(
a
, 
b
);

2078 
unif‹m
(
a
, 
b
);

2080 
unif‹m
(
a
, 
b
);

2082 
	g¥iv©e
:

2083 
	ePîiodP¨amëîs
 {
N
 = 624, 
	gM
 = 397};

2084 
	g°©e
[
N
];

2085 
	gmti
;

2091 ˛as†
	cCV_EXPORTS
 
	gTîmCrôîü


2093 
	gpublic
:

2096 
COUNT
=1,

2097 
	gMAX_ITER
=
COUNT
,

2098 
	gEPS
=2

2102 
TîmCrôîü
();

2104 
TîmCrôîü
(
ty≥
, 
maxCou¡
, 
ïsû⁄
);

2106 
TîmCrôîü
(c⁄° 
CvTîmCrôîü
& 
¸ôîü
);

2108 
›î©‹
 
CvTîmCrôîü
() const;

2110 
	gty≥
;

2111 
	gmaxCou¡
;

2112 
	gïsû⁄
;

2116 (*
	tBö¨yFunc
)(c⁄° 
	tuch¨
* 
	t§c1
, 
	tsize_t
 
	t°ï1
,

2117 c⁄° 
	tuch¨
* 
	t§c2
, 
	tsize_t
 
	t°ï2
,

2118 
	tuch¨
* 
	td°
, 
	tsize_t
 
	t°ï
, 
	tSize
 
	tsz
,

2121 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC⁄vîtFunc
(
sdïth
, 
ddïth
);

2122 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC⁄vîtSˇÀFunc
(
sdïth
, 
ddïth
);

2123 
CV_EXPORTS
 
Bö¨yFunc
 
	`gëC›yMaskFunc
(
size_t
 
esz
);

2126 
CV_EXPORTS
 
	`sw≠
(
M©
& 
a
, M©& 
b
);

2129 
CV_EXPORTS
 
M©
 
	`cv¨rToM©
(c⁄° 
CvAº
* 
¨r
, 
boﬁ
 
c›yD©a
=
Ál£
,

2130 
boﬁ
 
ÆlowND
=
åue
, 
coiMode
=0);

2132 
CV_EXPORTS
 
	`exåa˘ImageCOI
(c⁄° 
CvAº
* 
¨r
, 
OuçutAºay
 
coiimg
, 
coi
=-1);

2134 
CV_EXPORTS
 
	`ö£πImageCOI
(
I≈utAºay
 
coiimg
, 
CvAº
* 
¨r
, 
coi
=-1);

2137 
CV_EXPORTS_W
 
	`add
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2138 
I≈utAºay
 
mask
=
	`noAºay
(), 
dty≥
=-1);

2140 
CV_EXPORTS_W
 
	`subåa˘
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2141 
I≈utAºay
 
mask
=
	`noAºay
(), 
dty≥
=-1);

2144 
CV_EXPORTS_W
 
	`mu…ùly
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2145 
OuçutAºay
 
d°
, 
sˇÀ
=1, 
dty≥
=-1);

2148 
CV_EXPORTS_W
 
	`divide
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
,

2149 
sˇÀ
=1, 
dty≥
=-1);

2152 
CV_EXPORTS_W
 
	`divide
(
sˇÀ
, 
I≈utAºay
 
§c2
,

2153 
OuçutAºay
 
d°
, 
dty≥
=-1);

2156 
CV_EXPORTS_W
 
	`sˇÀAdd
(
I≈utAºay
 
§c1
, 
Æpha
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2159 
CV_EXPORTS_W
 
	`addWeighãd
(
I≈utAºay
 
§c1
, 
Æpha
, I≈utAºay 
§c2
,

2160 
bëa
, 
gamma
, 
OuçutAºay
 
d°
, 
dty≥
=-1);

2163 
CV_EXPORTS_W
 
	`c⁄vîtSˇÀAbs
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

2164 
Æpha
=1, 
bëa
=0);

2166 
CV_EXPORTS_W
 
	`LUT
(
I≈utAºay
 
§c
, I≈utAºay 
lut
, 
OuçutAºay
 
d°
,

2167 
öãΩﬁ©i⁄
=0);

2170 
	$CV_EXPORTS_AS
(
sumEÀms
Ë
Sˇœr
 
	`sum
(
I≈utAºay
 
§c
);

2172 
CV_EXPORTS_W
 
	`cou¡N⁄Zîo
–
I≈utAºay
 
§c
 );

2174 
CV_EXPORTS_W
 
	`födN⁄Zîo
–
I≈utAºay
 
§c
, 
OuçutAºay
 
idx
 );

2177 
CV_EXPORTS_W
 
Sˇœr
 
	`món
(
I≈utAºay
 
§c
, I≈utAºay 
mask
=
	`noAºay
());

2179 
CV_EXPORTS_W
 
	`mónStdDev
(
I≈utAºay
 
§c
, 
OuçutAºay
 
món
, OuçutAºay 
°ddev
,

2180 
I≈utAºay
 
mask
=
	`noAºay
());

2182 
CV_EXPORTS_W
 
	`n‹m
(
I≈utAºay
 
§c1
, 
n‹mTy≥
=
NORM_L2
, I≈utAºay 
mask
=
	`noAºay
());

2184 
CV_EXPORTS_W
 
	`n‹m
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2185 
n‹mTy≥
=
NORM_L2
, 
I≈utAºay
 
mask
=
	`noAºay
());

2188 
CV_EXPORTS_W
 
	`b©chDi°™˚
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2189 
OuçutAºay
 
di°
, 
dty≥
, OuçutAºay 
nidx
,

2190 
n‹mTy≥
=
NORM_L2
, 
K
=0,

2191 
I≈utAºay
 
mask
=
	`noAºay
(), 
upd©e
=0,

2192 
boﬁ
 
¸osscheck
=
Ál£
);

2195 
CV_EXPORTS_W
 
	`n‹mÆize
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Æpha
=1, 
bëa
=0,

2196 
n‹m_ty≥
=
NORM_L2
, 
dty≥
=-1, 
I≈utAºay
 
mask
=
	`noAºay
());

2199 
CV_EXPORTS_W
 
	`möMaxLoc
(
I≈utAºay
 
§c
, 
CV_OUT
 * 
möVÆ
,

2200 
CV_OUT
 * 
maxVÆ
=0, CV_OUT 
Poöt
* 
möLoc
=0,

2201 
CV_OUT
 
Poöt
* 
maxLoc
=0, 
I≈utAºay
 
mask
=
	`noAºay
());

2202 
CV_EXPORTS
 
	`möMaxIdx
(
I≈utAºay
 
§c
, * 
möVÆ
, * 
maxVÆ
,

2203 * 
möIdx
=0, * 
maxIdx
=0, 
I≈utAºay
 
mask
=
	`noAºay
());

2206 
CV_EXPORTS_W
 
	`ªdu˚
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
dim
, 
πy≥
, 
dty≥
=-1);

2209 
CV_EXPORTS
 
	`mîge
(c⁄° 
M©
* 
mv
, 
size_t
 
cou¡
, 
OuçutAºay
 
d°
);

2210 
CV_EXPORTS
 
	`mîge
(c⁄° 
ve˘‹
<
M©
>& 
mv
, 
OuçutAºay
 
d°
 );

2213 
CV_EXPORTS_W
 
	`mîge
(
I≈utAºayOfAºays
 
mv
, 
OuçutAºay
 
d°
);

2216 
CV_EXPORTS
 
	`•lô
(c⁄° 
M©
& 
§c
, M©* 
mvbegö
);

2217 
CV_EXPORTS
 
	`•lô
(c⁄° 
M©
& 
m
, 
ve˘‹
<M©>& 
mv
 );

2220 
CV_EXPORTS_W
 
	`•lô
(
I≈utAºay
 
m
, 
OuçutAºayOfAºays
 
mv
);

2223 
CV_EXPORTS
 
	`mixCh™√ls
(c⁄° 
M©
* 
§c
, 
size_t
 
n§cs
, M©* 
d°
, size_à
nd°s
,

2224 c⁄° * 
‰omTo
, 
size_t
 
≈aús
);

2225 
CV_EXPORTS
 
	`mixCh™√ls
(c⁄° 
ve˘‹
<
M©
>& 
§c
, ve˘‹<M©>& 
d°
,

2226 c⁄° * 
‰omTo
, 
size_t
 
≈aús
);

2227 
CV_EXPORTS_W
 
	`mixCh™√ls
(
I≈utAºayOfAºays
 
§c
, I≈utAºayOfAºay†
d°
,

2228 c⁄° 
ve˘‹
<>& 
‰omTo
);

2231 
CV_EXPORTS_W
 
	`exåa˘Ch™√l
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
coi
);

2234 
CV_EXPORTS_W
 
	`ö£πCh™√l
(
I≈utAºay
 
§c
, 
I≈utOuçutAºay
 
d°
, 
coi
);

2237 
CV_EXPORTS_W
 
	`Êù
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ÊùCode
);

2240 
CV_EXPORTS_W
 
	`ª≥©
(
I≈utAºay
 
§c
, 
ny
, 
nx
, 
OuçutAºay
 
d°
);

2241 
CV_EXPORTS
 
M©
 
	`ª≥©
(c⁄° M©& 
§c
, 
ny
, 
nx
);

2243 
CV_EXPORTS
 
	`hc⁄ˇt
(c⁄° 
M©
* 
§c
, 
size_t
 
n§c
, 
OuçutAºay
 
d°
);

2244 
CV_EXPORTS
 
	`hc⁄ˇt
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2245 
CV_EXPORTS_W
 
	`hc⁄ˇt
(
I≈utAºayOfAºays
 
§c
, 
OuçutAºay
 
d°
);

2247 
CV_EXPORTS
 
	`vc⁄ˇt
(c⁄° 
M©
* 
§c
, 
size_t
 
n§c
, 
OuçutAºay
 
d°
);

2248 
CV_EXPORTS
 
	`vc⁄ˇt
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2249 
CV_EXPORTS_W
 
	`vc⁄ˇt
(
I≈utAºayOfAºays
 
§c
, 
OuçutAºay
 
d°
);

2252 
CV_EXPORTS_W
 
	`bôwi£_™d
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2253 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2255 
CV_EXPORTS_W
 
	`bôwi£_‹
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2256 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2258 
CV_EXPORTS_W
 
	`bôwi£_x‹
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2259 
OuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
());

2261 
CV_EXPORTS_W
 
	`bôwi£_nŸ
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

2262 
I≈utAºay
 
mask
=
	`noAºay
());

2264 
CV_EXPORTS_W
 
	`absdiff
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2266 
CV_EXPORTS_W
 
	`öR™ge
(
I≈utAºay
 
§c
, I≈utAºay 
lowîb
,

2267 
I≈utAºay
 
uµîb
, 
OuçutAºay
 
d°
);

2269 
CV_EXPORTS_W
 
	`com∑ª
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
, 
cmp›
);

2271 
CV_EXPORTS_W
 
	`mö
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2273 
CV_EXPORTS_W
 
	`max
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
OuçutAºay
 
d°
);

2276 
CV_EXPORTS
 
	`mö
(c⁄° 
M©
& 
§c1
, c⁄° M©& 
§c2
, M©& 
d°
);

2278 
CV_EXPORTS
 
	`mö
(c⁄° 
M©
& 
§c1
, 
§c2
, M©& 
d°
);

2280 
CV_EXPORTS
 
	`max
(c⁄° 
M©
& 
§c1
, c⁄° M©& 
§c2
, M©& 
d°
);

2282 
CV_EXPORTS
 
	`max
(c⁄° 
M©
& 
§c1
, 
§c2
, M©& 
d°
);

2285 
CV_EXPORTS_W
 
	`sqπ
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2287 
CV_EXPORTS_W
 
	`pow
(
I≈utAºay
 
§c
, 
powî
, 
OuçutAºay
 
d°
);

2289 
CV_EXPORTS_W
 
	`exp
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2291 
CV_EXPORTS_W
 
	`log
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2293 
CV_EXPORTS_W
 
	`cubeRoŸ
(
vÆ
);

2295 
CV_EXPORTS_W
 
	`Á°Aèn2
(
y
, 
x
);

2297 
CV_EXPORTS
 
	`exp
(c⁄° * 
§c
, * 
d°
, 
n
);

2298 
CV_EXPORTS
 
	`log
(c⁄° * 
§c
, * 
d°
, 
n
);

2299 
CV_EXPORTS
 
	`Á°Aèn2
(c⁄° * 
y
, c⁄° * 
x
, * 
d°
, 
n
, 
boﬁ
 
™gÀInDegªes
);

2300 
CV_EXPORTS
 
	`magnôude
(c⁄° * 
x
, c⁄° * 
y
, * 
d°
, 
n
);

2303 
CV_EXPORTS_W
 
	`pﬁ¨ToC¨t
(
I≈utAºay
 
magnôude
, I≈utAºay 
™gÀ
,

2304 
OuçutAºay
 
x
, OuçutAºay 
y
, 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2306 
CV_EXPORTS_W
 
	`ˇπToPﬁ¨
(
I≈utAºay
 
x
, I≈utAºay 
y
,

2307 
OuçutAºay
 
magnôude
, OuçutAºay 
™gÀ
,

2308 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2310 
CV_EXPORTS_W
 
	`pha£
(
I≈utAºay
 
x
, I≈utAºay 
y
, 
OuçutAºay
 
™gÀ
,

2311 
boﬁ
 
™gÀInDegªes
=
Ál£
);

2313 
CV_EXPORTS_W
 
	`magnôude
(
I≈utAºay
 
x
, I≈utAºay 
y
, 
OuçutAºay
 
magnôude
);

2315 
CV_EXPORTS_W
 
boﬁ
 
	`checkR™ge
(
I≈utAºay
 
a
, boﬁ 
quõt
=
åue
, 
CV_OUT
 
Poöt
* 
pos
=0,

2316 
möVÆ
=-
DBL_MAX
, 
maxVÆ
=DBL_MAX);

2318 
CV_EXPORTS_W
 
	`∑tchNaNs
(
I≈utOuçutAºay
 
a
, 
vÆ
=0);

2321 
CV_EXPORTS_W
 
	`gemm
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
, 
Æpha
,

2322 
I≈utAºay
 
§c3
, 
gamma
, 
OuçutAºay
 
d°
, 
Êags
=0);

2324 
CV_EXPORTS_W
 
	`mulTøn•o£d
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
boﬁ
 
aTa
,

2325 
I≈utAºay
 
dñè
=
	`noAºay
(),

2326 
sˇÀ
=1, 
dty≥
=-1 );

2328 
CV_EXPORTS_W
 
	`å™•o£
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
);

2330 
CV_EXPORTS_W
 
	`å™sf‹m
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
m
 );

2332 
CV_EXPORTS_W
 
	`≥r•e˘iveTønsf‹m
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
m
 );

2335 
CV_EXPORTS_W
 
	`com∂ëeSymm
(
I≈utOuçutAºay
 
mtx
, 
boﬁ
 
lowîToUµî
=
Ál£
);

2337 
CV_EXPORTS_W
 
	`£tIdítôy
(
I≈utOuçutAºay
 
mtx
, c⁄° 
Sˇœr
& 
s
=
	`Sˇœr
(1));

2339 
CV_EXPORTS_W
 
	`dëîmö™t
(
I≈utAºay
 
mtx
);

2341 
CV_EXPORTS_W
 
Sˇœr
 
	`åa˚
(
I≈utAºay
 
mtx
);

2343 
CV_EXPORTS_W
 
	`övît
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=
DECOMP_LU
);

2345 
CV_EXPORTS_W
 
boﬁ
 
	`sﬁve
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

2346 
OuçutAºay
 
d°
, 
Êags
=
DECOMP_LU
);

2350 
SORT_EVERY_ROW
=0,

2351 
SORT_EVERY_COLUMN
=1,

2352 
SORT_ASCENDING
=0,

2353 
SORT_DESCENDING
=16

2354 
	}
};

2357 
CV_EXPORTS_W
 
s‹t
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
);

2359 
CV_EXPORTS_W
 
s‹tIdx
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
);

2361 
CV_EXPORTS_W
 
sﬁveCubic
(
I≈utAºay
 
c€ffs
, 
OuçutAºay
 
roŸs
);

2363 
CV_EXPORTS_W
 
sﬁvePﬁy
(
I≈utAºay
 
c€ffs
, 
OuçutAºay
 
roŸs
, 
maxIãrs
=300);

2365 
CV_EXPORTS
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, 
OuçutAºay
 
eigívÆues
, 
lowödex
=-1,

2366 
highödex
=-1);

2368 
CV_EXPORTS
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, 
OuçutAºay
 
eigívÆues
,

2369 
OuçutAºay
 
eigíve˘‹s
,

2370 
lowödex
=-1, 
highödex
=-1);

2371 
CV_EXPORTS_W
 
boﬁ
 
eigí
(
I≈utAºay
 
§c
, boﬁ 
compuãEigíve˘‹s
,

2372 
OuçutAºay
 
eigívÆues
, OuçutAºay 
eigíve˘‹s
);

2376 
	gCOVAR_SCRAMBLED
=0,

2377 
	gCOVAR_NORMAL
=1,

2378 
	gCOVAR_USE_AVG
=2,

2379 
	gCOVAR_SCALE
=4,

2380 
	gCOVAR_ROWS
=8,

2381 
	gCOVAR_COLS
=16

2385 
CV_EXPORTS
 
ˇlcCov¨M©rix
–c⁄° 
M©
* 
ßm∂es
, 
nßm∂es
, M©& 
cov¨
, M©& 
món
,

2386 
Êags
, 
˘y≥
=
CV_64F
);

2388 
CV_EXPORTS_W
 
ˇlcCov¨M©rix
–
I≈utAºay
 
ßm∂es
, 
OuçutAºay
 
cov¨
,

2389 
OuçutAºay
 
món
, 
Êags
, 
˘y≥
=
CV_64F
);

2445 ˛as†
	cCV_EXPORTS
 
	gPCA


2447 
	gpublic
:

2449 
PCA
();

2451 
PCA
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
maxComp⁄íts
=0);

2452 
PCA
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
ªèöedV¨ün˚
);

2454 
	gPCA
& 
›î©‹
()(
I≈utAºay
 
	gd©a
, I≈utAºay 
	gmón
, 
	gÊags
, 
	gmaxComp⁄íts
=0);

2455 
	gPCA
& 
compuãV¨
(
I≈utAºay
 
d©a
, I≈utAºay 
món
, 
Êags
, 
ªèöedV¨ün˚
);

2457 
M©
 
¥oje˘
(
I≈utAºay
 
vec
) const;

2459 
¥oje˘
(
I≈utAºay
 
vec
, 
OuçutAºay
 
ªsu…
) const;

2461 
M©
 
backProje˘
(
I≈utAºay
 
vec
) const;

2463 
backProje˘
(
I≈utAºay
 
vec
, 
OuçutAºay
 
ªsu…
) const;

2465 
M©
 
	geigíve˘‹s
;

2466 
M©
 
	geigívÆues
;

2467 
M©
 
	gmón
;

2470 
CV_EXPORTS_W
 
PCACompuã
(
I≈utAºay
 
d©a
, 
CV_OUT
 
I≈utOuçutAºay
 
món
,

2471 
OuçutAºay
 
eigíve˘‹s
, 
maxComp⁄íts
=0);

2473 
CV_EXPORTS_W
 
PCACompuãV¨
(
I≈utAºay
 
d©a
, 
CV_OUT
 
I≈utOuçutAºay
 
món
,

2474 
OuçutAºay
 
eigíve˘‹s
, 
ªèöedV¨ün˚
);

2476 
CV_EXPORTS_W
 
PCAProje˘
(
I≈utAºay
 
d©a
, I≈utAºay 
món
,

2477 
I≈utAºay
 
eigíve˘‹s
, 
OuçutAºay
 
ªsu…
);

2479 
CV_EXPORTS_W
 
PCABackProje˘
(
I≈utAºay
 
d©a
, I≈utAºay 
món
,

2480 
I≈utAºay
 
eigíve˘‹s
, 
OuçutAºay
 
ªsu…
);

2496 ˛as†
	cCV_EXPORTS
 
	gSVD


2498 
	gpublic
:

2499 íum { 
MODIFY_A
=1, 
	gNO_UV
=2, 
	gFULL_UV
=4 };

2501 
SVD
();

2503 
SVD
–
I≈utAºay
 
§c
, 
Êags
=0 );

2505 
	gSVD
& 
›î©‹
 ()–
I≈utAºay
 
	g§c
, 
	gÊags
=0 );

2508 
compuã
–
I≈utAºay
 
§c
, 
OuçutAºay
 
w
,

2509 
OuçutAºay
 
u
, OuçutAºay 
vt
, 
Êags
=0 );

2511 
compuã
–
I≈utAºay
 
§c
, 
OuçutAºay
 
w
, 
Êags
=0 );

2513 
backSub°
–
I≈utAºay
 
w
, I≈utAºay 
u
,

2514 
I≈utAºay
 
vt
, I≈utAºay 
rhs
,

2515 
OuçutAºay
 
d°
 );

2517 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
,

2518 
M©x
<
_Tp
, 
nm
, 1>& 
w
, M©x<_Tp, 
m
,Çm>& 
u
, M©x<_Tp, 
n
,Çm>& 
vt
 );

2519 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
,

2520 
M©x
<
_Tp
, 
nm
, 1>& 
w
 );

2521 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
, 
	gnb
> 
backSub°
–c⁄° 
M©x
<
_Tp
, 
nm
, 1>& 
w
,

2522 c⁄° 
M©x
<
_Tp
, 
m
, 
nm
>& 
u
, c⁄° M©x<_Tp, 
n
,Çm>& 
vt
, c⁄° M©x<_Tp, m, 
nb
>& 
rhs
, M©x<_Tp,Ç,Çb>& 
d°
 );

2525 
sﬁveZ
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

2527 
backSub°
–
I≈utAºay
 
rhs
, 
OuçutAºay
 
d°
 ) const;

2529 
M©
 
	gu
, 
	gw
, 
	gvt
;

2533 
CV_EXPORTS_W
 
SVDecomp
–
I≈utAºay
 
§c
, 
CV_OUT
 
OuçutAºay
 
w
,

2534 
CV_OUT
 
OuçutAºay
 
u
, CV_OUT OuçutAºay 
vt
, 
Êags
=0 );

2537 
CV_EXPORTS_W
 
SVBackSub°
–
I≈utAºay
 
w
, I≈utAºay 
u
, I≈utAºay 
vt
,

2538 
I≈utAºay
 
rhs
, 
CV_OUT
 
OuçutAºay
 
d°
 );

2541 
CV_EXPORTS_W
 
MahÆ™obis
(
I≈utAºay
 
v1
, I≈utAºay 
v2
, I≈utAºay 
icov¨
);

2543 
CV_EXPORTS
 
MahÆ⁄obis
(
I≈utAºay
 
v1
, I≈utAºay 
v2
, I≈utAºay 
icov¨
);

2546 
CV_EXPORTS_W
 
d·
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0, 
n⁄zîoRows
=0);

2548 
CV_EXPORTS_W
 
id·
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0, 
n⁄zîoRows
=0);

2550 
CV_EXPORTS_W
 
d˘
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0);

2552 
CV_EXPORTS_W
 
id˘
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Êags
=0);

2554 
CV_EXPORTS_W
 
mulS≥˘rums
(
I≈utAºay
 
a
, I≈utAºay 
b
, 
OuçutAºay
 
c
,

2555 
Êags
, 
boﬁ
 
c⁄jB
=
Ál£
);

2557 
CV_EXPORTS_W
 
gëO±imÆDFTSize
(
vecsize
);

2564 
	gKMEANS_RANDOM_CENTERS
=0,

2565 
	gKMEANS_PP_CENTERS
=2,

2566 
	gKMEANS_USE_INITIAL_LABELS
=1

2569 
CV_EXPORTS_W
 
kmóns
–
I≈utAºay
 
d©a
, 
K
, 
CV_OUT
 
I≈utOuçutAºay
 
be°Labñs
,

2570 
TîmCrôîü
 
¸ôîü
, 
©ãm±s
,

2571 
Êags
, 
OuçutAºay
 
˚¡îs
=
noAºay
() );

2574 
CV_EXPORTS
 
	gRNG
& 
theRNG
();

2577 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	$øndu
(Ë{  (
_Tp
)
	`theRNG
(); 
	}
}

2580 
CV_EXPORTS_W
 
øndu
(
I≈utOuçutAºay
 
d°
, 
I≈utAºay
 
low
, I≈utAºay 
high
);

2583 
CV_EXPORTS_W
 
øndn
(
I≈utOuçutAºay
 
d°
, 
I≈utAºay
 
món
, I≈utAºay 
°ddev
);

2586 
CV_EXPORTS
 
øndShufÊe
(
I≈utOuçutAºay
 
d°
, 
ôîFa˘‹
=1., 
RNG
* 
∫g
=0);

2587 
	$CV_EXPORTS_AS
(
øndShufÊe
Ë
	`øndShufÊe_
(
I≈utOuçutAºay
 
d°
, 
ôîFa˘‹
=1.);

2590 
CV_EXPORTS_W
 
	`löe
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2591 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0);

2594 
CV_EXPORTS_W
 
	`ª˘™gÀ
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
,

2595 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2596 
löeTy≥
=8, 
shi·
=0);

2599 
CV_EXPORTS
 
	`ª˘™gÀ
(
CV_IN_OUT
 
M©
& 
img
, 
Re˘
 
ªc
,

2600 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2601 
löeTy≥
=8, 
shi·
=0);

2604 
CV_EXPORTS_W
 
	`cú˛e
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
˚¡î
, 
ødius
,

2605 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2606 
löeTy≥
=8, 
shi·
=0);

2609 
CV_EXPORTS_W
 
	`ñlù£
(
CV_IN_OUT
 
M©
& 
img
, 
Poöt
 
˚¡î
, 
Size
 
axes
,

2610 
™gÀ
, 
°¨tAngÀ
, 
ídAngÀ
,

2611 c⁄° 
Sˇœr
& 
cﬁ‹
, 
thick√ss
=1,

2612 
löeTy≥
=8, 
shi·
=0);

2615 
CV_EXPORTS_W
 
	`ñlù£
(
CV_IN_OUT
 
M©
& 
img
, c⁄° 
RŸ©edRe˘
& 
box
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2616 
thick√ss
=1, 
löeTy≥
=8);

2619 
CV_EXPORTS
 
	`fûlC⁄vexPﬁy
(
M©
& 
img
, c⁄° 
Poöt
* 
±s
, 
≈ts
,

2620 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8,

2621 
shi·
=0);

2622 
CV_EXPORTS_W
 
	`fûlC⁄vexPﬁy
(
I≈utOuçutAºay
 
img
, 
I≈utAºay
 
poöts
,

2623 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8,

2624 
shi·
=0);

2627 
CV_EXPORTS
 
	`fûlPﬁy
(
M©
& 
img
, c⁄° 
Poöt
** 
±s
,

2628 c⁄° * 
≈ts
, 
nc⁄tours
,

2629 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8, 
shi·
=0,

2630 
Poöt
 
off£t
=
	`Poöt
() );

2632 
CV_EXPORTS_W
 
	`fûlPﬁy
(
I≈utOuçutAºay
 
img
, 
I≈utAºayOfAºays
 
±s
,

2633 c⁄° 
Sˇœr
& 
cﬁ‹
, 
löeTy≥
=8, 
shi·
=0,

2634 
Poöt
 
off£t
=
	`Poöt
() );

2637 
CV_EXPORTS
 
	`pﬁylöes
(
M©
& 
img
, c⁄° 
Poöt
** 
±s
, c⁄° * 
≈ts
,

2638 
nc⁄tours
, 
boﬁ
 
isClo£d
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2639 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0 );

2641 
CV_EXPORTS_W
 
	`pﬁylöes
(
I≈utOuçutAºay
 
img
, 
I≈utAºayOfAºays
 
±s
,

2642 
boﬁ
 
isClo£d
, c⁄° 
Sˇœr
& 
cﬁ‹
,

2643 
thick√ss
=1, 
löeTy≥
=8, 
shi·
=0 );

2646 
CV_EXPORTS
 
boﬁ
 
	`˛ùLöe
(
Size
 
imgSize
, 
CV_IN_OUT
 
Poöt
& 
±1
, CV_IN_OUT Poöt& 
±2
);

2649 
CV_EXPORTS_W
 
boﬁ
 
	`˛ùLöe
(
Re˘
 
imgRe˘
, 
CV_OUT
 
CV_IN_OUT
 
Poöt
& 
±1
, CV_OUT CV_IN_OUT Poöt& 
±2
);

2657 ˛as†
	cCV_EXPORTS
 
LöeIãøt‹


2659 
public
:

2661 
	`LöeIãøt‹
–c⁄° 
M©
& 
img
, 
Poöt
 
±1
, Poöà
±2
,

2662 
c⁄√˘ivôy
=8, 
boﬁ
 
À·ToRight
=
Ál£
 );

2664 
uch¨
* 
›î©‹
 *();

2666 
LöeIãøt‹
& 
›î©‹
 ++();

2668 
LöeIãøt‹
 
›î©‹
 ++();

2670 
Poöt
 
	`pos
() const;

2672 
uch¨
* 
±r
;

2673 c⁄° 
uch¨
* 
±r0
;

2674 
°ï
, 
ñemSize
;

2675 
îr
, 
cou¡
;

2676 
möusDñè
, 
∂usDñè
;

2677 
möusSãp
, 
∂usSãp
;

2678 
	}
};

2681 
CV_EXPORTS_W
 
ñlù£2Pﬁy
–
Poöt
 
˚¡î
, 
Size
 
axes
, 
™gÀ
,

2682 
¨cSèπ
, 
¨cEnd
, 
dñè
,

2683 
CV_OUT
 
ve˘‹
<
Poöt
>& 
±s
 );

2687 
	gFONT_HERSHEY_SIMPLEX
 = 0,

2688 
	gFONT_HERSHEY_PLAIN
 = 1,

2689 
	gFONT_HERSHEY_DUPLEX
 = 2,

2690 
	gFONT_HERSHEY_COMPLEX
 = 3,

2691 
	gFONT_HERSHEY_TRIPLEX
 = 4,

2692 
	gFONT_HERSHEY_COMPLEX_SMALL
 = 5,

2693 
	gFONT_HERSHEY_SCRIPT_SIMPLEX
 = 6,

2694 
	gFONT_HERSHEY_SCRIPT_COMPLEX
 = 7,

2695 
	gFONT_ITALIC
 = 16

2699 
CV_EXPORTS_W
 
putText
–
M©
& 
img
, c⁄° 
°rög
& 
ãxt
, 
Poöt
 
‹g
,

2700 
f⁄tFa˚
, 
f⁄tSˇÀ
, 
Sˇœr
 
cﬁ‹
,

2701 
thick√ss
=1, 
löeTy≥
=8,

2702 
boﬁ
 
bŸtomLe·Origö
=
Ál£
 );

2705 
CV_EXPORTS_W
 
Size
 
gëTextSize
(c⁄° 
°rög
& 
ãxt
, 
f⁄tFa˚
,

2706 
f⁄tSˇÀ
, 
thick√ss
,

2707 
CV_OUT
 * 
ba£Löe
);

2756 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cM©_
 : 
public
 
M©


2758 
public
:

2759 
_Tp
 
	tvÆue_ty≥
;

2760 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tch™√l_ty≥
 channel_type;

2761 
	gM©Iãøt‹_
<
	t_Tp
> 
	tôî©‹
;

2762 
	gM©C⁄°Iãøt‹_
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

2765 
M©_
();

2767 
M©_
(
_rows
, 
_cﬁs
);

2769 
M©_
(
_rows
, 
_cﬁs
, c⁄° 
_Tp
& 
vÆue
);

2771 
ex∂icô
 
M©_
(
Size
 
_size
);

2773 
M©_
(
Size
 
_size
, c⁄° 
_Tp
& 
vÆue
);

2775 
M©_
(
_ndims
, c⁄° * 
_sizes
);

2777 
M©_
(
_ndims
, c⁄° * 
_sizes
, c⁄° 
_Tp
& 
vÆue
);

2779 
M©_
(c⁄° 
M©
& 
m
);

2781 
M©_
(c⁄° M©_& 
m
);

2783 
M©_
(
_rows
, 
_cﬁs
, 
_Tp
* 
_d©a
, 
size_t
 
_°ï
=
AUTO_STEP
);

2785 
M©_
(
_ndims
, c⁄° * 
_sizes
, 
_Tp
* 
_d©a
, c⁄° 
size_t
* 
_°ïs
=0);

2787 
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
& 
rowR™ge
, c⁄° R™ge& 
cﬁR™ge
=R™ge::
Æl
());

2789 
M©_
(c⁄° M©_& 
m
, c⁄° 
Re˘
& 
roi
);

2791 
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
* 
ønges
);

2793 
ex∂icô
 
M©_
(c⁄° 
M©Ex¥
& 
e
);

2795 
ex∂icô
 
M©_
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
=
Ál£
);

2796 
	gãm∂©e
<
	gn
> 
ex∂icô
 
M©_
(c⁄° 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
=
åue
);

2797 
	gãm∂©e
<
	gm
, 
	gn
> 
ex∂icô
 
M©_
(c⁄° 
M©x
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
m
, 
n
>& 
mtx
, 
boﬁ
 
c›yD©a
=
åue
);

2798 
ex∂icô
 
M©_
(c⁄° 
Poöt_
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

2799 
ex∂icô
 
M©_
(c⁄° 
Poöt3_
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
=
åue
);

2800 
ex∂icô
 
M©_
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
);

2802 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

2803 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©_
& 
m
);

2805 
	gM©_
& 
	g›î©‹
 = (c⁄° 
_Tp
& 
s
);

2807 
	gM©_
& 
	g›î©‹
 = (c⁄° 
M©Ex¥
& 
e
);

2810 
ôî©‹
 
begö
();

2811 
ôî©‹
 
íd
();

2812 
c⁄°_ôî©‹
 
begö
() const;

2813 
c⁄°_ôî©‹
 
íd
() const;

2816 
¸óã
(
_rows
, 
_cﬁs
);

2818 
¸óã
(
Size
 
_size
);

2820 
¸óã
(
_ndims
, c⁄° * 
_sizes
);

2822 
M©_
 
¸oss
(c⁄° M©_& 
m
) const;

2824 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
›î©‹
 
	gM©_
<T2>() const;

2826 
M©_
 
row
(
y
) const;

2827 
M©_
 
cﬁ
(
x
) const;

2828 
M©_
 
düg
(
d
=0) const;

2829 
M©_
 
˛⁄e
() const;

2832 
size_t
 
ñemSize
() const;

2833 
size_t
 
ñemSize1
() const;

2834 
ty≥
() const;

2835 
dïth
() const;

2836 
ch™√ls
() const;

2837 
size_t
 
°ï1
(
i
=0) const;

2839 
size_t
 
°ïT
(
i
=0) const;

2842 
M©Ex¥
 
zîos
(
rows
, 
cﬁs
);

2843 
M©Ex¥
 
zîos
(
Size
 
size
);

2844 
M©Ex¥
 
zîos
(
_ndims
, c⁄° * 
_sizes
);

2845 
M©Ex¥
 
⁄es
(
rows
, 
cﬁs
);

2846 
M©Ex¥
 
⁄es
(
Size
 
size
);

2847 
M©Ex¥
 
⁄es
(
_ndims
, c⁄° * 
_sizes
);

2848 
M©Ex¥
 
eye
(
rows
, 
cﬁs
);

2849 
M©Ex¥
 
eye
(
Size
 
size
);

2852 
	gM©_
& 
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 );

2853 
M©_
 
›î©‹
()–c⁄° 
	gR™ge
& 
	growR™ge
, c⁄° R™ge& 
	gcﬁR™ge
 ) const;

2854 
M©_
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

2855 
M©_
 
›î©‹
()–c⁄° 
R™ge
* 
	gønges
 ) const;

2858 
_Tp
* 
	g›î©‹
 [](
	gy
);

2859 c⁄° 
_Tp
* 
	g›î©‹
 [](
	gy
) const;

2862 
	g_Tp
& 
›î©‹
 ()(c⁄° * 
	gidx
);

2864 c⁄° 
	g_Tp
& 
›î©‹
 ()(c⁄° * 
	gidx
) const;

2867 
	gãm∂©e
<
	gn
> 
	g_Tp
& 
›î©‹
 ()(c⁄° 
	gVec
<,Ç>& 
	gidx
);

2869 
	gãm∂©e
<
	gn
> c⁄° 
	g_Tp
& 
›î©‹
 ()(c⁄° 
	gVec
<,Ç>& 
	gidx
) const;

2872 
	g_Tp
& 
›î©‹
 ()(
	gidx0
);

2874 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
) const;

2876 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
);

2878 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
) const;

2880 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
, 
	gidx2
);

2882 c⁄° 
	g_Tp
& 
›î©‹
 ()(
	gidx0
, 
	gidx1
, 
	gidx2
) const;

2884 
	g_Tp
& 
›î©‹
 ()(
Poöt
 
	g±
);

2885 c⁄° 
	g_Tp
& 
›î©‹
 ()(
Poöt
 
	g±
) const;

2888 
›î©‹
 
	gve˘‹
<
	g_Tp
>() const;

2890 
	gãm∂©e
<
	gn
> 
›î©‹
 
	gVec
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
,Ç>() const;

2892 
	gãm∂©e
<
	gm
, 
	gn
> 
›î©‹
 
	gM©x
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
, m,Ç>() const;

2895 
	gM©_
<
	tuch¨
> 
	tM©1b
;

2896 
	gM©_
<
	tVec2b
> 
	tM©2b
;

2897 
	gM©_
<
	tVec3b
> 
	tM©3b
;

2898 
	gM©_
<
	tVec4b
> 
	tM©4b
;

2900 
	gM©_
<> 
	tM©1s
;

2901 
	gM©_
<
	tVec2s
> 
	tM©2s
;

2902 
	gM©_
<
	tVec3s
> 
	tM©3s
;

2903 
	gM©_
<
	tVec4s
> 
	tM©4s
;

2905 
	gM©_
<
	tush‹t
> 
	tM©1w
;

2906 
	gM©_
<
	tVec2w
> 
	tM©2w
;

2907 
	gM©_
<
	tVec3w
> 
	tM©3w
;

2908 
	gM©_
<
	tVec4w
> 
	tM©4w
;

2910 
	gM©_
<> 
	tM©1i
;

2911 
	gM©_
<
	tVec2i
> 
	tM©2i
;

2912 
	gM©_
<
	tVec3i
> 
	tM©3i
;

2913 
	gM©_
<
	tVec4i
> 
	tM©4i
;

2915 
	gM©_
<> 
	tM©1f
;

2916 
	gM©_
<
	tVec2f
> 
	tM©2f
;

2917 
	gM©_
<
	tVec3f
> 
	tM©3f
;

2918 
	gM©_
<
	tVec4f
> 
	tM©4f
;

2920 
	gM©_
<> 
	tM©1d
;

2921 
	gM©_
<
	tVec2d
> 
	tM©2d
;

2922 
	gM©_
<
	tVec3d
> 
	tM©3d
;

2923 
	gM©_
<
	tVec4d
> 
	tM©4d
;

2927 ˛as†
	cCV_EXPORTS
 
	gM©C⁄°Iãøt‹


2929 
	gpublic
:

2930 
uch¨
* 
	tvÆue_ty≥
;

2931 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

2932 c⁄° 
	tuch¨
** 
	tpoöãr
;

2933 
uch¨
* 
	tª„ªn˚
;

2934 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

2937 
M©C⁄°Iãøt‹
();

2939 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
);

2941 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
_row
, 
_cﬁ
=0);

2943 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
Poöt
 
_±
);

2945 
M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, c⁄° * 
_idx
);

2947 
M©C⁄°Iãøt‹
(c⁄° M©C⁄°Iãøt‹& 
ô
);

2950 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹
& 
ô
);

2952 
uch¨
* 
	g›î©‹
 *() const;

2954 
uch¨
* 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

2957 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

2959 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

2961 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 --();

2963 
M©C⁄°Iãøt‹
 
	g›î©‹
 --();

2965 
	gM©C⁄°Iãøt‹
& 
	g›î©‹
 ++();

2967 
M©C⁄°Iãøt‹
 
	g›î©‹
 ++();

2969 
Poöt
 
pos
() const;

2971 
pos
(* 
_idx
) const;

2972 
±rdiff_t
 
Õos
() const;

2973 
£ek
(
±rdiff_t
 
ofs
, 
boﬁ
 
ªœtive
=
Ál£
);

2974 
£ek
(c⁄° * 
_idx
, 
boﬁ
 
ªœtive
=
Ál£
);

2976 c⁄° 
M©
* 
	gm
;

2977 
size_t
 
	gñemSize
;

2978 
uch¨
* 
	g±r
;

2979 
uch¨
* 
	g¶i˚Sèπ
;

2980 
uch¨
* 
	g¶i˚End
;

2987 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

2988 ˛as†
	cM©C⁄°Iãøt‹_
 : 
public
 
M©C⁄°Iãøt‹


2990 
public
:

2991 
_Tp
 
	tvÆue_ty≥
;

2992 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

2993 c⁄° 
	t_Tp
* 
	tpoöãr
;

2994 c⁄° 
	t_Tp
& 
	tª„ªn˚
;

2995 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

2998 
M©C⁄°Iãøt‹_
();

3000 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
);

3002 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
=0);

3004 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
);

3006 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
);

3008 
M©C⁄°Iãøt‹_
(c⁄° M©C⁄°Iãøt‹_& 
ô
);

3011 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹_
& 
ô
);

3013 
_Tp
 
	g›î©‹
 *() const;

3015 
_Tp
 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

3018 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

3020 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

3022 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 --();

3024 
M©C⁄°Iãøt‹_
 
	g›î©‹
 --();

3026 
	gM©C⁄°Iãøt‹_
& 
	g›î©‹
 ++();

3028 
M©C⁄°Iãøt‹_
 
	g›î©‹
 ++();

3030 
Poöt
 
pos
() const;

3038 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3039 
˛ass
 
	gM©Iãøt‹_
 : 
public
 
M©C⁄°Iãøt‹_
<
_Tp
>

3041 
public
:

3042 
_Tp
* 
	tpoöãr
;

3043 
	g_Tp
& 
	tª„ªn˚
;

3044 
	g°d
::
	tøndom_ac˚ss_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3047 
M©Iãøt‹_
();

3049 
M©Iãøt‹_
(
M©_
<
_Tp
>* 
_m
);

3051 
M©Iãøt‹_
(
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
=0);

3053 
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
);

3055 
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
);

3057 
M©Iãøt‹_
(c⁄° M©Iãøt‹_& 
ô
);

3059 
	gM©Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
M©Iãøt‹_
<
_Tp
>& 
ô
 );

3062 
	g_Tp
& 
	g›î©‹
 *() const;

3064 
	g_Tp
& 
	g›î©‹
 [](
±rdiff_t
 
	gi
) const;

3067 
	gM©Iãøt‹_
& 
	g›î©‹
 +(
±rdiff_t
 
ofs
);

3069 
	gM©Iãøt‹_
& 
	g›î©‹
 -(
±rdiff_t
 
ofs
);

3071 
	gM©Iãøt‹_
& 
	g›î©‹
 --();

3073 
M©Iãøt‹_
 
	g›î©‹
 --();

3075 
	gM©Iãøt‹_
& 
	g›î©‹
 ++();

3077 
M©Iãøt‹_
 
	g›î©‹
 ++();

3080 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gM©Op_Iãr_
;

3095 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cM©CommaInôülizî_


3097 
	gpublic
:

3099 
M©CommaInôülizî_
(
M©_
<
_Tp
>* 
_m
);

3101 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gM©CommaInôülizî_
<
	g_Tp
>& 
	g›î©‹
 , (
T2
 
	gv
);

3103 
	gM©_
<
	g_Tp
> 
	g›î©‹
 *() const;

3104 
›î©‹
 
	gM©_
<
	g_Tp
>() const;

3105 
	g¥Ÿe˘ed
:

3106 
M©Iãøt‹_
<
_Tp
> 
ô
;

3110 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> cœs†
	cM©xCommaInôülizî


3112 
	gpublic
:

3113 
M©xCommaInôülizî
(
M©x
<
_Tp
, 
m
, 
n
>* 
_mtx
);

3114 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 , (
T2
 
	gvÆ
);

3115 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 *() const;

3117 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>* 
	gd°
;

3118 
	gidx
;

3121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
˛ass
 
	gVecCommaInôülizî
 : 
public
 
M©xCommaInôülizî
<
_Tp
, m, 1>

3123 
	gpublic
:

3124 
VecCommaInôülizî
(
Vec
<
_Tp
, 
m
>* 
_vec
);

3125 
	gãm∂©e
<
ty≥«me
 
	gT2
> 
	gVecCommaInôülizî
<
	g_Tp
, 
	gm
>& 
	g›î©‹
 , (
T2
 
	gvÆ
);

3126 
	gVec
<
	g_Tp
, 
	gm
> 
	g›î©‹
 *() const;

3156 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
=4096/(
_Tp
)+8> cœs†
	cAutoBuf„r


3158 
public
:

3159 
_Tp
 
	tvÆue_ty≥
;

3160 íum { 
	gbuf„r_∑ddög
 = ()((16 + (
_Tp
) - 1)/(_Tp)) };

3163 
AutoBuf„r
();

3165 
AutoBuf„r
(
size_t
 
_size
);

3167 ~
AutoBuf„r
();

3170 
Æloˇã
(
size_t
 
_size
);

3172 
dóŒoˇã
();

3174 
›î©‹
 
	g_Tp
* ();

3176 
›î©‹
 c⁄° 
	g_Tp
* () const;

3178 
	g¥Ÿe˘ed
:

3180 
_Tp
* 
±r
;

3182 
size_t
 
	gsize
;

3184 
_Tp
 
	gbuf
[
fixed_size
+
buf„r_∑ddög
];

3239 ˛as†
	cCV_EXPORTS
 
	gNAryM©Iãøt‹


3241 
	gpublic
:

3243 
NAryM©Iãøt‹
();

3245 
NAryM©Iãøt‹
(c⁄° 
M©
** 
¨øys
, 
uch¨
** 
±rs
, 
«ºays
=-1);

3247 
NAryM©Iãøt‹
(c⁄° 
M©
** 
¨øys
, M©* 
∂™es
, 
«ºays
=-1);

3249 
öô
(c⁄° 
M©
** 
¨øys
, M©* 
∂™es
, 
uch¨
** 
±rs
, 
«ºays
=-1);

3252 
	gNAryM©Iãøt‹
& 
	g›î©‹
 ++();

3254 
NAryM©Iãøt‹
 
	g›î©‹
 ++();

3257 c⁄° 
M©
** 
	g¨øys
;

3259 
M©
* 
	g∂™es
;

3261 
uch¨
** 
	g±rs
;

3263 
	g«ºays
;

3265 
size_t
 
	g≈œ√s
;

3267 
size_t
 
	gsize
;

3268 
	g¥Ÿe˘ed
:

3269 
ôîdïth
;

3270 
size_t
 
	gidx
;

3275 (*
	tC⁄vîtD©a
)(c⁄° * 
	t‰om
, * 
	tto
, 
	t˙
);

3276 (*
	tC⁄vîtSˇÀD©a
)(c⁄° * 
	t‰om
, * 
	tto
, 
	t˙
, 
	tÆpha
, 
	tbëa
);

3279 
CV_EXPORTS
 
C⁄vîtD©a
 
	`gëC⁄vîtEÀm
(
‰omTy≥
, 
toTy≥
);

3281 
CV_EXPORTS
 
C⁄vîtSˇÀD©a
 
	`gëC⁄vîtSˇÀEÀm
(
‰omTy≥
, 
toTy≥
);

3286 
˛ass
 
S∑r£M©Iãøt‹
;

3287 
˛ass
 
S∑r£M©C⁄°Iãøt‹
;

3288 
ãm∂©e
<
ty≥«me
 
_Tp
> 
˛ass
 
S∑r£M©Iãøt‹_
;

3289 
ãm∂©e
<
ty≥«me
 
_Tp
> 
˛ass
 
S∑r£M©C⁄°Iãøt‹_
;

3376 ˛as†
	cCV_EXPORTS
 
S∑r£M©


3378 
public
:

3379 
S∑r£M©Iãøt‹
 
	tôî©‹
;

3380 
S∑r£M©C⁄°Iãøt‹
 
	tc⁄°_ôî©‹
;

3383 
CV_EXPORTS
 
Hdr


3385 
	`Hdr
(
_dims
, c⁄° * 
_sizes
, 
_ty≥
);

3386 
	`˛ór
();

3387 
_Atomic_w‹d
 
ªfcou¡
;

3388 
dims
;

3389 
vÆueOff£t
;

3390 
size_t
 
nodeSize
;

3391 
size_t
 
nodeCou¡
;

3392 
size_t
 
‰ìLi°
;

3393 
ve˘‹
<
uch¨
> 
poﬁ
;

3394 
ve˘‹
<
size_t
> 
hashèb
;

3395 
size
[
CV_MAX_DIM
];

3399 
CV_EXPORTS
 
Node


3402 
size_t
 
hashvÆ
;

3404 
size_t
 
√xt
;

3406 
idx
[
CV_MAX_DIM
];

3410 
	`S∑r£M©
();

3412 
	`S∑r£M©
(
dims
, c⁄° * 
_sizes
, 
_ty≥
);

3414 
	`S∑r£M©
(c⁄° 
S∑r£M©
& 
m
);

3419 
ex∂icô
 
	`S∑r£M©
(c⁄° 
M©
& 
m
);

3421 
	`S∑r£M©
(c⁄° 
CvS∑r£M©
* 
m
);

3423 ~
	`S∑r£M©
();

3426 
S∑r£M©
& 
›î©‹
 = (c⁄° S∑r£M©& 
m
);

3428 
S∑r£M©
& 
›î©‹
 = (c⁄° 
M©
& 
m
);

3431 
S∑r£M©
 
	`˛⁄e
() const;

3434 
	`c›yTo
–
S∑r£M©
& 
m
 ) const;

3436 
	`c›yTo
–
M©
& 
m
 ) const;

3438 
	`c⁄vîtTo
–
S∑r£M©
& 
m
, 
πy≥
, 
Æpha
=1 ) const;

3445 
	`c⁄vîtTo
–
M©
& 
m
, 
πy≥
, 
Æpha
=1, 
bëa
=0 ) const;

3448 
	`assignTo
–
S∑r£M©
& 
m
, 
ty≥
=-1 ) const;

3456 
	`¸óã
(
dims
, c⁄° * 
_sizes
, 
_ty≥
);

3458 
	`˛ór
();

3460 
	`addªf
();

3462 
	`ªÀa£
();

3465 
›î©‹
 
CvS∑r£M©
*() const;

3467 
size_t
 
	`ñemSize
() const;

3469 
size_t
 
	`ñemSize1
() const;

3472 
	`ty≥
() const;

3474 
	`dïth
() const;

3476 
	`ch™√ls
() const;

3479 c⁄° * 
	`size
() const;

3481 
	`size
(
i
) const;

3483 
	`dims
() const;

3485 
size_t
 
	`nzcou¡
() const;

3488 
size_t
 
	`hash
(
i0
) const;

3490 
size_t
 
	`hash
(
i0
, 
i1
) const;

3492 
size_t
 
	`hash
(
i0
, 
i1
, 
i2
) const;

3494 
size_t
 
	`hash
(c⁄° * 
idx
) const;

3511 
uch¨
* 
	`±r
(
i0
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3513 
uch¨
* 
	`±r
(
i0
, 
i1
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3515 
uch¨
* 
	`±r
(
i0
, 
i1
, 
i2
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3517 
uch¨
* 
	`±r
(c⁄° * 
idx
, 
boﬁ
 
¸óãMissög
, 
size_t
* 
hashvÆ
=0);

3529 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
size_t
* 
hashvÆ
=0);

3531 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3533 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3535 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3551 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
size_t
* 
hashvÆ
=0) const;

3553 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0) const;

3555 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0) const;

3557 
ãm∂©e
<
ty≥«me
 
_Tp
> _T∞
	`vÆue
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0) const;

3569 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
size_t
* 
hashvÆ
=0) const;

3571 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0) const;

3573 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0) const;

3575 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp* 
	`föd
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0) const;

3578 
	`îa£
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3580 
	`îa£
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3582 
	`îa£
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3589 
S∑r£M©Iãøt‹
 
	`begö
();

3591 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©Iãøt‹_
<_Tp> 
	`begö
();

3593 
S∑r£M©C⁄°Iãøt‹
 
	`begö
() const;

3595 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©C⁄°Iãøt‹_
<_Tp> 
	`begö
() const;

3601 
S∑r£M©Iãøt‹
 
	`íd
();

3603 
S∑r£M©C⁄°Iãøt‹
 
	`íd
() const;

3605 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©Iãøt‹_
<_Tp> 
	`íd
();

3607 
ãm∂©e
<
ty≥«me
 
_Tp
> 
S∑r£M©C⁄°Iãøt‹_
<_Tp> 
	`íd
() const;

3610 
ãm∂©e
<
ty≥«me
 
_Tp
> _Tp& 
	`vÆue
(
Node
* 
n
);

3612 
ãm∂©e
<
ty≥«me
 
_Tp
> c⁄° _Tp& 
	`vÆue
(c⁄° 
Node
* 
n
) const;

3615 
Node
* 
	`node
(
size_t
 
nidx
);

3616 c⁄° 
Node
* 
	`node
(
size_t
 
nidx
) const;

3618 
uch¨
* 
	`√wNode
(c⁄° * 
idx
, 
size_t
 
hashvÆ
);

3619 
	`ªmoveNode
(
size_t
 
hidx
, size_à
nidx
, size_à
¥evidx
);

3620 
	`ªsizeHashTab
(
size_t
 
√wsize
);

3622 íum { 
MAGIC_VAL
=0x42FD0000, 
MAX_DIM
=
CV_MAX_DIM
, 
HASH_SCALE
=0x5bd1e995, 
HASH_BIT
=0x80000000 };

3624 
Êags
;

3625 
Hdr
* 
hdr
;

3626 
	}
};

3629 
CV_EXPORTS
 
möMaxLoc
(c⁄° 
S∑r£M©
& 
a
, * 
möVÆ
,

3630 * 
maxVÆ
, * 
möIdx
=0, * 
maxIdx
=0);

3632 
CV_EXPORTS
 
n‹m
–c⁄° 
S∑r£M©
& 
§c
, 
n‹mTy≥
 );

3634 
CV_EXPORTS
 
n‹mÆize
–c⁄° 
S∑r£M©
& 
§c
, S∑r£M©& 
d°
, 
Æpha
, 
n‹mTy≥
 );

3648 ˛as†
	cCV_EXPORTS
 
	gS∑r£M©C⁄°Iãøt‹


3650 
	gpublic
:

3652 
S∑r£M©C⁄°Iãøt‹
();

3654 
S∑r£M©C⁄°Iãøt‹
(c⁄° 
S∑r£M©
* 
_m
);

3656 
S∑r£M©C⁄°Iãøt‹
(c⁄° S∑r£M©C⁄°Iãøt‹& 
ô
);

3659 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
);

3662 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> c⁄° _Tp& 
vÆue
() const;

3664 c⁄° 
	gS∑r£M©
::
Node
* 
node
() const;

3667 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 --();

3669 
S∑r£M©C⁄°Iãøt‹
 
	g›î©‹
 --();

3671 
	gS∑r£M©C⁄°Iãøt‹
& 
	g›î©‹
 ++();

3673 
S∑r£M©C⁄°Iãøt‹
 
	g›î©‹
 ++();

3676 
£ekEnd
();

3678 c⁄° 
S∑r£M©
* 
	gm
;

3679 
size_t
 
	ghashidx
;

3680 
uch¨
* 
	g±r
;

3689 ˛as†
	cCV_EXPORTS
 
	gS∑r£M©Iãøt‹
 : 
public
 
S∑r£M©C⁄°Iãøt‹


3691 
public
:

3693 
S∑r£M©Iãøt‹
();

3695 
S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
);

3697 
S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
, c⁄° * 
idx
);

3699 
S∑r£M©Iãøt‹
(c⁄° S∑r£M©Iãøt‹& 
ô
);

3702 
	gS∑r£M©Iãøt‹
& 
	g›î©‹
 = (c⁄° 
S∑r£M©Iãøt‹
& 
ô
);

3704 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> _Tp& 
vÆue
() const;

3706 
	gS∑r£M©
::
Node
* 
node
() const;

3709 
	gS∑r£M©Iãøt‹
& 
	g›î©‹
 ++();

3711 
S∑r£M©Iãøt‹
 
	g›î©‹
 ++();

3727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cS∑r£M©_
 : 
public
 
S∑r£M©


3729 
public
:

3730 
S∑r£M©Iãøt‹_
<
	t_Tp
> 
	tôî©‹
;

3731 
	gS∑r£M©C⁄°Iãøt‹_
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

3734 
S∑r£M©_
();

3736 
S∑r£M©_
(
dims
, c⁄° * 
_sizes
);

3738 
S∑r£M©_
(c⁄° 
S∑r£M©
& 
m
);

3740 
S∑r£M©_
(c⁄° S∑r£M©_& 
m
);

3742 
S∑r£M©_
(c⁄° 
M©
& 
m
);

3744 
S∑r£M©_
(c⁄° 
CvS∑r£M©
* 
m
);

3746 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©
& 
m
);

3748 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©_
& 
m
);

3750 
	gS∑r£M©_
& 
	g›î©‹
 = (c⁄° 
M©
& 
m
);

3753 
S∑r£M©_
 
˛⁄e
() const;

3755 
¸óã
(
dims
, c⁄° * 
_sizes
);

3757 
›î©‹
 
	gCvS∑r£M©
*() const;

3760 
ty≥
() const;

3762 
dïth
() const;

3764 
ch™√ls
() const;

3767 
	g_Tp
& 
ªf
(
i0
, 
size_t
* 
hashvÆ
=0);

3769 
	g_Tp
& 
ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
=0);

3771 
	g_Tp
& 
ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
=0);

3773 
	g_Tp
& 
ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
=0);

3776 
_Tp
 
›î©‹
()(
	gi0
, 
size_t
* 
	ghashvÆ
=0) const;

3778 
_Tp
 
›î©‹
()(
	gi0
, 
	gi1
, 
size_t
* 
	ghashvÆ
=0) const;

3780 
_Tp
 
›î©‹
()(
	gi0
, 
	gi1
, 
	gi2
, 
size_t
* 
	ghashvÆ
=0) const;

3782 
_Tp
 
›î©‹
()(c⁄° * 
	gidx
, 
size_t
* 
	ghashvÆ
=0) const;

3785 
	gS∑r£M©Iãøt‹_
<
	g_Tp
> 
begö
();

3787 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
> 
begö
() const;

3789 
	gS∑r£M©Iãøt‹_
<
	g_Tp
> 
íd
();

3791 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
> 
íd
() const;

3801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cS∑r£M©C⁄°Iãøt‹_
 : 
public
 
S∑r£M©C⁄°Iãøt‹


3803 
public
:

3804 
°d
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3807 
S∑r£M©C⁄°Iãøt‹_
();

3809 
S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©_
<
_Tp
>* 
_m
);

3810 
S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©
* 
_m
);

3812 
S∑r£M©C⁄°Iãøt‹_
(c⁄° S∑r£M©C⁄°Iãøt‹_& 
ô
);

3815 
	gS∑r£M©C⁄°Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹_
& 
ô
);

3817 c⁄° 
	g_Tp
& 
	g›î©‹
 *() const;

3820 
	gS∑r£M©C⁄°Iãøt‹_
& 
	g›î©‹
 ++();

3822 
S∑r£M©C⁄°Iãøt‹_
 
	g›î©‹
 ++();

3831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gS∑r£M©Iãøt‹_
 : 
public
 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>

3833 
public
:

3834 
°d
::
	tf‹w¨d_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

3837 
S∑r£M©Iãøt‹_
();

3839 
S∑r£M©Iãøt‹_
(
S∑r£M©_
<
_Tp
>* 
_m
);

3840 
S∑r£M©Iãøt‹_
(
S∑r£M©
* 
_m
);

3842 
S∑r£M©Iãøt‹_
(c⁄° S∑r£M©Iãøt‹_& 
ô
);

3845 
	gS∑r£M©Iãøt‹_
& 
	g›î©‹
 = (c⁄° 
S∑r£M©Iãøt‹_
& 
ô
);

3847 
	g_Tp
& 
	g›î©‹
 *() const;

3850 
	gS∑r£M©Iãøt‹_
& 
	g›î©‹
 ++();

3852 
S∑r£M©Iãøt‹_
 
	g›î©‹
 ++();

3881 ˛as†
	cCV_EXPORTS_W
 
	gKDTªe


3883 
	gpublic
:

3887 
	sNode


3889 
Node
(Ë: 
idx
(-1), 
À·
(-1), 
right
(-1), 
bound¨y
(0.f) {}

3890 
Node
(
_idx
, 
_À·
, 
_right
, 
_bound¨y
)

3891 : 
idx
(
_idx
), 
À·
(
_À·
), 
right
(
_right
), 
bound¨y
(
_bound¨y
) {}

3893 
	gidx
;

3895 
	gÀ·
, 
	gright
;

3897 
	gbound¨y
;

3901 
CV_WRAP
 
KDTªe
();

3903 
CV_WRAP
 
KDTªe
(
I≈utAºay
 
poöts
, 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3905 
CV_WRAP
 
KDTªe
(
I≈utAºay
 
poöts
, I≈utAºay 
_œbñs
,

3906 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3908 
CV_WRAP
 
buûd
(
I≈utAºay
 
poöts
, 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3910 
CV_WRAP
 
buûd
(
I≈utAºay
 
poöts
, I≈utAºay 
œbñs
,

3911 
boﬁ
 
c›yAndRe‹dîPoöts
=
Ál£
);

3913 
CV_WRAP
 
födNóª°
(
I≈utAºay
 
vec
, 
K
, 
Emax
,

3914 
OuçutAºay
 
√ighb‹sIdx
,

3915 
OuçutAºay
 
√ighb‹s
=
noAºay
(),

3916 
OuçutAºay
 
di°
=
noAºay
(),

3917 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3919 
CV_WRAP
 
födOπhoR™ge
(
I≈utAºay
 
möBounds
,

3920 
I≈utAºay
 
maxBounds
,

3921 
OuçutAºay
 
√ighb‹sIdx
,

3922 
OuçutAºay
 
√ighb‹s
=
noAºay
(),

3923 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3925 
CV_WRAP
 
gëPoöts
(
I≈utAºay
 
idx
, 
OuçutAºay
 
±s
,

3926 
OuçutAºay
 
œbñs
=
noAºay
()) const;

3928 c⁄° * 
gëPoöt
(
±idx
, * 
œbñ
=0) const;

3930 
CV_WRAP
 
dims
() const;

3932 
	gve˘‹
<
	gNode
> 
	gnodes
;

3933 
CV_PROP
 
M©
 
	gpoöts
;

3934 
CV_PROP
 
	gve˘‹
<> 
	gœbñs
;

3935 
CV_PROP
 
	gmaxDïth
;

3936 
CV_PROP_RW
 
	gn‹mTy≥
;

3941 
˛ass
 
CV_EXPORTS
 
	gFûeNode
;

4040 ˛as†
	cCV_EXPORTS_W
 
	gFûeSt‹age


4042 
	gpublic
:

4046 
READ
=0,

4047 
	gWRITE
=1,

4048 
	gAPPEND
=2,

4049 
	gMEMORY
=4,

4050 
	gFORMAT_MASK
=(7<<3),

4051 
	gFORMAT_AUTO
=0,

4052 
	gFORMAT_XML
=(1<<3),

4053 
	gFORMAT_YAML
=(2<<3)

4057 
	gUNDEFINED
=0,

4058 
	gVALUE_EXPECTED
=1,

4059 
	gNAME_EXPECTED
=2,

4060 
	gINSIDE_MAP
=4

4063 
CV_WRAP
 
FûeSt‹age
();

4065 
CV_WRAP
 
FûeSt‹age
(c⁄° 
°rög
& 
sour˚
, 
Êags
, c⁄° såög& 
ícodög
=string());

4067 
FûeSt‹age
(
CvFûeSt‹age
* 
fs
);

4069 
	gvútuÆ
 ~
FûeSt‹age
();

4072 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
, 
Êags
, c⁄° såög& 
ícodög
=string());

4074 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

4076 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

4078 
CV_WRAP
 
°rög
 
ªÀa£AndGëSåög
();

4081 
CV_WRAP
 
FûeNode
 
gëFú°T›LevñNode
() const;

4083 
CV_WRAP
 
FûeNode
 
roŸ
(
°ªamidx
=0) const;

4085 
FûeNode
 
	g›î©‹
[](c⁄° 
	g°rög
& 
	gnodíame
) const;

4087 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](c⁄° * 
	gnodíame
) const;

4090 
CvFûeSt‹age
* 
	g›î©‹
 *(Ë{  
	gfs
; }

4092 c⁄° 
CvFûeSt‹age
* 
	g›î©‹
 *(Ëc⁄° {  
	gfs
; }

4094 
wrôeRaw
–c⁄° 
°rög
& 
fmt
, c⁄° 
uch¨
* 
vec
, 
size_t
 
Àn
 );

4096 
wrôeObj
–c⁄° 
°rög
& 
«me
, c⁄° * 
obj
 );

4099 
°rög
 
gëDeÁu…Obje˘Name
(c⁄° såög& 
fûíame
);

4101 
	gPå
<
	gCvFûeSt‹age
> 
	gfs
;

4102 
°rög
 
	gñ«me
;

4103 
	gve˘‹
<> 
	g°ru˘s
;

4104 
	g°©e
;

4107 
˛ass
 
CV_EXPORTS
 
	gFûeNodeIãøt‹
;

4119 ˛as†
	cCV_EXPORTS_W_SIMPLE
 
	gFûeNode


4121 
	gpublic
:

4125 
NONE
=0,

4126 
	gINT
=1,

4127 
	gREAL
=2,

4128 
	gFLOAT
=
REAL
,

4129 
	gSTR
=3,

4130 
	gSTRING
=
STR
,

4131 
	gREF
=4,

4132 
	gSEQ
=5,

4133 
	gMAP
=6,

4134 
	gTYPE_MASK
=7,

4135 
	gFLOW
=8,

4136 
	gUSER
=16,

4137 
	gEMPTY
=32,

4138 
	gNAMED
=64

4141 
CV_WRAP
 
FûeNode
();

4143 
FûeNode
(c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
node
);

4145 
FûeNode
(c⁄° FûeNode& 
node
);

4147 
FûeNode
 
	g›î©‹
[](c⁄° 
	g°rög
& 
	gnodíame
) const;

4149 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](c⁄° * 
	gnodíame
) const;

4151 
CV_WRAP
 
FûeNode
 
	g›î©‹
[](
	gi
) const;

4153 
CV_WRAP
 
ty≥
() const;

4156 
CV_WRAP
 
boﬁ
 
em±y
() const;

4158 
CV_WRAP
 
boﬁ
 
isN⁄e
() const;

4160 
CV_WRAP
 
boﬁ
 
isSeq
() const;

4162 
CV_WRAP
 
boﬁ
 
isM≠
() const;

4164 
CV_WRAP
 
boﬁ
 
isI¡
() const;

4166 
CV_WRAP
 
boﬁ
 
isRól
() const;

4168 
CV_WRAP
 
boﬁ
 
isSåög
() const;

4170 
CV_WRAP
 
boﬁ
 
isNamed
() const;

4172 
CV_WRAP
 
°rög
 
«me
() const;

4174 
CV_WRAP
 
size_t
 
size
() const;

4176 
›î©‹
 () const;

4178 
›î©‹
 () const;

4180 
›î©‹
 () const;

4182 
›î©‹
 
°rög
() const;

4185 
CvFûeNode
* 
	g›î©‹
 *();

4187 c⁄° 
CvFûeNode
* 
	g›î©‹
* () const;

4190 
FûeNodeIãøt‹
 
begö
() const;

4192 
FûeNodeIãøt‹
 
íd
() const;

4195 
ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
, 
size_t
 
Àn
 ) const;

4197 * 
ªadObj
() const;

4200 c⁄° 
CvFûeSt‹age
* 
	gfs
;

4201 c⁄° 
CvFûeNode
* 
	gnode
;

4210 ˛as†
	cCV_EXPORTS
 
	gFûeNodeIãøt‹


4212 
	gpublic
:

4214 
FûeNodeIãøt‹
();

4216 
FûeNodeIãøt‹
(c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
node
, 
size_t
 
ofs
=0);

4218 
FûeNodeIãøt‹
(c⁄° FûeNodeIãøt‹& 
ô
);

4220 
FûeNode
 
	g›î©‹
 *() const;

4222 
FûeNode
 
	g›î©‹
 ->() const;

4225 
	gFûeNodeIãøt‹
& 
	g›î©‹
 ++ ();

4227 
FûeNodeIãøt‹
 
	g›î©‹
 ++ ();

4229 
	gFûeNodeIãøt‹
& 
	g›î©‹
 -- ();

4231 
FûeNodeIãøt‹
 
	g›î©‹
 -- ();

4233 
	gFûeNodeIãøt‹
& 
	g›î©‹
 +(
ofs
);

4235 
	gFûeNodeIãøt‹
& 
	g›î©‹
 -(
ofs
);

4238 
	gFûeNodeIãøt‹
& 
ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
,

4239 
size_t
 
maxCou¡
=(size_t)
INT_MAX
 );

4241 c⁄° 
CvFûeSt‹age
* 
	gfs
;

4242 c⁄° 
CvFûeNode
* 
	gc⁄èöî
;

4243 
CvSeqRódî
 
	gªadî
;

4244 
size_t
 
	gªmaöög
;

4249 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gSeqIãøt‹
;

4251 
	gPå
<
	tCvMemSt‹age
> 
	tMemSt‹age
;

4263 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSeq


4265 
	gpublic
:

4266 
SeqIãøt‹
<
	t_Tp
> 
	tôî©‹
;

4267 
	gSeqIãøt‹
<
	t_Tp
> 
	tc⁄°_ôî©‹
;

4270 
Seq
();

4272 
Seq
(c⁄° 
CvSeq
* 
£q
);

4274 
Seq
(
MemSt‹age
& 
°‹age
, 
hódîSize
 = (
CvSeq
));

4276 
	g_Tp
& 
	g›î©‹
 [](
	gidx
);

4278 c⁄° 
	g_Tp
& 
	g›î©‹
[](
	gidx
) const;

4280 
	gSeqIãøt‹
<
	g_Tp
> 
begö
() const;

4282 
	gSeqIãøt‹
<
	g_Tp
> 
íd
() const;

4284 
size_t
 
size
() const;

4286 
ty≥
() const;

4288 
dïth
() const;

4290 
ch™√ls
() const;

4292 
size_t
 
ñemSize
() const;

4294 
size_t
 
ödex
(c⁄° 
_Tp
& 
ñem
) const;

4296 
push_back
(c⁄° 
_Tp
& 
ñem
);

4298 
push_‰⁄t
(c⁄° 
_Tp
& 
ñem
);

4300 
push_back
(c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4302 
push_‰⁄t
(c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4304 
ö£π
(
idx
, c⁄° 
_Tp
& 
ñem
);

4306 
ö£π
(
idx
, c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4308 
ªmove
(
idx
);

4310 
ªmove
(c⁄° 
R™ge
& 
r
);

4313 
	g_Tp
& 
‰⁄t
();

4315 c⁄° 
	g_Tp
& 
‰⁄t
() const;

4317 
	g_Tp
& 
back
();

4319 c⁄° 
	g_Tp
& 
back
() const;

4321 
boﬁ
 
em±y
() const;

4324 
˛ór
();

4326 
p›_‰⁄t
();

4328 
p›_back
();

4330 
p›_‰⁄t
(
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4332 
p›_back
(
_Tp
* 
ñems
, 
size_t
 
cou¡
);

4335 
c›yTo
(
ve˘‹
<
_Tp
>& 
vec
, c⁄° 
R™ge
& 
ønge
=R™ge::
Æl
()) const;

4337 
›î©‹
 
	gve˘‹
<
	g_Tp
>() const;

4339 
CvSeq
* 
	g£q
;

4346 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cSeqIãøt‹
 : 
public
 
CvSeqRódî


4348 
public
:

4350 
SeqIãøt‹
();

4352 
SeqIãøt‹
(c⁄° 
Seq
<
_Tp
>& 
£q
, 
boﬁ
 
£ekEnd
=
Ál£
);

4354 
£ek
(
size_t
 
pos
);

4356 
size_t
 
ãŒ
() const;

4358 
	g_Tp
& 
	g›î©‹
 *();

4360 c⁄° 
	g_Tp
& 
	g›î©‹
 *() const;

4362 
	gSeqIãøt‹
& 
	g›î©‹
 ++();

4364 
SeqIãøt‹
 
	g›î©‹
 ++() const;

4366 
	gSeqIãøt‹
& 
	g›î©‹
 --();

4368 
SeqIãøt‹
 
	g›î©‹
 --() const;

4371 
	gSeqIãøt‹
& 
	g›î©‹
 +=();

4373 
	gSeqIãøt‹
& 
	g›î©‹
 -=();

4377 
	gödex
;

4381 
˛ass
 
CV_EXPORTS
 
	gAlg‹ôhm
;

4382 
˛ass
 
CV_EXPORTS
 
	gAlg‹ôhmInfo
;

4383 
CV_EXPORTS
 
	gAlg‹ôhmInfoD©a
;

4385 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	sP¨amTy≥
 {};

4390 ˛as†
	cCV_EXPORTS_W
 
	gAlg‹ôhm


4392 
	gpublic
:

4393 
Alg‹ôhm
();

4394 
	gvútuÆ
 ~
Alg‹ôhm
();

4395 
°rög
 
«me
() const;

4397 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
gë
(c⁄° 
°rög
& 
«me
) const;

4398 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
gë
(c⁄° * 
«me
) const;

4400 
CV_WRAP
 
gëI¡
(c⁄° 
°rög
& 
«me
) const;

4401 
CV_WRAP
 
gëDoubÀ
(c⁄° 
°rög
& 
«me
) const;

4402 
CV_WRAP
 
boﬁ
 
gëBoﬁ
(c⁄° 
°rög
& 
«me
) const;

4403 
CV_WRAP
 
°rög
 
gëSåög
(c⁄° såög& 
«me
) const;

4404 
CV_WRAP
 
M©
 
gëM©
(c⁄° 
°rög
& 
«me
) const;

4405 
CV_WRAP
 
	gve˘‹
<
	gM©
> 
gëM©Ve˘‹
(c⁄° 
°rög
& 
«me
) const;

4406 
CV_WRAP
 
	gPå
<
	gAlg‹ôhm
> 
gëAlg‹ôhm
(c⁄° 
°rög
& 
«me
) const;

4408 
£t
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4409 
£t
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4410 
£t
(c⁄° 
°rög
& 
«me
, 
boﬁ
 
vÆue
);

4411 
£t
(c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
);

4412 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
);

4413 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4414 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4415 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£t
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4417 
CV_WRAP
 
£tI¡
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4418 
CV_WRAP
 
£tDoubÀ
(c⁄° 
°rög
& 
«me
, 
vÆue
);

4419 
CV_WRAP
 
£tBoﬁ
(c⁄° 
°rög
& 
«me
, 
boﬁ
 
vÆue
);

4420 
CV_WRAP
 
£tSåög
(c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
);

4421 
CV_WRAP
 
£tM©
(c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
);

4422 
CV_WRAP
 
£tM©Ve˘‹
(c⁄° 
°rög
& 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4423 
CV_WRAP
 
£tAlg‹ôhm
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4424 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£tAlg‹ôhm
(c⁄° 
°rög
& 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4426 
£t
(c⁄° * 
«me
, 
vÆue
);

4427 
£t
(c⁄° * 
«me
, 
vÆue
);

4428 
£t
(c⁄° * 
«me
, 
boﬁ
 
vÆue
);

4429 
£t
(c⁄° * 
«me
, c⁄° 
°rög
& 
vÆue
);

4430 
£t
(c⁄° * 
«me
, c⁄° 
M©
& 
vÆue
);

4431 
£t
(c⁄° * 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4432 
£t
(c⁄° * 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4433 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£t
(c⁄° * 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4435 
£tI¡
(c⁄° * 
«me
, 
vÆue
);

4436 
£tDoubÀ
(c⁄° * 
«me
, 
vÆue
);

4437 
£tBoﬁ
(c⁄° * 
«me
, 
boﬁ
 
vÆue
);

4438 
£tSåög
(c⁄° * 
«me
, c⁄° 
°rög
& 
vÆue
);

4439 
£tM©
(c⁄° * 
«me
, c⁄° 
M©
& 
vÆue
);

4440 
£tM©Ve˘‹
(c⁄° * 
«me
, c⁄° 
ve˘‹
<
M©
>& 
vÆue
);

4441 
£tAlg‹ôhm
(c⁄° * 
«me
, c⁄° 
På
<
Alg‹ôhm
>& 
vÆue
);

4442 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
£tAlg‹ôhm
(c⁄° * 
«me
, c⁄° 
På
<
_Tp
>& 
vÆue
);

4444 
CV_WRAP
 
°rög
 
∑ømHñp
(c⁄° såög& 
«me
) const;

4445 
∑ømTy≥
(c⁄° * 
«me
) const;

4446 
CV_WRAP
 
∑ømTy≥
(c⁄° 
°rög
& 
«me
) const;

4447 
CV_WRAP
 
gëP¨ams
(
CV_OUT
 
ve˘‹
<
°rög
>& 
«mes
) const;

4450 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
) const;

4451 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
);

4453 
	gAlg‹ôhm
* (*
	tC⁄°ru˘‹
)();

4454 (
	gAlg‹ôhm
::*
	tGëãr
)() const;

4455 (
	gAlg‹ôhm
::*
	tSëãr
)();

4457 
CV_WRAP
 
gëLi°
(
CV_OUT
 
ve˘‹
<
°rög
>& 
Æg‹ôhms
);

4458 
CV_WRAP
 
	gPå
<
	gAlg‹ôhm
> 
_¸óã
(c⁄° 
°rög
& 
«me
);

4459 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gPå
<_Tp> 
¸óã
(c⁄° 
°rög
& 
«me
);

4461 
vútuÆ
 
Alg‹ôhmInfo
* 
öfo
() const {  0; }

4465 ˛as†
	cCV_EXPORTS
 
	gAlg‹ôhmInfo


4467 
	gpublic
:

4468 
‰õnd
 
˛ass
 
Alg‹ôhm
;

4469 
Alg‹ôhmInfo
(c⁄° 
°rög
& 
«me
, 
Alg‹ôhm
::
C⁄°ru˘‹
 
¸óã
);

4470 ~
Alg‹ôhmInfo
();

4471 
gë
(c⁄° 
Alg‹ôhm
* 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
, * 
vÆue
) const;

4472 
addP¨am_
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
,

4473 * 
vÆue
, 
boﬁ
 
ªadO∆y
,

4474 
Alg‹ôhm
::
Gëãr
 
gëãr
, Alg‹ôhm::
Sëãr
 
£âî
,

4475 c⁄° 
°rög
& 
hñp
=string());

4476 
°rög
 
∑ømHñp
(c⁄° * 
«me
) const;

4477 
∑ømTy≥
(c⁄° * 
«me
) const;

4478 
gëP¨ams
(
ve˘‹
<
°rög
>& 
«mes
) const;

4480 
wrôe
(c⁄° 
Alg‹ôhm
* 
Ægo
, 
FûeSt‹age
& 
fs
) const;

4481 
ªad
(
Alg‹ôhm
* 
Ægo
, c⁄° 
FûeNode
& 
‚
) const;

4482 
°rög
 
«me
() const;

4484 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4485 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4486 (
Alg‹ôhm
::*
gëãr
)()=0,

4487 (
Alg‹ôhm
::*
£âî
)()=0,

4488 c⁄° 
°rög
& 
hñp
=string());

4489 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4490 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4491 (
Alg‹ôhm
::*
gëãr
)()=0,

4492 (
Alg‹ôhm
::*
£âî
)()=0,

4493 c⁄° 
°rög
& 
hñp
=string());

4494 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4495 
boﬁ
& 
vÆue
, boﬁ 
ªadO∆y
=
Ál£
,

4496 (
Alg‹ôhm
::*
gëãr
)()=0,

4497 (
Alg‹ôhm
::*
£âî
)()=0,

4498 c⁄° 
°rög
& 
hñp
=string());

4499 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4500 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4501 (
Alg‹ôhm
::*
gëãr
)()=0,

4502 (
Alg‹ôhm
::*
£âî
)()=0,

4503 c⁄° 
°rög
& 
hñp
=string());

4504 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4505 
°rög
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4506 
°rög
 (
Alg‹ôhm
::*
gëãr
)()=0,

4507 (
Alg‹ôhm
::*
£âî
)(c⁄° 
°rög
&)=0,

4508 c⁄° 
°rög
& 
hñp
=string());

4509 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4510 
M©
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4511 
M©
 (
Alg‹ôhm
::*
gëãr
)()=0,

4512 (
Alg‹ôhm
::*
£âî
)(c⁄° 
M©
&)=0,

4513 c⁄° 
°rög
& 
hñp
=string());

4514 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4515 
ve˘‹
<
M©
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4516 
ve˘‹
<
M©
> (
Alg‹ôhm
::*
gëãr
)()=0,

4517 (
Alg‹ôhm
::*
£âî
)(c⁄° 
ve˘‹
<
M©
>&)=0,

4518 c⁄° 
°rög
& 
hñp
=string());

4519 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4520 
På
<
Alg‹ôhm
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4521 
På
<
Alg‹ôhm
> (Alg‹ôhm::*
gëãr
)()=0,

4522 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<Algorithm>&)=0,

4523 c⁄° 
°rög
& 
hñp
=string());

4524 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4525 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4526 (
Alg‹ôhm
::*
gëãr
)()=0,

4527 (
Alg‹ôhm
::*
£âî
)()=0,

4528 c⁄° 
°rög
& 
hñp
=string());

4529 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4530 & 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4531 (
Alg‹ôhm
::*
gëãr
)()=0,

4532 (
Alg‹ôhm
::*
£âî
)()=0,

4533 c⁄° 
°rög
& 
hñp
=string());

4534 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4535 
uöt64
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4536 
uöt64
 (
Alg‹ôhm
::*
gëãr
)()=0,

4537 (
Alg‹ôhm
::*
£âî
)(
uöt64
)=0,

4538 c⁄° 
°rög
& 
hñp
=string());

4539 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4540 
uch¨
& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4541 
uch¨
 (
Alg‹ôhm
::*
gëãr
)()=0,

4542 (
Alg‹ôhm
::*
£âî
)(
uch¨
)=0,

4543 c⁄° 
°rög
& 
hñp
=string());

4544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_Ba£
> 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4545 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4546 
På
<
_Tp
> (
Alg‹ôhm
::*
gëãr
)()=0,

4547 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<
_Tp
>&)=0,

4548 c⁄° 
°rög
& 
hñp
=string());

4549 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
«me
,

4550 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
=
Ál£
,

4551 
På
<
_Tp
> (
Alg‹ôhm
::*
gëãr
)()=0,

4552 (
Alg‹ôhm
::*
£âî
)(c⁄° 
På
<
_Tp
>&)=0,

4553 c⁄° 
°rög
& 
hñp
=string());

4554 
	g¥Ÿe˘ed
:

4555 
Alg‹ôhmInfoD©a
* 
d©a
;

4556 
£t
(
Alg‹ôhm
* 
Ægo
, c⁄° * 
«me
, 
¨gTy≥
,

4557 c⁄° * 
vÆue
, 
boﬁ
 
f‹˚
=
Ál£
) const;

4561 
CV_EXPORTS
 
	gP¨am


4563 íum { 
	gINT
=0, 
	gBOOLEAN
=1, 
	gREAL
=2, 
	gSTRING
=3, 
	gMAT
=4, 
	gMAT_VECTOR
=5, 
	gALGORITHM
=6, 
	gFLOAT
=7, 
	gUNSIGNED_INT
=8, 
	gUINT64
=9, 
	gSHORT
=10, 
	gUCHAR
=11 };

4565 
P¨am
();

4566 
P¨am
(
_ty≥
, 
boﬁ
 
_ªad⁄ly
, 
_off£t
,

4567 
Alg‹ôhm
::
Gëãr
 
_gëãr
=0,

4568 
Alg‹ôhm
::
Sëãr
 
_£âî
=0,

4569 c⁄° 
°rög
& 
_hñp
=string());

4570 
	gty≥
;

4571 
	goff£t
;

4572 
boﬁ
 
	gªad⁄ly
;

4573 
	gAlg‹ôhm
::
Gëãr
 
gëãr
;

4574 
	gAlg‹ôhm
::
Sëãr
 
£âî
;

4575 
°rög
 
	ghñp
;

4578 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gboﬁ
>

4580 
boﬁ
 
	tc⁄°_∑øm_ty≥
;

4581 
boﬁ
 
	tmembî_ty≥
;

4583 íum { 
	gty≥
 = 
P¨am
::
BOOLEAN
 };

4586 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4588 
	tc⁄°_∑øm_ty≥
;

4589 
	tmembî_ty≥
;

4591 íum { 
	gty≥
 = 
P¨am
::
INT
 };

4594 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4596 
	tc⁄°_∑øm_ty≥
;

4597 
	tmembî_ty≥
;

4599 íum { 
	gty≥
 = 
P¨am
::
SHORT
 };

4602 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4604 
	tc⁄°_∑øm_ty≥
;

4605 
	tmembî_ty≥
;

4607 íum { 
	gty≥
 = 
P¨am
::
REAL
 };

4610 
	gãm∂©e
<> 
	gP¨amTy≥
<
	g°rög
>

4612 c⁄° 
	t°rög
& 
	tc⁄°_∑øm_ty≥
;

4613 
°rög
 
	tmembî_ty≥
;

4615 íum { 
	gty≥
 = 
P¨am
::
STRING
 };

4618 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gM©
>

4620 c⁄° 
	tM©
& 
	tc⁄°_∑øm_ty≥
;

4621 
M©
 
	tmembî_ty≥
;

4623 íum { 
	gty≥
 = 
P¨am
::
MAT
 };

4626 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gve˘‹
<
	gM©
> >

4628 c⁄° 
	tve˘‹
<
	tM©
>& 
	tc⁄°_∑øm_ty≥
;

4629 
	gve˘‹
<
	tM©
> 
	tmembî_ty≥
;

4631 íum { 
	gty≥
 = 
P¨am
::
MAT_VECTOR
 };

4634 
	gãm∂©e
<> 
	gP¨amTy≥
<
	gAlg‹ôhm
>

4636 c⁄° 
	tPå
<
	tAlg‹ôhm
>& 
	tc⁄°_∑øm_ty≥
;

4637 
	gPå
<
	tAlg‹ôhm
> 
	tmembî_ty≥
;

4639 íum { 
	gty≥
 = 
P¨am
::
ALGORITHM
 };

4642 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4644 
	tc⁄°_∑øm_ty≥
;

4645 
	tmembî_ty≥
;

4647 íum { 
	gty≥
 = 
P¨am
::
FLOAT
 };

4650 
	gãm∂©e
<> 
	gP¨amTy≥
<>

4652 
	tc⁄°_∑øm_ty≥
;

4653 
	tmembî_ty≥
;

4655 íum { 
	gty≥
 = 
P¨am
::
UNSIGNED_INT
 };

4658 
	gãm∂©e
<> 
	gP¨amTy≥
<
	guöt64
>

4660 
uöt64
 
	tc⁄°_∑øm_ty≥
;

4661 
uöt64
 
	tmembî_ty≥
;

4663 íum { 
	gty≥
 = 
P¨am
::
UINT64
 };

4666 
	gãm∂©e
<> 
	gP¨amTy≥
<
	guch¨
>

4668 
uch¨
 
	tc⁄°_∑øm_ty≥
;

4669 
uch¨
 
	tmembî_ty≥
;

4671 íum { 
	gty≥
 = 
P¨am
::
UCHAR
 };

4715 ˛as†
	cCV_EXPORTS
 
	gComm™dLöeP¨£r


4717 
	gpublic
:

4720 
Comm™dLöeP¨£r
(
¨gc
, c⁄° * c⁄° 
¨gv
[], c⁄° * 
key_m≠
);

4723 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4724 
_Tp
 
gë
(c⁄° 
°d
::
°rög
& 
«me
, 
boﬁ
 
•a˚_dñëe
=
åue
)

4726 i‡(!
has
(
«me
))

4728  
_Tp
();

4730 
	g°d
::
°rög
 
°r
 = 
gëSåög
(
«me
);

4731  
	g™ÆyzeVÆue
<
	g_Tp
>(
	g°r
, 
	g•a˚_dñëe
);

4735 
¥ötP¨ams
();

4737 
	g¥Ÿe˘ed
:

4738 
°d
::
m≠
<°d::
°rög
, 
	g°d
::
ve˘‹
<°d::°rög> > 
d©a
;

4739 
	g°d
::
°rög
 
gëSåög
(c⁄° 
°d
::°rög& 
«me
);

4741 
boﬁ
 
has
(c⁄° 
°d
::
°rög
& 
keys
);

4743 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4744 
_Tp
 
™ÆyzeVÆue
(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
•a˚_dñëe
=
Ál£
);

4746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4747 
_Tp
 
gëD©a
(c⁄° 
°d
::
°rög
& 
°r
)

4749 
_Tp
 
ªs
 = _Tp();

4750 
	g°d
::
°rög°ªam
 
s1
(
°r
);

4751 
	gs1
 >> 
	gªs
;

4752  
	gªs
;

4755 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4756 
_Tp
 
‰omSåögNumbî
(c⁄° 
°d
::
°rög
& 
°r
);

4760 
	gãm∂©e
<> 
CV_EXPORTS


4761 
boﬁ
 
	gComm™dLöeP¨£r
::
gë
<boﬁ>(c⁄° 
°d
::
°rög
& 
«me
, boﬁ 
	g•a˚_dñëe
);

4763 
	gãm∂©e
<> 
CV_EXPORTS


4764 
	g°d
::
°rög
 
Comm™dLöeP¨£r
::
™ÆyzeVÆue
<
°d
::°rög>(c⁄° std::°rög& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4766 
	gãm∂©e
<> 
CV_EXPORTS


4767 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4769 
	gãm∂©e
<> 
CV_EXPORTS


4770 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4772 
	gãm∂©e
<> 
CV_EXPORTS


4773 
uöt64
 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<uöt64>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4775 
	gãm∂©e
<> 
CV_EXPORTS


4776 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4778 
	gãm∂©e
<> 
CV_EXPORTS


4779 
	gComm™dLöeP¨£r
::
™ÆyzeVÆue
<>(c⁄° 
°d
::
°rög
& 
°r
, 
boﬁ
 
	g•a˚_dñëe
);

4785 ˛as†
	cCV_EXPORTS
 
	gP¨ÆÀlLo›Body


4787 
	gpublic
:

4788 
vútuÆ
 ~
P¨ÆÀlLo›Body
();

4789 
vútuÆ
 
›î©‹
(Ë(c⁄° 
	gR™ge
& 
	gønge
) const = 0;

4792 
CV_EXPORTS
 
∑øŒñ_f‹_
(c⁄° 
R™ge
& 
ønge
, c⁄° 
P¨ÆÀlLo›Body
& 
body
, 
n°rùes
=-1.);

4796 ˛as†
	cCV_EXPORTS
 
	gMuãx


4798 
	gpublic
:

4799 
Muãx
();

4800 ~
Muãx
();

4801 
Muãx
(c⁄° Muãx& 
m
);

4802 
	gMuãx
& 
	g›î©‹
 = (c⁄° 
Muãx
& 
m
);

4804 
lock
();

4805 
boﬁ
 
åylock
();

4806 
u∆ock
();

4808 
	gIm∂
;

4809 
	g¥Ÿe˘ed
:

4810 
Im∂
* 
im∂
;

4813 ˛as†
	cCV_EXPORTS
 
	gAutoLock


4815 
	gpublic
:

4816 
AutoLock
(
Muãx
& 
m
Ë: 
muãx
(&mË{ muãx->
lock
(); }

4817 ~
AutoLock
(Ë{ 
	gmuãx
->
u∆ock
(); }

4818 
	g¥Ÿe˘ed
:

4819 
Muãx
* 
muãx
;

4820 
	g¥iv©e
:

4821 
AutoLock
(const AutoLock&);

4822 
	gAutoLock
& 
	g›î©‹
 = (c⁄° 
AutoLock
&);

4825 ˛as†
	cTLSD©aC⁄èöî


4827 
	g¥iv©e
:

4828 
key_
;

4829 
	g¥Ÿe˘ed
:

4830 
CV_EXPORTS
 
TLSD©aC⁄èöî
();

4831 
	gCV_EXPORTS
 ~
TLSD©aC⁄èöî
();

4832 
	gpublic
:

4833 
vútuÆ
 * 
¸óãD©aIn°™˚
() const = 0;

4834 
vútuÆ
 
dñëeD©aIn°™˚
(* 
d©a
) const = 0;

4836 
CV_EXPORTS
 * 
gëD©a
() const;

4839 
	gãm∂©e
 <
ty≥«me
 
	gT
>

4840 ˛as†
	cTLSD©a
 : 
¥Ÿe˘ed
 
TLSD©aC⁄èöî


4842 
public
:

4843 
ölöe
 
TLSD©a
() {}

4844 
ölöe
 ~
TLSD©a
() {}

4845 
ölöe
 
T
* 
gë
(Ëc⁄° {  (T*)
gëD©a
(); }

4846 
	g¥iv©e
:

4847 
vútuÆ
 * 
¸óãD©aIn°™˚
(Ëc⁄° {  
√w
 
T
; }

4848 
vútuÆ
 
dñëeD©aIn°™˚
(* 
d©a
Ëc⁄° { 
dñëe
 (
T
*)
	gd©a
; }

4855 
	~"›ícv2/c‹e/›î©i⁄s.hµ
"

4856 
	~"›ícv2/c‹e/m©.hµ
"

	@/usr/include/opencv2/opencv.hpp

43 #i‚de‡
__OPENCV_ALL_HPP__


44 
	#__OPENCV_ALL_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e_c.h
"

47 
	~"›ícv2/c‹e/c‹e.hµ
"

48 
	~"›ícv2/Ê™n/möiÊ™n.hµ
"

49 
	~"›ícv2/img¥oc/img¥oc_c.h
"

50 
	~"›ícv2/img¥oc/img¥oc.hµ
"

51 
	~"›ícv2/phŸo/phŸo.hµ
"

52 
	~"›ícv2/video/video.hµ
"

53 
	~"›ícv2/„©uªs2d/„©uªs2d.hµ
"

54 
	~"›ícv2/objdëe˘/objdëe˘.hµ
"

55 
	~"›ícv2/ˇlib3d/ˇlib3d.hµ
"

56 
	~"›ícv2/ml/ml.hµ
"

57 
	~"›ícv2/highgui/highgui_c.h
"

58 
	~"›ícv2/highgui/highgui.hµ
"

59 
	~"›ícv2/c⁄åib/c⁄åib.hµ
"

	@DoubleBuffer.h

1 #i‚de‡
DOUBLEBUFFER_H


2 
	#DOUBLEBUFFER_H


	)

3 
	~<wx/wx.h
>

4 
	~<›ícv2/›ícv.hµ
>

6 ˛as†
	cDoubÀBuf„r


8 
	mpublic
:

9 
DoubÀBuf„r
();

10 
	mvútuÆ
 ~
DoubÀBuf„r
();

11 
	mcv
::
M©
* 
GëBack
();

12 
	mcv
::
M©
* 
GëFr⁄t
();

14 
FœgFr⁄t
();

15 
FœgBack
();

16 
	m¥iv©e
:

17 
Sw≠
();

18 
	mcuºít
;

19 
	m°©e
;

20 
	mcv
::
M©
 
‰ames
[2];

21 
wxMuãx
 
	mmuãx_back
;

22 
wxMuãx
 
	mmuãx_‰⁄t
;

23 
wxC⁄dôi⁄
 
	mc⁄dôi⁄_back
;

24 
wxC⁄dôi⁄
 
	mc⁄dôi⁄_‰⁄t
;

	@GeneratePaletteThread.h

1 #i‚de‡
GENERATEPALETTETHREAD_H


2 
	#GENERATEPALETTETHREAD_H


	)

3 
	~"KDTªe.h
"

4 
	~<wx/wx.h
>

5 
	~"DoubÀBuf„r.h
"

7 
wxDECLARE_EVENT
(
END_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

9 
˛ass
 
	gMyP™ñ
;

11 ˛as†
	cGíî©ePÆëãThªad
 : 
public
 
wxThªad


13 
public
:

14 
Gíî©ePÆëãThªad
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
, 
KDTªe
*& 
t
);

15 
	mvútuÆ
 ~
Gíî©ePÆëãThªad
();

17 
	m¥Ÿe˘ed
:

19 
¥iv©e
:

20 
MyP™ñ
* 
∑√l
;

21 
	mcv
::
M©
 
img
;

22 
	mKDTªe
*& 
	måì
;

23 
vútuÆ
 * 
E¡ry
();

25 
	~"MyP™ñ.h
"

	@KDTree.h

1 #i‚de‡
KDTREE_H


2 
	#KDTREE_H


	)

4 
	~<›ícv2/›ícv.hµ
>

5 
	~<ve˘‹
>

6 
	~<¨øy
>

7 
	~<un‹dîed_m≠
>

8 
	g°d
::
	t∑ú
<
	tcv
::
	tVec
<, 3>, > 
	tpoöt_ty≥
;

10 ˛as†
	cNode
{

12 
	mpublic
:

13 
Node
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
, * 
•lôs_v¨
);

14 ~
Node
();

15 
maxV¨S∂ô
();

16 
gëMaxV¨
(
Node
*& 
node
, & 
maxV¨
, & 
axis
, & 
åesh
);

17 
•lô
(
åesh
, 
axis
);

18 
	mcv
::
Vec
<, 3> 
gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
);

20 
	m¥iv©e
:

21 
Node
();

22 
Node
(Node* 
p
, 
°d
::
ve˘‹
<
poöt_ty≥
>& 
∑ª¡_poöts
, 
boﬁ
 
h
);

24 
ŸsuAxes
(& 
maxV¨
, & 
axis
, & 
åesh
);

25 
Ÿsu
(
lmö
, 
lmax
, 
axis
, & 
maxV¨
, & 
åesh
);

26 
gëLimôs
(
axis
, & 
lmö
, & 
lmax
);

27 
gëLow
(
axis
, & 
cuºít
);

28 
gëHigh
(
axis
, & 
cuºít
);

29 
£tPoöts
(
°d
::
ve˘‹
<
poöt_ty≥
>& 
d©a
);

30 
upd©eAvîage
();

32 * 
	mnb_•lô
;

34 
	m°d
::
ve˘‹
<
poöt_ty≥
> 
poöts
;

36 
	mcv
::
Vec
<, 3> 
	mavîage
;

37 
	måeshﬁd
;

38 
	m•lô_axis
;

39 
	m•lô_numbî
;

41 
boﬁ
 
	mhighî
;

43 
Node
* 
	m∑ª¡
;

44 
Node
* 
	mchûdªn
;

47 
«me•a˚
 
	g°d
{

48 
	gãm∂©e
<>

49 
	ghash
<
	gcv
::
Vec
<, 3>>{

50 
	g°d
::
size_t
 
›î©‹
()(c⁄° 
cv
::
Vec
<, 3>& 
	göput
) const{

51 
usög
 
	g°d
::
hash
;

52 
usög
 
	g°d
::
size_t
;

54 
size_t
 
	gouçut
;

55 * 
	g±r
 = (*)&
ouçut
;

56 *(
	g±r
++Ë
öput
[0];

57 *(
	g±r
++Ë
öput
[1];

58 *(
	g±r
++Ë
öput
[2];

60  
	gouçut
;

64 ˛as†
	cKDTªe


66 
	mpublic
:

67 
KDTªe
(
cv
::
M©
& 
image
);

68 
	mvútuÆ
 ~
KDTªe
();

69 
	mcv
::
Vec
<, 3> 
gëCﬁ‹
(* 
cﬁ‹
, 
N_cﬁ‹
);

70 
gíî©ePÆëã
(
max_cﬁ‹s
);

71 
	m¥Ÿe˘ed
:

73 
¥iv©e
:

74 
Node
* 
roŸ
;

75 
	mnb_•lô
;

	@MyFrame.h

1 #i‚de‡
MYFRAME_H


2 
	#MYFRAME_H


	)

3 
	~<wx/wx.h
>

4 
	~"MyP™ñ.h
"

5 
	~"RŸ©eP™ñ.h
"

6 
	~"Qu™tiz©i⁄P™ñ.h
"

8 ˛as†
	cMyFøme
: 
public
 
wxFøme


10 
public
:

11 
MyFøme
(c⁄° 
wxSåög
& 
tôÀ
, c⁄° 
wxPoöt
& 
pos
, c⁄° 
wxSize
& 
size
);

12 
OnPro˚ss
(
wxComm™dEvít
& 
evít
);

13 
	m¥iv©e
:

14 
OnSave
(
wxComm™dEvít
& 
evít
);

15 
OnO≥n
(
wxComm™dEvít
& 
evít
);

16 
OnExô
(
wxComm™dEvít
& 
evít
);

17 
OnAbout
(
wxComm™dEvít
& 
evít
);

18 
OnRŸ©e
(
wxComm™dEvít
& 
evít
);

19 
OnGíî©ePÆëã
(
wxComm™dEvít
& 
evít
);

20 
wxP™ñ
 *
	mm_¥o˚ss_∑√l
;

21 
MyP™ñ
 *
	mm_∑√l
;

22 
wxToﬁB¨
 *
	mm_toﬁb¨
;

23 
	mcuºítPro˚ssP™ñ
;

27 
	mID_Rec‹d
 = 1001,

28 
	mID_St›


	@MyImage.h

1 #i‚de‡
MYIMAGE_H


2 
	#MYIMAGE_H


	)

3 
	~<wx/wx.h
>

4 
	~<io°ªam
>

5 
	~<›ícv2/›ícv.hµ
>

6 
	~"DoubÀBuf„r.h
"

7 
	~"KDTªe.h
"

8 ˛as†
	cMyImage
 : 
public
 
wxImage


10 
public
:

11 
MyImage
(
œrgeur
, 
hauãur
, 
DoubÀBuf„r
& 
img
);

12 
MyImage
(
DoubÀBuf„r
& 
img
);

14 
	mvútuÆ
 ~
MyImage
();

15 
Blur
(
amou¡
);

16 
Neg©ive
();

17 
Deßtuøã
();

18 
Thªshﬁd
(
£uû
);

19 
Múr‹
(
boﬁ
 
h‹iz⁄èŒy
);

20 
RŸ©e90
(
boﬁ
 
˛ockwi£
);

21 
RŸ©e180
();

22 
Po°îize
(
nb
 = 1);

23 
Rñﬂd
();

24 
B‹dîDëe˘
();

25 
Qu™tiz©i⁄
(
KDTªe
* 
∑Àâe
);

26 
	m¥iv©e
:

27 
DoubÀBuf„r
& 
image
;

	@MyPanel.h

1 #i‚de‡
MYPANEL_H


2 
	#MYPANEL_H


	)

4 
	~<wx/wx.h
>

5 
	~<›ícv2/›ícv.hµ
>

6 
	~"MyImage.h
"

7 
	~"MyThªshﬁdDülog.h
"

8 
	~"MyRŸ©eDülog.h
"

9 
	~"MyPo°îizeDülog.h
"

10 
	~"VideoSåóm.h
"

11 
	~"Gíî©ePÆëãThªad.h
"

12 
	~<io°ªam
>

16 
	mID_MúoúH
 = 0,

17 
	mID_MúoúV
,

18 
	mID_RŸ©e
,

19 
	mID_B‹dîDëe˘
,

20 
	mID_Po°îize
,

21 
	mID_Thªshﬁd
,

22 
	mID_Blur
,

23 
	mID_Neg©ive
,

24 
	mID_Qu™tiz©i⁄
,

26 
	mEFFECTS_COUNT


29 ˛as†
	cEf„˘
{

30 
	m¥iv©e
:

31 
boﬁ
 
a˘ive
;

32 
	m∑ømëî
;

33 
	mty≥
;

34 * 
	mpoöãr
;

36 
	mpublic
:

37 
	$Ef„˘
(
ty≥_
 = 0, 
∑øm
 = 0, * 
±r
 = 
nuŒ±r
Ë: 
	`a˘ive
(
Ál£
), 
	`∑ømëî
’¨am), 
	`ty≥
—y≥_), 
	$poöãr
(
±r
)

39 
boﬁ
 
	$toggÀ
(){

40  
a˘ive
 = !active;

41 
	}
}

42 
boﬁ
 
	$isA˘ive
(){

43  
a˘ive
;

44 
	}
}

45 
	$£tA˘ive
(
boﬁ
 
a˘ive_
){

46 
a˘ive
 = 
a˘ive_
;

47 
	}
}

48 
	$£tP¨am
(
∑øm
){

49 
∑ømëî
 = 
∑øm
;

50 
	}
}

51 
	$£tPoöãr
(* 
±r
){

52 
poöãr
 = 
±r
;

53 
	}
}

54 
	$≠∂y
(
MyImage
* 
image
){

55 if(!
a˘ive
)

58 
ty≥
){

59 
ID_MúoúH
:

60 
image
->
	`Múr‹
(
åue
);

62 
ID_MúoúV
:

63 
image
->
	`Múr‹
(
Ál£
);

65 
ID_Blur
:

66 
image
->
	`Blur
(
∑ømëî
);

68 
ID_RŸ©e
:

69 if(
∑ømëî
 == 1)

70 
image
->
	`RŸ©e90
(
åue
);

71 if(
∑ømëî
 == 2)

72 
image
->
	`RŸ©e180
();

73 if(
∑ømëî
 == 3)

74 
image
->
	`RŸ©e90
(
Ál£
);

77 
ID_Neg©ive
:

78 
image
->
	`Neg©ive
();

80 
ID_Thªshﬁd
:

81 
image
->
	`Thªshﬁd
(
∑ømëî
);

83 
ID_Po°îize
:

84 
image
->
	`Po°îize
(
∑ømëî
);

86 
ID_B‹dîDëe˘
:

87 
image
->
	`B‹dîDëe˘
();

89 
ID_Qu™tiz©i⁄
:

90 
image
->
	`Qu™tiz©i⁄
((
KDTªe
*)
poöãr
);

93 
	}
}

96 ˛as†
	cMyP™ñ
: 
public
 
wxP™ñ


98 
public
:

99 
MyP™ñ
–
wxWödow
 *
∑ª¡
 ) ;

100 ~
MyP™ñ
() ;

101 
›íImage
(
wxSåög
 
fûeName
);

102 
⁄Paöt
(
wxPaötEvít
 &
WXUNUSED
(
evít
));

103 
ßveImage
(
wxSåög
 
fûeName
);

104 
Múoú
(
boﬁ
 
h‹iz⁄èl
);

105 
RŸ©e
(
r
);

106 
Blur
();

107 
Neg©ive
();

108 
Thªshﬁd
();

109 
Po°îize
();

110 
B‹dîDëe˘
();

111 
showSåóm
(
wxComm™dEvít
& 
evt
);

112 
gíî©ePÆëã
();

113 
∑ÀâeGíî©ed
(
wxComm™dEvít
& 
evt
);

114 
debug
(
i
);

116 
	m¥iv©e
:

117 
rŸ©i⁄
;

118 
wxBôm≠
 
	mm_bôm≠
;

119 
Ef„˘
 
	mef„˘s
[
EFFECTS_COUNT
];

120 
MyImage
 *
	mm_image
;

121 
DoubÀBuf„r
 
	mbuf„r
;

122 
VideoSåóm
 
	mthªad
;

123 
	mdebug_v¨
;

124 
KDTªe
* 
	mcuºít_∑Àâe
;

125 
KDTªe
* 
	m¥o˚ssög_∑Àâe
;

126 
Gíî©ePÆëãThªad
* 
	m∑Àâe_thªad
;

	@MyPosterizeDialog.h

1 #i‚de‡
MYPOSTERIZEDIALOG_H


2 
	#MYPOSTERIZEDIALOG_H


	)

4 
	~<wx/wx.h
>

6 ˛as†
	cMyPo°îizeDülog
 : 
public
 
wxDülog


8 
public
:

9 
MyPo°îizeDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
 = 
wxID_ANY
,c⁄° 
wxSåög
& 
tôÀ
 = 
wxEm±ySåög
,

10 c⁄° 
wxPoöt
& 
pos
 = 
wxDeÁu…Posôi⁄
,

11 c⁄° 
wxSize
& 
size
 = 
wxDeÁu…Size
, 
°yÀ
 = 
wxDEFAULT_DIALOG_STYLE
 );

12 
	mvútuÆ
 ~
MyPo°îizeDülog
();

14 
wxSlidî
* 
	mm_po°îize
;

15 
	m¥Ÿe˘ed
:

16 
wxBuâ⁄
* 
m_okBuâ⁄
;

17 
wxBuâ⁄
* 
	mm_ˇn˚lBuâ⁄
;

18 
	m¥iv©e
:

	@MyRotateDialog.h

3 #i‚de‡
MYROTATEDIALOG_H


4 
	#MYROTATEDIALOG_H


	)

6 
	~<wx/ødiobox.h
>

7 
	~<wx/buâ⁄.h
>

8 
	~<wx/dülog.h
>

10 ˛as†
	cMyRŸ©eDülog
: 
public
 
wxDülog


12 
public
:

13 
MyRŸ©eDülog
(
wxWödow
* 
∑ª¡
,

15 
wxWödowID
 
id
=
wxID_ANY
,

17 c⁄° 
wxPoöt
& 
pos
=
wxDeÁu…Posôi⁄
,

19 c⁄° 
wxSize
& 
size
=
wxDeÁu…Size
);

20 
wxBuâ⁄
* 
	mBuâ⁄1
;

21 
wxBuâ⁄
* 
	mBuâ⁄2
;

22 
wxRadioBox
* 
	mRadioBox1
;

	@MyThresholdDialog.h

1 #i‚de‡
MYTHRESHOLDDIALOG_H


2 
	#MYTHRESHOLDDIALOG_H


	)

4 
	~<wx/wx.h
>

7 ˛as†
	cMyThªshﬁdDülog
 : 
public
 
wxDülog


9 
public
:

10 
MyThªshﬁdDülog
(
wxWödow
* 
∑ª¡
, 
wxWödowID
 
id
 = 
wxID_ANY
,c⁄° 
wxSåög
& 
tôÀ
 = 
wxEm±ySåög
,

11 c⁄° 
wxPoöt
& 
pos
 = 
wxDeÁu…Posôi⁄
,

12 c⁄° 
wxSize
& 
size
 = 
wxDeÁu…Size
, 
°yÀ
 = 
wxDEFAULT_DIALOG_STYLE
 );

13 
	mvútuÆ
 ~
MyThªshﬁdDülog
();

15 
wxSlidî
* 
	mm_thªshﬁd
;

18 
	m¥Ÿe˘ed
:

20 
¥iv©e
:

21 
wxBuâ⁄
* 
m_okBuâ⁄
;

22 
wxBuâ⁄
* 
	mm_ˇn˚lBuâ⁄
;

	@QuantizationPanel.h

1 #i‚de‡
QUANTIZATIONPANEL_H


2 
	#QUANTIZATIONPANEL_H


	)

4 
	~<wx/wx.h
>

6 
wxDECLARE_EVENT
(
START_TASK_GEN_PALETTE
, 
wxComm™dEvít
);

8 ˛as†
	cQu™tiz©i⁄P™ñ
 : 
public
 
wxP™ñ


10 
public
:

11 
Qu™tiz©i⁄P™ñ
(
wxWödow
* 
∑ª¡
);

12 
	mvútuÆ
 ~
Qu™tiz©i⁄P™ñ
();

13 
£ndMesßge
(
wxComm™dEvít
& 
evít
);

14 
wxBuâ⁄
* 
	mGíî©ePÆëã
;

16 
	m¥Ÿe˘ed
:

18 
¥iv©e
:

	@RotatePanel.h

1 #i‚de‡
ROTATEPANEL_H


2 
	#ROTATEPANEL_H


	)

4 
	~<wx/wx.h
>

6 
wxDECLARE_EVENT
(
DO_ROTATE
, 
wxComm™dEvít
);

8 ˛as†
	cRŸ©eP™ñ
 : 
public
 
wxP™ñ


10 
public
:

11 
RŸ©eP™ñ
(
wxWödow
* 
∑ª¡
);

12 
	mvútuÆ
 ~
RŸ©eP™ñ
();

13 
£ndMesßge
(
wxComm™dEvít
& 
evít
);

14 
wxBuâ⁄
* 
	mBuâ⁄1
;

15 
wxRadioBox
* 
	mRadioBox1
;

16 
	m¥Ÿe˘ed
:

18 
¥iv©e
:

	@VideoStream.h

1 #i‚de‡
VIDEOSTREAM_H


2 
	#VIDEOSTREAM_H


	)

3 
	~"DoubÀBuf„r.h
"

4 
	~<wx/wx.h
>

5 
	~<›ícv2/›ícv.hµ
>

6 
˛ass
 
	gMyP™ñ
;

8 
wxDECLARE_EVENT
(
NEW_FRAME_EVENT
, 
wxComm™dEvít
);

10 ˛as†
	cVideoSåóm
 : 
public
 
wxThªad


12 
public
:

13 
VideoSåóm
(
MyP™ñ
* 
p
, 
DoubÀBuf„r
& 
b
);

14 ~
VideoSåóm
();

15 
F‹˚Ród
();

16 
	m¥iv©e
:

17 
cv
::
VideoC≠tuª
 
°ªam
;

18 
MyP™ñ
* 
	m∑√l
;

19 
	mDoubÀBuf„r
& 
	mbuf„r
;

20 
	m‰ameDñay
;

21 
	mtime
;

22 
vútuÆ
 * 
E¡ry
();

24 
	~"MyP™ñ.h
"

	@tp2App.h

10 #i‚de‡
TP2APP_H


11 
	#TP2APP_H


	)

13 
	~<wx/≠p.h
>

15 ˛as†
	cç2Aµ
 : 
public
 
wxAµ


17 
public
:

18 
vútuÆ
 
boﬁ
 
OnInô
();

	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/opencv2/calib3d/calib3d.hpp

43 #i‚de‡
__OPENCV_CALIB3D_HPP__


44 
	#__OPENCV_CALIB3D_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/„©uªs2d/„©uªs2d.hµ
"

49 #ifde‡
__˝lu•lus


57 
CvPOSITObje˘
 
	tCvPOSITObje˘
;

60 
CVAPI
(
CvPOSITObje˘
*Ë
cvCª©ePOSITObje˘
–
CvPoöt3D32f
* 
poöts
, 
poöt_cou¡
 );

65 
CVAPI
(Ë
cvPOSIT
–
CvPOSITObje˘
* 
posô_obje˘
, 
CvPoöt2D32f
* 
image_poöts
,

66 
foˇl_Àngth
, 
CvTîmCrôîü
 
¸ôîü
,

67 * 
rŸ©i⁄_m©rix
, * 
å™¶©i⁄_ve˘‹
);

70 
CVAPI
(Ë
cvRñó£POSITObje˘
–
CvPOSITObje˘
** 
posô_obje˘
 );

73 
CVAPI
(Ë
cvRANSACUpd©eNumIãrs
–
p
, 
îr_¥ob
,

74 
modñ_poöts
, 
max_ôîs
 );

76 
CVAPI
(Ë
cvC⁄vîtPoötsHomogíeous
–c⁄° 
CvM©
* 
§c
, CvM©* 
d°
 );

79 
	#CV_FM_7POINT
 1

	)

80 
	#CV_FM_8POINT
 2

	)

82 
	#CV_LMEDS
 4

	)

83 
	#CV_RANSAC
 8

	)

85 
	#CV_FM_LMEDS_ONLY
 
CV_LMEDS


	)

86 
	#CV_FM_RANSAC_ONLY
 
CV_RANSAC


	)

87 
	#CV_FM_LMEDS
 
CV_LMEDS


	)

88 
	#CV_FM_RANSAC
 
CV_RANSAC


	)

92 
CV_ITERATIVE
 = 0,

93 
CV_EPNP
 = 1,

94 
CV_P3P
 = 2

97 
CVAPI
(Ë
cvFödFundamíèlM©
–c⁄° 
CvM©
* 
poöts1
, c⁄° CvM©* 
poöts2
,

98 
CvM©
* 
fundamíèl_m©rix
,

99 
mëhod
 
CV_DEFAULT
(
CV_FM_RANSAC
),

100 
∑øm1
 
CV_DEFAULT
(3.), 
∑øm2
 CV_DEFAULT(0.99),

101 
CvM©
* 
°©us
 
CV_DEFAULT
(
NULL
) );

106 
CVAPI
(Ë
cvCompuãC‹ª•⁄dEpûöes
–c⁄° 
CvM©
* 
poöts
,

107 
which_image
,

108 c⁄° 
CvM©
* 
fundamíèl_m©rix
,

109 
CvM©
* 
c‹ª•⁄dít_löes
 );

113 
CVAPI
(Ë
cvTrünguœãPoöts
(
CvM©
* 
¥ojM©r1
, CvM©* 
¥ojM©r2
,

114 
CvM©
* 
¥ojPoöts1
, CvM©* 
¥ojPoöts2
,

115 
CvM©
* 
poöts4D
);

117 
CVAPI
(Ë
cvC‹ª˘M©ches
(
CvM©
* 
F
, CvM©* 
poöts1
, CvM©* 
poöts2
,

118 
CvM©
* 
√w_poöts1
, CvM©* 
√w_poöts2
);

125 
CVAPI
(Ë
cvGëO±imÆNewCamîaM©rix
–c⁄° 
CvM©
* 
ˇmîa_m©rix
,

126 c⁄° 
CvM©
* 
di°_c€ffs
,

127 
CvSize
 
image_size
, 
Æpha
,

128 
CvM©
* 
√w_ˇmîa_m©rix
,

129 
CvSize
 
√w_imag_size
 
CV_DEFAULT
(
cvSize
(0,0)),

130 
CvRe˘
* 
vÆid_pixñ_ROI
 
CV_DEFAULT
(0),

131 
˚¡î_¥öcùÆ_poöt
 
CV_DEFAULT
(0));

134 
CVAPI
(Ë
cvRodrigues2
–c⁄° 
CvM©
* 
§c
, CvM©* 
d°
,

135 
CvM©
* 
jacobün
 
CV_DEFAULT
(0) );

138 
CVAPI
(Ë
cvFödHomogøphy
–c⁄° 
CvM©
* 
§c_poöts
,

139 c⁄° 
CvM©
* 
d°_poöts
,

140 
CvM©
* 
homogøphy
,

141 
mëhod
 
CV_DEFAULT
(0),

142 
ønßcRïrojThªshﬁd
 
CV_DEFAULT
(3),

143 
CvM©
* 
mask
 
CV_DEFAULT
(0));

146 
CVAPI
(Ë
cvRQDecomp3x3
–c⁄° 
CvM©
 *
m©rixM
, CvM© *
m©rixR
, CvM© *
m©rixQ
,

147 
CvM©
 *
m©rixQx
 
CV_DEFAULT
(
NULL
),

148 
CvM©
 *
m©rixQy
 
CV_DEFAULT
(
NULL
),

149 
CvM©
 *
m©rixQz
 
CV_DEFAULT
(
NULL
),

150 
CvPoöt3D64f
 *
euÀrAngÀs
 
CV_DEFAULT
(
NULL
));

153 
CVAPI
(Ë
cvDecompo£Proje˘i⁄M©rix
–c⁄° 
CvM©
 *
¥ojM©r
, CvM© *
ˇlibM©r
,

154 
CvM©
 *
rŸM©r
, CvM© *
posVe˘
,

155 
CvM©
 *
rŸM©rX
 
CV_DEFAULT
(
NULL
),

156 
CvM©
 *
rŸM©rY
 
CV_DEFAULT
(
NULL
),

157 
CvM©
 *
rŸM©rZ
 
CV_DEFAULT
(
NULL
),

158 
CvPoöt3D64f
 *
euÀrAngÀs
 
CV_DEFAULT
(
NULL
));

161 
CVAPI
(Ë
cvCÆcM©MulDîiv
–c⁄° 
CvM©
* 
A
, c⁄° CvM©* 
B
, CvM©* 
dABdA
, CvM©* 
dABdB
 );

165 
CVAPI
(Ë
cvCompo£RT
–c⁄° 
CvM©
* 
_rvec1
, c⁄° CvM©* 
_tvec1
,

166 c⁄° 
CvM©
* 
_rvec2
, c⁄° CvM©* 
_tvec2
,

167 
CvM©
* 
_rvec3
, CvM©* 
_tvec3
,

168 
CvM©
* 
dr3dr1
 
CV_DEFAULT
(0), CvM©* 
dr3dt1
 CV_DEFAULT(0),

169 
CvM©
* 
dr3dr2
 
CV_DEFAULT
(0), CvM©* 
dr3dt2
 CV_DEFAULT(0),

170 
CvM©
* 
dt3dr1
 
CV_DEFAULT
(0), CvM©* 
dt3dt1
 CV_DEFAULT(0),

171 
CvM©
* 
dt3dr2
 
CV_DEFAULT
(0), CvM©* 
dt3dt2
 CV_DEFAULT(0) );

175 
CVAPI
(Ë
cvProje˘Poöts2
–c⁄° 
CvM©
* 
obje˘_poöts
, c⁄° CvM©* 
rŸ©i⁄_ve˘‹
,

176 c⁄° 
CvM©
* 
å™¶©i⁄_ve˘‹
, c⁄° CvM©* 
ˇmîa_m©rix
,

177 c⁄° 
CvM©
* 
di°‹ti⁄_c€ffs
, CvM©* 
image_poöts
,

178 
CvM©
* 
dpdrŸ
 
CV_DEFAULT
(
NULL
), CvM©* 
dpdt
 CV_DEFAULT(NULL),

179 
CvM©
* 
dpdf
 
CV_DEFAULT
(
NULL
), CvM©* 
dpdc
 CV_DEFAULT(NULL),

180 
CvM©
* 
dpddi°
 
CV_DEFAULT
(
NULL
),

181 
a•e˘_øtio
 
CV_DEFAULT
(0));

185 
CVAPI
(Ë
cvFödExåösicCamîaP¨ams2
–c⁄° 
CvM©
* 
obje˘_poöts
,

186 c⁄° 
CvM©
* 
image_poöts
,

187 c⁄° 
CvM©
* 
ˇmîa_m©rix
,

188 c⁄° 
CvM©
* 
di°‹ti⁄_c€ffs
,

189 
CvM©
* 
rŸ©i⁄_ve˘‹
,

190 
CvM©
* 
å™¶©i⁄_ve˘‹
,

191 
u£_exåösic_guess
 
CV_DEFAULT
(0) );

195 
CVAPI
(Ë
cvInôI¡rösicP¨ams2D
–c⁄° 
CvM©
* 
obje˘_poöts
,

196 c⁄° 
CvM©
* 
image_poöts
,

197 c⁄° 
CvM©
* 
≈oöts
, 
CvSize
 
image_size
,

198 
CvM©
* 
ˇmîa_m©rix
,

199 
a•e˘_øtio
 
CV_DEFAULT
(1.) );

201 
	#CV_CALIB_CB_ADAPTIVE_THRESH
 1

	)

202 
	#CV_CALIB_CB_NORMALIZE_IMAGE
 2

	)

203 
	#CV_CALIB_CB_FILTER_QUADS
 4

	)

204 
	#CV_CALIB_CB_FAST_CHECK
 8

	)

212 
CVAPI
(Ë
cvCheckChessbﬂrd
(
I∂Image
* 
§c
, 
CvSize
 
size
);

215 
CVAPI
(Ë
cvFödChessbﬂrdC‹√rs
–c⁄° * 
image
, 
CvSize
 
∑âîn_size
,

216 
CvPoöt2D32f
* 
c‹√rs
,

217 * 
c‹√r_cou¡
 
CV_DEFAULT
(
NULL
),

218 
Êags
 
CV_DEFAULT
(
CV_CALIB_CB_ADAPTIVE_THRESH
+
CV_CALIB_CB_NORMALIZE_IMAGE
) );

221 
CVAPI
(Ë
cvDøwChessbﬂrdC‹√rs
–
CvAº
* 
image
, 
CvSize
 
∑âîn_size
,

222 
CvPoöt2D32f
* 
c‹√rs
,

223 
cou¡
, 
∑âîn_was_found
 );

225 
	#CV_CALIB_USE_INTRINSIC_GUESS
 1

	)

226 
	#CV_CALIB_FIX_ASPECT_RATIO
 2

	)

227 
	#CV_CALIB_FIX_PRINCIPAL_POINT
 4

	)

228 
	#CV_CALIB_ZERO_TANGENT_DIST
 8

	)

229 
	#CV_CALIB_FIX_FOCAL_LENGTH
 16

	)

230 
	#CV_CALIB_FIX_K1
 32

	)

231 
	#CV_CALIB_FIX_K2
 64

	)

232 
	#CV_CALIB_FIX_K3
 128

	)

233 
	#CV_CALIB_FIX_K4
 2048

	)

234 
	#CV_CALIB_FIX_K5
 4096

	)

235 
	#CV_CALIB_FIX_K6
 8192

	)

236 
	#CV_CALIB_RATIONAL_MODEL
 16384

	)

240 
CVAPI
(Ë
cvCÆibøãCamîa2
–c⁄° 
CvM©
* 
obje˘_poöts
,

241 c⁄° 
CvM©
* 
image_poöts
,

242 c⁄° 
CvM©
* 
poöt_cou¡s
,

243 
CvSize
 
image_size
,

244 
CvM©
* 
ˇmîa_m©rix
,

245 
CvM©
* 
di°‹ti⁄_c€ffs
,

246 
CvM©
* 
rŸ©i⁄_ve˘‹s
 
CV_DEFAULT
(
NULL
),

247 
CvM©
* 
å™¶©i⁄_ve˘‹s
 
CV_DEFAULT
(
NULL
),

248 
Êags
 
CV_DEFAULT
(0),

249 
CvTîmCrôîü
 
ãrm_¸ô
 
CV_DEFAULT
(
cvTîmCrôîü
(

250 
CV_TERMCRIT_ITER
+
CV_TERMCRIT_EPS
,30,
DBL_EPSILON
)) );

254 
CVAPI
(Ë
cvCÆibøti⁄M©rixVÆues
–c⁄° 
CvM©
 *
ˇmîa_m©rix
,

255 
CvSize
 
image_size
,

256 
≠îtuª_width
 
CV_DEFAULT
(0),

257 
≠îtuª_height
 
CV_DEFAULT
(0),

258 *
fovx
 
CV_DEFAULT
(
NULL
),

259 *
fovy
 
CV_DEFAULT
(
NULL
),

260 *
foˇl_Àngth
 
CV_DEFAULT
(
NULL
),

261 
CvPoöt2D64f
 *
¥öcùÆ_poöt
 
CV_DEFAULT
(
NULL
),

262 *
pixñ_a•e˘_øtio
 
CV_DEFAULT
(
NULL
));

264 
	#CV_CALIB_FIX_INTRINSIC
 256

	)

265 
	#CV_CALIB_SAME_FOCAL_LENGTH
 512

	)

270 
CVAPI
(Ë
cvSãªoCÆibøã
–c⁄° 
CvM©
* 
obje˘_poöts
, c⁄° CvM©* 
image_poöts1
,

271 c⁄° 
CvM©
* 
image_poöts2
, c⁄° CvM©* 
≈oöts
,

272 
CvM©
* 
ˇmîa_m©rix1
, CvM©* 
di°_c€ffs1
,

273 
CvM©
* 
ˇmîa_m©rix2
, CvM©* 
di°_c€ffs2
,

274 
CvSize
 
image_size
, 
CvM©
* 
R
, CvM©* 
T
,

275 
CvM©
* 
E
 
CV_DEFAULT
(0), CvM©* 
F
 CV_DEFAULT(0),

276 
CvTîmCrôîü
 
ãrm_¸ô
 
CV_DEFAULT
(
cvTîmCrôîü
(

277 
CV_TERMCRIT_ITER
+
CV_TERMCRIT_EPS
,30,1e-6)),

278 
Êags
 
CV_DEFAULT
(
CV_CALIB_FIX_INTRINSIC
));

280 
	#CV_CALIB_ZERO_DISPARITY
 1024

	)

284 
CVAPI
(Ë
cvSãªoRe˘ify
–c⁄° 
CvM©
* 
ˇmîa_m©rix1
, c⁄° CvM©* 
ˇmîa_m©rix2
,

285 c⁄° 
CvM©
* 
di°_c€ffs1
, c⁄° CvM©* 
di°_c€ffs2
,

286 
CvSize
 
image_size
, c⁄° 
CvM©
* 
R
, c⁄° CvM©* 
T
,

287 
CvM©
* 
R1
, CvM©* 
R2
, CvM©* 
P1
, CvM©* 
P2
,

288 
CvM©
* 
Q
 
CV_DEFAULT
(0),

289 
Êags
 
CV_DEFAULT
(
CV_CALIB_ZERO_DISPARITY
),

290 
Æpha
 
CV_DEFAULT
(-1),

291 
CvSize
 
√w_image_size
 
CV_DEFAULT
(
cvSize
(0,0)),

292 
CvRe˘
* 
vÆid_pix_ROI1
 
CV_DEFAULT
(0),

293 
CvRe˘
* 
vÆid_pix_ROI2
 
CV_DEFAULT
(0));

297 
CVAPI
(Ë
cvSãªoRe˘ifyUnˇlibøãd
–c⁄° 
CvM©
* 
poöts1
, c⁄° CvM©* 
poöts2
,

298 c⁄° 
CvM©
* 
F
, 
CvSize
 
img_size
,

299 
CvM©
* 
H1
, CvM©* 
H2
,

300 
thªshﬁd
 
CV_DEFAULT
(5));

306 
	#CV_STEREO_BM_NORMALIZED_RESPONSE
 0

	)

307 
	#CV_STEREO_BM_XSOBEL
 1

	)

310 
	sCvSãªoBMSèã


313 
¥eFûãrTy≥
;

314 
¥eFûãrSize
;

315 
¥eFûãrC≠
;

318 
SADWödowSize
;

319 
möDi•¨ôy
;

320 
numbîOfDi•¨ôõs
;

323 
ãxtuªThªshﬁd
;

325 
uniquíessR©io
;

328 
•eckÀWödowSize
;

329 
•eckÀR™ge
;

331 
åySmÆÀrWödows
;

333 
CvRe˘
 
roi1
, 
roi2
;

334 
di•12MaxDiff
;

337 
CvM©
* 
¥eFûãªdImg0
;

338 
CvM©
* 
¥eFûãªdImg1
;

339 
CvM©
* 
¶idögSumBuf
;

340 
CvM©
* 
co°
;

341 
CvM©
* 
di•
;

342 } 
	tCvSãªoBMSèã
;

344 
	#CV_STEREO_BM_BASIC
 0

	)

345 
	#CV_STEREO_BM_FISH_EYE
 1

	)

346 
	#CV_STEREO_BM_NARROW
 2

	)

348 
CVAPI
(
CvSãªoBMSèã
*Ë
cvCª©eSãªoBMSèã
(
¥e£t
 
CV_DEFAULT
(
CV_STEREO_BM_BASIC
),

349 
numbîOfDi•¨ôõs
 
CV_DEFAULT
(0));

351 
CVAPI
(Ë
cvRñó£SãªoBMSèã
–
CvSãªoBMSèã
** 
°©e
 );

353 
CVAPI
(Ë
cvFödSãªoC‹ª•⁄dí˚BM
–c⁄° 
CvAº
* 
À·
, c⁄° CvAº* 
right
,

354 
CvAº
* 
di•¨ôy
, 
CvSãªoBMSèã
* 
°©e
 );

356 
CVAPI
(
CvRe˘
Ë
cvGëVÆidDi•¨ôyROI
–CvRe˘ 
roi1
, CvRe˘ 
roi2
, 
möDi•¨ôy
,

357 
numbîOfDi•¨ôõs
, 
SADWödowSize
 );

359 
CVAPI
(Ë
cvVÆid©eDi•¨ôy
–
CvAº
* 
di•¨ôy
, c⁄° CvAº* 
co°
,

360 
möDi•¨ôy
, 
numbîOfDi•¨ôõs
,

361 
di•12MaxDiff
 
CV_DEFAULT
(1) );

364 
CVAPI
(Ë
cvRïroje˘ImageTo3D
–c⁄° 
CvAº
* 
di•¨ôyImage
,

365 
CvAº
* 
_3dImage
, c⁄° 
CvM©
* 
Q
,

366 
h™dÀMissögVÆues
 
CV_DEFAULT
(0) );

369 #ifde‡
__˝lu•lus


373 ˛as†
	cCV_EXPORTS
 
CvLevM¨q


375 
public
:

376 
CvLevM¨q
();

377 
CvLevM¨q
–
≈¨ams
, 
√ºs
, 
CvTîmCrôîü
 
¸ôîü
=

378 
cvTîmCrôîü
(
CV_TERMCRIT_EPS
+
CV_TERMCRIT_ITER
,30,
DBL_EPSILON
),

379 
boﬁ
 
com∂ëeSymmFœg
=
Ál£
 );

380 ~
CvLevM¨q
();

381 
öô
–
≈¨ams
, 
√ºs
, 
CvTîmCrôîü
 
¸ôîü
=

382 
cvTîmCrôîü
(
CV_TERMCRIT_EPS
+
CV_TERMCRIT_ITER
,30,
DBL_EPSILON
),

383 
boﬁ
 
com∂ëeSymmFœg
=
Ál£
 );

384 
boﬁ
 
upd©e
–c⁄° 
CvM©
*& 
∑øm
, CvM©*& 
J
, CvM©*& 
îr
 );

385 
boﬁ
 
upd©eA…
–c⁄° 
CvM©
*& 
∑øm
, CvM©*& 
JtJ
, CvM©*& 
JtEº
, *& 
îrN‹m
 );

387 
˛ór
();

388 
°ï
();

389 íum { 
DONE
=0, 
STARTED
=1, 
CALC_J
=2, 
CHECK_ERR
=3 };

391 
cv
::
På
<
CvM©
> 
mask
;

392 
cv
::
På
<
CvM©
> 
¥evP¨am
;

393 
cv
::
På
<
CvM©
> 
∑øm
;

394 
cv
::
På
<
CvM©
> 
J
;

395 
cv
::
På
<
CvM©
> 
îr
;

396 
cv
::
På
<
CvM©
> 
JtJ
;

397 
cv
::
På
<
CvM©
> 
JtJN
;

398 
cv
::
På
<
CvM©
> 
JtEº
;

399 
cv
::
På
<
CvM©
> 
JtJV
;

400 
cv
::
På
<
CvM©
> 
JtJW
;

401 
¥evEºN‹m
, 
îrN‹m
;

402 
œmbdaLg10
;

403 
CvTîmCrôîü
 
¸ôîü
;

404 
°©e
;

405 
ôîs
;

406 
boﬁ
 
com∂ëeSymmFœg
;

409 
«me•a˚
 
	gcv


412 
CV_EXPORTS_W
 
Rodrigues
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, OuçutAºay 
jacobün
=
noAºay
());

417 
	gLMEDS
=
CV_LMEDS
,

418 
	gRANSAC
=
CV_RANSAC


422 
CV_EXPORTS_W
 
M©
 
födHomogøphy
–
I≈utAºay
 
§cPoöts
, I≈utAºay 
d°Poöts
,

423 
mëhod
=0, 
ønßcRïrojThªshﬁd
=3,

424 
OuçutAºay
 
mask
=
noAºay
());

427 
CV_EXPORTS
 
M©
 
födHomogøphy
–
I≈utAºay
 
§cPoöts
, I≈utAºay 
d°Poöts
,

428 
OuçutAºay
 
mask
, 
mëhod
=0, 
ønßcRïrojThªshﬁd
=3);

431 
CV_EXPORTS_W
 
Vec3d
 
RQDecomp3x3
–
I≈utAºay
 
§c
, 
OuçutAºay
 
mtxR
, OuçutAºay 
mtxQ
,

432 
OuçutAºay
 
Qx
=
noAºay
(),

433 
OuçutAºay
 
Qy
=
noAºay
(),

434 
OuçutAºay
 
Qz
=
noAºay
());

437 
CV_EXPORTS_W
 
decompo£Proje˘i⁄M©rix
–
I≈utAºay
 
¥ojM©rix
, 
OuçutAºay
 
ˇmîaM©rix
,

438 
OuçutAºay
 
rŸM©rix
, OuçutAºay 
å™sVe˘
,

439 
OuçutAºay
 
rŸM©rixX
=
noAºay
(),

440 
OuçutAºay
 
rŸM©rixY
=
noAºay
(),

441 
OuçutAºay
 
rŸM©rixZ
=
noAºay
(),

442 
OuçutAºay
 
euÀrAngÀs
=
noAºay
() );

445 
CV_EXPORTS_W
 
m©MulDîiv
–
I≈utAºay
 
A
, I≈utAºay 
B
,

446 
OuçutAºay
 
dABdA
,

447 
OuçutAºay
 
dABdB
 );

450 
CV_EXPORTS_W
 
compo£RT
–
I≈utAºay
 
rvec1
, I≈utAºay 
tvec1
,

451 
I≈utAºay
 
rvec2
, I≈utAºay 
tvec2
,

452 
OuçutAºay
 
rvec3
, OuçutAºay 
tvec3
,

453 
OuçutAºay
 
dr3dr1
=
noAºay
(), OuçutAºay 
dr3dt1
=noArray(),

454 
OuçutAºay
 
dr3dr2
=
noAºay
(), OuçutAºay 
dr3dt2
=noArray(),

455 
OuçutAºay
 
dt3dr1
=
noAºay
(), OuçutAºay 
dt3dt1
=noArray(),

456 
OuçutAºay
 
dt3dr2
=
noAºay
(), OuçutAºay 
dt3dt2
=noArray() );

459 
CV_EXPORTS_W
 
¥oje˘Poöts
–
I≈utAºay
 
obje˘Poöts
,

460 
I≈utAºay
 
rvec
, I≈utAºay 
tvec
,

461 
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

462 
OuçutAºay
 
imagePoöts
,

463 
OuçutAºay
 
jacobün
=
noAºay
(),

464 
a•e˘R©io
=0 );

469 
	gITERATIVE
=
CV_ITERATIVE
,

470 
	gEPNP
=
CV_EPNP
,

471 
	gP3P
=
CV_P3P


473 
CV_EXPORTS_W
 
boﬁ
 
sﬁvePnP
–
I≈utAºay
 
obje˘Poöts
, I≈utAºay 
imagePoöts
,

474 
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

475 
OuçutAºay
 
rvec
, OuçutAºay 
tvec
,

476 
boﬁ
 
u£ExåösicGuess
=
Ál£
, 
Êags
=
ITERATIVE
);

479 
CV_EXPORTS_W
 
sﬁvePnPR™ßc
–
I≈utAºay
 
obje˘Poöts
,

480 
I≈utAºay
 
imagePoöts
,

481 
I≈utAºay
 
ˇmîaM©rix
,

482 
I≈utAºay
 
di°C€ffs
,

483 
OuçutAºay
 
rvec
,

484 
OuçutAºay
 
tvec
,

485 
boﬁ
 
u£ExåösicGuess
 = 
Ál£
,

486 
ôî©i⁄sCou¡
 = 100,

487 
ª¥oje˘i⁄Eº‹
 = 8.0,

488 
möI∆õrsCou¡
 = 100,

489 
OuçutAºay
 
ölõrs
 = 
noAºay
(),

490 
Êags
 = 
ITERATIVE
);

493 
CV_EXPORTS_W
 
M©
 
öôCamîaM©rix2D
–
I≈utAºayOfAºays
 
obje˘Poöts
,

494 
I≈utAºayOfAºays
 
imagePoöts
,

495 
Size
 
imageSize
, 
a•e˘R©io
=1. );

497 íum { 
	gCALIB_CB_ADAPTIVE_THRESH
 = 1, 
	gCALIB_CB_NORMALIZE_IMAGE
 = 2,

498 
	gCALIB_CB_FILTER_QUADS
 = 4, 
	gCALIB_CB_FAST_CHECK
 = 8 };

501 
CV_EXPORTS_W
 
boﬁ
 
födChessbﬂrdC‹√rs
–
I≈utAºay
 
image
, 
Size
 
∑âînSize
,

502 
OuçutAºay
 
c‹√rs
,

503 
Êags
=
CALIB_CB_ADAPTIVE_THRESH
+
CALIB_CB_NORMALIZE_IMAGE
 );

506 
CV_EXPORTS
 
boﬁ
 
föd4QuadC‹√rSubpix
(
I≈utAºay
 
img
, 
I≈utOuçutAºay
 
c‹√rs
, 
Size
 
ªgi⁄_size
);

509 
CV_EXPORTS_W
 
døwChessbﬂrdC‹√rs
–
I≈utOuçutAºay
 
image
, 
Size
 
∑âînSize
,

510 
I≈utAºay
 
c‹√rs
, 
boﬁ
 
∑âînWasFound
 );

512 íum { 
	gCALIB_CB_SYMMETRIC_GRID
 = 1, 
	gCALIB_CB_ASYMMETRIC_GRID
 = 2,

513 
	gCALIB_CB_CLUSTERING
 = 4 };

516 
CV_EXPORTS_W
 
boﬁ
 
födCú˛esGrid
–
I≈utAºay
 
image
, 
Size
 
∑âînSize
,

517 
OuçutAºay
 
˚¡îs
, 
Êags
=
CALIB_CB_SYMMETRIC_GRID
,

518 c⁄° 
På
<
FótuªDëe˘‹
> &
blobDëe˘‹
 = 
√w
 
Sim∂eBlobDëe˘‹
());

521 
CV_EXPORTS_W
 
boﬁ
 
födCú˛esGridDeÁu…
–
I≈utAºay
 
image
, 
Size
 
∑âînSize
,

522 
OuçutAºay
 
˚¡îs
, 
Êags
=
CALIB_CB_SYMMETRIC_GRID
 );

525 
	gCALIB_USE_INTRINSIC_GUESS
 = 
CV_CALIB_USE_INTRINSIC_GUESS
,

526 
	gCALIB_FIX_ASPECT_RATIO
 = 
CV_CALIB_FIX_ASPECT_RATIO
,

527 
	gCALIB_FIX_PRINCIPAL_POINT
 = 
CV_CALIB_FIX_PRINCIPAL_POINT
,

528 
	gCALIB_ZERO_TANGENT_DIST
 = 
CV_CALIB_ZERO_TANGENT_DIST
,

529 
	gCALIB_FIX_FOCAL_LENGTH
 = 
CV_CALIB_FIX_FOCAL_LENGTH
,

530 
	gCALIB_FIX_K1
 = 
CV_CALIB_FIX_K1
,

531 
	gCALIB_FIX_K2
 = 
CV_CALIB_FIX_K2
,

532 
	gCALIB_FIX_K3
 = 
CV_CALIB_FIX_K3
,

533 
	gCALIB_FIX_K4
 = 
CV_CALIB_FIX_K4
,

534 
	gCALIB_FIX_K5
 = 
CV_CALIB_FIX_K5
,

535 
	gCALIB_FIX_K6
 = 
CV_CALIB_FIX_K6
,

536 
	gCALIB_RATIONAL_MODEL
 = 
CV_CALIB_RATIONAL_MODEL
,

538 
	gCALIB_FIX_INTRINSIC
 = 
CV_CALIB_FIX_INTRINSIC
,

539 
	gCALIB_SAME_FOCAL_LENGTH
 = 
CV_CALIB_SAME_FOCAL_LENGTH
,

541 
	gCALIB_ZERO_DISPARITY
 = 
CV_CALIB_ZERO_DISPARITY


545 
CV_EXPORTS_W
 
ˇlibøãCamîa
–
I≈utAºayOfAºays
 
obje˘Poöts
,

546 
I≈utAºayOfAºays
 
imagePoöts
,

547 
Size
 
imageSize
,

548 
CV_OUT
 
I≈utOuçutAºay
 
ˇmîaM©rix
,

549 
CV_OUT
 
I≈utOuçutAºay
 
di°C€ffs
,

550 
OuçutAºayOfAºays
 
rvecs
, OuçutAºayOfAºay†
tvecs
,

551 
Êags
=0, 
TîmCrôîü
 
¸ôîü
 = TermCriteria(

552 
TîmCrôîü
::
COUNT
+TîmCrôîü::
EPS
, 30, 
DBL_EPSILON
) );

555 
CV_EXPORTS_W
 
ˇlibøti⁄M©rixVÆues
–
I≈utAºay
 
ˇmîaM©rix
,

556 
Size
 
imageSize
,

557 
≠îtuªWidth
,

558 
≠îtuªHeight
,

559 
CV_OUT
 & 
fovx
,

560 
CV_OUT
 & 
fovy
,

561 
CV_OUT
 & 
foˇlLígth
,

562 
CV_OUT
 
Poöt2d
& 
¥öcùÆPoöt
,

563 
CV_OUT
 & 
a•e˘R©io
 );

566 
CV_EXPORTS_W
 
°îeoCÆibøã
–
I≈utAºayOfAºays
 
obje˘Poöts
,

567 
I≈utAºayOfAºays
 
imagePoöts1
,

568 
I≈utAºayOfAºays
 
imagePoöts2
,

569 
CV_OUT
 
I≈utOuçutAºay
 
ˇmîaM©rix1
,

570 
CV_OUT
 
I≈utOuçutAºay
 
di°C€ffs1
,

571 
CV_OUT
 
I≈utOuçutAºay
 
ˇmîaM©rix2
,

572 
CV_OUT
 
I≈utOuçutAºay
 
di°C€ffs2
,

573 
Size
 
imageSize
, 
OuçutAºay
 
R
,

574 
OuçutAºay
 
T
, OuçutAºay 
E
, OuçutAºay 
F
,

575 
TîmCrôîü
 
¸ôîü
 = TîmCrôîü(TîmCrôîü::
COUNT
+TîmCrôîü::
EPS
, 30, 1e-6),

576 
Êags
=
CALIB_FIX_INTRINSIC
 );

580 
CV_EXPORTS_W
 
°îeoRe˘ify
–
I≈utAºay
 
ˇmîaM©rix1
, I≈utAºay 
di°C€ffs1
,

581 
I≈utAºay
 
ˇmîaM©rix2
, I≈utAºay 
di°C€ffs2
,

582 
Size
 
imageSize
, 
I≈utAºay
 
R
, I≈utAºay 
T
,

583 
OuçutAºay
 
R1
, OuçutAºay 
R2
,

584 
OuçutAºay
 
P1
, OuçutAºay 
P2
,

585 
OuçutAºay
 
Q
, 
Êags
=
CALIB_ZERO_DISPARITY
,

586 
Æpha
=-1, 
Size
 
√wImageSize
=Size(),

587 
CV_OUT
 
Re˘
* 
vÆidPixROI1
=0, CV_OUT Re˘* 
vÆidPixROI2
=0 );

590 
CV_EXPORTS_W
 
boﬁ
 
°îeoRe˘ifyUnˇlibøãd
–
I≈utAºay
 
poöts1
, I≈utAºay 
poöts2
,

591 
I≈utAºay
 
F
, 
Size
 
imgSize
,

592 
OuçutAºay
 
H1
, OuçutAºay 
H2
,

593 
thªshﬁd
=5 );

596 
CV_EXPORTS_W
 
ª˘ify3Cﬁlöór
–
I≈utAºay
 
ˇmîaM©rix1
, I≈utAºay 
di°C€ffs1
,

597 
I≈utAºay
 
ˇmîaM©rix2
, I≈utAºay 
di°C€ffs2
,

598 
I≈utAºay
 
ˇmîaM©rix3
, I≈utAºay 
di°C€ffs3
,

599 
I≈utAºayOfAºays
 
img±1
, I≈utAºayOfAºay†
img±3
,

600 
Size
 
imageSize
, 
I≈utAºay
 
R12
, I≈utAºay 
T12
,

601 
I≈utAºay
 
R13
, I≈utAºay 
T13
,

602 
OuçutAºay
 
R1
, OuçutAºay 
R2
, OuçutAºay 
R3
,

603 
OuçutAºay
 
P1
, OuçutAºay 
P2
, OuçutAºay 
P3
,

604 
OuçutAºay
 
Q
, 
Æpha
, 
Size
 
√wImgSize
,

605 
CV_OUT
 
Re˘
* 
roi1
, CV_OUT Re˘* 
roi2
, 
Êags
 );

608 
CV_EXPORTS_W
 
M©
 
gëO±imÆNewCamîaM©rix
–
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

609 
Size
 
imageSize
, 
Æpha
, Sizê
√wImgSize
=Size(),

610 
CV_OUT
 
Re˘
* 
vÆidPixROI
=0, 
boﬁ
 
˚¡îPröcùÆPoöt
=
Ál£
);

613 
CV_EXPORTS_W
 
c⁄vîtPoötsToHomogíeous
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

616 
CV_EXPORTS_W
 
c⁄vîtPoötsFromHomogíeous
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

619 
CV_EXPORTS
 
c⁄vîtPoötsHomogíeous
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

624 
	gFM_7POINT
 = 
CV_FM_7POINT
,

625 
	gFM_8POINT
 = 
CV_FM_8POINT
,

626 
	gFM_LMEDS
 = 
CV_FM_LMEDS
,

627 
	gFM_RANSAC
 = 
CV_FM_RANSAC


631 
CV_EXPORTS_W
 
M©
 
födFundamíèlM©
–
I≈utAºay
 
poöts1
, I≈utAºay 
poöts2
,

632 
mëhod
=
FM_RANSAC
,

633 
∑øm1
=3., 
∑øm2
=0.99,

634 
OuçutAºay
 
mask
=
noAºay
());

637 
CV_EXPORTS
 
M©
 
födFundamíèlM©
–
I≈utAºay
 
poöts1
, I≈utAºay 
poöts2
,

638 
OuçutAºay
 
mask
, 
mëhod
=
FM_RANSAC
,

639 
∑øm1
=3., 
∑øm2
=0.99);

642 
CV_EXPORTS_W
 
compuãC‹ª•⁄dEpûöes
–
I≈utAºay
 
poöts
,

643 
whichImage
, 
I≈utAºay
 
F
,

644 
OuçutAºay
 
löes
 );

646 
CV_EXPORTS_W
 
åünguœãPoöts
–
I≈utAºay
 
¥ojM©r1
, I≈utAºay 
¥ojM©r2
,

647 
I≈utAºay
 
¥ojPoöts1
, I≈utAºay 
¥ojPoöts2
,

648 
OuçutAºay
 
poöts4D
 );

650 
CV_EXPORTS_W
 
c‹ª˘M©ches
–
I≈utAºay
 
F
, I≈utAºay 
poöts1
, I≈utAºay 
poöts2
,

651 
OuçutAºay
 
√wPoöts1
, OuçutAºay 
√wPoöts2
 );

653 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvSãªoBMSèã
>::
dñëe_obj
();

660 ˛as†
	cCV_EXPORTS_W
 
	gSãªoBM


662 
	gpublic
:

663 íum { 
PREFILTER_NORMALIZED_RESPONSE
 = 0, 
	gPREFILTER_XSOBEL
 = 1,

664 
	gBASIC_PRESET
=0, 
	gFISH_EYE_PRESET
=1, 
	gNARROW_PRESET
=2 };

667 
CV_WRAP
 
SãªoBM
();

669 
CV_WRAP
 
SãªoBM
(
¥e£t
, 
ndi•¨ôõs
=0, 
SADWödowSize
=21);

671 
öô
(
¥e£t
, 
ndi•¨ôõs
=0, 
SADWödowSize
=21);

673 
CV_WRAP_AS
(
compuã
Ë
›î©‹
()–
I≈utAºay
 
	gÀ·
, I≈utAºay 
	gright
,

674 
OuçutAºay
 
	gdi•¨ôy
, 
	gdi•ty≥
=
CV_16S
 );

677 
	gPå
<
	gCvSãªoBMSèã
> 
	g°©e
;

686 ˛as†
	cCV_EXPORTS_W
 
	gSãªoSGBM


688 
	gpublic
:

689 íum { 
DISP_SHIFT
=4, 
	gDISP_SCALE
 = (1<<DISP_SHIFT) };

692 
CV_WRAP
 
SãªoSGBM
();

695 
CV_WRAP
 
SãªoSGBM
(
möDi•¨ôy
, 
numDi•¨ôõs
, 
SADWödowSize
,

696 
P1
=0, 
P2
=0, 
di•12MaxDiff
=0,

697 
¥eFûãrC≠
=0, 
uniquíessR©io
=0,

698 
•eckÀWödowSize
=0, 
•eckÀR™ge
=0,

699 
boﬁ
 
fuŒDP
=
Ál£
);

701 
	gvútuÆ
 ~
SãªoSGBM
();

704 
CV_WRAP_AS
(
compuã
Ë
vútuÆ
 
›î©‹
()(
I≈utAºay
 
	gÀ·
, I≈utAºay 
	gright
,

705 
OuçutAºay
 
	gdi•
);

707 
CV_PROP_RW
 
	gmöDi•¨ôy
;

708 
CV_PROP_RW
 
	gnumbîOfDi•¨ôõs
;

709 
CV_PROP_RW
 
	gSADWödowSize
;

710 
CV_PROP_RW
 
	g¥eFûãrC≠
;

711 
CV_PROP_RW
 
	guniquíessR©io
;

712 
CV_PROP_RW
 
	gP1
;

713 
CV_PROP_RW
 
	gP2
;

714 
CV_PROP_RW
 
	g•eckÀWödowSize
;

715 
CV_PROP_RW
 
	g•eckÀR™ge
;

716 
CV_PROP_RW
 
	gdi•12MaxDiff
;

717 
CV_PROP_RW
 
boﬁ
 
	gfuŒDP
;

719 
	g¥Ÿe˘ed
:

720 
M©
 
buf„r
;

724 
CV_EXPORTS_W
 
fûãrS≥ckÀs
–
I≈utOuçutAºay
 
img
, 
√wVÆ
, 
maxS≥ckÀSize
, 
maxDiff
,

725 
I≈utOuçutAºay
 
buf
=
noAºay
() );

728 
CV_EXPORTS_W
 
Re˘
 
gëVÆidDi•¨ôyROI
–Re˘ 
roi1
, Re˘ 
roi2
,

729 
möDi•¨ôy
, 
numbîOfDi•¨ôõs
,

730 
SADWödowSize
 );

733 
CV_EXPORTS_W
 
vÆid©eDi•¨ôy
–
I≈utOuçutAºay
 
di•¨ôy
, 
I≈utAºay
 
co°
,

734 
möDi•¨ôy
, 
numbîOfDi•¨ôõs
,

735 
di•12MaxDi•
=1 );

738 
CV_EXPORTS_W
 
ª¥oje˘ImageTo3D
–
I≈utAºay
 
di•¨ôy
,

739 
OuçutAºay
 
_3dImage
, 
I≈utAºay
 
Q
,

740 
boﬁ
 
h™dÀMissögVÆues
=
Ál£
,

741 
ddïth
=-1 );

743 
CV_EXPORTS_W
 
e°im©eAfföe3D
(
I≈utAºay
 
§c
, I≈utAºay 
d°
,

744 
OuçutAºay
 
out
, OuçutAºay 
ölõrs
,

745 
ønßcThªshﬁd
=3, 
c⁄fidí˚
=0.99);

	@/usr/include/opencv2/contrib/contrib.hpp

43 #i‚de‡
__OPENCV_CONTRIB_HPP__


44 
	#__OPENCV_CONTRIB_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/img¥oc/img¥oc.hµ
"

48 
	~"›ícv2/„©uªs2d/„©uªs2d.hµ
"

49 
	~"›ícv2/objdëe˘/objdëe˘.hµ
"

51 #ifde‡
__˝lu•lus


57 ˛as†
	cCV_EXPORTS
 
	mCvAd≠tiveSköDëe˘‹


59 
	m¥iv©e
:

61 
GSD_HUE_LT
 = 3,

62 
	mGSD_HUE_UT
 = 33,

63 
	mGSD_INTENSITY_LT
 = 15,

64 
	mGSD_INTENSITY_UT
 = 250

67 ˛as†
	cCV_EXPORTS
 
	gHi°ogøm


69 
	g¥iv©e
:

71 
Hi°ogømSize
 = (
GSD_HUE_UT
 - 
GSD_HUE_LT
 + 1)

74 
	g¥Ÿe˘ed
:

75 
födCovîageIndex
(
surÁ˚ToCovî
, 
deÁu…VÆue
 = 0);

77 
	gpublic
:

78 
CvHi°ogøm
 *
fHi°ogøm
;

79 
Hi°ogøm
();

80 
	gvútuÆ
 ~
Hi°ogøm
();

82 
födCurveThªshﬁds
(&
x1
, &
x2
, 
≥r˚¡
 = 0.05);

83 
mîgeWôh
(
Hi°ogøm
 *
sour˚
, 
weight
);

86 
	gnSèπCou¡î
, 
	gnFømeCou¡
, 
	gnSköHueLowîBound
, 
	gnSköHueUµîBound
, 
	gnM‹phögMëhod
, 
	gnSam∂ögDividî
;

87 
	gfHi°ogømMîgeFa˘‹
, 
	gfHuePî˚¡Covîed
;

88 
Hi°ogøm
 
	ghi°ogømHueMŸi⁄
, 
	gsköHueHi°ogøm
;

89 
I∂Image
 *
	gimgHueFøme
, *
	gimgS©uøti⁄Føme
, *
	gimgLa°GøyFøme
, *
	gimgMŸi⁄Føme
, *
	gimgFûãªdFøme
;

90 
I∂Image
 *
	gimgShröked
, *
	gimgTemp
, *
	gimgGøyFøme
, *
	gimgHSVFøme
;

92 
	g¥Ÿe˘ed
:

93 
öôD©a
(
I∂Image
 *
§c
, 
widthDividî
, 
heightDividî
);

94 
ad≠tiveFûãr
();

96 
	gpublic
:

99 
MORPHING_METHOD_NONE
 = 0,

100 
	gMORPHING_METHOD_ERODE
 = 1,

101 
	gMORPHING_METHOD_ERODE_ERODE
 = 2,

102 
	gMORPHING_METHOD_ERODE_DILATE
 = 3

105 
CvAd≠tiveSköDëe˘‹
(
ßm∂ögDividî
 = 1, 
m‹phögMëhod
 = 
MORPHING_METHOD_NONE
);

106 
	gvútuÆ
 ~
CvAd≠tiveSköDëe˘‹
();

108 
vútuÆ
 
¥o˚ss
(
I∂Image
 *
öputBGRImage
, I∂Imagê*
ouçutHueMask
);

116 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyPoöt
 {

117 
	mpublic
:

118 
x
, 
	my
, 
	mvÆue
;

120 
CvFuzzyPoöt
(
_x
, 
_y
);

123 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyCurve
 {

124 
	m¥iv©e
:

125 
°d
::
ve˘‹
<
CvFuzzyPoöt
> 
poöts
;

126 
	mvÆue
, 
	m˚¡ª
;

128 
boﬁ
 
bëwìn
(
x
, 
x1
, 
x2
);

130 
	mpublic
:

131 
CvFuzzyCurve
();

132 ~
CvFuzzyCurve
();

134 
£tCíåe
(
_˚¡ª
);

135 
gëCíåe
();

136 
˛ór
();

137 
addPoöt
(
x
, 
y
);

138 
ˇlcVÆue
(
∑øm
);

139 
gëVÆue
();

140 
£tVÆue
(
_vÆue
);

143 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyFun˘i⁄
 {

144 
	mpublic
:

145 
°d
::
ve˘‹
<
CvFuzzyCurve
> 
curves
;

147 
CvFuzzyFun˘i⁄
();

148 ~
CvFuzzyFun˘i⁄
();

149 
addCurve
(
CvFuzzyCurve
 *
curve
, 
vÆue
 = 0);

150 
ª£tVÆues
();

151 
ˇlcVÆue
();

152 
CvFuzzyCurve
 *
√wCurve
();

155 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyRuÀ
 {

156 
	m¥iv©e
:

157 
CvFuzzyCurve
 *
fuzzyI≈ut1
, *
	mfuzzyI≈ut2
;

158 
CvFuzzyCurve
 *
	mfuzzyOuçut
;

159 
	mpublic
:

160 
CvFuzzyRuÀ
();

161 ~
CvFuzzyRuÀ
();

162 
£tRuÀ
(
CvFuzzyCurve
 *
c1
, CvFuzzyCurvê*
c2
, CvFuzzyCurvê*
o1
);

163 
ˇlcVÆue
(
∑øm1
, 
∑øm2
);

164 
CvFuzzyCurve
 *
gëOuçutCurve
();

167 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyC⁄åﬁÀr
 {

168 
	m¥iv©e
:

169 
°d
::
ve˘‹
<
CvFuzzyRuÀ
*> 
ruÀs
;

170 
	mpublic
:

171 
CvFuzzyC⁄åﬁÀr
();

172 ~
CvFuzzyC⁄åﬁÀr
();

173 
addRuÀ
(
CvFuzzyCurve
 *
c1
, CvFuzzyCurvê*
c2
, CvFuzzyCurvê*
o1
);

174 
ˇlcOuçut
(
∑øm1
, 
∑øm2
);

177 ˛as†
	cCV_EXPORTS
 
	mCvFuzzyMónShi·Tøckî


179 
	m¥iv©e
:

180 ˛as†
	cFuzzyResizî


182 
¥iv©e
:

183 
CvFuzzyFun˘i⁄
 
iI≈ut
, 
	miOuçut
;

184 
CvFuzzyC⁄åﬁÀr
 
	mfuzzyC⁄åﬁÀr
;

185 
	mpublic
:

186 
FuzzyResizî
();

187 
ˇlcOuçut
(
edgeDísôy
, 
dísôy
);

190 ˛as†
	cSórchWödow


192 
	gpublic
:

193 
FuzzyResizî
 *
fuzzyResizî
;

194 
	gx
, 
	gy
;

195 
	gwidth
, 
	gheight
, 
	gmaxWidth
, 
	gmaxHeight
, 
	gñlù£Height
, 
	gñlù£Width
;

196 
	gldx
, 
	gldy
, 
	gldw
, 
	gldh
, 
	gnumShi·s
, 
	gnumIãrs
;

197 
	gxGc
, 
	gyGc
;

198 
	gm00
, 
	gm01
, 
	gm10
, 
	gm11
, 
	gm02
, 
	gm20
;

199 
	gñlù£AngÀ
;

200 
	gdísôy
;

201 
	gdïthLow
, 
	gdïthHigh
;

202 
	gvîtiˇlEdgeLe·
, 
	gvîtiˇlEdgeRight
, 
	gh‹iz⁄èlEdgeT›
, 
	gh‹iz⁄èlEdgeBŸtom
;

204 
SórchWödow
();

205 ~
SórchWödow
();

206 
£tSize
(
_x
, 
_y
, 
_width
, 
_height
);

207 
öôDïthVÆues
(
I∂Image
 *
maskImage
, I∂Imagê*
dïthM≠
);

208 
boﬁ
 
shi·
();

209 
exåa˘Info
(
I∂Image
 *
maskImage
, I∂Imagê*
dïthM≠
, 
boﬁ
 
öôDïth
);

210 
gëResizeAâribsEdgeDísôyLöór
(&
ªsizeDx
, &
ªsizeDy
, &
ªsizeDw
, &
ªsizeDh
);

211 
gëResizeAâribsI¬îDísôy
(&
ªsizeDx
, &
ªsizeDy
, &
ªsizeDw
, &
ªsizeDh
);

212 
gëResizeAâribsEdgeDísôyFuzzy
(&
ªsizeDx
, &
ªsizeDy
, &
ªsizeDw
, &
ªsizeDh
);

213 
boﬁ
 
mónShi·
(
I∂Image
 *
maskImage
, I∂Imagê*
dïthM≠
, 
maxIãøti⁄
, boﬁ 
öôDïth
);

216 
	gpublic
:

217 
	eTøckögSèã


219 
tsN⁄e
 = 0,

220 
	gtsSórchög
 = 1,

221 
	gtsTøckög
 = 2,

222 
	gtsSëWödow
 = 3,

223 
	gtsDißbÀd
 = 10

226 
	eResizeMëhod
 {

227 
	grmEdgeDísôyLöór
 = 0,

228 
	grmEdgeDísôyFuzzy
 = 1,

229 
	grmI¬îDísôy
 = 2

233 
	gMöKî√lMass
 = 1000

236 
SórchWödow
 
	gkî√l
;

237 
	g£¨chMode
;

239 
	g¥iv©e
:

242 
MaxMónShi·Iãøti⁄
 = 5,

243 
	gMaxSëSizeIãøti⁄
 = 5

246 
födO±imumSórchWödow
(
SórchWödow
 &
£¨chWödow
, 
I∂Image
 *
maskImage
, I∂Imagê*
dïthM≠
, 
maxIãøti⁄
, 
ªsizeMëhod
, 
boﬁ
 
öôDïth
);

248 
	gpublic
:

249 
CvFuzzyMónShi·Tøckî
();

250 ~
CvFuzzyMónShi·Tøckî
();

252 
åack
(
I∂Image
 *
maskImage
, I∂Imagê*
dïthM≠
, 
ªsizeMëhod
, 
boﬁ
 
ª£tSórch
, 
möKî√lMass
 = 
MöKî√lMass
);

256 
«me•a˚
 
	gcv


259 ˛as†
	cCV_EXPORTS
 
	gO˘ªe


261 
	gpublic
:

262 
	sNode


264 
Node
() {}

265 
begö
, 
	gíd
;

266 
	gx_mö
, 
	gx_max
, 
	gy_mö
, 
	gy_max
, 
	gz_mö
, 
	gz_max
;

267 
	gmaxLevñs
;

268 
boﬁ
 
	gisLóf
;

269 
	gchûdªn
[8];

272 
O˘ªe
();

273 
O˘ªe
–c⁄° 
ve˘‹
<
Poöt3f
>& 
poöts
, 
maxLevñs
 = 10, 
möPoöts
 = 20 );

274 
	gvútuÆ
 ~
O˘ªe
();

276 
vútuÆ
 
buûdTªe
–c⁄° 
ve˘‹
<
Poöt3f
>& 
poöts
, 
maxLevñs
 = 10, 
möPoöts
 = 20 );

277 
vútuÆ
 
gëPoötsWôhöSphîe
–c⁄° 
Poöt3f
& 
˚¡î
, 
ødius
,

278 
ve˘‹
<
Poöt3f
>& 
poöts
 ) const;

279 c⁄° 
	gve˘‹
<
	gNode
>& 
gëNodes
(Ëc⁄° {  
	gnodes
; }

280 
	g¥iv©e
:

281 
möPoöts
;

282 
	gve˘‹
<
	gPoöt3f
> 
	gpoöts
;

283 
	gve˘‹
<
	gNode
> 
	gnodes
;

285 
vútuÆ
 
buûdNext
(
size_t
 
node_öd
);

289 ˛as†
	cCV_EXPORTS
 
	gMesh3D


291 
	gpublic
:

292 
	sEm±yMeshEx˚±i⁄
 {};

294 
Mesh3D
();

295 
Mesh3D
(c⁄° 
ve˘‹
<
Poöt3f
>& 
vtx
);

296 ~
Mesh3D
();

298 
buûdO˘ªe
();

299 
˛órO˘ªe
();

300 
e°im©eResﬁuti⁄
(
åyR©io
 = 0.1f);

301 
compuãN‹mÆs
(
n‹mÆRadius
, 
möNeighb‹s
 = 20);

302 
compuãN‹mÆs
(c⁄° 
ve˘‹
<>& 
sub£t
, 
n‹mÆRadius
, 
möNeighb‹s
 = 20);

304 
wrôeAsVrml
(c⁄° 
Såög
& 
fûe
, c⁄° 
ve˘‹
<
Sˇœr
>& 
cﬁ‹s
 = vector<Scalar>()) const;

306 
	gve˘‹
<
	gPoöt3f
> 
	gvtx
;

307 
	gve˘‹
<
	gPoöt3f
> 
	gn‹mÆs
;

308 
	gªsﬁuti⁄
;

309 
O˘ªe
 
	go˘ªe
;

311 c⁄° 
Poöt3f
 
	gÆlzîo
;

314 ˛as†
	cCV_EXPORTS
 
	gSpöImageModñ


316 
	gpublic
:

319 
n‹mÆRadius
;

320 
	gmöNeighb‹s
;

322 
	gböSize
;

323 
	gimageWidth
;

325 
	gœmbda
;

326 
	ggamma
;

328 
	gT_GeomëriccC⁄si°ícy
;

329 
	gT_GroupögC‹e•⁄d™˚s
;

332 
SpöImageModñ
();

333 
ex∂icô
 
SpöImageModñ
(c⁄° 
Mesh3D
& 
mesh
);

334 ~
SpöImageModñ
();

336 
£tLoggî
(
°d
::
o°ªam
* 
log
);

337 
£À˘R™domSub£t
(
øtio
);

338 
£tSub£t
(c⁄° 
ve˘‹
<>& 
sub£t
);

339 
compuã
();

341 
m©ch
(c⁄° 
SpöImageModñ
& 
s˚√
, 
ve˘‹
< ve˘‹<
Vec2i
> >& 
ªsu…
);

343 
M©
 
∑ckR™domSˇÀdSpös
(
boﬁ
 
£∑øãSˇÀ
 = 
Ál£
, 
size_t
 
xCou¡
 = 10, size_à
yCou¡
 = 10) const;

345 
size_t
 
gëSpöCou¡
(Ëc⁄° {  
	g•öImages
.
	grows
; }

346 
M©
 
gëSpöImage
(
size_t
 
ödex
Ëc⁄° {  
	g•öImages
.
row
(()index); }

347 c⁄° 
	gPoöt3f
& 
gëSpöVîãx
(
size_t
 
ödex
Ëc⁄° {  
	gmesh
.
	gvtx
[
sub£t
[index]]; }

348 c⁄° 
	gPoöt3f
& 
gëSpöN‹mÆ
(
size_t
 
ödex
Ëc⁄° {  
	gmesh
.
	gn‹mÆs
[
sub£t
[index]]; }

350 c⁄° 
	gMesh3D
& 
gëMesh
(Ëc⁄° {  
	gmesh
; }

351 
	gMesh3D
& 
gëMesh
(Ë{  
	gmesh
; }

354 
boﬁ
 
•öC‹ªœti⁄
(c⁄° 
M©
& 
•ö1
, c⁄° M©& 
•ö2
, 
œmbda
, & 
ªsu…
);

356 
Poöt2f
 
ˇlcSpöM≠Coo
(c⁄° 
Poöt3f
& 
poöt
, c⁄° Poöt3f& 
vîãx
, c⁄° Poöt3f& 
n‹mÆ
);

358 
geomëricC⁄si°ícy
(c⁄° 
Poöt3f
& 
poötS˚√1
, c⁄° Poöt3f& 
n‹mÆS˚√1
,

359 c⁄° 
Poöt3f
& 
poötModñ1
, c⁄° Poöt3f& 
n‹mÆModñ1
,

360 c⁄° 
Poöt3f
& 
poötS˚√2
, c⁄° Poöt3f& 
n‹mÆS˚√2
,

361 c⁄° 
Poöt3f
& 
poötModñ2
, c⁄° Poöt3f& 
n‹mÆModñ2
);

363 
groupögCªãrü
(c⁄° 
Poöt3f
& 
poötS˚√1
, c⁄° Poöt3f& 
n‹mÆS˚√1
,

364 c⁄° 
Poöt3f
& 
poötModñ1
, c⁄° Poöt3f& 
n‹mÆModñ1
,

365 c⁄° 
Poöt3f
& 
poötS˚√2
, c⁄° Poöt3f& 
n‹mÆS˚√2
,

366 c⁄° 
Poöt3f
& 
poötModñ2
, c⁄° Poöt3f& 
n‹mÆModñ2
,

367 
gamma
);

368 
	g¥Ÿe˘ed
:

369 
deÁu…P¨ams
();

371 
m©chSpöToModñ
(c⁄° 
M©
& 
•ö
, 
ve˘‹
<>& 
öde˚s
,

372 
ve˘‹
<>& 
c‹rC€ffs
, 
boﬁ
 
u£ExåemeOuéõrs
 = 
åue
) const;

374 
ª∑ckSpöImages
(c⁄° 
ve˘‹
<
uch¨
>& 
mask
, 
M©
& 
•öImages
, 
boﬁ
 
ªAŒoc
 = 
åue
) const;

376 
	gve˘‹
<> 
	gsub£t
;

377 
Mesh3D
 
	gmesh
;

378 
M©
 
	g•öImages
;

379 
	g°d
::
o°ªam
* 
out
;

382 ˛as†
	cCV_EXPORTS
 
	gTickMëî


384 
	gpublic
:

385 
TickMëî
();

386 
°¨t
();

387 
°›
();

389 
öt64
 
gëTimeTicks
() const;

390 
gëTimeMi¸o
() const;

391 
gëTimeMûli
() const;

392 
gëTimeSec
() const;

393 
öt64
 
gëCou¡î
() const;

395 
ª£t
();

396 
	g¥iv©e
:

397 
öt64
 
cou¡î
;

398 
öt64
 
	gsumTime
;

399 
öt64
 
	g°¨tTime
;

402 
CV_EXPORTS
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gTickMëî
& 
	gtm
);

404 ˛as†
	cCV_EXPORTS
 
	gSñfSimDes¸ùt‹


406 
	gpublic
:

407 
SñfSimDes¸ùt‹
();

408 
SñfSimDes¸ùt‹
(
_ssize
, 
_lsize
,

409 
_°¨tDi°™˚Buckë
=
DEFAULT_START_DISTANCE_BUCKET
,

410 
_numbîOfDi°™˚Buckës
=
DEFAULT_NUM_DISTANCE_BUCKETS
,

411 
_«ngÀs
=
DEFAULT_NUM_ANGLES
);

412 
SñfSimDes¸ùt‹
(c⁄° SñfSimDes¸ùt‹& 
ss
);

413 
	gvútuÆ
 ~
SñfSimDes¸ùt‹
();

414 
	gSñfSimDes¸ùt‹
& 
	g›î©‹
 = (c⁄° 
SñfSimDes¸ùt‹
& 
ss
);

416 
size_t
 
gëDes¸ùt‹Size
() const;

417 
Size
 
gëGridSize
–Sizê
imgsize
, Sizê
wöSåide
 ) const;

419 
vútuÆ
 
compuã
(c⁄° 
M©
& 
img
, 
ve˘‹
<>& 
des¸ùt‹s
, 
Size
 
wöSåide
=Size(),

420 c⁄° 
ve˘‹
<
Poöt
>& 
loˇti⁄s
=vector<Point>()) const;

421 
vútuÆ
 
compuãLogPﬁ¨M≠pög
(
M©
& 
m≠pögMask
) const;

422 
vútuÆ
 
SSD
(c⁄° 
M©
& 
img
, 
Poöt
 
±
, M©& 
ssd
) const;

424 
	gsmÆlSize
;

425 
	gœrgeSize
;

426 
	g°¨tDi°™˚Buckë
;

427 
	gnumbîOfDi°™˚Buckës
;

428 
	gnumbîOfAngÀs
;

430 íum { 
	gDEFAULT_SMALL_SIZE
 = 5, 
	gDEFAULT_LARGE_SIZE
 = 41,

431 
	gDEFAULT_NUM_ANGLES
 = 20, 
	gDEFAULT_START_DISTANCE_BUCKET
 = 3,

432 
	gDEFAULT_NUM_DISTANCE_BUCKETS
 = 7 };

436 
	$boﬁ
 (*
	tBundÀAdju°CÆlback
)(
	tôî©i⁄
, 
	tn‹m_îr‹
, * 
	tu£r_d©a
);

438 ˛as†
	cCV_EXPORTS
 
LevM¨qS∑r£
 {

439 
public
:

440 
	`LevM¨qS∑r£
();

441 
	`LevM¨qS∑r£
(
≈oöts
,

442 
nˇmîas
,

443 
nPoötP¨ams
,

444 
nCamîaP¨ams
,

445 
nEºP¨ams
,

447 
M©
& 
visibûôy
,

449 
M©
& 
P0
,

450 
M©
& 
X
,

451 
TîmCrôîü
 
¸ôîü
,

454 (
CV_CDECL
 * 
fjac
)(
i
, 
j
, 
M©
& 
poöt_∑øms
,

455 
M©
& 
ˇm_∑øms
, M©& 
A
, M©& 
B
, * 
d©a
),

457 (
CV_CDECL
 * 
func
)(
i
, 
j
, 
M©
& 
poöt_∑øms
,

458 
M©
& 
ˇm_∑øms
, M©& 
e°im
, * 
d©a
),

459 * 
d©a
,

460 
BundÀAdju°CÆlback
 
cb
, * 
u£r_d©a


463 
vútuÆ
 ~
	`LevM¨qS∑r£
();

465 
vútuÆ
 
	`run
–
≈oöts
,

466 
nˇmîas
,

467 
nPoötP¨ams
,

468 
nCamîaP¨ams
,

469 
nEºP¨ams
,

471 
M©
& 
visibûôy
,

473 
M©
& 
P0
,

474 
M©
& 
X
,

475 
TîmCrôîü
 
¸ôîü
,

478 (
CV_CDECL
 * 
fjac
)(
i
, 
j
, 
M©
& 
poöt_∑øms
,

479 
M©
& 
ˇm_∑øms
, M©& 
A
, M©& 
B
, * 
d©a
),

481 (
CV_CDECL
 * 
func
)(
i
, 
j
, 
M©
& 
poöt_∑øms
,

482 
M©
& 
ˇm_∑øms
, M©& 
e°im
, * 
d©a
),

483 * 
d©a


486 
vútuÆ
 
	`˛ór
();

489 
	`bundÀAdju°
(
ve˘‹
<
Poöt3d
>& 
poöts
,

490 c⁄° 
ve˘‹
<ve˘‹<
Poöt2d
> >& 
imagePoöts
,

491 c⁄° 
ve˘‹
<ve˘‹<> >& 
visibûôy
,

492 
ve˘‹
<
M©
>& 
ˇmîaM©rix
,

493 
ve˘‹
<
M©
>& 
R
,

494 
ve˘‹
<
M©
>& 
T
,

495 
ve˘‹
<
M©
>& 
di°C€ffs
,

496 c⁄° 
TîmCrôîü
& 
¸ôîü
=

497 
	`TîmCrôîü
(
TîmCrôîü
::
COUNT
+TîmCrôîü::
EPS
, 30, 
DBL_EPSILON
),

498 
BundÀAdju°CÆlback
 
cb
 = 0, * 
u£r_d©a
 = 0);

500 
public
:

501 
vútuÆ
 
	`›timize
(
CvM©
 &
_vis
);

504 
	`ask_f‹_¥oj
(
CvM©
 &
_vis
,
boﬁ
 
⁄˚
=
Ál£
);

506 
	`ask_f‹_¥ojac
(
CvM©
 &
_vis
);

508 
CvM©
* 
îr
;

509 
¥evEºN‹m
, 
îrN‹m
;

510 
œmbda
;

511 
CvTîmCrôîü
 
¸ôîü
;

512 
ôîs
;

514 
CvM©
** 
U
;

515 
CvM©
** 
V
;

516 
CvM©
** 
öv_V_°¨
;

518 
CvM©
** 
A
;

519 
CvM©
** 
B
;

520 
CvM©
** 
W
;

522 
CvM©
* 
X
;

523 
CvM©
* 
hX
;

525 
CvM©
* 
¥evP
;

526 
CvM©
* 
P
;

529 
CvM©
* 
dñèP
;

531 
CvM©
** 
ó
;

533 
CvM©
** 
eb
;

536 
CvM©
** 
Yj
;

538 
CvM©
* 
S
;

540 
CvM©
* 
JtJ_düg
;

542 
CvM©
* 
Vis_ödex
;

544 
num_ˇms
;

545 
num_poöts
;

546 
num_îr_∑øm
;

547 
num_ˇm_∑øm
;

548 
num_poöt_∑øm
;

551 (*
fjac
)(
i
, 
j
, 
M©
& 
poöt_∑øms
, M©& 
ˇm_∑øms
, M©& 
A
, M©& 
B
, * 
d©a
);

552 (*
func
)(
i
, 
j
, 
M©
& 
poöt_∑øms
, M©& 
ˇm_∑øms
, M©& 
e°im
, * 
d©a
);

554 * 
d©a
;

556 
BundÀAdju°CÆlback
 
cb
;

557 * 
u£r_d©a
;

558 
	}
};

560 
CV_EXPORTS_W
 
chamîM©chög
–
M©
& 
img
, M©& 
ãm∂
,

561 
CV_OUT
 
ve˘‹
<ve˘‹<
Poöt
> >& 
ªsu…s
, CV_OUT ve˘‹<>& 
co°
,

562 
ãm∂SˇÀ
=1, 
maxM©ches
 = 20,

563 
möM©chDi°™˚
 = 1.0, 
∑dX
 = 3,

564 
∑dY
 = 3, 
sˇÀs
 = 5, 
möSˇÀ
 = 0.6, 
maxSˇÀ
 = 1.6,

565 
‹õ¡©i⁄Weight
 = 0.5, 
åunˇã
 = 20);

568 ˛as†
	cCV_EXPORTS_W
 
	gSãªoV¨


570 
	gpublic
:

572 íum {
USE_INITIAL_DISPARITY
 = 1, 
	gUSE_EQUALIZE_HIST
 = 2, 
	gUSE_SMART_ID
 = 4, 
	gUSE_AUTO_PARAMS
 = 8, 
	gUSE_MEDIAN_FILTERING
 = 16};

573 íum {
	gCYCLE_O
, 
	gCYCLE_V
};

574 íum {
	gPENALIZATION_TICHONOV
, 
	gPENALIZATION_CHARBONNIER
, 
	gPENALIZATION_PERONA_MALIK
};

577 
CV_WRAP
 
SãªoV¨
();

580 
CV_WRAP
 
SãªoV¨
(
Àvñs
, 
pyrSˇÀ
, 
nIt
, 
möDi•
, 
maxDi•
, 
pﬁy_n
, 
pﬁy_sigma
, 
fi
, 
œmbda
, 
≥«liz©i⁄
, 
cy˛e
, 
Êags
);

583 
	gvútuÆ
 ~
SãªoV¨
();

586 
CV_WRAP_AS
(
compuã
Ë
vútuÆ
 
›î©‹
()(c⁄° 
	gM©
& 
	gÀ·
, c⁄° M©& 
	gright
, 
CV_OUT
 M©& 
	gdi•
);

588 
CV_PROP_RW
 
	gÀvñs
;

589 
CV_PROP_RW
 
	gpyrSˇÀ
;

590 
CV_PROP_RW
 
	gnIt
;

591 
CV_PROP_RW
 
	gmöDi•
;

592 
CV_PROP_RW
 
	gmaxDi•
;

593 
CV_PROP_RW
 
	gpﬁy_n
;

594 
CV_PROP_RW
 
	gpﬁy_sigma
;

595 
CV_PROP_RW
 
	gfi
;

596 
CV_PROP_RW
 
	gœmbda
;

597 
CV_PROP_RW
 
	g≥«liz©i⁄
;

598 
CV_PROP_RW
 
	gcy˛e
;

599 
CV_PROP_RW
 
	gÊags
;

601 
	g¥iv©e
:

602 
autoP¨ams
();

603 
FMG
(
M©
 &
I1
, M© &
I2
, M© &
I2x
, M© &
u
, 
Àvñ
);

604 
VCy˛e_MyFAS
(
M©
 &
I1_h
, M© &
I2_h
, M© &
I2x_h
, M© &
u_h
, 
Àvñ
);

605 
V¨üti⁄ÆSﬁvî
(
M©
 &
I1_h
, M© &
I2_h
, M© &
I2x_h
, M© &
u_h
, 
Àvñ
);

608 
CV_EXPORTS
 
pﬁyfô
(c⁄° 
M©
& 
§cx
, c⁄° M©& 
§cy
, M©& 
d°
, 
‹dî
);

610 ˛as†
	cCV_EXPORTS
 
	gDúe˘‹y


612 
	gpublic
:

613 
°d
::
ve˘‹
<°d::
°rög
> 
GëLi°Fûes
 ( c⁄° std::°rög& 
∑th
, c⁄° std::°rög & 
exãn
 = "*", 
boﬁ
 
addP©h
 = 
åue
 );

614 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
GëLi°FûesR
 ( c⁄° std::°rög& 
∑th
, c⁄° std::°rög & 
exãn
 = "*", 
boﬁ
 
addP©h
 = 
åue
 );

615 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
GëLi°Fﬁdîs
–c⁄° std::°rög& 
∑th
, c⁄° std::°rög & 
exãn
 = "*", 
boﬁ
 
addP©h
 = 
åue
 );

626 
CV_EXPORTS
 
gíî©eCﬁ‹s
–
°d
::
ve˘‹
<
Sˇœr
>& 
cﬁ‹s
, 
size_t
 
cou¡
, size_à
Á˘‹
=100 );

633 íum { 
	gROTATION
 = 1,

634 
	gTRANSLATION
 = 2,

635 
	gRIGID_BODY_MOTION
 = 4

637 
CV_EXPORTS
 
boﬁ
 
RGBDOdomëry
–
M©
& 
Rt
, c⁄° M©& 
öôRt
,

638 c⁄° 
M©
& 
image0
, c⁄° M©& 
dïth0
, c⁄° M©& 
mask0
,

639 c⁄° 
M©
& 
image1
, c⁄° M©& 
dïth1
, c⁄° M©& 
mask1
,

640 c⁄° 
M©
& 
ˇmîaM©rix
, 
möDïth
=0.f, 
maxDïth
=4.f, 
maxDïthDiff
=0.07f,

641 c⁄° 
°d
::
ve˘‹
<>& 
ôîCou¡s
=std::vector<>(),

642 c⁄° 
°d
::
ve˘‹
<>& 
möGødõ¡Magnôudes
=std::vector<>(),

643 
å™sf‹mTy≥
=
RIGID_BODY_MOTION
 );

654 ˛as†
	cCV_EXPORTS
 
	gLogPﬁ¨_I¡îp


656 
	gpublic
:

658 
LogPﬁ¨_I¡îp
() {}

674 
LogPﬁ¨_I¡îp
(
w
, 
h
, 
Poöt2i
 
˚¡î
, 
R
=70, 
ro0
=3.0,

675 
öãΩ
=
INTER_LINEAR
, 
fuŒ
=1, 
S
=117, 
•
=1);

681 c⁄° 
M©
 
to_c‹tiˇl
(c⁄° M© &
sour˚
);

687 c⁄° 
M©
 
to_ˇπesün
(c⁄° M© &
sour˚
);

691 ~
LogPﬁ¨_I¡îp
();

693 
	g¥Ÿe˘ed
:

695 
M©
 
R§i
;

696 
M©
 
	gC§i
;

698 
	gS
, 
	gR
, 
	gM
, 
	gN
;

699 
	gt›
, 
	gbŸtom
,
	gÀ·
,
	gright
;

700 
	gro0
, 
	gromax
, 
	ga
, 
	gq
;

701 
	göãΩ
;

703 
M©
 
	gETAyx
;

704 
M©
 
	gCSIyx
;

706 
¸óã_m≠
(
M
, 
N
, 
R
, 
S
, 
ro0
);

718 ˛as†
	cCV_EXPORTS
 
	gLogPﬁ¨_Ovîœµög


720 
	gpublic
:

721 
LogPﬁ¨_Ovîœµög
() {}

737 
LogPﬁ¨_Ovîœµög
(
w
, 
h
, 
Poöt2i
 
˚¡î
, 
R
=70,

738 
ro0
=3.0, 
fuŒ
=1, 
S
=117, 
•
=1);

744 c⁄° 
M©
 
to_c‹tiˇl
(c⁄° M© &
sour˚
);

750 c⁄° 
M©
 
to_ˇπesün
(c⁄° M© &
sour˚
);

754 ~
LogPﬁ¨_Ovîœµög
();

756 
	g¥Ÿe˘ed
:

758 
M©
 
R§i
;

759 
M©
 
	gC§i
;

760 
	gve˘‹
<> 
	gR§
;

761 
	gve˘‹
<> 
	gC§
;

762 
	gve˘‹
<> 
	gW§
;

764 
	gS
, 
	gR
, 
	gM
, 
	gN
, 
	göd1
;

765 
	gt›
, 
	gbŸtom
,
	gÀ·
,
	gright
;

766 
	gro0
, 
	gromax
, 
	ga
, 
	gq
;

768 
	skî√l


770 
kî√l
(Ë{ 
	gw
 = 0; }

771 
	gve˘‹
<> 
	gweights
;

772 
	gw
;

775 
M©
 
	gETAyx
;

776 
M©
 
	gCSIyx
;

777 
	gve˘‹
<
	gkî√l
> 
	gw_kî_2D
;

779 
¸óã_m≠
(
M
, 
N
, 
R
, 
S
, 
ro0
);

792 ˛as†
	cCV_EXPORTS
 
	gLogPﬁ¨_Adja˚¡


794 
	gpublic
:

795 
LogPﬁ¨_Adja˚¡
() {}

812 
LogPﬁ¨_Adja˚¡
(
w
, 
h
, 
Poöt2i
 
˚¡î
, 
R
=70, 
ro0
=3.0, 
smö
=0.25, 
fuŒ
=1, 
S
=117, 
•
=1);

818 c⁄° 
M©
 
to_c‹tiˇl
(c⁄° M© &
sour˚
);

824 c⁄° 
M©
 
to_ˇπesün
(c⁄° M© &
sour˚
);

828 ~
LogPﬁ¨_Adja˚¡
();

830 
	g¥Ÿe˘ed
:

831 
	spixñ


833 
pixñ
(Ë{ 
u
 = 
v
 = 0; 
	ga
 = 0.; }

834 
	gu
;

835 
	gv
;

836 
	ga
;

838 
	gS
, 
	gR
, 
	gM
, 
	gN
;

839 
	gt›
, 
	gbŸtom
,
	gÀ·
,
	gright
;

840 
	gro0
, 
	gromax
, 
	ga
, 
	gq
;

841 
	gve˘‹
<ve˘‹<
	gpixñ
> > 
	gL
;

842 
	gve˘‹
<> 
	gA
;

844 
subdivide_ªcursivñy
(
x
, 
y
, 
i
, 
j
, 
Àngth
, 
smö
);

845 
boﬁ
 
gë_uv
(
x
, 
y
, &
u
, &
v
);

846 
¸óã_m≠
(
M
, 
N
, 
R
, 
S
, 
ro0
, 
smö
);

849 
CV_EXPORTS
 
M©
 
sub•a˚Proje˘
(
I≈utAºay
 
W
, I≈utAºay 
món
, I≈utAºay 
§c
);

850 
CV_EXPORTS
 
M©
 
sub•a˚Rec⁄°ru˘
(
I≈utAºay
 
W
, I≈utAºay 
món
, I≈utAºay 
§c
);

852 ˛as†
	cCV_EXPORTS
 
	gLDA


854 
	gpublic
:

857 
LDA
(
num_comp⁄íts
 = 0) :

858 
_num_comp⁄íts
(
num_comp⁄íts
) {};

864 
LDA
(c⁄° 
M©
& 
§c
, 
ve˘‹
<> 
œbñs
,

865 
num_comp⁄íts
 = 0) :

866 
_num_comp⁄íts
(
num_comp⁄íts
)

868 
this
->
compuã
(
§c
, 
œbñs
);

875 
LDA
(
I≈utAºayOfAºays
 
§c
, 
I≈utAºay
 
œbñs
,

876 
num_comp⁄íts
 = 0) :

877 
_num_comp⁄íts
(
num_comp⁄íts
)

879 
this
->
compuã
(
§c
, 
œbñs
);

883 
ßve
(c⁄° 
°rög
& 
fûíame
) const;

886 
lﬂd
(c⁄° 
°rög
& 
fûíame
);

889 
ßve
(
FûeSt‹age
& 
fs
) const;

892 
lﬂd
(c⁄° 
FûeSt‹age
& 
node
);

895 ~
LDA
() {}

898 
compuã
(
I≈utAºayOfAºays
 
§c
, 
I≈utAºay
 
œbñs
);

901 
M©
 
¥oje˘
(
I≈utAºay
 
§c
);

904 
M©
 
ªc⁄°ru˘
(
I≈utAºay
 
§c
);

907 
M©
 
eigíve˘‹s
(Ëc⁄° {  
	g_eigíve˘‹s
; };

910 
M©
 
eigívÆues
(Ëc⁄° {  
	g_eigívÆues
; }

912 
	g¥Ÿe˘ed
:

913 
boﬁ
 
_d©aAsRow
;

914 
	g_num_comp⁄íts
;

915 
M©
 
	g_eigíve˘‹s
;

916 
M©
 
	g_eigívÆues
;

918 
lda
(
I≈utAºayOfAºays
 
§c
, 
I≈utAºay
 
œbñs
);

921 ˛as†
	cCV_EXPORTS_W
 
	gFa˚Recognizî
 : 
public
 
Alg‹ôhm


923 
public
:

925 
vútuÆ
 ~
Fa˚Recognizî
() {}

928 
CV_WRAP
 
vútuÆ
 
åaö
(
I≈utAºayOfAºays
 
§c
, 
I≈utAºay
 
œbñs
) = 0;

931 
CV_WRAP
 
upd©e
(
I≈utAºayOfAºays
 
§c
, 
I≈utAºay
 
œbñs
);

934 
vútuÆ
 
¥edi˘
(
I≈utAºay
 
§c
) const = 0;

937 
CV_WRAP
 
vútuÆ
 
¥edi˘
(
I≈utAºay
 
§c
, 
CV_OUT
 &
œbñ
, CV_OUT &
c⁄fidí˚
) const = 0;

940 
CV_WRAP
 
vútuÆ
 
ßve
(c⁄° 
°rög
& 
fûíame
) const;

943 
CV_WRAP
 
vútuÆ
 
lﬂd
(c⁄° 
°rög
& 
fûíame
);

946 
vútuÆ
 
ßve
(
FûeSt‹age
& 
fs
) const = 0;

949 
vútuÆ
 
lﬂd
(c⁄° 
FûeSt‹age
& 
fs
) = 0;

953 
CV_EXPORTS_W
 
	gPå
<
	gFa˚Recognizî
> 
¸óãEigíFa˚Recognizî
(
num_comp⁄íts
 = 0, 
thªshﬁd
 = 
DBL_MAX
);

954 
CV_EXPORTS_W
 
	gPå
<
	gFa˚Recognizî
> 
¸óãFishîFa˚Recognizî
(
num_comp⁄íts
 = 0, 
thªshﬁd
 = 
DBL_MAX
);

955 
CV_EXPORTS_W
 
	gPå
<
	gFa˚Recognizî
> 
¸óãLBPHFa˚Recognizî
(
ødius
=1, 
√ighb‹s
=8,

956 
grid_x
=8, 
grid_y
=8, 
thªshﬁd
 = 
DBL_MAX
);

960 
	gCOLORMAP_AUTUMN
 = 0,

961 
	gCOLORMAP_BONE
 = 1,

962 
	gCOLORMAP_JET
 = 2,

963 
	gCOLORMAP_WINTER
 = 3,

964 
	gCOLORMAP_RAINBOW
 = 4,

965 
	gCOLORMAP_OCEAN
 = 5,

966 
	gCOLORMAP_SUMMER
 = 6,

967 
	gCOLORMAP_SPRING
 = 7,

968 
	gCOLORMAP_COOL
 = 8,

969 
	gCOLORMAP_HSV
 = 9,

970 
	gCOLORMAP_PINK
 = 10,

971 
	gCOLORMAP_HOT
 = 11

974 
CV_EXPORTS_W
 
≠∂yCﬁ‹M≠
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
cﬁ‹m≠
);

976 
CV_EXPORTS
 
boﬁ
 
öôModuÀ_c⁄åib
();

979 
	~"›ícv2/c⁄åib/ªtöa.hµ
"

981 
	~"›ícv2/c⁄åib/›íÁbm≠.hµ
"

	@/usr/include/opencv2/core/core_c.h

44 #i‚de‡
__OPENCV_CORE_C_H__


45 
	#__OPENCV_CORE_C_H__


	)

47 
	~"›ícv2/c‹e/ty≥s_c.h
"

49 #ifde‡
__˝lu•lus


61 
CVAPI
(*Ë
cvAŒoc
–
size_t
 
size
 );

69 
CVAPI
(Ë
cvFªe_
–* 
±r
 );

70 
	#cvFªe
(
±r
Ë(
	`cvFªe_
(*’å)), *’å)=0)

	)

73 
CVAPI
(
I∂Image
*Ë
cvCª©eImageHódî
–
CvSize
 
size
, 
dïth
, 
ch™√ls
 );

76 
CVAPI
(
I∂Image
*Ë
cvInôImageHódî
–I∂Image* 
image
, 
CvSize
 
size
, 
dïth
,

77 
ch™√ls
, 
‹igö
 
CV_DEFAULT
(0),

78 
Æign
 
CV_DEFAULT
(4));

81 
CVAPI
(
I∂Image
*Ë
cvCª©eImage
–
CvSize
 
size
, 
dïth
, 
ch™√ls
 );

84 
CVAPI
(Ë
cvRñó£ImageHódî
–
I∂Image
** 
image
 );

87 
CVAPI
(Ë
cvRñó£Image
–
I∂Image
** 
image
 );

90 
CVAPI
(
I∂Image
*Ë
cvCl⁄eImage
–c⁄° I∂Image* 
image
 );

94 
CVAPI
(Ë
cvSëImageCOI
–
I∂Image
* 
image
, 
coi
 );

97 
CVAPI
(Ë
cvGëImageCOI
–c⁄° 
I∂Image
* 
image
 );

100 
CVAPI
(Ë
cvSëImageROI
–
I∂Image
* 
image
, 
CvRe˘
 
ª˘
 );

103 
CVAPI
(Ë
cvRe£tImageROI
–
I∂Image
* 
image
 );

106 
CVAPI
(
CvRe˘
Ë
cvGëImageROI
–c⁄° 
I∂Image
* 
image
 );

109 
CVAPI
(
CvM©
*Ë
cvCª©eM©Hódî
–
rows
, 
cﬁs
, 
ty≥
 );

111 
	#CV_AUTOSTEP
 0x7fffffff

	)

114 
CVAPI
(
CvM©
*Ë
cvInôM©Hódî
–CvM©* 
m©
, 
rows
, 
cﬁs
,

115 
ty≥
, * 
d©a
 
CV_DEFAULT
(
NULL
),

116 
°ï
 
CV_DEFAULT
(
CV_AUTOSTEP
) );

119 
CVAPI
(
CvM©
*Ë
cvCª©eM©
–
rows
, 
cﬁs
, 
ty≥
 );

123 
CVAPI
(Ë
cvRñó£M©
–
CvM©
** 
m©
 );

127 
CV_INLINE
 
cvDecRefD©a
–
CvAº
* 
¨r
 )

129 if–
CV_IS_MAT
–
¨r
 ))

131 
CvM©
* 
m©
 = (CvM©*)
¨r
;

132 
m©
->
d©a
.
±r
 = 
NULL
;

133 if–
m©
->
ªfcou¡
 !
NULL
 && --*mat->refcount == 0 )

134 
cvFªe
–&
m©
->
ªfcou¡
 );

135 
m©
->
ªfcou¡
 = 
NULL
;

137 if–
CV_IS_MATND
–
¨r
 ))

139 
CvM©ND
* 
m©
 = (CvM©ND*)
¨r
;

140 
m©
->
d©a
.
±r
 = 
NULL
;

141 if–
m©
->
ªfcou¡
 !
NULL
 && --*mat->refcount == 0 )

142 
cvFªe
–&
m©
->
ªfcou¡
 );

143 
m©
->
ªfcou¡
 = 
NULL
;

148 
CV_INLINE
 
cvIncRefD©a
–
CvAº
* 
¨r
 )

150 
ªfcou¡
 = 0;

151 if–
CV_IS_MAT
–
¨r
 ))

153 
CvM©
* 
m©
 = (CvM©*)
¨r
;

154 if–
m©
->
ªfcou¡
 !
NULL
 )

155 
ªfcou¡
 = ++*
m©
->refcount;

157 if–
CV_IS_MATND
–
¨r
 ))

159 
CvM©ND
* 
m©
 = (CvM©ND*)
¨r
;

160 if–
m©
->
ªfcou¡
 !
NULL
 )

161 
ªfcou¡
 = ++*
m©
->refcount;

163  
ªfcou¡
;

168 
CVAPI
(
CvM©
*Ë
cvCl⁄eM©
–c⁄° CvM©* 
m©
 );

173 
CVAPI
(
CvM©
*Ë
cvGëSubRe˘
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
CvRe˘
 
ª˘
 );

174 
	#cvGëSubAº
 
cvGëSubRe˘


	)

178 
CVAPI
(
CvM©
*Ë
cvGëRows
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

179 
°¨t_row
, 
íd_row
,

180 
dñè_row
 
CV_DEFAULT
(1));

182 
CV_INLINE
 
CvM©
* 
cvGëRow
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
row
 )

184  
cvGëRows
–
¨r
, 
subm©
, 
row
,Ñow + 1, 1 );

190 
CVAPI
(
CvM©
*Ë
cvGëCﬁs
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

191 
°¨t_cﬁ
, 
íd_cﬁ
 );

193 
CV_INLINE
 
CvM©
* 
cvGëCﬁ
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
, 
cﬁ
 )

195  
cvGëCﬁs
–
¨r
, 
subm©
, 
cﬁ
, col + 1 );

202 
CVAPI
(
CvM©
*Ë
cvGëDüg
–c⁄° 
CvAº
* 
¨r
, CvM©* 
subm©
,

203 
düg
 
CV_DEFAULT
(0));

206 
CVAPI
(Ë
cvSˇœrToRawD©a
–c⁄° 
CvSˇœr
* 
sˇœr
, * 
d©a
, 
ty≥
,

207 
exãnd_to_12
 
CV_DEFAULT
(0) );

209 
CVAPI
(Ë
cvRawD©aToSˇœr
–c⁄° * 
d©a
, 
ty≥
, 
CvSˇœr
* 
sˇœr
 );

212 
CVAPI
(
CvM©ND
*Ë
cvCª©eM©NDHódî
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

215 
CVAPI
(
CvM©ND
*Ë
cvCª©eM©ND
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

218 
CVAPI
(
CvM©ND
*Ë
cvInôM©NDHódî
–CvM©ND* 
m©
, 
dims
, c⁄° * 
sizes
,

219 
ty≥
, * 
d©a
 
CV_DEFAULT
(
NULL
) );

222 
CV_INLINE
 
cvRñó£M©ND
–
CvM©ND
** 
m©
 )

224 
cvRñó£M©
–(
CvM©
**)
m©
 );

228 
CVAPI
(
CvM©ND
*Ë
cvCl⁄eM©ND
–c⁄° CvM©ND* 
m©
 );

231 
CVAPI
(
CvS∑r£M©
*Ë
cvCª©eS∑r£M©
–
dims
, c⁄° * 
sizes
, 
ty≥
 );

234 
CVAPI
(Ë
cvRñó£S∑r£M©
–
CvS∑r£M©
** 
m©
 );

237 
CVAPI
(
CvS∑r£M©
*Ë
cvCl⁄eS∑r£M©
–c⁄° CvS∑r£M©* 
m©
 );

241 
CVAPI
(
CvS∑r£Node
*Ë
cvInôS∑r£M©Iãøt‹
–c⁄° 
CvS∑r£M©
* 
m©
,

242 
CvS∑r£M©Iãøt‹
* 
m©_ôî©‹
 );

245 
CV_INLINE
 
CvS∑r£Node
* 
cvGëNextS∑r£Node
–
CvS∑r£M©Iãøt‹
* 
m©_ôî©‹
 )

247 if–
m©_ôî©‹
->
node
->
√xt
 )

248  
m©_ôî©‹
->
node
 = m©_ôî©‹->node->
√xt
;

251 
idx
;

252  
idx
 = ++
m©_ôî©‹
->
curidx
; idx < m©_ôî©‹->
m©
->
hashsize
; idx++ )

254 
CvS∑r£Node
* 
node
 = (CvS∑r£Node*)
m©_ôî©‹
->
m©
->
hashèbÀ
[
idx
];

255 if–
node
 )

257 
m©_ôî©‹
->
curidx
 = 
idx
;

258  
m©_ôî©‹
->
node
 =Çode;

261  
NULL
;

267 
	#CV_MAX_ARR
 10

	)

269 
	sCvNAºayIãøt‹


271 
cou¡
;

272 
dims
;

273 
CvSize
 
size
;

274 
uch¨
* 
±r
[
CV_MAX_ARR
];

275 
°ack
[
CV_MAX_DIM
];

276 
CvM©ND
* 
hdr
[
CV_MAX_ARR
];

279 
	tCvNAºayIãøt‹
;

281 
	#CV_NO_DEPTH_CHECK
 1

	)

282 
	#CV_NO_CN_CHECK
 2

	)

283 
	#CV_NO_SIZE_CHECK
 4

	)

288 
CVAPI
(Ë
cvInôNAºayIãøt‹
–
cou¡
, 
CvAº
** 
¨rs
,

289 c⁄° 
CvAº
* 
mask
, 
CvM©ND
* 
°ubs
,

290 
CvNAºayIãøt‹
* 
¨øy_ôî©‹
,

291 
Êags
 
CV_DEFAULT
(0) );

294 
CVAPI
(Ë
cvNextNAºaySli˚
–
CvNAºayIãøt‹
* 
¨øy_ôî©‹
 );

299 
CVAPI
(Ë
cvGëEÀmTy≥
–c⁄° 
CvAº
* 
¨r
 );

303 
CVAPI
(Ë
cvGëDims
–c⁄° 
CvAº
* 
¨r
, * 
sizes
 
CV_DEFAULT
(
NULL
) );

309 
CVAPI
(Ë
cvGëDimSize
–c⁄° 
CvAº
* 
¨r
, 
ödex
 );

314 
CVAPI
(
uch¨
*Ë
cvPå1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, * 
ty≥
 
CV_DEFAULT
(
NULL
));

315 
CVAPI
(
uch¨
*Ë
cvPå2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, * 
ty≥
 
CV_DEFAULT
(
NULL
) );

316 
CVAPI
(
uch¨
*Ë
cvPå3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
,

317 * 
ty≥
 
CV_DEFAULT
(
NULL
));

323 
CVAPI
(
uch¨
*Ë
cvPåND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
, * 
ty≥
 
CV_DEFAULT
(
NULL
),

324 
¸óã_node
 
CV_DEFAULT
(1),

325 * 
¥eˇlc_hashvÆ
 
CV_DEFAULT
(
NULL
));

328 
CVAPI
(
CvSˇœr
Ë
cvGë1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
 );

329 
CVAPI
(
CvSˇœr
Ë
cvGë2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
 );

330 
CVAPI
(
CvSˇœr
Ë
cvGë3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
 );

331 
CVAPI
(
CvSˇœr
Ë
cvGëND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
 );

334 
CVAPI
(Ë
cvGëRól1D
–c⁄° 
CvAº
* 
¨r
, 
idx0
 );

335 
CVAPI
(Ë
cvGëRól2D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
 );

336 
CVAPI
(Ë
cvGëRól3D
–c⁄° 
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
 );

337 
CVAPI
(Ë
cvGëRólND
–c⁄° 
CvAº
* 
¨r
, c⁄° * 
idx
 );

340 
CVAPI
(Ë
cvSë1D
–
CvAº
* 
¨r
, 
idx0
, 
CvSˇœr
 
vÆue
 );

341 
CVAPI
(Ë
cvSë2D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
CvSˇœr
 
vÆue
 );

342 
CVAPI
(Ë
cvSë3D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
idx2
, 
CvSˇœr
 
vÆue
 );

343 
CVAPI
(Ë
cvSëND
–
CvAº
* 
¨r
, c⁄° * 
idx
, 
CvSˇœr
 
vÆue
 );

346 
CVAPI
(Ë
cvSëRól1D
–
CvAº
* 
¨r
, 
idx0
, 
vÆue
 );

347 
CVAPI
(Ë
cvSëRól2D
–
CvAº
* 
¨r
, 
idx0
, 
idx1
, 
vÆue
 );

348 
CVAPI
(Ë
cvSëRól3D
–
CvAº
* 
¨r
, 
idx0
,

349 
idx1
, 
idx2
, 
vÆue
 );

350 
CVAPI
(Ë
cvSëRólND
–
CvAº
* 
¨r
, c⁄° * 
idx
, 
vÆue
 );

354 
CVAPI
(Ë
cvCÀ¨ND
–
CvAº
* 
¨r
, c⁄° * 
idx
 );

361 
CVAPI
(
CvM©
*Ë
cvGëM©
–c⁄° 
CvAº
* 
¨r
, CvM©* 
hódî
,

362 * 
coi
 
CV_DEFAULT
(
NULL
),

363 
ÆlowND
 
CV_DEFAULT
(0));

366 
CVAPI
(
I∂Image
*Ë
cvGëImage
–c⁄° 
CvAº
* 
¨r
, I∂Image* 
image_hódî
 );

379 
CVAPI
(
CvAº
*Ë
cvResh≠eM©ND
–c⁄° CvAº* 
¨r
,

380 
sizeof_hódî
, 
CvAº
* 
hódî
,

381 
√w_˙
, 
√w_dims
, * 
√w_sizes
 );

383 
	#cvResh≠eND
–
¨r
, 
hódî
, 
√w_˙
, 
√w_dims
, 
√w_sizes
 ) \

384 
	`cvResh≠eM©ND
–(
¨r
), (*(
hódî
)), (header), \

385 (
√w_˙
), (
√w_dims
), (
√w_sizes
))

	)

387 
CVAPI
(
CvM©
*Ë
cvResh≠e
–c⁄° 
CvAº
* 
¨r
, CvM©* 
hódî
,

388 
√w_˙
, 
√w_rows
 
CV_DEFAULT
(0) );

392 
CVAPI
(Ë
cvRïót
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

395 
CVAPI
(Ë
cvCª©eD©a
–
CvAº
* 
¨r
 );

398 
CVAPI
(Ë
cvRñó£D©a
–
CvAº
* 
¨r
 );

403 
CVAPI
(Ë
cvSëD©a
–
CvAº
* 
¨r
, * 
d©a
, 
°ï
 );

408 
CVAPI
(Ë
cvGëRawD©a
–c⁄° 
CvAº
* 
¨r
, 
uch¨
** 
d©a
,

409 * 
°ï
 
CV_DEFAULT
(
NULL
),

410 
CvSize
* 
roi_size
 
CV_DEFAULT
(
NULL
));

413 
CVAPI
(
CvSize
Ë
cvGëSize
–c⁄° 
CvAº
* 
¨r
 );

416 
CVAPI
(Ë
cvC›y
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

417 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

421 
CVAPI
(Ë
cvSë
–
CvAº
* 
¨r
, 
CvSˇœr
 
vÆue
,

422 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

425 
CVAPI
(Ë
cvSëZîo
–
CvAº
* 
¨r
 );

426 
	#cvZîo
 
cvSëZîo


	)

431 
CVAPI
(Ë
cvS∂ô
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°0
, CvAº* 
d°1
,

432 
CvAº
* 
d°2
, CvAº* 
d°3
 );

436 
CVAPI
(Ë
cvMîge
–c⁄° 
CvAº
* 
§c0
, c⁄° CvAº* 
§c1
,

437 c⁄° 
CvAº
* 
§c2
, c⁄° CvAº* 
§c3
,

438 
CvAº
* 
d°
 );

442 
CVAPI
(Ë
cvMixCh™√ls
–c⁄° 
CvAº
** 
§c
, 
§c_cou¡
,

443 
CvAº
** 
d°
, 
d°_cou¡
,

444 c⁄° * 
‰om_to
, 
∑ú_cou¡
 );

451 
CVAPI
(Ë
cvC⁄vîtSˇÀ
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

452 
sˇÀ
 
CV_DEFAULT
(1),

453 
shi·
 
CV_DEFAULT
(0) );

454 
	#cvCvtSˇÀ
 
cvC⁄vîtSˇÀ


	)

455 
	#cvSˇÀ
 
cvC⁄vîtSˇÀ


	)

456 
	#cvC⁄vît
–
§c
, 
d°
 ) 
	`cvC⁄vîtSˇÀ
–(§c), (d°), 1, 0 )

	)

464 
CVAPI
(Ë
cvC⁄vîtSˇÀAbs
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

465 
sˇÀ
 
CV_DEFAULT
(1),

466 
shi·
 
CV_DEFAULT
(0) );

467 
	#cvCvtSˇÀAbs
 
cvC⁄vîtSˇÀAbs


	)

474 
CVAPI
(
CvTîmCrôîü
Ë
cvCheckTîmCrôîü
–CvTîmCrôîü 
¸ôîü
,

475 
deÁu…_ïs
,

476 
deÁu…_max_ôîs
 );

483 
CVAPI
(Ë
cvAdd
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

484 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

487 
CVAPI
(Ë
cvAddS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

488 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

491 
CVAPI
(Ë
cvSub
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

492 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

495 
CV_INLINE
 
cvSubS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

496 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
))

498 
cvAddS
–
§c
, 
cvSˇœr
–-
vÆue
.
vÆ
[0], -value.val[1], -value.val[2], -value.val[3]),

499 
d°
, 
mask
 );

503 
CVAPI
(Ë
cvSubRS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
, CvAº* 
d°
,

504 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

508 
CVAPI
(Ë
cvMul
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

509 
CvAº
* 
d°
, 
sˇÀ
 
CV_DEFAULT
(1) );

514 
CVAPI
(Ë
cvDiv
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

515 
CvAº
* 
d°
, 
sˇÀ
 
CV_DEFAULT
(1));

518 
CVAPI
(Ë
cvSˇÀAdd
–c⁄° 
CvAº
* 
§c1
, 
CvSˇœr
 
sˇÀ
,

519 c⁄° 
CvAº
* 
§c2
, CvAº* 
d°
 );

520 
	#cvAXPY
–
A
, 
ªÆ_sˇœr
, 
B
, 
C
 ) 
	`cvSˇÀAdd
(A, 
	`cvRólSˇœr
‘ól_sˇœr), B, C)

	)

523 
CVAPI
(Ë
cvAddWeighãd
–c⁄° 
CvAº
* 
§c1
, 
Æpha
,

524 c⁄° 
CvAº
* 
§c2
, 
bëa
,

525 
gamma
, 
CvAº
* 
d°
 );

528 
CVAPI
(Ë
cvDŸProdu˘
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
 );

531 
CVAPI
(Ë
cvAnd
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

532 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

535 
CVAPI
(Ë
cvAndS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

536 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

539 
CVAPI
(Ë
cvOr
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

540 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

543 
CVAPI
(Ë
cvOrS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

544 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

547 
CVAPI
(Ë
cvX‹
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

548 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

551 
CVAPI
(Ë
cvX‹S
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
vÆue
,

552 
CvAº
* 
d°
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
));

555 
CVAPI
(Ë
cvNŸ
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

558 
CVAPI
(Ë
cvInR™ge
–c⁄° 
CvAº
* 
§c
, c⁄° CvAº* 
lowî
,

559 c⁄° 
CvAº
* 
uµî
, CvAº* 
d°
 );

562 
CVAPI
(Ë
cvInR™geS
–c⁄° 
CvAº
* 
§c
, 
CvSˇœr
 
lowî
,

563 
CvSˇœr
 
uµî
, 
CvAº
* 
d°
 );

565 
	#CV_CMP_EQ
 0

	)

566 
	#CV_CMP_GT
 1

	)

567 
	#CV_CMP_GE
 2

	)

568 
	#CV_CMP_LT
 3

	)

569 
	#CV_CMP_LE
 4

	)

570 
	#CV_CMP_NE
 5

	)

576 
CVAPI
(Ë
cvCmp
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
, 
cmp_›
 );

579 
CVAPI
(Ë
cvCmpS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
, 
cmp_›
 );

582 
CVAPI
(Ë
cvMö
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

585 
CVAPI
(Ë
cvMax
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

588 
CVAPI
(Ë
cvMöS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
 );

591 
CVAPI
(Ë
cvMaxS
–c⁄° 
CvAº
* 
§c
, 
vÆue
, CvAº* 
d°
 );

594 
CVAPI
(Ë
cvAbsDiff
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

597 
CVAPI
(Ë
cvAbsDiffS
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
CvSˇœr
 
vÆue
 );

598 
	#cvAbs
–
§c
, 
d°
 ) 
	`cvAbsDiffS
–(§c), (d°), 
	`cvSˇœrAŒ
(0))

	)

606 
CVAPI
(Ë
cvC¨tToPﬁ¨
–c⁄° 
CvAº
* 
x
, c⁄° CvAº* 
y
,

607 
CvAº
* 
magnôude
, CvAº* 
™gÀ
 
CV_DEFAULT
(
NULL
),

608 
™gÀ_ö_degªes
 
CV_DEFAULT
(0));

613 
CVAPI
(Ë
cvPﬁ¨ToC¨t
–c⁄° 
CvAº
* 
magnôude
, c⁄° CvAº* 
™gÀ
,

614 
CvAº
* 
x
, CvAº* 
y
,

615 
™gÀ_ö_degªes
 
CV_DEFAULT
(0));

618 
CVAPI
(Ë
cvPow
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
powî
 );

623 
CVAPI
(Ë
cvExp
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

629 
CVAPI
(Ë
cvLog
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

632 
CVAPI
(Ë
cvFa°Ar˘™
–
y
, 
x
 );

635 
CVAPI
(Ë
cvCbπ
–
vÆue
 );

641 
	#CV_CHECK_RANGE
 1

	)

642 
	#CV_CHECK_QUIET
 2

	)

643 
CVAPI
(Ë
cvCheckAº
–c⁄° 
CvAº
* 
¨r
, 
Êags
 
CV_DEFAULT
(0),

644 
mö_vÆ
 
CV_DEFAULT
(0), 
max_vÆ
 CV_DEFAULT(0));

645 
	#cvCheckAºay
 
cvCheckAº


	)

647 
	#CV_RAND_UNI
 0

	)

648 
	#CV_RAND_NORMAL
 1

	)

649 
CVAPI
(Ë
cvR™dAº
–
CvRNG
* 
∫g
, 
CvAº
* 
¨r
, 
di°_ty≥
,

650 
CvSˇœr
 
∑øm1
, CvSˇœ∏
∑øm2
 );

652 
CVAPI
(Ë
cvR™dShufÊe
–
CvAº
* 
m©
, 
CvRNG
* 
∫g
,

653 
ôî_Á˘‹
 
CV_DEFAULT
(1.));

655 
	#CV_SORT_EVERY_ROW
 0

	)

656 
	#CV_SORT_EVERY_COLUMN
 1

	)

657 
	#CV_SORT_ASCENDING
 0

	)

658 
	#CV_SORT_DESCENDING
 16

	)

660 
CVAPI
(Ë
cvS‹t
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 
CV_DEFAULT
(
NULL
),

661 
CvAº
* 
idxm©
 
CV_DEFAULT
(
NULL
),

662 
Êags
 
CV_DEFAULT
(0));

665 
CVAPI
(Ë
cvSﬁveCubic
–c⁄° 
CvM©
* 
c€ffs
, CvM©* 
roŸs
 );

668 
CVAPI
(Ë
cvSﬁvePﬁy
(c⁄° 
CvM©
* 
c€ffs
, CvM© *
roŸs2
,

669 
maxôî
 
CV_DEFAULT
(20), 
fig
 CV_DEFAULT(100));

676 
CVAPI
(Ë
cvCrossProdu˘
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
 );

679 
	#cvM©MulAdd
–
§c1
, 
§c2
, 
§c3
, 
d°
 ) 
	`cvGEMM
–(§c1), (§c2), 1., (§c3), 1., (d°), 0 )

	)

680 
	#cvM©Mul
–
§c1
, 
§c2
, 
d°
 ) 
	`cvM©MulAdd
–(§c1), (§c2), 
NULL
, (d°))

	)

682 
	#CV_GEMM_A_T
 1

	)

683 
	#CV_GEMM_B_T
 2

	)

684 
	#CV_GEMM_C_T
 4

	)

687 
CVAPI
(Ë
cvGEMM
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, 
Æpha
,

688 c⁄° 
CvAº
* 
§c3
, 
bëa
, CvAº* 
d°
,

689 
tABC
 
CV_DEFAULT
(0));

690 
	#cvM©MulAddEx
 
cvGEMM


	)

694 
CVAPI
(Ë
cvTønsf‹m
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

695 c⁄° 
CvM©
* 
å™sm©
,

696 c⁄° 
CvM©
* 
shi·vec
 
CV_DEFAULT
(
NULL
));

697 
	#cvM©MulAddS
 
cvTønsf‹m


	)

700 
CVAPI
(Ë
cvPî•e˘iveTønsf‹m
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

701 c⁄° 
CvM©
* 
m©
 );

704 
CVAPI
(Ë
cvMulTøn•o£d
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
‹dî
,

705 c⁄° 
CvAº
* 
dñè
 
CV_DEFAULT
(
NULL
),

706 
sˇÀ
 
CV_DEFAULT
(1.) );

709 
CVAPI
(Ë
cvTøn•o£
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

710 
	#cvT
 
cvTøn•o£


	)

713 
CVAPI
(Ë
cvCom∂ëeSymm
–
CvM©
* 
m©rix
, 
LtoR
 
CV_DEFAULT
(0) );

718 
CVAPI
(Ë
cvFlù
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 
CV_DEFAULT
(
NULL
),

719 
Êù_mode
 
CV_DEFAULT
(0));

720 
	#cvMúr‹
 
cvFlù


	)

723 
	#CV_SVD_MODIFY_A
 1

	)

724 
	#CV_SVD_U_T
 2

	)

725 
	#CV_SVD_V_T
 4

	)

728 
CVAPI
(Ë
cvSVD
–
CvAº
* 
A
, CvAº* 
W
, CvAº* 
U
 
CV_DEFAULT
(
NULL
),

729 
CvAº
* 
V
 
CV_DEFAULT
(
NULL
), 
Êags
 CV_DEFAULT(0));

733 
CVAPI
(Ë
cvSVBkSb
–c⁄° 
CvAº
* 
W
, c⁄° CvAº* 
U
,

734 c⁄° 
CvAº
* 
V
, c⁄° CvAº* 
B
,

735 
CvAº
* 
X
, 
Êags
 );

737 
	#CV_LU
 0

	)

738 
	#CV_SVD
 1

	)

739 
	#CV_SVD_SYM
 2

	)

740 
	#CV_CHOLESKY
 3

	)

741 
	#CV_QR
 4

	)

742 
	#CV_NORMAL
 16

	)

745 
CVAPI
(Ë
cvInvît
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

746 
mëhod
 
CV_DEFAULT
(
CV_LU
));

747 
	#cvInv
 
cvInvît


	)

751 
CVAPI
(Ë
cvSﬁve
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
, CvAº* 
d°
,

752 
mëhod
 
CV_DEFAULT
(
CV_LU
));

755 
CVAPI
(Ë
cvDë
–c⁄° 
CvAº
* 
m©
 );

758 
CVAPI
(
CvSˇœr
Ë
cvTø˚
–c⁄° 
CvAº
* 
m©
 );

761 
CVAPI
(Ë
cvEigíVV
–
CvAº
* 
m©
, CvAº* 
eve˘s
, CvAº* 
evÆs
,

762 
ïs
 
CV_DEFAULT
(0),

763 
lowödex
 
CV_DEFAULT
(-1),

764 
highödex
 
CV_DEFAULT
(-1));

771 
CVAPI
(Ë
cvSëIdítôy
–
CvAº
* 
m©
, 
CvSˇœr
 
vÆue
 
CV_DEFAULT
(
cvRólSˇœr
(1)) );

774 
CVAPI
(
CvAº
*Ë
cvR™ge
–CvAº* 
m©
, 
°¨t
, 
íd
 );

778 
	#CV_COVAR_SCRAMBLED
 0

	)

781 
	#CV_COVAR_NORMAL
 1

	)

785 
	#CV_COVAR_USE_AVG
 2

	)

788 
	#CV_COVAR_SCALE
 4

	)

791 
	#CV_COVAR_ROWS
 8

	)

794 
	#CV_COVAR_COLS
 16

	)

796 
CVAPI
(Ë
cvCÆcCov¨M©rix
–c⁄° 
CvAº
** 
ve˘s
, 
cou¡
,

797 
CvAº
* 
cov_m©
, CvAº* 
avg
, 
Êags
 );

799 
	#CV_PCA_DATA_AS_ROW
 0

	)

800 
	#CV_PCA_DATA_AS_COL
 1

	)

801 
	#CV_PCA_USE_AVG
 2

	)

802 
CVAPI
(Ë
cvCÆcPCA
–c⁄° 
CvAº
* 
d©a
, CvAº* 
món
,

803 
CvAº
* 
eigívÆs
, CvAº* 
eigíve˘s
, 
Êags
 );

805 
CVAPI
(Ë
cvProje˘PCA
–c⁄° 
CvAº
* 
d©a
, c⁄° CvAº* 
món
,

806 c⁄° 
CvAº
* 
eigíve˘s
, CvAº* 
ªsu…
 );

808 
CVAPI
(Ë
cvBackProje˘PCA
–c⁄° 
CvAº
* 
¥oj
, c⁄° CvAº* 
món
,

809 c⁄° 
CvAº
* 
eigíve˘s
, CvAº* 
ªsu…
 );

812 
CVAPI
(Ë
cvMahÆ™obis
–c⁄° 
CvAº
* 
vec1
, c⁄° CvAº* 
vec2
, c⁄° CvAº* 
m©
 );

813 
	#cvMahÆ⁄obis
 
cvMahÆ™obis


	)

820 
CVAPI
(
CvSˇœr
Ë
cvSum
–c⁄° 
CvAº
* 
¨r
 );

823 
CVAPI
(Ë
cvCou¡N⁄Zîo
–c⁄° 
CvAº
* 
¨r
 );

826 
CVAPI
(
CvSˇœr
Ë
cvAvg
–c⁄° 
CvAº
* 
¨r
, c⁄° CvAº* 
mask
 
CV_DEFAULT
(
NULL
) );

829 
CVAPI
(Ë
cvAvgSdv
–c⁄° 
CvAº
* 
¨r
, 
CvSˇœr
* 
món
, CvSˇœr* 
°d_dev
,

830 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

833 
CVAPI
(Ë
cvMöMaxLoc
–c⁄° 
CvAº
* 
¨r
, * 
mö_vÆ
, * 
max_vÆ
,

834 
CvPoöt
* 
mö_loc
 
CV_DEFAULT
(
NULL
),

835 
CvPoöt
* 
max_loc
 
CV_DEFAULT
(
NULL
),

836 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

839 
	#CV_C
 1

	)

840 
	#CV_L1
 2

	)

841 
	#CV_L2
 4

	)

842 
	#CV_NORM_MASK
 7

	)

843 
	#CV_RELATIVE
 8

	)

844 
	#CV_DIFF
 16

	)

845 
	#CV_MINMAX
 32

	)

847 
	#CV_DIFF_C
 (
CV_DIFF
 | 
CV_C
)

	)

848 
	#CV_DIFF_L1
 (
CV_DIFF
 | 
CV_L1
)

	)

849 
	#CV_DIFF_L2
 (
CV_DIFF
 | 
CV_L2
)

	)

850 
	#CV_RELATIVE_C
 (
CV_RELATIVE
 | 
CV_C
)

	)

851 
	#CV_RELATIVE_L1
 (
CV_RELATIVE
 | 
CV_L1
)

	)

852 
	#CV_RELATIVE_L2
 (
CV_RELATIVE
 | 
CV_L2
)

	)

855 
CVAPI
(Ë
cvN‹m
–c⁄° 
CvAº
* 
¨r1
, c⁄° CvAº* 
¨r2
 
CV_DEFAULT
(
NULL
),

856 
n‹m_ty≥
 
CV_DEFAULT
(
CV_L2
),

857 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

859 
CVAPI
(Ë
cvN‹mÆize
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

860 
a
 
CV_DEFAULT
(1.), 
b
 CV_DEFAULT(0.),

861 
n‹m_ty≥
 
CV_DEFAULT
(
CV_L2
),

862 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

865 
	#CV_REDUCE_SUM
 0

	)

866 
	#CV_REDUCE_AVG
 1

	)

867 
	#CV_REDUCE_MAX
 2

	)

868 
	#CV_REDUCE_MIN
 3

	)

870 
CVAPI
(Ë
cvRedu˚
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
dim
 
CV_DEFAULT
(-1),

871 
›
 
CV_DEFAULT
(
CV_REDUCE_SUM
) );

877 
	#CV_DXT_FORWARD
 0

	)

878 
	#CV_DXT_INVERSE
 1

	)

879 
	#CV_DXT_SCALE
 2

	)

880 
	#CV_DXT_INV_SCALE
 (
CV_DXT_INVERSE
 + 
CV_DXT_SCALE
)

	)

881 
	#CV_DXT_INVERSE_SCALE
 
CV_DXT_INV_SCALE


	)

882 
	#CV_DXT_ROWS
 4

	)

883 
	#CV_DXT_MUL_CONJ
 8

	)

889 
CVAPI
(Ë
cvDFT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
,

890 
n⁄zîo_rows
 
CV_DEFAULT
(0) );

891 
	#cvFFT
 
cvDFT


	)

894 
CVAPI
(Ë
cvMulS≥˘rums
–c⁄° 
CvAº
* 
§c1
, c⁄° CvAº* 
§c2
,

895 
CvAº
* 
d°
, 
Êags
 );

898 
CVAPI
(Ë
cvGëO±imÆDFTSize
–
size0
 );

901 
CVAPI
(Ë
cvDCT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
 );

908 
CVAPI
(Ë
cvSli˚Lígth
–
CvSli˚
 
¶i˚
, c⁄° 
CvSeq
* 
£q
 );

914 
CVAPI
(
CvMemSt‹age
*Ë
cvCª©eMemSt‹age
–
block_size
 
CV_DEFAULT
(0));

918 
CVAPI
(
CvMemSt‹age
*Ë
cvCª©eChûdMemSt‹age
–CvMemSt‹age* 
∑ª¡
 );

923 
CVAPI
(Ë
cvRñó£MemSt‹age
–
CvMemSt‹age
** 
°‹age
 );

930 
CVAPI
(Ë
cvCÀ¨MemSt‹age
–
CvMemSt‹age
* 
°‹age
 );

933 
CVAPI
(Ë
cvSaveMemSt‹agePos
–c⁄° 
CvMemSt‹age
* 
°‹age
, 
CvMemSt‹agePos
* 
pos
 );

936 
CVAPI
(Ë
cvRe°‹eMemSt‹agePos
–
CvMemSt‹age
* 
°‹age
, 
CvMemSt‹agePos
* 
pos
 );

939 
CVAPI
(*Ë
cvMemSt‹ageAŒoc
–
CvMemSt‹age
* 
°‹age
, 
size_t
 
size
 );

942 
CVAPI
(
CvSåög
Ë
cvMemSt‹ageAŒocSåög
–
CvMemSt‹age
* 
°‹age
, c⁄° * 
±r
,

943 
Àn
 
CV_DEFAULT
(-1) );

946 
CVAPI
(
CvSeq
*Ë
cvCª©eSeq
–
£q_Êags
, 
size_t
 
hódî_size
,

947 
size_t
 
ñem_size
, 
CvMemSt‹age
* 
°‹age
 );

951 
CVAPI
(Ë
cvSëSeqBlockSize
–
CvSeq
* 
£q
, 
dñè_ñems
 );

955 
CVAPI
(
sch¨
*Ë
cvSeqPush
–
CvSeq
* 
£q
, c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

959 
CVAPI
(
sch¨
*Ë
cvSeqPushFr⁄t
–
CvSeq
* 
£q
, c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

963 
CVAPI
(Ë
cvSeqP›
–
CvSeq
* 
£q
, * 
ñemít
 
CV_DEFAULT
(
NULL
));

967 
CVAPI
(Ë
cvSeqP›Fr⁄t
–
CvSeq
* 
£q
, * 
ñemít
 
CV_DEFAULT
(
NULL
));

970 
	#CV_FRONT
 1

	)

971 
	#CV_BACK
 0

	)

973 
CVAPI
(Ë
cvSeqPushMu…i
–
CvSeq
* 
£q
, c⁄° * 
ñemíts
,

974 
cou¡
, 
ö_‰⁄t
 
CV_DEFAULT
(0) );

977 
CVAPI
(Ë
cvSeqP›Mu…i
–
CvSeq
* 
£q
, * 
ñemíts
,

978 
cou¡
, 
ö_‰⁄t
 
CV_DEFAULT
(0) );

982 
CVAPI
(
sch¨
*Ë
cvSeqIn£π
–
CvSeq
* 
£q
, 
bef‹e_ödex
,

983 c⁄° * 
ñemít
 
CV_DEFAULT
(
NULL
));

986 
CVAPI
(Ë
cvSeqRemove
–
CvSeq
* 
£q
, 
ödex
 );

992 
CVAPI
(Ë
cvCÀ¨Seq
–
CvSeq
* 
£q
 );

998 
CVAPI
(
sch¨
*Ë
cvGëSeqEÀm
–c⁄° 
CvSeq
* 
£q
, 
ödex
 );

1002 
CVAPI
(Ë
cvSeqEÀmIdx
–c⁄° 
CvSeq
* 
£q
, c⁄° * 
ñemít
,

1003 
CvSeqBlock
** 
block
 
CV_DEFAULT
(
NULL
) );

1006 
CVAPI
(Ë
cvSèπAµídToSeq
–
CvSeq
* 
£q
, 
CvSeqWrôî
* 
wrôî
 );

1010 
CVAPI
(Ë
cvSèπWrôeSeq
–
£q_Êags
, 
hódî_size
,

1011 
ñem_size
, 
CvMemSt‹age
* 
°‹age
,

1012 
CvSeqWrôî
* 
wrôî
 );

1018 
CVAPI
(
CvSeq
*Ë
cvEndWrôeSeq
–
CvSeqWrôî
* 
wrôî
 );

1023 
CVAPI
(Ë
cvFlushSeqWrôî
–
CvSeqWrôî
* 
wrôî
 );

1028 
CVAPI
(Ë
cvSèπRódSeq
–c⁄° 
CvSeq
* 
£q
, 
CvSeqRódî
* 
ªadî
,

1029 
ªvî£
 
CV_DEFAULT
(0) );

1033 
CVAPI
(Ë
cvGëSeqRódîPos
–
CvSeqRódî
* 
ªadî
 );

1038 
CVAPI
(Ë
cvSëSeqRódîPos
–
CvSeqRódî
* 
ªadî
, 
ödex
,

1039 
is_ªœtive
 
CV_DEFAULT
(0));

1042 
CVAPI
(*Ë
cvCvtSeqToAºay
–c⁄° 
CvSeq
* 
£q
, * 
ñemíts
,

1043 
CvSli˚
 
¶i˚
 
CV_DEFAULT
(
CV_WHOLE_SEQ
) );

1048 
CVAPI
(
CvSeq
*Ë
cvMakeSeqHódîF‹Aºay
–
£q_ty≥
, 
hódî_size
,

1049 
ñem_size
, * 
ñemíts
, 
tŸÆ
,

1050 
CvSeq
* 
£q
, 
CvSeqBlock
* 
block
 );

1053 
CVAPI
(
CvSeq
*Ë
cvSeqSli˚
–c⁄° CvSeq* 
£q
, 
CvSli˚
 
¶i˚
,

1054 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
),

1055 
c›y_d©a
 
CV_DEFAULT
(0));

1057 
CV_INLINE
 
CvSeq
* 
cvCl⁄eSeq
–c⁄° CvSeq* 
£q
, 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
))

1059  
cvSeqSli˚
–
£q
, 
CV_WHOLE_SEQ
, 
°‹age
, 1 );

1063 
CVAPI
(Ë
cvSeqRemoveSli˚
–
CvSeq
* 
£q
, 
CvSli˚
 
¶i˚
 );

1066 
CVAPI
(Ë
cvSeqIn£πSli˚
–
CvSeq
* 
£q
, 
bef‹e_ödex
, c⁄° 
CvAº
* 
‰om_¨r
 );

1069 (
CV_CDECL
* 
	tCvCmpFunc
)(c⁄° * 
	ta
, c⁄° * 
	tb
, * 
	tu£rd©a
 );

1072 
CVAPI
(Ë
cvSeqS‹t
–
CvSeq
* 
£q
, 
CvCmpFunc
 
func
, * 
u£rd©a
 
CV_DEFAULT
(
NULL
) );

1075 
CVAPI
(
sch¨
*Ë
cvSeqSórch
–
CvSeq
* 
£q
, c⁄° * 
ñem
, 
CvCmpFunc
 
func
,

1076 
is_s‹ãd
, * 
ñem_idx
,

1077 * 
u£rd©a
 
CV_DEFAULT
(
NULL
) );

1080 
CVAPI
(Ë
cvSeqInvît
–
CvSeq
* 
£q
 );

1083 
CVAPI
(Ë
cvSeqP¨tôi⁄
–c⁄° 
CvSeq
* 
£q
, 
CvMemSt‹age
* 
°‹age
,

1084 
CvSeq
** 
œbñs
, 
CvCmpFunc
 
is_equÆ
, * 
u£rd©a
 );

1087 
CVAPI
(Ë
cvCh™geSeqBlock
–* 
ªadî
, 
dúe˘i⁄
 );

1088 
CVAPI
(Ë
cvCª©eSeqBlock
–
CvSeqWrôî
* 
wrôî
 );

1092 
CVAPI
(
CvSë
*Ë
cvCª©eSë
–
£t_Êags
, 
hódî_size
,

1093 
ñem_size
, 
CvMemSt‹age
* 
°‹age
 );

1096 
CVAPI
(Ë
cvSëAdd
–
CvSë
* 
£t_hódî
, 
CvSëEÀm
* 
ñem
 
CV_DEFAULT
(
NULL
),

1097 
CvSëEÀm
** 
ö£πed_ñem
 
CV_DEFAULT
(
NULL
) );

1100 
CV_INLINE
 
CvSëEÀm
* 
cvSëNew
–
CvSë
* 
£t_hódî
 )

1102 
CvSëEÀm
* 
ñem
 = 
£t_hódî
->
‰ì_ñems
;

1103 if–
ñem
 )

1105 
£t_hódî
->
‰ì_ñems
 = 
ñem
->
√xt_‰ì
;

1106 
ñem
->
Êags
 =ÉÀm->Êag†& 
CV_SET_ELEM_IDX_MASK
;

1107 
£t_hódî
->
a˘ive_cou¡
++;

1110 
cvSëAdd
–
£t_hódî
, 
NULL
, (
CvSëEÀm
**)&
ñem
 );

1111  
ñem
;

1115 
CV_INLINE
 
cvSëRemoveByPå
–
CvSë
* 
£t_hódî
, * 
ñem
 )

1117 
CvSëEÀm
* 
_ñem
 = (CvSëEÀm*)
ñem
;

1118 
as£π
–
_ñem
->
Êags
 >= 0 );

1119 
_ñem
->
√xt_‰ì
 = 
£t_hódî
->
‰ì_ñems
;

1120 
_ñem
->
Êags
 = (_ñem->Êag†& 
CV_SET_ELEM_IDX_MASK
Ë| 
CV_SET_ELEM_FREE_FLAG
;

1121 
£t_hódî
->
‰ì_ñems
 = 
_ñem
;

1122 
£t_hódî
->
a˘ive_cou¡
--;

1126 
CVAPI
(Ë
cvSëRemove
–
CvSë
* 
£t_hódî
, 
ödex
 );

1130 
CV_INLINE
 
CvSëEÀm
* 
cvGëSëEÀm
–c⁄° 
CvSë
* 
£t_hódî
, 
idx
 )

1132 
CvSëEÀm
* 
ñem
 = (CvSëEÀm*)(*)
cvGëSeqEÀm
–(
CvSeq
*)
£t_hódî
, 
idx
 );

1133  
ñem
 && 
CV_IS_SET_ELEM
(Élem ) ?Élem : 0;

1137 
CVAPI
(Ë
cvCÀ¨Së
–
CvSë
* 
£t_hódî
 );

1140 
CVAPI
(
CvGøph
*Ë
cvCª©eGøph
–
gøph_Êags
, 
hódî_size
,

1141 
vtx_size
, 
edge_size
,

1142 
CvMemSt‹age
* 
°‹age
 );

1145 
CVAPI
(Ë
cvGøphAddVtx
–
CvGøph
* 
gøph
, c⁄° 
CvGøphVtx
* 
vtx
 
CV_DEFAULT
(
NULL
),

1146 
CvGøphVtx
** 
ö£πed_vtx
 
CV_DEFAULT
(
NULL
) );

1150 
CVAPI
(Ë
cvGøphRemoveVtx
–
CvGøph
* 
gøph
, 
ödex
 );

1151 
CVAPI
(Ë
cvGøphRemoveVtxByPå
–
CvGøph
* 
gøph
, 
CvGøphVtx
* 
vtx
 );

1158 
CVAPI
(Ë
cvGøphAddEdge
–
CvGøph
* 
gøph
,

1159 
°¨t_idx
, 
íd_idx
,

1160 c⁄° 
CvGøphEdge
* 
edge
 
CV_DEFAULT
(
NULL
),

1161 
CvGøphEdge
** 
ö£πed_edge
 
CV_DEFAULT
(
NULL
) );

1163 
CVAPI
(Ë
cvGøphAddEdgeByPå
–
CvGøph
* 
gøph
,

1164 
CvGøphVtx
* 
°¨t_vtx
, CvGøphVtx* 
íd_vtx
,

1165 c⁄° 
CvGøphEdge
* 
edge
 
CV_DEFAULT
(
NULL
),

1166 
CvGøphEdge
** 
ö£πed_edge
 
CV_DEFAULT
(
NULL
) );

1169 
CVAPI
(Ë
cvGøphRemoveEdge
–
CvGøph
* 
gøph
, 
°¨t_idx
, 
íd_idx
 );

1170 
CVAPI
(Ë
cvGøphRemoveEdgeByPå
–
CvGøph
* 
gøph
, 
CvGøphVtx
* 
°¨t_vtx
,

1171 
CvGøphVtx
* 
íd_vtx
 );

1174 
CVAPI
(
CvGøphEdge
*Ë
cvFödGøphEdge
–c⁄° 
CvGøph
* 
gøph
, 
°¨t_idx
, 
íd_idx
 );

1175 
CVAPI
(
CvGøphEdge
*Ë
cvFödGøphEdgeByPå
–c⁄° 
CvGøph
* 
gøph
,

1176 c⁄° 
CvGøphVtx
* 
°¨t_vtx
,

1177 c⁄° 
CvGøphVtx
* 
íd_vtx
 );

1178 
	#cvGøphFödEdge
 
cvFödGøphEdge


	)

1179 
	#cvGøphFödEdgeByPå
 
cvFödGøphEdgeByPå


	)

1182 
CVAPI
(Ë
cvCÀ¨Gøph
–
CvGøph
* 
gøph
 );

1186 
CVAPI
(Ë
cvGøphVtxDegªe
–c⁄° 
CvGøph
* 
gøph
, 
vtx_idx
 );

1187 
CVAPI
(Ë
cvGøphVtxDegªeByPå
–c⁄° 
CvGøph
* 
gøph
, c⁄° 
CvGøphVtx
* 
vtx
 );

1191 
	#cvGëGøphVtx
–
gøph
, 
idx
 ) (
CvGøphVtx
*)
	`cvGëSëEÀm
((
CvSë
*)(gøph), (idx))

	)

1194 
	#cvGøphVtxIdx
–
gøph
, 
vtx
 ) ((vtx)->
Êags
 & 
CV_SET_ELEM_IDX_MASK
)

	)

1197 
	#cvGøphEdgeIdx
–
gøph
, 
edge
 ) (”dge)->
Êags
 & 
CV_SET_ELEM_IDX_MASK
)

	)

1199 
	#cvGøphGëVtxCou¡
–
gøph
 ) ((gøph)->
a˘ive_cou¡
)

	)

1200 
	#cvGøphGëEdgeCou¡
–
gøph
 ) ((gøph)->
edges
->
a˘ive_cou¡
)

	)

1202 
	#CV_GRAPH_VERTEX
 1

	)

1203 
	#CV_GRAPH_TREE_EDGE
 2

	)

1204 
	#CV_GRAPH_BACK_EDGE
 4

	)

1205 
	#CV_GRAPH_FORWARD_EDGE
 8

	)

1206 
	#CV_GRAPH_CROSS_EDGE
 16

	)

1207 
	#CV_GRAPH_ANY_EDGE
 30

	)

1208 
	#CV_GRAPH_NEW_TREE
 32

	)

1209 
	#CV_GRAPH_BACKTRACKING
 64

	)

1210 
	#CV_GRAPH_OVER
 -1

	)

1212 
	#CV_GRAPH_ALL_ITEMS
 -1

	)

1215 
	#CV_GRAPH_ITEM_VISITED_FLAG
 (1 << 30)

	)

1216 
	#CV_IS_GRAPH_VERTEX_VISITED
(
vtx
) \

1217 (((
CvGøphVtx
*)(
vtx
))->
Êags
 & 
CV_GRAPH_ITEM_VISITED_FLAG
)

	)

1218 
	#CV_IS_GRAPH_EDGE_VISITED
(
edge
) \

1219 (((
CvGøphEdge
*)(
edge
))->
Êags
 & 
CV_GRAPH_ITEM_VISITED_FLAG
)

	)

1220 
	#CV_GRAPH_SEARCH_TREE_NODE_FLAG
 (1 << 29)

	)

1221 
	#CV_GRAPH_FORWARD_EDGE_FLAG
 (1 << 28)

	)

1223 
	sCvGøphSˇ¬î


1225 
CvGøphVtx
* 
vtx
;

1226 
CvGøphVtx
* 
d°
;

1227 
CvGøphEdge
* 
edge
;

1229 
CvGøph
* 
gøph
;

1230 
CvSeq
* 
°ack
;

1231 
ödex
;

1232 
mask
;

1234 
	tCvGøphSˇ¬î
;

1237 
CVAPI
(
CvGøphSˇ¬î
*Ë
cvCª©eGøphSˇ¬î
–
CvGøph
* 
gøph
,

1238 
CvGøphVtx
* 
vtx
 
CV_DEFAULT
(
NULL
),

1239 
mask
 
CV_DEFAULT
(
CV_GRAPH_ALL_ITEMS
));

1242 
CVAPI
(Ë
cvRñó£GøphSˇ¬î
–
CvGøphSˇ¬î
** 
sˇ¬î
 );

1245 
CVAPI
(Ë
cvNextGøphIãm
–
CvGøphSˇ¬î
* 
sˇ¬î
 );

1248 
CVAPI
(
CvGøph
*Ë
cvCl⁄eGøph
–c⁄° CvGøph* 
gøph
, 
CvMemSt‹age
* 
°‹age
 );

1264 
	#CV_RGB
–
r
, 
g
, 
b
 ) 
	`cvSˇœr
–(b), (g), (r), 0 )

	)

1265 
	#CV_FILLED
 -1

	)

1267 
	#CV_AA
 16

	)

1270 
CVAPI
(Ë
cvLöe
–
CvAº
* 
img
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1271 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1272 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1276 
CVAPI
(Ë
cvRe˘™gÀ
–
CvAº
* 
img
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1277 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1278 
löe_ty≥
 
CV_DEFAULT
(8),

1279 
shi·
 
CV_DEFAULT
(0));

1282 
CVAPI
(Ë
cvRe˘™gÀR
–
CvAº
* 
img
, 
CvRe˘
 
r
,

1283 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1284 
löe_ty≥
 
CV_DEFAULT
(8),

1285 
shi·
 
CV_DEFAULT
(0));

1290 
CVAPI
(Ë
cvCú˛e
–
CvAº
* 
img
, 
CvPoöt
 
˚¡î
, 
ødius
,

1291 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1292 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1297 
CVAPI
(Ë
cvEŒù£
–
CvAº
* 
img
, 
CvPoöt
 
˚¡î
, 
CvSize
 
axes
,

1298 
™gÀ
, 
°¨t_™gÀ
, 
íd_™gÀ
,

1299 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1300 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1302 
CV_INLINE
 
cvEŒù£Box
–
CvAº
* 
img
, 
CvBox2D
 
box
, 
CvSˇœr
 
cﬁ‹
,

1303 
thick√ss
 
CV_DEFAULT
(1),

1304 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) )

1306 
CvSize
 
axes
;

1307 
axes
.
width
 = 
cvRound
(
box
.
size
.width*0.5);

1308 
axes
.
height
 = 
cvRound
(
box
.
size
.height*0.5);

1310 
cvEŒù£
–
img
, 
cvPoötFrom32f
–
box
.
˚¡î
 ), 
axes
, box.
™gÀ
,

1311 0, 360, 
cﬁ‹
, 
thick√ss
, 
löe_ty≥
, 
shi·
 );

1315 
CVAPI
(Ë
cvFûlC⁄vexPﬁy
–
CvAº
* 
img
, c⁄° 
CvPoöt
* 
±s
, 
≈ts
, 
CvSˇœr
 
cﬁ‹
,

1316 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0));

1319 
CVAPI
(Ë
cvFûlPﬁy
–
CvAº
* 
img
, 
CvPoöt
** 
±s
, c⁄° * 
≈ts
,

1320 
c⁄tours
, 
CvSˇœr
 
cﬁ‹
,

1321 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1324 
CVAPI
(Ë
cvPﬁyLöe
–
CvAº
* 
img
, 
CvPoöt
** 
±s
, c⁄° * 
≈ts
, 
c⁄tours
,

1325 
is_˛o£d
, 
CvSˇœr
 
cﬁ‹
, 
thick√ss
 
CV_DEFAULT
(1),

1326 
löe_ty≥
 
CV_DEFAULT
(8), 
shi·
 CV_DEFAULT(0) );

1328 
	#cvDøwRe˘
 
cvRe˘™gÀ


	)

1329 
	#cvDøwLöe
 
cvLöe


	)

1330 
	#cvDøwCú˛e
 
cvCú˛e


	)

1331 
	#cvDøwEŒù£
 
cvEŒù£


	)

1332 
	#cvDøwPﬁyLöe
 
cvPﬁyLöe


	)

1337 
CVAPI
(Ë
cvClùLöe
–
CvSize
 
img_size
, 
CvPoöt
* 
±1
, CvPoöt* 
±2
 );

1342 
CVAPI
(Ë
cvInôLöeIãøt‹
–c⁄° 
CvAº
* 
image
, 
CvPoöt
 
±1
, CvPoöà
±2
,

1343 
CvLöeIãøt‹
* 
löe_ôî©‹
,

1344 
c⁄√˘ivôy
 
CV_DEFAULT
(8),

1345 
À·_to_right
 
CV_DEFAULT
(0));

1348 
	#CV_NEXT_LINE_POINT
–
löe_ôî©‹
 ) \

1350 
_löe_ôî©‹_mask
 = (
löe_ôî©‹
).
îr
 < 0 ? -1 : 0; \

1351 (
löe_ôî©‹
).
îr
 +÷öe_ôî©‹).
möus_dñè
 + \

1352 ((
löe_ôî©‹
).
∂us_dñè
 & 
_löe_ôî©‹_mask
); \

1353 (
löe_ôî©‹
).
±r
 +÷öe_ôî©‹).
möus_°ï
 + \

1354 ((
löe_ôî©‹
).
∂us_°ï
 & 
_löe_ôî©‹_mask
); \

1355 }

	)

1359 
	#CV_FONT_HERSHEY_SIMPLEX
 0

	)

1360 
	#CV_FONT_HERSHEY_PLAIN
 1

	)

1361 
	#CV_FONT_HERSHEY_DUPLEX
 2

	)

1362 
	#CV_FONT_HERSHEY_COMPLEX
 3

	)

1363 
	#CV_FONT_HERSHEY_TRIPLEX
 4

	)

1364 
	#CV_FONT_HERSHEY_COMPLEX_SMALL
 5

	)

1365 
	#CV_FONT_HERSHEY_SCRIPT_SIMPLEX
 6

	)

1366 
	#CV_FONT_HERSHEY_SCRIPT_COMPLEX
 7

	)

1369 
	#CV_FONT_ITALIC
 16

	)

1371 
	#CV_FONT_VECTOR0
 
CV_FONT_HERSHEY_SIMPLEX


	)

1375 
	sCvF⁄t


1377 c⁄° * 
«meF⁄t
;

1378 
CvSˇœr
 
cﬁ‹
;

1379 
f⁄t_Á˚
;

1380 c⁄° * 
ascii
;

1381 c⁄° * 
gªek
;

1382 c⁄° * 
cyrûlic
;

1383 
hsˇÀ
, 
vsˇÀ
;

1384 
shór
;

1385 
thick√ss
;

1386 
dx
;

1387 
löe_ty≥
;

1389 
	tCvF⁄t
;

1392 
CVAPI
(Ë
cvInôF⁄t
–
CvF⁄t
* 
f⁄t
, 
f⁄t_Á˚
,

1393 
hsˇÀ
, 
vsˇÀ
,

1394 
shór
 
CV_DEFAULT
(0),

1395 
thick√ss
 
CV_DEFAULT
(1),

1396 
löe_ty≥
 
CV_DEFAULT
(8));

1398 
CV_INLINE
 
CvF⁄t
 
cvF⁄t
–
sˇÀ
, 
thick√ss
 
CV_DEFAULT
(1) )

1400 
CvF⁄t
 
f⁄t
;

1401 
cvInôF⁄t
–&
f⁄t
, 
CV_FONT_HERSHEY_PLAIN
, 
sˇÀ
, sˇÀ, 0, 
thick√ss
, 
CV_AA
 );

1402  
f⁄t
;

1407 
CVAPI
(Ë
cvPutText
–
CvAº
* 
img
, c⁄° * 
ãxt
, 
CvPoöt
 
‹g
,

1408 c⁄° 
CvF⁄t
* 
f⁄t
, 
CvSˇœr
 
cﬁ‹
 );

1411 
CVAPI
(Ë
cvGëTextSize
–c⁄° * 
ãxt_°rög
, c⁄° 
CvF⁄t
* 
f⁄t
,

1412 
CvSize
* 
ãxt_size
, * 
ba£löe
 );

1419 
CVAPI
(
CvSˇœr
Ë
cvCﬁ‹ToSˇœr
–
∑cked_cﬁ‹
, 
¨πy≥
 );

1427 
CVAPI
(Ë
cvEŒù£2Pﬁy
–
CvPoöt
 
˚¡î
, 
CvSize
 
axes
,

1428 
™gÀ
, 
¨c_°¨t
, 
¨c_íd
, 
CvPoöt
 * 
±s
, 
dñè
 );

1431 
CVAPI
(Ë
cvDøwC⁄tours
–
CvAº
 *
img
, 
CvSeq
* 
c⁄tour
,

1432 
CvSˇœr
 
exã∫Æ_cﬁ‹
, CvSˇœ∏
hﬁe_cﬁ‹
,

1433 
max_Àvñ
, 
thick√ss
 
CV_DEFAULT
(1),

1434 
löe_ty≥
 
CV_DEFAULT
(8),

1435 
CvPoöt
 
off£t
 
CV_DEFAULT
(
cvPoöt
(0,0)));

1439 
CVAPI
(Ë
cvLUT
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, c⁄° CvAº* 
lut
 );

1443 
	sCvTªeNodeIãøt‹


1445 c⁄° * 
node
;

1446 
Àvñ
;

1447 
max_Àvñ
;

1449 
	tCvTªeNodeIãøt‹
;

1451 
CVAPI
(Ë
cvInôTªeNodeIãøt‹
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
,

1452 c⁄° * 
fú°
, 
max_Àvñ
 );

1453 
CVAPI
(*Ë
cvNextTªeNode
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
 );

1454 
CVAPI
(*Ë
cvPªvTªeNode
–
CvTªeNodeIãøt‹
* 
åì_ôî©‹
 );

1459 
CVAPI
(Ë
cvIn£πNodeI¡oTªe
–* 
node
, * 
∑ª¡
, * 
‰ame
 );

1462 
CVAPI
(Ë
cvRemoveNodeFromTªe
–* 
node
, * 
‰ame
 );

1466 
CVAPI
(
CvSeq
*Ë
cvTªeToNodeSeq
–c⁄° * 
fú°
, 
hódî_size
,

1467 
CvMemSt‹age
* 
°‹age
 );

1471 
	#CV_KMEANS_USE_INITIAL_LABELS
 1

	)

1472 
CVAPI
(Ë
cvKMóns2
–c⁄° 
CvAº
* 
ßm∂es
, 
˛u°î_cou¡
, CvAº* 
œbñs
,

1473 
CvTîmCrôîü
 
ãrm¸ô
, 
©ãm±s
 
CV_DEFAULT
(1),

1474 
CvRNG
* 
∫g
 
CV_DEFAULT
(0), 
Êags
 CV_DEFAULT(0),

1475 
CvAº
* 
_˚¡îs
 
CV_DEFAULT
(0), * 
com∑˘√ss
 CV_DEFAULT(0) );

1482 
CVAPI
(Ë
cvRegi°îModuÀ
–c⁄° 
CvModuÀInfo
* 
moduÀ_öfo
 );

1485 
CVAPI
(Ë
cvU£O±imized
–
⁄_off
 );

1488 
CVAPI
(Ë
cvGëModuÀInfo
–c⁄° * 
moduÀ_«me
,

1489 c⁄° ** 
vîsi⁄
,

1490 c⁄° ** 
lﬂded_add⁄_∂ugös
 );

1492 * (
	tCV_CDECL
 *
	tCvAŒocFunc
)(
	tsize_t
 
	tsize
, * 
	tu£rd©a
);

1493 (
CV_CDECL
 *
	tCvFªeFunc
)(* 
	tµå
, * 
	tu£rd©a
);

1497 
CVAPI
(Ë
cvSëMem‹yM™agî
–
CvAŒocFunc
 
Æloc_func
 
CV_DEFAULT
(
NULL
),

1498 
CvFªeFunc
 
‰ì_func
 
CV_DEFAULT
(
NULL
),

1499 * 
u£rd©a
 
CV_DEFAULT
(
NULL
));

1502 
I∂Image
* (
	tCV_STDCALL
* 
	tCv_ùlCª©eImageHódî
)

1504 
	tI∂ROI
*,
	tI∂Image
*,*,
	tI∂TûeInfo
*);

1505 (
CV_STDCALL
* 
	tCv_ùlAŒoˇãImageD©a
)(
	tI∂Image
*,,);

1506 (
CV_STDCALL
* 
	tCv_ùlDóŒoˇã
)(
	tI∂Image
*,);

1507 
I∂ROI
* (
	tCV_STDCALL
* 
	tCv_ùlCª©eROI
)(,,,,);

1508 
I∂Image
* (
	tCV_STDCALL
* 
	tCv_ùlCl⁄eImage
)(c⁄° 
	tI∂Image
*);

1511 
CVAPI
(Ë
cvSëIPLAŒoˇt‹s
–
Cv_ùlCª©eImageHódî
 
¸óã_hódî
,

1512 
Cv_ùlAŒoˇãImageD©a
 
Æloˇã_d©a
,

1513 
Cv_ùlDóŒoˇã
 
dóŒoˇã
,

1514 
Cv_ùlCª©eROI
 
¸óã_roi
,

1515 
Cv_ùlCl⁄eImage
 
˛⁄e_image
 );

1517 
	#CV_TURN_ON_IPL_COMPATIBILITY
() \

1518 
	`cvSëIPLAŒoˇt‹s
–
ùlCª©eImageHódî
, 
ùlAŒoˇãImage
, \

1519 
ùlDóŒoˇã
, 
ùlCª©eROI
, 
ùlCl⁄eImage
 )

	)

1528 
CVAPI
(
CvFûeSt‹age
*Ë
cvO≥nFûeSt‹age
–c⁄° * 
fûíame
, 
CvMemSt‹age
* 
mem°‹age
,

1529 
Êags
, c⁄° * 
ícodög
 
CV_DEFAULT
(
NULL
) );

1532 
CVAPI
(Ë
cvRñó£FûeSt‹age
–
CvFûeSt‹age
** 
fs
 );

1535 
CVAPI
(c⁄° *Ë
cvAârVÆue
–c⁄° 
CvAârLi°
* 
©å
, c⁄° * 
©å_«me
 );

1538 
CVAPI
(Ë
cvSèπWrôeSåu˘
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1539 
°ru˘_Êags
, c⁄° * 
ty≥_«me
 
CV_DEFAULT
(
NULL
),

1540 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1543 
CVAPI
(Ë
cvEndWrôeSåu˘
–
CvFûeSt‹age
* 
fs
 );

1546 
CVAPI
(Ë
cvWrôeI¡
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, 
vÆue
 );

1549 
CVAPI
(Ë
cvWrôeRól
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, 
vÆue
 );

1552 
CVAPI
(Ë
cvWrôeSåög
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1553 c⁄° * 
°r
, 
quŸe
 
CV_DEFAULT
(0) );

1556 
CVAPI
(Ë
cvWrôeCommít
–
CvFûeSt‹age
* 
fs
, c⁄° * 
commít
,

1557 
eﬁ_commít
 );

1561 
CVAPI
(Ë
cvWrôe
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
, c⁄° * 
±r
,

1562 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1565 
CVAPI
(Ë
cvSèπNextSåóm
–
CvFûeSt‹age
* 
fs
 );

1568 
CVAPI
(Ë
cvWrôeRawD©a
–
CvFûeSt‹age
* 
fs
, c⁄° * 
§c
,

1569 
Àn
, c⁄° * 
dt
 );

1573 
CVAPI
(
CvSåögHashNode
*Ë
cvGëHashedKey
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
,

1574 
Àn
 
CV_DEFAULT
(-1),

1575 
¸óã_missög
 
CV_DEFAULT
(0));

1579 
CVAPI
(
CvFûeNode
*Ë
cvGëRoŸFûeNode
–c⁄° 
CvFûeSt‹age
* 
fs
,

1580 
°ªam_ödex
 
CV_DEFAULT
(0) );

1584 
CVAPI
(
CvFûeNode
*Ë
cvGëFûeNode
–
CvFûeSt‹age
* 
fs
, CvFûeNode* 
m≠
,

1585 c⁄° 
CvSåögHashNode
* 
key
,

1586 
¸óã_missög
 
CV_DEFAULT
(0) );

1589 
CVAPI
(
CvFûeNode
*Ë
cvGëFûeNodeByName
–c⁄° 
CvFûeSt‹age
* 
fs
,

1590 c⁄° 
CvFûeNode
* 
m≠
,

1591 c⁄° * 
«me
 );

1593 
CV_INLINE
 
cvRódI¡
–c⁄° 
CvFûeNode
* 
node
, 
deÁu…_vÆue
 
CV_DEFAULT
(0) )

1595  !
node
 ? 
deÁu…_vÆue
 :

1596 
CV_NODE_IS_INT
(
node
->
èg
Ë?Çode->
d©a
.
i
 :

1597 
CV_NODE_IS_REAL
(
node
->
èg
Ë? 
cvRound
“ode->
d©a
.
f
) : 0x7fffffff;

1601 
CV_INLINE
 
cvRódI¡ByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1602 c⁄° * 
«me
, 
deÁu…_vÆue
 
CV_DEFAULT
(0) )

1604  
cvRódI¡
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1608 
CV_INLINE
 
cvRódRól
–c⁄° 
CvFûeNode
* 
node
, 
deÁu…_vÆue
 
CV_DEFAULT
(0.) )

1610  !
node
 ? 
deÁu…_vÆue
 :

1611 
CV_NODE_IS_INT
(
node
->
èg
Ë? (Íode->
d©a
.
i
 :

1612 
CV_NODE_IS_REAL
(
node
->
èg
Ë?Çode->
d©a
.
f
 : 1e300;

1616 
CV_INLINE
 
cvRódRólByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1617 c⁄° * 
«me
, 
deÁu…_vÆue
 
CV_DEFAULT
(0.) )

1619  
cvRódRól
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1623 
CV_INLINE
 c⁄° * 
cvRódSåög
–c⁄° 
CvFûeNode
* 
node
,

1624 c⁄° * 
deÁu…_vÆue
 
CV_DEFAULT
(
NULL
) )

1626  !
node
 ? 
deÁu…_vÆue
 : 
CV_NODE_IS_STRING
“ode->
èg
Ë?Çode->
d©a
.
°r
.
±r
 : 0;

1630 
CV_INLINE
 c⁄° * 
cvRódSåögByName
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1631 c⁄° * 
«me
, c⁄° * 
deÁu…_vÆue
 
CV_DEFAULT
(
NULL
) )

1633  
cvRódSåög
–
cvGëFûeNodeByName
–
fs
, 
m≠
, 
«me
 ), 
deÁu…_vÆue
 );

1638 
CVAPI
(*Ë
cvRód
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

1639 
CvAârLi°
* 
©åibuãs
 
CV_DEFAULT
(
NULL
));

1642 
CV_INLINE
 * 
cvRódByName
–
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
m≠
,

1643 c⁄° * 
«me
, 
CvAârLi°
* 
©åibuãs
 
CV_DEFAULT
(
NULL
) )

1645  
cvRód
–
fs
, 
cvGëFûeNodeByName
–fs, 
m≠
, 
«me
 ), 
©åibuãs
 );

1650 
CVAPI
(Ë
cvSèπRódRawD©a
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
§c
,

1651 
CvSeqRódî
* 
ªadî
 );

1654 
CVAPI
(Ë
cvRódRawD©aSli˚
–c⁄° 
CvFûeSt‹age
* 
fs
, 
CvSeqRódî
* 
ªadî
,

1655 
cou¡
, * 
d°
, c⁄° * 
dt
 );

1658 
CVAPI
(Ë
cvRódRawD©a
–c⁄° 
CvFûeSt‹age
* 
fs
, c⁄° 
CvFûeNode
* 
§c
,

1659 * 
d°
, c⁄° * 
dt
 );

1662 
CVAPI
(Ë
cvWrôeFûeNode
–
CvFûeSt‹age
* 
fs
, c⁄° * 
√w_node_«me
,

1663 c⁄° 
CvFûeNode
* 
node
, 
embed
 );

1666 
CVAPI
(c⁄° *Ë
cvGëFûeNodeName
–c⁄° 
CvFûeNode
* 
node
 );

1670 
CVAPI
(Ë
cvRegi°îTy≥
–c⁄° 
CvTy≥Info
* 
öfo
 );

1671 
CVAPI
(Ë
cvUƒegi°îTy≥
–c⁄° * 
ty≥_«me
 );

1672 
CVAPI
(
CvTy≥Info
*Ë
cvFú°Ty≥
();

1673 
CVAPI
(
CvTy≥Info
*Ë
cvFödTy≥
–c⁄° * 
ty≥_«me
 );

1674 
CVAPI
(
CvTy≥Info
*Ë
cvTy≥Of
–c⁄° * 
°ru˘_±r
 );

1677 
CVAPI
(Ë
cvRñó£
–** 
°ru˘_±r
 );

1678 
CVAPI
(*Ë
cvCl⁄e
–c⁄° * 
°ru˘_±r
 );

1681 
CVAPI
(Ë
cvSave
–c⁄° * 
fûíame
, c⁄° * 
°ru˘_±r
,

1682 c⁄° * 
«me
 
CV_DEFAULT
(
NULL
),

1683 c⁄° * 
commít
 
CV_DEFAULT
(
NULL
),

1684 
CvAârLi°
 
©åibuãs
 
CV_DEFAULT
(
cvAârLi°
()));

1685 
CVAPI
(*Ë
cvLﬂd
–c⁄° * 
fûíame
,

1686 
CvMemSt‹age
* 
mem°‹age
 
CV_DEFAULT
(
NULL
),

1687 c⁄° * 
«me
 
CV_DEFAULT
(
NULL
),

1688 c⁄° ** 
ªÆ_«me
 
CV_DEFAULT
(
NULL
) );

1694 
CVAPI
(
öt64
Ë
cvGëTickCou¡
( );

1695 
CVAPI
(Ë
cvGëTickFªquícy
( );

1699 
	#CV_CPU_NONE
 0

	)

1700 
	#CV_CPU_MMX
 1

	)

1701 
	#CV_CPU_SSE
 2

	)

1702 
	#CV_CPU_SSE2
 3

	)

1703 
	#CV_CPU_SSE3
 4

	)

1704 
	#CV_CPU_SSSE3
 5

	)

1705 
	#CV_CPU_SSE4_1
 6

	)

1706 
	#CV_CPU_SSE4_2
 7

	)

1707 
	#CV_CPU_POPCNT
 8

	)

1708 
	#CV_CPU_AVX
 10

	)

1709 
	#CV_HARDWARE_MAX_FEATURE
 255

	)

1711 
CVAPI
(Ë
cvCheckH¨dw¨eSuµ‹t
(
„©uª
);

1716 
CVAPI
(Ë
cvGëNumThªads
( );

1717 
CVAPI
(Ë
cvSëNumThªads
–
thªads
 
CV_DEFAULT
(0) );

1719 
CVAPI
(Ë
cvGëThªadNum
( );

1725 
CVAPI
(Ë
cvGëEºSètus
( );

1728 
CVAPI
(Ë
cvSëEºSètus
–
°©us
 );

1730 
	#CV_EºModeLóf
 0

	)

1731 
	#CV_EºModeP¨ít
 1

	)

1732 
	#CV_EºModeSûít
 2

	)

1735 
CVAPI
(Ë
cvGëEºMode
( );

1738 
CVAPI
(Ë
cvSëEºMode
–
mode
 );

1743 
CVAPI
(Ë
cvEº‹
–
°©us
, c⁄° * 
func_«me
,

1744 c⁄° * 
îr_msg
, c⁄° * 
fûe_«me
, 
löe
 );

1747 
CVAPI
(c⁄° *Ë
cvEº‹Så
–
°©us
 );

1750 
CVAPI
(Ë
cvGëEºInfo
–c⁄° ** 
îrcode_desc
, c⁄° ** 
des¸ùti⁄
,

1751 c⁄° ** 
fûíame
, * 
löe
 );

1754 
CVAPI
(Ë
cvEº‹FromIµSètus
–
ùp_°©us
 );

1756 (
CV_CDECL
 *
	tCvEº‹CÆlback
)–
	t°©us
, c⁄° * 
	tfunc_«me
,

1757 c⁄° * 
	tîr_msg
, c⁄° * 
	tfûe_«me
, 
	tlöe
, * 
	tu£rd©a
 );

1760 
CVAPI
(
CvEº‹CÆlback
Ë
cvRedúe˘Eº‹
–CvEº‹CÆlback 
îr‹_h™dÀr
,

1761 * 
u£rd©a
 
CV_DEFAULT
(
NULL
),

1762 ** 
¥ev_u£rd©a
 
CV_DEFAULT
(
NULL
) );

1770 
CVAPI
(Ë
cvNulDevRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1771 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1773 
CVAPI
(Ë
cvStdEºRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1774 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1776 
CVAPI
(Ë
cvGuiBoxRï‹t
–
°©us
, c⁄° * 
func_«me
, c⁄° * 
îr_msg
,

1777 c⁄° * 
fûe_«me
, 
löe
, * 
u£rd©a
 );

1779 
	#OPENCV_ERROR
(
°©us
,
func
,
c⁄ãxt
) \

1780 
	`cvEº‹
((
°©us
),(
func
),(
c⁄ãxt
),
__FILE__
,
__LINE__
)

	)

1782 
	#OPENCV_ERRCHK
(
func
,
c⁄ãxt
) \

1783 {i‡(
	`cvGëEºSètus
() >= 0) \

1784 {
	`OPENCV_ERROR
(
CV_StsBackTø˚
,(
func
),(
c⁄ãxt
));}}

	)

1786 
	#OPENCV_ASSERT
(
ex¥
,
func
,
c⁄ãxt
) \

1787 {i‡(! (
ex¥
)) \

1788 {
	`OPENCV_ERROR
(
CV_StsI¡î«l
,(
func
),(
c⁄ãxt
));}}

	)

1790 
	#OPENCV_RSTERR
(Ë(
	`cvSëEºSètus
(
CV_StsOk
))

	)

1792 
	#OPENCV_CALL
–
Func
 ) \

1794 
Func
; \

1795 }

	)

1799 #ifde‡
CV_NO_FUNC_NAMES


1800 
	#CV_FUNCNAME
–
Name
 )

	)

1801 
	#cvFuncName
 ""

	)

1803 
	#CV_FUNCNAME
–
Name
 ) \

1804 
cvFuncName
[] = 
Name


	)

1812 
	#CV_ERROR
–
Code
, 
Msg
 ) \

1814 
	`cvEº‹
–(
Code
), 
cvFuncName
, 
Msg
, 
__FILE__
, 
__LINE__
 ); \

1815 
__CV_EXIT__
; \

1816 }

	)

1819 
	#CV_ERROR_FROM_CODE
–
code
 ) \

1820 
	`CV_ERROR
–
code
, "" )

	)

1827 
	#CV_CHECK
() \

1829 if–
	`cvGëEºSètus
() < 0 ) \

1830 
	`CV_ERROR
–
CV_StsBackTø˚
, "Inner function failed." ); \

1831 }

	)

1839 
	#CV_CALL
–
Func
 ) \

1841 
Func
; \

1842 
	`CV_CHECK
(); \

1843 }

	)

1847 
	#CV_ASSERT
–
C⁄dôi⁄
 ) \

1849 if–!(
C⁄dôi⁄
) ) \

1850 
	`CV_ERROR
–
CV_StsI¡î«l
, "Assertion: " #Condition " failed" ); \

1851 }

	)

1853 
	#__CV_BEGIN__
 {

	)

1854 
	#__CV_END__
 
exô
;Éxô: ; }

	)

1855 
	#__CV_EXIT__
 
exô


	)

1857 #ifde‡
__˝lu•lus


1861 
CV_EXPORTS
 
CvModuÀ


1863 
CvModuÀ
–
CvModuÀInfo
* 
_öfo
 );

1864 ~
CvModuÀ
();

1865 
CvModuÀInfo
* 
öfo
;

1867 
CvModuÀInfo
* 
fú°
;

1868 
CvModuÀInfo
* 
œ°
;

1871 
CV_EXPORTS
 
	gCvTy≥


1873 
CvTy≥
–c⁄° * 
ty≥_«me
,

1874 
CvIsIn°™˚Func
 
is_ö°™˚
, 
CvRñó£Func
 
ªÀa£
=0,

1875 
CvRódFunc
 
ªad
=0, 
CvWrôeFunc
 
wrôe
=0, 
CvCl⁄eFunc
 
˛⁄e
=0 );

1876 ~
CvTy≥
();

1877 
CvTy≥Info
* 
	göfo
;

1879 
CvTy≥Info
* 
	gfú°
;

1880 
CvTy≥Info
* 
	gœ°
;

	@/usr/include/opencv2/core/mat.hpp

43 #i‚de‡
__OPENCV_CORE_MATRIX_OPERATIONS_HPP__


44 
	#__OPENCV_CORE_MATRIX_OPERATIONS_HPP__


	)

46 #i‚de‡
SKIP_INCLUDES


47 
	~<limôs.h
>

48 
	~<°rög.h
>

51 #ifde‡
__˝lu•lus


53 
«me•a˚
 
	gcv


58 
ölöe
 
	gM©
::
öôEm±y
()

60 
Êags
 = 
MAGIC_VAL
;

61 
	gdims
 = 
rows
 = 
cﬁs
 = 0;

62 
	gd©a
 = 
d©a°¨t
 = 
d©´nd
 = 
d©Æimô
 = 0;

63 
	gªfcou¡
 = 0;

64 
	gÆloˇt‹
 = 0;

67 
ölöe
 
	gM©
::
M©
(Ë: 
size
(&
rows
)

69 
öôEm±y
();

72 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
Ë: 
size
(&
rows
)

74 
öôEm±y
();

75 
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
);

78 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

80 
öôEm±y
();

81 
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
);

82 *
	gthis
 = 
_s
;

85 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
Ë: 
size
(&
rows
)

87 
öôEm±y
();

88 
¸óã
–
_sz
.
height
, _sz.
width
, 
_ty≥
 );

91 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

93 
öôEm±y
();

94 
¸óã
(
_sz
.
height
, _sz.
width
, 
_ty≥
);

95 *
	gthis
 = 
_s
;

98 
ölöe
 
	gM©
::
M©
(
_dims
, c⁄° * 
_sz
, 
_ty≥
Ë: 
size
(&
rows
)

100 
öôEm±y
();

101 
¸óã
(
_dims
, 
_sz
, 
_ty≥
);

104 
ölöe
 
	gM©
::
M©
(
_dims
, c⁄° * 
_sz
, 
_ty≥
, c⁄° 
Sˇœr
& 
_s
Ë: 
size
(&
rows
)

106 
öôEm±y
();

107 
¸óã
(
_dims
, 
_sz
, 
_ty≥
);

108 *
	gthis
 = 
_s
;

111 
ölöe
 
	gM©
::
M©
(c⁄° M©& 
m
)

112 : 
Êags
(
m
.Êags), 
dims
(m.dims), 
rows
(m.rows), 
cﬁs
(m.cﬁs), 
d©a
(m.data),

113 
ªfcou¡
(
m
.ªfcou¡), 
d©a°¨t
(m.d©a°¨t), 
d©´nd
(m.dataend),

114 
d©Æimô
(
m
.d©Æimô), 
Æloˇt‹
(m.Æloˇt‹), 
size
(&
rows
)

116 if–
	gªfcou¡
 )

117 
CV_XADD
(
ªfcou¡
, 1);

118 if–
	gm
.
	gdims
 <= 2 )

120 
°ï
[0] = 
m
.°ï[0]; 
	g°ï
[1] = m.step[1];

124 
	gdims
 = 0;

125 
c›ySize
(
m
);

129 
ölöe
 
	gM©
::
M©
(
_rows
, 
_cﬁs
, 
_ty≥
, * 
_d©a
, 
size_t
 
_°ï
)

130 : 
Êags
(
MAGIC_VAL
 + (
_ty≥
 & 
TYPE_MASK
)), 
dims
(2), 
rows
(
_rows
), 
cﬁs
(
_cﬁs
),

131 
d©a
((
uch¨
*)
_d©a
), 
ªfcou¡
(0), 
d©a°¨t
((uch¨*)_d©a), 
d©´nd
(0),

132 
d©Æimô
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

134 
size_t
 
	gesz
 = 
CV_ELEM_SIZE
(
_ty≥
), 
	gmö°ï
 = 
cﬁs
*
esz
;

135 if–
	g_°ï
 =
AUTO_STEP
 )

137 
_°ï
 = 
mö°ï
;

138 
	gÊags
 |
CONTINUOUS_FLAG
;

142 if–
	grows
 =1 ) 
_°ï
 = 
mö°ï
;

143 
CV_DbgAs£π
–
_°ï
 >
mö°ï
 );

144 
	gÊags
 |
_°ï
 =
mö°ï
 ? 
CONTINUOUS_FLAG
 : 0;

146 
	g°ï
[0] = 
_°ï
; sãp[1] = 
esz
;

147 
	gd©Æimô
 = 
d©a°¨t
 + 
_°ï
*
rows
;

148 
	gd©´nd
 = 
d©Æimô
 - 
_°ï
 + 
mö°ï
;

151 
ölöe
 
	gM©
::
M©
(
Size
 
_sz
, 
_ty≥
, * 
_d©a
, 
size_t
 
_°ï
)

152 : 
Êags
(
MAGIC_VAL
 + (
_ty≥
 & 
TYPE_MASK
)), 
dims
(2), 
rows
(
_sz
.
height
), 
cﬁs
(_sz.
width
),

153 
d©a
((
uch¨
*)
_d©a
), 
ªfcou¡
(0), 
d©a°¨t
((uch¨*)_d©a), 
d©´nd
(0),

154 
d©Æimô
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

156 
size_t
 
	gesz
 = 
CV_ELEM_SIZE
(
_ty≥
), 
	gmö°ï
 = 
cﬁs
*
esz
;

157 if–
	g_°ï
 =
AUTO_STEP
 )

159 
_°ï
 = 
mö°ï
;

160 
	gÊags
 |
CONTINUOUS_FLAG
;

164 if–
	grows
 =1 ) 
_°ï
 = 
mö°ï
;

165 
CV_DbgAs£π
–
_°ï
 >
mö°ï
 );

166 
	gÊags
 |
_°ï
 =
mö°ï
 ? 
CONTINUOUS_FLAG
 : 0;

168 
	g°ï
[0] = 
_°ï
; sãp[1] = 
esz
;

169 
	gd©Æimô
 = 
d©a°¨t
 + 
_°ï
*
rows
;

170 
	gd©´nd
 = 
d©Æimô
 - 
_°ï
 + 
mö°ï
;

174 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
c›yD©a
)

175 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

176 
dims
(2), 
rows
(()
vec
.
size
()), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

177 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

179 if(
	gvec
.
em±y
())

181 if–!
	gc›yD©a
 )

183 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

184 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
vec
[0];

185 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

188 
M©
(()
vec
.
size
(), 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (
uch¨
*)&vec[0]).
c›yTo
(*
this
);

192 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
)

193 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

194 
dims
(2), 
rows
(
n
), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

195 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

197 if–!
	gc›yD©a
 )

199 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

200 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)
vec
.
vÆ
;

201 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

204 
M©
(
n
, 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (*)
vec
.
vÆ
).
c›yTo
(*
this
);

208 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©
::
M©
(c⁄° 
M©x
<
_Tp
,
m
,
n
>& 
M
, 
boﬁ
 
c›yD©a
)

209 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

210 
dims
(2), 
rows
(
m
), 
cﬁs
(
n
), 
d©a
(0), 
ªfcou¡
(0),

211 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

213 if–!
	gc›yD©a
 )

215 
	g°ï
[0] = 
cﬁs
*(
_Tp
);

216 
	g°ï
[1] = (
_Tp
);

217 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)
M
.
vÆ
;

218 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

221 
M©
(
m
, 
n
, 
D©aTy≥
<
_Tp
>::
ty≥
, (
uch¨
*)
M
.
vÆ
).
c›yTo
(*
this
);

225 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Poöt_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
)

226 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

227 
dims
(2), 
rows
(2), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

228 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

230 if–!
	gc›yD©a
 )

232 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

233 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
±
.
x
;

234 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

238 
¸óã
(2, 1, 
D©aTy≥
<
_Tp
>::
ty≥
);

239 ((
	g_Tp
*)
	gd©a
)[0] = 
±
.
x
;

240 ((
	g_Tp
*)
	gd©a
)[1] = 
±
.
y
;

245 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
Poöt3_
<
_Tp
>& 
±
, 
boﬁ
 
c›yD©a
)

246 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

247 
dims
(2), 
rows
(3), 
cﬁs
(1), 
d©a
(0), 
ªfcou¡
(0),

248 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

250 if–!
	gc›yD©a
 )

252 
	g°ï
[0] = 
°ï
[1] = (
_Tp
);

253 
	gd©a
 = 
d©a°¨t
 = (
uch¨
*)&
±
.
x
;

254 
	gd©Æimô
 = 
d©´nd
 = 
d©a°¨t
 + 
rows
*
°ï
[0];

258 
¸óã
(3, 1, 
D©aTy≥
<
_Tp
>::
ty≥
);

259 ((
	g_Tp
*)
	gd©a
)[0] = 
±
.
x
;

260 ((
	g_Tp
*)
	gd©a
)[1] = 
±
.
y
;

261 ((
	g_Tp
*)
	gd©a
)[2] = 
±
.
z
;

266 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
M©
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
)

267 : 
Êags
(
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
 | 
CV_MAT_CONT_FLAG
),

268 
dims
(0), 
rows
(0), 
cﬁs
(0), 
d©a
(0), 
ªfcou¡
(0),

269 
d©a°¨t
(0), 
d©´nd
(0), 
Æloˇt‹
(0), 
size
(&
rows
)

271 *
	gthis
 = *
commaInôülizî
;

274 
ölöe
 
	gM©
::~
M©
()

276 
ªÀa£
();

277 if–
	g°ï
.
	gp
 !
°ï
.
buf
 )

278 
Á°Fªe
(
°ï
.
p
);

281 
ölöe
 
	gM©
& M©::
›î©‹
 = (c⁄° 
M©
& 
m
)

283 if–
this
 !&
m
 )

285 if–
m
.
ªfcou¡
 )

286 
CV_XADD
(
m
.
ªfcou¡
, 1);

287 
ªÀa£
();

288 
	gÊags
 = 
m
.
Êags
;

289 if–
	gdims
 <2 && 
m
.
dims
 <= 2 )

291 
dims
 = 
m
.dims;

292 
	grows
 = 
m
.
rows
;

293 
	gcﬁs
 = 
m
.
cﬁs
;

294 
	g°ï
[0] = 
m
.
°ï
[0];

295 
	g°ï
[1] = 
m
.
°ï
[1];

298 
c›ySize
(
m
);

299 
	gd©a
 = 
m
.
d©a
;

300 
	gd©a°¨t
 = 
m
.
d©a°¨t
;

301 
	gd©´nd
 = 
m
.
d©´nd
;

302 
	gd©Æimô
 = 
m
.
d©Æimô
;

303 
	gªfcou¡
 = 
m
.
ªfcou¡
;

304 
	gÆloˇt‹
 = 
m
.
Æloˇt‹
;

306  *
	gthis
;

309 
ölöe
 
M©
 
	gM©
::
row
(
y
Ëc⁄° {  M©(*
this
, 
R™ge
(y, y+1), R™ge::
Æl
()); }

310 
ölöe
 
M©
 
	gM©
::
cﬁ
(
x
Ëc⁄° {  M©(*
this
, 
R™ge
::
Æl
(), Range(x, x+1)); }

311 
ölöe
 
M©
 
	gM©
::
rowR™ge
(
°¨åow
, 
ídrow
) const

312 {  
M©
(*
this
, 
R™ge
(
°¨åow
, 
ídrow
), R™ge::
Æl
()); }

313 
ölöe
 
M©
 
	gM©
::
rowR™ge
(c⁄° 
R™ge
& 
r
) const

314 {  
M©
(*
this
, 
r
, 
R™ge
::
Æl
()); }

315 
ölöe
 
M©
 
	gM©
::
cﬁR™ge
(
°¨tcﬁ
, 
ídcﬁ
) const

316 {  
M©
(*
this
, 
R™ge
::
Æl
(), R™ge(
°¨tcﬁ
, 
ídcﬁ
)); }

317 
ölöe
 
M©
 
	gM©
::
cﬁR™ge
(c⁄° 
R™ge
& 
r
) const

318 {  
M©
(*
this
, 
R™ge
::
Æl
(), 
r
); }

320 
ölöe
 
M©
 
	gM©
::
düg
(c⁄° M©& 
d
)

322 
CV_As£π
–
d
.
cﬁs
 =1 || d.
rows
 == 1 );

323 
	gÀn
 = 
d
.
rows
 + d.
cﬁs
 - 1;

324 
M©
 
m
(
Àn
,Üí, 
d
.
ty≥
(), 
Sˇœr
(0)), 
	gmd
 = m.
düg
();

325 if–
	gd
.
	gcﬁs
 == 1 )

326 
d
.
c›yTo
(
md
);

328 
å™•o£
(
d
, 
md
);

329  
	gm
;

332 
ölöe
 
M©
 
	gM©
::
˛⁄e
() const

334 
M©
 
m
;

335 
c›yTo
(
m
);

336  
	gm
;

339 
ölöe
 
	gM©
::
assignTo
–
M©
& 
m
, 
_ty≥
 ) const

341 if–
	g_ty≥
 < 0 )

342 
	gm
 = *
this
;

344 
c⁄vîtTo
(
m
, 
_ty≥
);

347 
ölöe
 
	gM©
::
¸óã
(
_rows
, 
_cﬁs
, 
_ty≥
)

349 
	g_ty≥
 &
TYPE_MASK
;

350 if–
	gdims
 <2 && 
rows
 =
_rows
 && 
cﬁs
 =
_cﬁs
 && 
ty≥
(Ë=
_ty≥
 && 
d©a
 )

352 
	gsz
[] = {
_rows
, 
_cﬁs
};

353 
¸óã
(2, 
sz
, 
_ty≥
);

356 
ölöe
 
	gM©
::
¸óã
(
Size
 
_sz
, 
_ty≥
)

358 
¸óã
(
_sz
.
height
, _sz.
width
, 
_ty≥
);

361 
ölöe
 
	gM©
::
addªf
()

362 { if–
ªfcou¡
 ) 
CV_XADD
(refcount, 1); }

364 
ölöe
 
	gM©
::
ªÀa£
()

366 if–
ªfcou¡
 && 
CV_XADD
(refcount, -1) == 1 )

367 
dóŒoˇã
();

368 
	gd©a
 = 
d©a°¨t
 = 
d©´nd
 = 
d©Æimô
 = 0;

369 
	gsize
.
	gp
[0] = 0;

370 
	gªfcou¡
 = 0;

373 
ölöe
 
M©
 
	gM©
::
›î©‹
()–
R™ge
 
_rowR™ge
, R™gê
	g_cﬁR™ge
 ) const

375  
M©
(*
this
, 
_rowR™ge
, 
_cﬁR™ge
);

378 
ölöe
 
M©
 
	gM©
::
›î©‹
()–c⁄° 
Re˘
& 
roi
 ) const

379 {  
M©
(*
this
, 
roi
); }

381 
ölöe
 
M©
 
	gM©
::
›î©‹
()(c⁄° 
R™ge
* 
ønges
) const

383  
M©
(*
this
, 
ønges
);

386 
ölöe
 
	gM©
::
›î©‹
 
CvM©
() const

388 
CV_DbgAs£π
(
dims
 <= 2);

389 
CvM©
 
	gm
 = 
cvM©
(
rows
, 
dims
 =1 ? 1 : 
cﬁs
, 
ty≥
(), 
d©a
);

390 
	gm
.
	g°ï
 = ()
°ï
[0];

391 
	gm
.
	gty≥
 = (
m
.
ty≥
 & ~
CONTINUOUS_FLAG
Ë| (
Êags
 & CONTINUOUS_FLAG);

392  
	gm
;

395 
ölöe
 
boﬁ
 
	gM©
::
isC⁄töuous
(Ëc⁄° {  (
Êags
 & 
CONTINUOUS_FLAG
) != 0; }

396 
ölöe
 
boﬁ
 
	gM©
::
isSubm©rix
(Ëc⁄° {  (
Êags
 & 
SUBMATRIX_FLAG
) != 0; }

397 
ölöe
 
size_t
 
	gM©
::
ñemSize
(Ëc⁄° {  
dims
 > 0 ? 
°ï
.
p
[dims-1] : 0; }

398 
ölöe
 
size_t
 
	gM©
::
ñemSize1
(Ëc⁄° {  
CV_ELEM_SIZE1
(
Êags
); }

399 
ölöe
 
	gM©
::
ty≥
(Ëc⁄° {  
CV_MAT_TYPE
(
Êags
); }

400 
ölöe
 
	gM©
::
dïth
(Ëc⁄° {  
CV_MAT_DEPTH
(
Êags
); }

401 
ölöe
 
	gM©
::
ch™√ls
(Ëc⁄° {  
CV_MAT_CN
(
Êags
); }

402 
ölöe
 
size_t
 
	gM©
::
°ï1
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize1
(); }

403 
ölöe
 
boﬁ
 
	gM©
::
em±y
(Ëc⁄° {  
d©a
 =0 || 
tŸÆ
() == 0; }

404 
ölöe
 
size_t
 
	gM©
::
tŸÆ
() const

406 if–
dims
 <= 2 )

407  (
size_t
)
rows
*
cﬁs
;

408 
size_t
 
	gp
 = 1;

409  
	gi
 = 0; i < 
	gdims
; i++ )

410 
	gp
 *
size
[
i
];

411  
	gp
;

414 
ölöe
 
uch¨
* 
	gM©
::
±r
(
y
)

416 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

417  
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
;

420 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
y
) const

422 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

423  
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
;

426 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
y
)

428 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

429  (
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
);

432 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
y
) const

434 
CV_DbgAs£π
–
y
 =0 || (
d©a
 && 
dims
 >1 && ()y < ()
size
.
p
[0]) );

435  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gy
);

439 
ölöe
 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
)

441 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

442 ()
i0
 < ()
size
.
p
[0] &&

443 ()
i1
 < ()
size
.
p
[1] );

444  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1];

447 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
) const

449 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

450 ()
i0
 < ()
size
.
p
[0] &&

451 ()
i1
 < ()
size
.
p
[1] );

452  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1];

455 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
)

457 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

458 ()
i0
 < ()
size
.
p
[0] &&

459 ()
i1
 < ()
size
.
p
[1] );

460  (
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1]);

463 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
) const

465 
CV_DbgAs£π
–
dims
 >2 && 
d©a
 &&

466 ()
i0
 < ()
size
.
p
[0] &&

467 ()
i1
 < ()
size
.
p
[1] );

468  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*step.p[1]);

471 
ölöe
 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
)

473 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

474 ()
i0
 < ()
size
.
p
[0] &&

475 ()
i1
 < ()
size
.
p
[1] &&

476 ()
i2
 < ()
size
.
p
[2] );

477  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2];

480 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
) const

482 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

483 ()
i0
 < ()
size
.
p
[0] &&

484 ()
i1
 < ()
size
.
p
[1] &&

485 ()
i2
 < ()
size
.
p
[2] );

486  
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2];

489 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
)

491 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

492 ()
i0
 < ()
size
.
p
[0] &&

493 ()
i1
 < ()
size
.
p
[1] &&

494 ()
i2
 < ()
size
.
p
[2] );

495  (
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2]);

498 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©
::
±r
(
i0
, 
i1
, 
i2
) const

500 
CV_DbgAs£π
–
dims
 >3 && 
d©a
 &&

501 ()
i0
 < ()
size
.
p
[0] &&

502 ()
i1
 < ()
size
.
p
[1] &&

503 ()
i2
 < ()
size
.
p
[2] );

504  (c⁄° 
	g_Tp
*)(
	gd©a
 + 
i0
*
	g°ï
.
	gp
[0] + 
i1
*°ï.p[1] + 
i2
*step.p[2]);

507 
ölöe
 
uch¨
* 
	gM©
::
±r
(c⁄° * 
idx
)

509 
i
, 
	gd
 = 
dims
;

510 
uch¨
* 
	gp
 = 
d©a
;

511 
CV_DbgAs£π
–
d
 >1 && 
p
 );

512  
	gi
 = 0; i < 
	gd
; i++ )

514 
CV_DbgAs£π
–()
idx
[
i
] < ()
size
.
p
[i] );

515 
	gp
 +
idx
[
i
]*
°ï
.
p
[i];

517  
	gp
;

520 
ölöe
 c⁄° 
uch¨
* 
	gM©
::
±r
(c⁄° * 
idx
) const

522 
i
, 
	gd
 = 
dims
;

523 
uch¨
* 
	gp
 = 
d©a
;

524 
CV_DbgAs£π
–
d
 >1 && 
p
 );

525  
	gi
 = 0; i < 
	gd
; i++ )

527 
CV_DbgAs£π
–()
idx
[
i
] < ()
size
.
p
[i] );

528 
	gp
 +
idx
[
i
]*
°ï
.
p
[i];

530  
	gp
;

533 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
, 
i1
)

535 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
i0
 < ()
size
.
p
[0] &&

536 ()(
i1
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

537 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

538  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

541 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
, 
i1
) const

543 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
i0
 < ()
size
.
p
[0] &&

544 ()(
i1
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

545 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

546  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

549 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
Poöt
 
±
)

551 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
±
.
y
 < ()
size
.
p
[0] &&

552 ()(
±
.
x
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

553 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

554  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

557 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
Poöt
 
±
) const

559 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 && ()
±
.
y
 < ()
size
.
p
[0] &&

560 ()(
±
.
x
*
D©aTy≥
<
_Tp
>::
ch™√ls
Ë< ()(
size
.
p
[1]*channels()) &&

561 
CV_ELEM_SIZE1
(
D©aTy≥
<
_Tp
>::
dïth
Ë=
ñemSize1
());

562  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

565 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
)

567 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

568 ()
i0
 < ()(
size
.
p
[0]*size.p[1]) &&

569 
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

570 if–
isC⁄töuous
(Ë|| 
	gsize
.
	gp
[0] == 1 )

571  ((
_Tp
*)
d©a
)[
i0
];

572 if–
	gsize
.
	gp
[1] == 1 )

573  *(
_Tp
*)(
d©a
 + 
°ï
.
p
[0]*
i0
);

574 
	gi
 = 
i0
/
cﬁs
, 
	gj
 = i0 - 
i
*cols;

575  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi
))[
j
];

578 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
) const

580 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

581 ()
i0
 < ()(
size
.
p
[0]*size.p[1]) &&

582 
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

583 if–
isC⁄töuous
(Ë|| 
	gsize
.
	gp
[0] == 1 )

584  ((c⁄° 
_Tp
*)
d©a
)[
i0
];

585 if–
	gsize
.
	gp
[1] == 1 )

586  *(c⁄° 
_Tp
*)(
d©a
 + 
°ï
.
p
[0]*
i0
);

587 
	gi
 = 
i0
/
cﬁs
, 
	gj
 = i0 - 
i
*cols;

588  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi
))[
j
];

591 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(
i0
, 
i1
, 
i2
)

593 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

594  *(
	g_Tp
*)
±r
(
i0
, 
i1
, 
i2
);

596 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(
i0
, 
i1
, 
i2
) const

598 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

599  *(c⁄° 
	g_Tp
*)
±r
(
i0
, 
i1
, 
i2
);

601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©
::
©
(c⁄° * 
idx
)

603 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

604  *(
	g_Tp
*)
±r
(
idx
);

606 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(c⁄° * 
idx
) const

608 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

609  *(c⁄° 
	g_Tp
*)
±r
(
idx
);

611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> _Tp& 
	gM©
::
©
(c⁄° 
Vec
<, 
n
>& 
idx
)

613 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

614  *(
	g_Tp
*)
±r
(
idx
.
vÆ
);

616 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 c⁄° _Tp& 
	gM©
::
©
(c⁄° 
Vec
<, 
n
>& 
idx
) const

618 
CV_DbgAs£π
–
ñemSize
(Ë=
CV_ELEM_SIZE
(
D©aTy≥
<
_Tp
>::
ty≥
) );

619  *(c⁄° 
	g_Tp
*)
±r
(
idx
.
vÆ
);

623 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©
::
begö
() const

625 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

626  
	gM©C⁄°Iãøt‹_
<
	g_Tp
>((c⁄° 
	gM©_
<_Tp>*)
	gthis
);

629 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©
::
íd
() const

631 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

632 
	gM©C⁄°Iãøt‹_
<
	g_Tp
> 
ô
((c⁄° 
M©_
<
_Tp
>*)
this
);

633 
	gô
 +
tŸÆ
();

634  
	gô
;

637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©
::
begö
()

639 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

640  
	gM©Iãøt‹_
<
	g_Tp
>((
	gM©_
<_Tp>*)
	gthis
);

643 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©
::
íd
()

645 
CV_DbgAs£π
–
ñemSize
(Ë=(
_Tp
) );

646 
	gM©Iãøt‹_
<
	g_Tp
> 
ô
((
M©_
<
_Tp
>*)
this
);

647 
	gô
 +
tŸÆ
();

648  
	gô
;

651 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
›î©‹
 
ve˘‹
<
_Tp
>() const

653 
ve˘‹
<
_Tp
> 
v
;

654 
c›yTo
(
v
);

655  
	gv
;

658 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	gM©
::
›î©‹
 
Vec
<
_Tp
,Ç>() const

660 
CV_As£π
–
d©a
 && 
dims
 <2 && (
rows
 =1 || 
cﬁs
 == 1) &&

661 
rows
 + 
cﬁs
 - 1 =
n
 && 
ch™√ls
() == 1 );

663 if–
isC⁄töuous
(Ë&& 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

664  
Vec
<
_Tp
, 
	gn
>((
	g_Tp
*)
	gd©a
);

665 
	gVec
<
	g_Tp
, 
	gn
> 
	gv
; 
M©
 
tmp
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
v
.
vÆ
);

666 
c⁄vîtTo
(
tmp
,Åmp.
ty≥
());

667  
	gv
;

670 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©
::
›î©‹
 
M©x
<
_Tp
, m,Ç>() const

672 
CV_As£π
–
d©a
 && 
dims
 <2 && 
rows
 =
m
 && 
cﬁs
 =
n
 && 
ch™√ls
() == 1 );

674 if–
isC⁄töuous
(Ë&& 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

675  
M©x
<
_Tp
, 
	gm
, 
	gn
>((
	g_Tp
*)
	gd©a
);

676 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	gmtx
; 
M©
 
tmp
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
mtx
.
vÆ
);

677 
c⁄vîtTo
(
tmp
,Åmp.
ty≥
());

678  
	gmtx
;

682 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
push_back
(c⁄° 
_Tp
& 
ñem
)

684 if–!
d©a
 )

686 *
this
 = 
M©
(1, 1, 
D©aTy≥
<
_Tp
>::
ty≥
, (*)&
ñem
).
˛⁄e
();

689 
CV_As£π
(
D©aTy≥
<
_Tp
>::
ty≥
 =ty≥(Ë&& 
cﬁs
 == 1

691 
uch¨
* 
	gtmp
 = 
d©´nd
 + 
°ï
[0];

692 if–!
isSubm©rix
(Ë&& 
isC⁄töuous
(Ë&& 
	gtmp
 <
d©Æimô
 )

694 *(
_Tp
*)(
d©a
 + (
size
.
p
[0]++)*
°ï
.p[0]Ë
ñem
;

695 
	gd©´nd
 = 
tmp
;

698 
push_back_
(&
ñem
);

701 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©
::
push_back
(c⁄° 
M©_
<
_Tp
>& 
m
)

703 
push_back
((c⁄° 
M©
&)
m
);

706 
ölöe
 
	gM©
::
MSize
::MSize(* 
_p
Ë: 
p
(_p) {}

707 
ölöe
 
Size
 
M©
::
MSize
::
›î©‹
()() const

709 
CV_DbgAs£π
(
p
[-1] <= 2);

710  
Size
(
p
[1],Ö[0]);

712 
ölöe
 c⁄° & 
	gM©
::
MSize
::
›î©‹
[](
i
Ëc⁄° {  
p
[i]; }

713 
ölöe
 & 
	gM©
::
MSize
::
›î©‹
[](
i
Ë{  
p
[i]; }

714 
ölöe
 
	gM©
::
MSize
::
›î©‹
 c⁄° *(Ëc⁄° {  
p
; }

716 
ölöe
 
boﬁ
 
	gM©
::
MSize
::
›î©‹
 =(c⁄° MSize& 
sz
) const

718 
d
 = 
p
[-1], 
	gdsz
 = 
sz
.p[-1];

719 if–
	gd
 !
dsz
 )

720  
Ál£
;

721 if–
	gd
 == 2 )

722  
p
[0] =
sz
.p[0] &&Ö[1] == sz.p[1];

724  
	gi
 = 0; i < 
	gd
; i++ )

725 if–
	gp
[
i
] !
sz
.
p
[i] )

726  
Ál£
;

727  
	gåue
;

730 
ölöe
 
boﬁ
 
	gM©
::
MSize
::
›î©‹
 !(c⁄° MSize& 
sz
) const

732  !(*
this
 =
sz
);

735 
ölöe
 
	gM©
::
MSãp
::MSãp(Ë{ 
p
 = 
buf
; 
	gp
[0] =Ö[1] = 0; }

736 
ölöe
 
	gM©
::
MSãp
::MSãp(
size_t
 
s
Ë{ 
p
 = 
buf
; 
	gp
[0] = s;Ö[1] = 0; }

737 
ölöe
 c⁄° 
	gsize_t
& 
	gM©
::
MSãp
::
›î©‹
[](
i
Ëc⁄° {  
p
[i]; }

738 
ölöe
 
	gsize_t
& 
	gM©
::
MSãp
::
›î©‹
[](
i
Ë{  
p
[i]; }

739 
ölöe
 
	gM©
::
MSãp
::
›î©‹
 
size_t
() const

741 
CV_DbgAs£π
–
p
 =
buf
 );

742  
	gbuf
[0];

744 
ölöe
 
	gM©
::
MSãp
& 
M©
::MSãp::
›î©‹
 = (
size_t
 
s
)

746 
CV_DbgAs£π
–
p
 =
buf
 );

747 
	gbuf
[0] = 
s
;

748  *
	gthis
;

751 
ölöe
 
M©
 
cv¨rToM©ND
(c⁄° 
CvAº
* 
¨r
, 
boﬁ
 
c›yD©a
=
Ál£
, 
coiMode
=0)

753  
cv¨rToM©
(
¨r
, 
c›yD©a
, 
åue
, 
coiMode
);

758 
ölöe
 
	gSVD
::
SVD
() {}

759 
ölöe
 
SVD
::SVD–
I≈utAºay
 
m
, 
Êags
 ) { 
›î©‹
 ()(
	gm
, 
	gÊags
); }

760 
ölöe
 
	gSVD
::
sﬁveZ
–
I≈utAºay
 
m
, 
OuçutAºay
 
_d°
 )

762 
M©
 
	gmtx
 = 
m
.
gëM©
();

763 
SVD
 
svd
(
mtx
, (mtx.
rows
 >mtx.
cﬁs
 ? 0 : SVD::
FULL_UV
));

764 
	g_d°
.
¸óã
(
svd
.
vt
.
cﬁs
, 1, svd.vt.
ty≥
());

765 
M©
 
	gd°
 = 
_d°
.
gëM©
();

766 
	gsvd
.
	gvt
.
row
(
svd
.
vt
.
rows
-1).
ªsh≠e
(1,svd.vt.
cﬁs
).
c›yTo
(
d°
);

769 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
ölöe
 

770 
	gSVD
::
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
, M©x<_Tp, 
nm
, 1>& 
w
, M©x<_Tp, m,Çm>& 
u
, M©x<_Tp,Ç,Çm>& 
vt
 )

772 
as£π
–
nm
 =
MIN
(
m
, 
n
));

773 
M©
 
_a
(
a
, 
Ál£
), 
_u
(
u
, fÆ£), 
_w
(
w
, fÆ£), 
_vt
(
vt
, false);

774 
	gSVD
::
compuã
(
_a
, 
_w
, 
_u
, 
_vt
);

775 
CV_As£π
(
_w
.
d©a
 =(
uch¨
*)&
w
.
vÆ
[0] && 
_u
.d©®=(uch¨*)&
u
.vÆ[0] && 
_vt
.d©®=(uch¨*)&
vt
.val[0]);

778 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
> 
ölöe
 

779 
	gSVD
::
compuã
–c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
, M©x<_Tp, 
nm
, 1>& 
w
 )

781 
as£π
–
nm
 =
MIN
(
m
, 
n
));

782 
M©
 
_a
(
a
, 
Ál£
), 
_w
(
w
, false);

783 
	gSVD
::
compuã
(
_a
, 
_w
);

784 
CV_As£π
(
_w
.
d©a
 =(
uch¨
*)&
w
.
vÆ
[0]);

787 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gnm
, 
	gnb
> 
ölöe
 

788 
	gSVD
::
backSub°
–c⁄° 
M©x
<
_Tp
, 
nm
, 1>& 
w
, c⁄° M©x<_Tp, 
m
,Çm>& 
u
,

789 c⁄° 
M©x
<
_Tp
, 
n
, 
nm
>& 
vt
, c⁄° M©x<_Tp, 
m
, 
nb
>& 
rhs
,

790 
M©x
<
_Tp
, 
n
, 
nb
>& 
d°
 )

792 
as£π
–
nm
 =
MIN
(
m
, 
n
));

793 
M©
 
_u
(
u
, 
Ál£
), 
_w
(
w
, fÆ£), 
_vt
(
vt
, fÆ£), 
_rhs
(
rhs
, fÆ£), 
_d°
(
d°
, false);

794 
	gSVD
::
backSub°
(
_w
, 
_u
, 
_vt
, 
_rhs
, 
_d°
);

795 
CV_As£π
(
_d°
.
d©a
 =(
uch¨
*)&
d°
.
vÆ
[0]);

800 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
()

801 : 
M©
(Ë{ 
Êags
 = (Êag†& ~
CV_MAT_TYPE_MASK
Ë| 
D©aTy≥
<
_Tp
>::
ty≥
; }

803 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
_rows
, 
_cﬁs
)

804 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

806 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_rows
, 
_cﬁs
, c⁄° _Tp& 
vÆue
)

807 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
Ë{ *
this
 = 
vÆue
; }

809 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
Size
 
_sz
)

810 : 
M©
(
_sz
.
height
, _sz.
width
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

812 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
Size
 
_sz
, c⁄° _Tp& 
vÆue
)

813 : 
M©
(
_sz
.
height
, _sz.
width
, 
D©aTy≥
<
_Tp
>::
ty≥
Ë{ *
this
 = 
vÆue
; }

815 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(
_dims
, c⁄° * 
_sz
)

816 : 
M©
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
) {}

818 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_dims
, c⁄° * 
_sz
, c⁄° _Tp& 
_s
)

819 : 
M©
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
Sˇœr
(
_s
)) {}

821 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_<
_Tp
>& 
m
, c⁄° 
R™ge
* 
ønges
)

822 : 
M©
(
m
, 
ønges
) {}

824 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
M©
& 
m
)

825 : 
M©
(Ë{ 
Êags
 = (Êag†& ~
CV_MAT_TYPE_MASK
Ë| 
D©aTy≥
<
_Tp
>::
ty≥
; *
	gthis
 = 
m
; }

827 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
)

828 : 
M©
(
m
) {}

830 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(
_rows
, 
_cﬁs
, _Tp* 
_d©a
, 
size_t
 
°ïs
)

831 : 
M©
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
_d©a
, 
°ïs
) {}

833 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
, c⁄° 
R™ge
& 
_rowR™ge
, c⁄° R™ge& 
_cﬁR™ge
)

834 : 
M©
(
m
, 
_rowR™ge
, 
_cﬁR™ge
) {}

836 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° M©_& 
m
, c⁄° 
Re˘
& 
roi
)

837 : 
M©
(
m
, 
roi
) {}

839 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe


840 
	gM©_
<
	g_Tp
>::
M©_
(c⁄° 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
n
>& 
vec
, 
boﬁ
 
c›yD©a
)

841 : 
M©
(
n
/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
vec
)

843 
CV_As£π
(
n
%
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

844 if–
	gc›yD©a
 )

845 *
	gthis
 = 
˛⁄e
();

848 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gm
, 
	gn
> 
ölöe


849 
	gM©_
<
	g_Tp
>::
M©_
(c⁄° 
M©x
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
,
m
,
n
>& 
M
, 
boﬁ
 
c›yD©a
)

850 : 
M©
(
m
, 
n
/
D©aTy≥
<
_Tp
>::
ch™√ls
, D©aTy≥<_Tp>::
ty≥
, (*)&
M
)

852 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

853 if–
	gc›yD©a
 )

854 *
	gthis
 = 
˛⁄e
();

857 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
Poöt_
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
)

858 : 
M©
(2/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
±
)

860 
CV_As£π
(2 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

861 if–
	gc›yD©a
 )

862 *
	gthis
 = 
˛⁄e
();

865 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
Poöt3_
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
>& 
±
, 
boﬁ
 
c›yD©a
)

866 : 
M©
(3/
D©aTy≥
<
_Tp
>::
ch™√ls
, 1, D©aTy≥<_Tp>::
ty≥
, (*)&
±
)

868 
CV_As£π
(3 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

869 if–
	gc›yD©a
 )

870 *
	gthis
 = 
˛⁄e
();

873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
M©_
(c⁄° 
M©CommaInôülizî_
<
_Tp
>& 
commaInôülizî
)

874 : 
M©
(
commaInôülizî
) {}

876 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©_
<_Tp>::M©_(c⁄° 
ve˘‹
<_Tp>& 
vec
, 
boﬁ
 
c›yD©a
)

877 : 
M©
(
vec
, 
c›yD©a
) {}

879 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©
& 
m
)

881 if–
D©aTy≥
<
_Tp
>::
ty≥
 =
m
.type() )

883 
M©
::
›î©‹
 = (
m
);

884  *
	gthis
;

886 if–
	gD©aTy≥
<
	g_Tp
>::
dïth
 =
m
.depth() )

888  (*
this
 = 
m
.
ªsh≠e
(
D©aTy≥
<
_Tp
>::
ch™√ls
, m.
dims
, 0));

890 
CV_DbgAs£π
(
D©aTy≥
<
_Tp
>::
ch™√ls
 =
m
.channels());

891 
	gm
.
c⁄vîtTo
(*
this
, 
ty≥
());

892  *
	gthis
;

895 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©_
& 
m
)

897 
M©
::
›î©‹
=(
m
);

898  *
	gthis
;

901 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
_Tp
& 
s
)

903 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tvec_ty≥
 
	tVT
;

904 
	gM©
::
›î©‹
=(
Sˇœr
((c⁄° 
VT
&)
s
));

905  *
	gthis
;

908 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
_rows
, 
_cﬁs
)

910 
	gM©
::
¸óã
(
_rows
, 
_cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

913 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
Size
 
_sz
)

915 
M©
::
¸óã
(
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
¸óã
(
_dims
, c⁄° * 
_sz
)

920 
	gM©
::
¸óã
(
_dims
, 
_sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
¸oss
(c⁄° 
M©_
& 
m
) const

925 {  
M©_
<
_Tp
>(
M©
::
¸oss
(
m
)); }

927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
M©_
<
T2
>() const

928 {  
M©_
<
T2
>(*
this
); }

930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
row
(
y
) const

931 {  
M©_
(*
this
, 
R™ge
(
y
, y+1), R™ge::
Æl
()); }

932 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
cﬁ
(
x
) const

933 {  
M©_
(*
this
, 
R™ge
::
Æl
(), R™ge(
x
, x+1)); }

934 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
düg
(
d
) const

935 {  
M©_
(
M©
::
düg
(
d
)); }

936 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
˛⁄e
() const

937 {  
M©_
(
M©
::
˛⁄e
()); }

939 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
ñemSize
() const

941 
CV_DbgAs£π
–
M©
::
ñemSize
(Ë=(
_Tp
) );

942  (
	g_Tp
);

945 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
ñemSize1
() const

947 
CV_DbgAs£π
–
M©
::
ñemSize1
(Ë=(
_Tp
)/
D©aTy≥
<_Tp>::
ch™√ls
 );

948  (
	g_Tp
)/
	gD©aTy≥
<_Tp>::
ch™√ls
;

950 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
ty≥
() const

952 
CV_DbgAs£π
–
M©
::
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

953  
	gD©aTy≥
<
	g_Tp
>::
ty≥
;

955 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
dïth
() const

957 
CV_DbgAs£π
–
M©
::
dïth
(Ë=
D©aTy≥
<
_Tp
>::depth );

958  
	gD©aTy≥
<
	g_Tp
>::
dïth
;

960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
ch™√ls
() const

962 
CV_DbgAs£π
–
M©
::
ch™√ls
(Ë=
D©aTy≥
<
_Tp
>::channels );

963  
	gD©aTy≥
<
	g_Tp
>::
ch™√ls
;

965 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
°ïT
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize
(); }

966 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gM©_
<_Tp>::
°ï1
(
i
Ëc⁄° {  
°ï
.
p
[i]/
ñemSize1
(); }

968 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>& M©_<_Tp>::
adju°ROI
–
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
 )

969 {  (
	gM©_
<
	g_Tp
>&)(
	gM©
::
adju°ROI
(
dt›
, 
dbŸtom
, 
dÀ·
, 
dright
)); }

971 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
R™ge
& 
_rowR™ge
, c⁄° 
	gR™ge
& 
	g_cﬁR™ge
 ) const

972 {  
	gM©_
<
	g_Tp
>(*
	gthis
, 
	g_rowR™ge
, 
	g_cﬁR™ge
); }

974 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
Re˘
& 
roi
 ) const

975 {  
M©_
<
_Tp
>(*
this
, 
	groi
); }

977 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> M©_<_Tp>::
›î©‹
()–c⁄° 
R™ge
* 
ønges
 ) const

978 {  
M©_
<
_Tp
>(*
this
, 
	gønges
); }

980 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gM©_
<_Tp>::
›î©‹
 [](
y
)

981 {  (
_Tp
*)
±r
(
y
); }

982 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gM©_
<_Tp>::
›î©‹
 [](
y
) const

983 {  (c⁄° 
_Tp
*)
±r
(
y
); }

985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
)

987 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

988 ()
i0
 < ()
size
.
p
[0] &&

989 ()
i1
 < ()
size
.
p
[1] &&

990 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

991  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

994 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
) const

996 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

997 ()
i0
 < ()
size
.
p
[0] &&

998 ()
i1
 < ()
size
.
p
[1] &&

999 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1000  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	gi0
))[
i1
];

1003 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
Poöt
 
±
)

1005 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

1006 ()
±
.
y
 < ()
size
.
p
[0] &&

1007 ()
±
.
x
 < ()
size
.
p
[1] &&

1008 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1009  ((
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

1012 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
Poöt
 
±
) const

1014 
CV_DbgAs£π
–
dims
 <2 && 
d©a
 &&

1015 ()
±
.
y
 < ()
size
.
p
[0] &&

1016 ()
±
.
x
 < ()
size
.
p
[1] &&

1017 
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type );

1018  ((c⁄° 
	g_Tp
*)(
	gd©a
 + 
	g°ï
.
	gp
[0]*
	g±
.
	gy
))[
±
.
x
];

1021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° * 
idx
)

1023  
M©
::
©
<
_Tp
>(
idx
);

1026 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° * 
idx
) const

1028  
M©
::
©
<
_Tp
>(
idx
);

1031 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° 
Vec
<,Ç>& 
	gidx
)

1033  
	gM©
::
©
<
_Tp
>(
idx
);

1036 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(c⁄° 
Vec
<,Ç>& 
	gidx
) const

1038  
	gM©
::
©
<
_Tp
>(
idx
);

1041 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
)

1043  
this
->
©
<
_Tp
>(
i0
);

1046 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
) const

1048  
this
->
©
<
_Tp
>(
i0
);

1051 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
, 
	gi2
)

1053  
	gthis
->
	g©
<
	g_Tp
>(
	gi0
, 
	gi1
, 
	gi2
);

1056 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gM©_
<_Tp>::
›î©‹
 ()(
i0
, 
	gi1
, 
	gi2
) const

1058  
	gthis
->
	g©
<
	g_Tp
>(
	gi0
, 
	gi1
, 
	gi2
);

1062 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
ve˘‹
<
_Tp
>() const

1064 
ve˘‹
<
_Tp
> 
v
;

1065 
c›yTo
(
v
);

1066  
	gv
;

1069 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gn
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
Vec
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
,Ç>() const

1071 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

1072  
	gthis
->
	gM©
::
›î©‹
 
Vec
<
ty≥«me
 
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, 
	gn
>();

1075 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<
	gm
, 
	gn
> 
ölöe
 
	gM©_
<_Tp>::
›î©‹
 
M©x
<ty≥«mê
D©aTy≥
<
_Tp
>::
ch™√l_ty≥
, m,Ç>() const

1077 
CV_As£π
(
n
 % 
D©aTy≥
<
_Tp
>::
ch™√ls
 == 0);

1079 
	gM©x
<
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
ch™√l_ty≥
, 
	gm
, 
	gn
> 
	gªs
 = 
this
->
M©
::
›î©‹
 
M©x
<ty≥«mê
D©aTy≥
<
_Tp
>::channel_type, m,Ç>();

1080  
	gªs
;

1083 
	gãm∂©e
<
ty≥«me
 
	gT1
,Åy≥«mê
	gT2
,Åy≥«mê
	gOp
> 
ölöe
 

1084 
¥o˚ss
–c⁄° 
M©_
<
T1
>& 
m1
, M©_<
T2
>& 
m2
, 
Op
 
›
 )

1086 
	gy
, 
	gx
, 
	grows
 = 
m1
.
rows
, 
	gcﬁs
 = m1.
cﬁs
;

1088 
CV_DbgAs£π
–
m1
.
size
(Ë=
m2
.size() );

1090  
	gy
 = 0; y < 
	grows
; y++ )

1092 c⁄° 
T1
* 
	g§c
 = 
m1
[
y
];

1093 
T2
* 
	gd°
 = 
m2
[
y
];

1095  
	gx
 = 0; x < 
	gcﬁs
; x++ )

1096 
	gd°
[
x
] = 
›
(
§c
[x]);

1100 
	gãm∂©e
<
ty≥«me
 
	gT1
,Åy≥«mê
	gT2
,Åy≥«mê
	gT3
,Åy≥«mê
	gOp
> 
ölöe
 

1101 
¥o˚ss
–c⁄° 
M©_
<
T1
>& 
m1
, c⁄° M©_<
T2
>& 
m2
, M©_<
T3
>& 
m3
, 
Op
 
›
 )

1103 
	gy
, 
	gx
, 
	grows
 = 
m1
.
rows
, 
	gcﬁs
 = m1.
cﬁs
;

1105 
CV_DbgAs£π
–
m1
.
size
(Ë=
m2
.size() );

1107  
	gy
 = 0; y < 
	grows
; y++ )

1109 c⁄° 
T1
* 
	g§c1
 = 
m1
[
y
];

1110 c⁄° 
T2
* 
	g§c2
 = 
m2
[
y
];

1111 
T3
* 
	gd°
 = 
m3
[
y
];

1113  
	gx
 = 0; x < 
	gcﬁs
; x++ )

1114 
	gd°
[
x
] = 
›
–
§c1
[x], 
§c2
[x] );

1121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
)

1122 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1124 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
)

1125 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR_VECTOR
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1127 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
)

1128 : 
Êags
(
FIXED_TYPE
 + 
STD_VECTOR_MAT
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
vec
) {}

1130 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
)

1131 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
mtx
), 
sz
(
n
, 
m
) {}

1133 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
_Tp
* 
vec
, 
n
)

1134 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)
vec
), 
sz
(
n
, 1) {}

1136 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
Sˇœr
& 
s
)

1137 : 
Êags
(
FIXED_TYPE
 + 
FIXED_SIZE
 + 
MATX
 + 
CV_64F
), 
obj
((*)&
s
), 
sz
(1, 4) {}

1139 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_I≈utAºay
::
_I≈utAºay
(c⁄° 
M©_
<
_Tp
>& 
m
)

1140 : 
Êags
(
FIXED_TYPE
 + 
MAT
 + 
D©aTy≥
<
_Tp
>::
ty≥
), 
obj
((*)&
m
) {}

1142 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(
ve˘‹
<
_Tp
>& 
vec
)

1143 : 
_I≈utAºay
(
vec
) {}

1144 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
ve˘‹
<ve˘‹<_Tp> >& 
vec
)

1145 : 
_I≈utAºay
(
vec
) {}

1146 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
ve˘‹
<
M©_
<_Tp> >& 
vec
)

1147 : 
_I≈utAºay
(
vec
) {}

1148 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(
M©_
<_Tp>& 
m
)

1149 : 
_I≈utAºay
(
m
) {}

1150 
ãm∂©e
<
ty≥«me
 
_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(
M©x
<_Tp, 
m
, 
n
>& 
mtx
)

1151 : 
_I≈utAºay
(
mtx
) {}

1152 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(_Tp* 
vec
, 
n
)

1153 : 
_I≈utAºay
(
vec
, 
n
) {}

1155 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<
_Tp
>& 
vec
)

1156 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<ve˘‹<
_Tp
> >& 
vec
)

1158 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1159 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
ve˘‹
<
M©_
<
_Tp
> >& 
vec
)

1160 : 
_I≈utAºay
(
vec
Ë{
Êags
 |
FIXED_SIZE
;}

1162 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
M©_
<
_Tp
>& 
m
)

1163 : 
_I≈utAºay
(
m
Ë{
Êags
 |
FIXED_SIZE
;}

1164 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g_OuçutAºay
::
_OuçutAºay
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
mtx
)

1165 : 
_I≈utAºay
(
mtx
) {}

1166 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
_OuçutAºay
::_OuçutAºay(c⁄° _Tp* 
vec
, 
n
)

1167 : 
_I≈utAºay
(
vec
, 
n
) {}

1171 ˛as†
	cCV_EXPORTS
 
	gM©Op


1173 
	gpublic
:

1174 
M©Op
() {};

1175 
	gvútuÆ
 ~
M©Op
() {};

1177 
vútuÆ
 
boﬁ
 
ñemítWi£
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1178 
vútuÆ
 
assign
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
, 
ty≥
=-1) const = 0;

1179 
vútuÆ
 
roi
(c⁄° 
M©Ex¥
& 
ex¥
, c⁄° 
R™ge
& 
rowR™ge
,

1180 c⁄° 
R™ge
& 
cﬁR™ge
, 
M©Ex¥
& 
ªs
) const;

1181 
vútuÆ
 
düg
(c⁄° 
M©Ex¥
& 
ex¥
, 
d
, M©Ex¥& 
ªs
) const;

1182 
vútuÆ
 
augAssignAdd
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1183 
vútuÆ
 
augAssignSubåa˘
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1184 
vútuÆ
 
augAssignMu…ùly
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1185 
vútuÆ
 
augAssignDivide
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1186 
vútuÆ
 
augAssignAnd
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1187 
vútuÆ
 
augAssignOr
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1188 
vútuÆ
 
augAssignX‹
(c⁄° 
M©Ex¥
& 
ex¥
, 
M©
& 
m
) const;

1190 
vútuÆ
 
add
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1191 
vútuÆ
 
add
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° 
Sˇœr
& 
s
, M©Ex¥& 
ªs
) const;

1193 
vútuÆ
 
subåa˘
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1194 
vútuÆ
 
subåa˘
(c⁄° 
Sˇœr
& 
s
, c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1196 
vútuÆ
 
mu…ùly
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
, 
sˇÀ
=1) const;

1197 
vútuÆ
 
mu…ùly
(c⁄° 
M©Ex¥
& 
ex¥1
, 
s
, M©Ex¥& 
ªs
) const;

1199 
vútuÆ
 
divide
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
, 
sˇÀ
=1) const;

1200 
vútuÆ
 
divide
(
s
, c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1202 
vútuÆ
 
abs
(c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1204 
vútuÆ
 
å™•o£
(c⁄° 
M©Ex¥
& 
ex¥
, M©Ex¥& 
ªs
) const;

1205 
vútuÆ
 
m©mul
(c⁄° 
M©Ex¥
& 
ex¥1
, c⁄° M©Ex¥& 
ex¥2
, M©Ex¥& 
ªs
) const;

1206 
vútuÆ
 
övît
(c⁄° 
M©Ex¥
& 
ex¥
, 
mëhod
, M©Ex¥& 
ªs
) const;

1208 
vútuÆ
 
Size
 
size
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1209 
vútuÆ
 
ty≥
(c⁄° 
M©Ex¥
& 
ex¥
) const;

1213 ˛as†
	cCV_EXPORTS
 
	gM©Ex¥


1215 
	gpublic
:

1216 
M©Ex¥
(Ë: 
›
(0), 
Êags
(0), 
a
(
M©
()), 
b
(M©()), 
c
(M©()), 
Æpha
(0), 
bëa
(0), 
s
(
Sˇœr
()) {}

1217 
M©Ex¥
(c⁄° 
M©Op
* 
_›
, 
_Êags
, c⁄° 
M©
& 
_a
=M©(), c⁄° M©& 
_b
=Mat(),

1218 c⁄° 
M©
& 
_c
=M©(), 
_Æpha
=1, 
_bëa
=1, c⁄° 
Sˇœr
& 
_s
=Scalar())

1219 : 
›
(
_›
), 
Êags
(
_Êags
), 
a
(
_a
), 
b
(
_b
), 
c
(
_c
), 
Æpha
(
_Æpha
), 
bëa
(
_bëa
), 
s
(
_s
) {}

1220 
ex∂icô
 
M©Ex¥
(c⁄° 
M©
& 
m
);

1221 
›î©‹
 
M©
() const

1223 
M©
 
	gm
;

1224 
	g›
->
assign
(*
this
, 
m
);

1225  
	gm
;

1228 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
›î©‹
 
	gM©_
<_Tp>() const

1230 
	gM©_
<
	g_Tp
> 
	gm
;

1231 
	g›
->
assign
(*
this
, 
m
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1232  
	gm
;

1235 
M©Ex¥
 
row
(
y
) const;

1236 
M©Ex¥
 
cﬁ
(
x
) const;

1237 
M©Ex¥
 
düg
(
d
=0) const;

1238 
M©Ex¥
 
›î©‹
()–c⁄° 
	gR™ge
& 
	growR™ge
, c⁄° R™ge& 
	gcﬁR™ge
 ) const;

1239 
M©Ex¥
 
›î©‹
()–c⁄° 
	gRe˘
& 
	groi
 ) const;

1241 
M©
 
¸oss
(c⁄° M©& 
m
) const;

1242 
dŸ
(c⁄° 
M©
& 
m
) const;

1244 
M©Ex¥
 
t
() const;

1245 
M©Ex¥
 
öv
(
mëhod
 = 
DECOMP_LU
) const;

1246 
M©Ex¥
 
mul
(c⁄° M©Ex¥& 
e
, 
sˇÀ
=1) const;

1247 
M©Ex¥
 
mul
(c⁄° 
M©
& 
m
, 
sˇÀ
=1) const;

1249 
Size
 
size
() const;

1250 
ty≥
() const;

1252 c⁄° 
M©Op
* 
	g›
;

1253 
	gÊags
;

1255 
M©
 
	ga
, 
	gb
, 
	gc
;

1256 
	gÆpha
, 
	gbëa
;

1257 
Sˇœr
 
	gs
;

1261 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1262 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1263 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1264 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1265 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1266 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gSˇœr
& 
	gs
);

1267 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1268 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 + (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1270 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1271 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1272 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1273 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1274 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1275 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gSˇœr
& 
	gs
);

1276 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1277 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1279 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©
& 
	gm
);

1280 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 - (c⁄° 
	gM©Ex¥
& 
	ge
);

1282 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1283 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1284 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (
	gs
, c⁄° 
	gM©
& 
	ga
);

1285 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1286 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1287 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge
, 
	gs
);

1288 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1289 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 * (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1291 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1292 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1293 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (
	gs
, c⁄° 
	gM©
& 
	ga
);

1294 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge
, c⁄° 
	gM©
& 
	gm
);

1295 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©
& 
	gm
, c⁄° 
	gM©Ex¥
& 
	ge
);

1296 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge
, 
	gs
);

1297 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (
	gs
, c⁄° 
	gM©Ex¥
& 
	ge
);

1298 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 / (c⁄° 
	gM©Ex¥
& 
	ge1
, c⁄° M©Ex¥& 
	ge2
);

1300 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1301 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1302 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 < (
	gs
, c⁄° 
	gM©
& 
	ga
);

1304 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1305 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(c⁄° 
M©
& 
a
, 
	gs
);

1306 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 <(
s
, c⁄° 
	gM©
& 
	ga
);

1308 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1309 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(c⁄° 
M©
& 
a
, 
	gs
);

1310 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 =(
s
, c⁄° 
	gM©
& 
	ga
);

1312 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1313 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(c⁄° 
M©
& 
a
, 
	gs
);

1314 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 !(
s
, c⁄° 
	gM©
& 
	ga
);

1316 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(c⁄° 
M©
& 
a
, c⁄° 
	gM©
& 
	gb
);

1317 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(c⁄° 
M©
& 
a
, 
	gs
);

1318 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 >(
s
, c⁄° 
	gM©
& 
	ga
);

1320 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1321 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (c⁄° 
	gM©
& 
	ga
, 
	gs
);

1322 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 > (
	gs
, c⁄° 
	gM©
& 
	ga
);

1324 
CV_EXPORTS
 
M©Ex¥
 
mö
(c⁄° 
M©
& 
a
, c⁄° M©& 
b
);

1325 
CV_EXPORTS
 
M©Ex¥
 
mö
(c⁄° 
M©
& 
a
, 
s
);

1326 
CV_EXPORTS
 
M©Ex¥
 
mö
(
s
, c⁄° 
M©
& 
a
);

1328 
CV_EXPORTS
 
M©Ex¥
 
max
(c⁄° 
M©
& 
a
, c⁄° M©& 
b
);

1329 
CV_EXPORTS
 
M©Ex¥
 
max
(c⁄° 
M©
& 
a
, 
s
);

1330 
CV_EXPORTS
 
M©Ex¥
 
max
(
s
, c⁄° 
M©
& 
a
);

1332 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
)

1334  
	gcv
::
mö
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
);

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
)

1339  
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
);

1342 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
mö
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
)

1344  
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
);

1347 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
)

1349  
	gcv
::
max
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
);

1352 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
)

1354  
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
);

1357 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
max
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
)

1359  
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
);

1362 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
, M©_<_Tp>& 
c
)

1364 
	gcv
::
mö
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
, (M©&)
c
);

1367 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
, M©_<_Tp>& 
c
)

1369 
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1372 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
mö
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
, M©_<_Tp>& 
c
)

1374 
	gcv
::
mö
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1377 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
b
, M©_<_Tp>& 
c
)

1379 
	gcv
::
max
((c⁄° 
M©
&)
a
, (c⁄° M©&)
b
, (M©&)
c
);

1382 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(c⁄° 
M©_
<
_Tp
>& 
a
, 
s
, M©_<_Tp>& 
c
)

1384 
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1387 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
max
(
s
, c⁄° 
M©_
<
_Tp
>& 
a
, M©_<_Tp>& 
c
)

1389 
	gcv
::
max
((c⁄° 
M©
&)
a
, 
s
, (M©&)
c
);

1393 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1394 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1395 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 & (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1397 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1398 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1399 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 | (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1401 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gM©
& 
	ga
, c⁄° M©& 
	gb
);

1402 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gM©
& 
	ga
, c⁄° 
	gSˇœr
& 
	gs
);

1403 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ^ (c⁄° 
	gSˇœr
& 
	gs
, c⁄° 
	gM©
& 
	ga
);

1405 
CV_EXPORTS
 
M©Ex¥
 
	g›î©‹
 ~(c⁄° 
	gM©
& 
	gm
);

1407 
CV_EXPORTS
 
M©Ex¥
 
abs
(c⁄° 
M©
& 
m
);

1408 
CV_EXPORTS
 
M©Ex¥
 
abs
(c⁄° M©Ex¥& 
e
);

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
abs
(c⁄° 
M©_
<
_Tp
>& 
m
)

1412  
	gcv
::
abs
((c⁄° 
M©
&)
m
);

1417 
ölöe
 
	gM©
& M©::
›î©‹
 = (c⁄° 
M©Ex¥
& 
e
)

1419 
e
.
›
->
assign
”, *
this
);

1420  *
	gthis
;

1423 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>::
	$M©_
(c⁄° 
M©Ex¥
& 
e
)

1425 
e
.
›
->
	`assign
”, *
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1426 
	}
}

1428 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©_
<_Tp>& M©_<_Tp>::
›î©‹
 = (c⁄° 
M©Ex¥
& 
e
)

1430 
e
.
›
->
assign
”, *
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1431  *
	gthis
;

1434 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1436 
add
(
a
, 
b
, (
M©
&)a);

1437  (
	gM©
&)
	ga
;

1440 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1442 
add
(
a
, 
s
, (
M©
&)a);

1443  (
	gM©
&)
	ga
;

1446 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1447 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1449 
add
(
a
, 
b
, (
M©
&)a);

1450  (
	gM©_
<
	g_Tp
>&)
	ga
;

1453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1454 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1456 
add
(
a
, 
s
, (
M©
&)a);

1457  (
	gM©_
<
	g_Tp
>&)
	ga
;

1460 
ölöe
 
	gM©
& 
	g›î©‹
 +(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1462 
	gb
.
	g›
->
augAssignAdd
(
b
, (
M©
&)
a
);

1463  (
	gM©
&)
	ga
;

1466 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1467 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 +(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1469 
	gb
.
	g›
->
augAssignAdd
(
b
, (
M©
&)
a
);

1470  (
	gM©_
<
	g_Tp
>&)
	ga
;

1473 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1475 
subåa˘
(
a
, 
b
, (
M©
&)a);

1476  (
	gM©
&)
	ga
;

1479 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1481 
subåa˘
(
a
, 
s
, (
M©
&)a);

1482  (
	gM©
&)
	ga
;

1485 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1486 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1488 
subåa˘
(
a
, 
b
, (
M©
&)a);

1489  (
	gM©_
<
	g_Tp
>&)
	ga
;

1492 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1493 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1495 
subåa˘
(
a
, 
s
, (
M©
&)a);

1496  (
	gM©_
<
	g_Tp
>&)
	ga
;

1499 
ölöe
 
	gM©
& 
	g›î©‹
 -(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1501 
	gb
.
	g›
->
augAssignSubåa˘
(
b
, (
M©
&)
a
);

1502  (
	gM©
&)
	ga
;

1505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1506 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 -(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1508 
	gb
.
	g›
->
augAssignSubåa˘
(
b
, (
M©
&)
a
);

1509  (
	gM©_
<
	g_Tp
>&)
	ga
;

1512 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1514 
gemm
(
a
, 
b
, 1, 
M©
(), 0, (Mat&)a, 0);

1515  (
	gM©
&)
	ga
;

1518 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, 
	gs
)

1520 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 
s
);

1521  (
	gM©
&)
	ga
;

1524 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1525 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1527 
gemm
(
a
, 
b
, 1, 
M©
(), 0, (Mat&)a, 0);

1528  (
	gM©_
<
	g_Tp
>&)
	ga
;

1531 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1532 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, 
	gs
)

1534 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 
s
);

1535  (
	gM©_
<
	g_Tp
>&)
	ga
;

1538 
ölöe
 
	gM©
& 
	g›î©‹
 *(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1540 
	gb
.
	g›
->
augAssignMu…ùly
(
b
, (
M©
&)
a
);

1541  (
	gM©
&)
	ga
;

1544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1545 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 *(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1547 
	gb
.
	g›
->
augAssignMu…ùly
(
b
, (
M©
&)
a
);

1548  (
	gM©_
<
	g_Tp
>&)
	ga
;

1551 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1553 
divide
(
a
, 
b
, (
M©
&)a);

1554  (
	gM©
&)
	ga
;

1557 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, 
	gs
)

1559 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 1./
s
);

1560  (
	gM©
&)
	ga
;

1563 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1564 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° M©_<_Tp>& 
	gb
)

1566 
divide
(
a
, 
b
, (
M©
&)a);

1567  (
	gM©_
<
	g_Tp
>&)
	ga
;

1570 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1571 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, 
	gs
)

1573 
	ga
.
c⁄vîtTo
((
M©
&)
a
, -1, 1./
s
);

1574  (
	gM©_
<
	g_Tp
>&)
	ga
;

1577 
ölöe
 
	gM©
& 
	g›î©‹
 /(c⁄° 
M©
& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1579 
	gb
.
	g›
->
augAssignDivide
(
b
, (
M©
&)
a
);

1580  (
	gM©
&)
	ga
;

1583 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1584 
	gM©_
<
	g_Tp
>& 
	g›î©‹
 /(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©Ex¥
& 
	gb
)

1586 
	gb
.
	g›
->
augAssignDivide
(
b
, (
M©
&)
a
);

1587  (
	gM©_
<
	g_Tp
>&)
	ga
;

1592 
ölöe
 
	gM©
& 
	g›î©‹
 &(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1594 
bôwi£_™d
(
a
, 
b
, (
M©
&)a);

1595  (
	gM©
&)
	ga
;

1598 
ölöe
 
	gM©
& 
	g›î©‹
 &(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1600 
bôwi£_™d
(
a
, 
s
, (
M©
&)a);

1601  (
	gM©
&)
	ga
;

1604 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1605 
	g›î©‹
 &(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1607 
bôwi£_™d
(
a
, 
b
, (
M©
&)a);

1608  (
	gM©_
<
	g_Tp
>&)
	ga
;

1611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1612 
	g›î©‹
 &(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1614 
bôwi£_™d
(
a
, 
s
, (
M©
&)a);

1615  (
	gM©_
<
	g_Tp
>&)
	ga
;

1618 
ölöe
 
	gM©
& 
	g›î©‹
 |(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1620 
bôwi£_‹
(
a
, 
b
, (
M©
&)a);

1621  (
	gM©
&)
	ga
;

1624 
ölöe
 
	gM©
& 
	g›î©‹
 |(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1626 
bôwi£_‹
(
a
, 
s
, (
M©
&)a);

1627  (
	gM©
&)
	ga
;

1630 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1631 
	g›î©‹
 |(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1633 
bôwi£_‹
(
a
, 
b
, (
M©
&)a);

1634  (
	gM©_
<
	g_Tp
>&)
	ga
;

1637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1638 
	g›î©‹
 |(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1640 
bôwi£_‹
(
a
, 
s
, (
M©
&)a);

1641  (
	gM©_
<
	g_Tp
>&)
	ga
;

1644 
ölöe
 
	gM©
& 
	g›î©‹
 ^(c⁄° 
M©
& 
a
, c⁄° M©& 
	gb
)

1646 
bôwi£_x‹
(
a
, 
b
, (
M©
&)a);

1647  (
	gM©
&)
	ga
;

1650 
ölöe
 
	gM©
& 
	g›î©‹
 ^(c⁄° 
M©
& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1652 
bôwi£_x‹
(
a
, 
s
, (
M©
&)a);

1653  (
	gM©
&)
	ga
;

1656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1657 
	g›î©‹
 ^(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gM©_
<
	g_Tp
>& 
	gb
)

1659 
bôwi£_x‹
(
a
, 
b
, (
M©
&)a);

1660  (
	gM©_
<
	g_Tp
>&)
	ga
;

1663 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp>&

1664 
	g›î©‹
 ^(c⁄° 
M©_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr
& 
	gs
)

1666 
bôwi£_x‹
(
a
, 
s
, (
M©
&)a);

1667  (
	gM©_
<
	g_Tp
>&)
	ga
;

1672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
•lô
(c⁄° 
M©
& 
§c
, 
ve˘‹
<
M©_
<
_Tp
> >& 
mv
)

1673 { 
•lô
(
§c
, (
ve˘‹
<
M©
>&)
mv
 ); }

1677 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$zîos
(
rows
, 
cﬁs
)

1679  
M©
::
	`zîos
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1680 
	}
}

1682 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$zîos
(
Size
 
sz
)

1684  
M©
::
	`zîos
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1685 
	}
}

1687 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$⁄es
(
rows
, 
cﬁs
)

1689  
M©
::
	`⁄es
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1690 
	}
}

1692 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$⁄es
(
Size
 
sz
)

1694  
M©
::
	`⁄es
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1695 
	}
}

1697 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$eye
(
rows
, 
cﬁs
)

1699  
M©
::
	`eye
(
rows
, 
cﬁs
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1700 
	}
}

1702 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
M©Ex¥
 
	gM©_
<_Tp>::
	$eye
(
Size
 
sz
)

1704  
M©
::
	`eye
(
sz
, 
D©aTy≥
<
_Tp
>::
ty≥
);

1705 
	}
}

1709 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
()

1710 : 
	`m
(0), 
	`ñemSize
(0), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0Ë{
	}
}

1712 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
)

1713 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1715 if–
m
 && m->
	`isC⁄töuous
() )

1717 
¶i˚Sèπ
 = 
m
->
d©a
;

1718 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1720 
	`£ek
((const *)0);

1721 
	}
}

1723 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
_row
, 
_cﬁ
)

1724 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1726 
	`CV_As£π
(
m
 && m->
dims
 <= 2);

1727 if–
m
->
	`isC⁄töuous
() )

1729 
¶i˚Sèπ
 = 
m
->
d©a
;

1730 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1732 
idx
[]={
_row
, 
_cﬁ
};

1733 
	`£ek
(
idx
);

1734 
	}
}

1736 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©
* 
_m
, 
Poöt
 
_±
)

1737 : 
	`m
(
_m
), 
	`ñemSize
(_m->ñemSize()), 
	`±r
(0), 
	`¶i˚Sèπ
(0), 
	$¶i˚End
(0)

1739 
	`CV_As£π
(
m
 && m->
dims
 <= 2);

1740 if–
m
->
	`isC⁄töuous
() )

1742 
¶i˚Sèπ
 = 
m
->
d©a
;

1743 
¶i˚End
 = 
¶i˚Sèπ
 + 
m
->
	`tŸÆ
()*
ñemSize
;

1745 
idx
[]={
_±
.
y
, _±.
x
};

1746 
	`£ek
(
idx
);

1747 
	}
}

1749 
ölöe
 
	gM©C⁄°Iãøt‹
::
	$M©C⁄°Iãøt‹
(c⁄° 
M©C⁄°Iãøt‹
& 
ô
)

1750 : 
	`m
(
ô
.
m
), 
	`ñemSize
(ô.
ñemSize
), 
	`±r
(ô.
±r
), 
	`¶i˚Sèπ
(ô.
¶i˚Sèπ
), 
	$¶i˚End
(
ô
.
¶i˚End
)

1751 {
	}
}

1753 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 = (c⁄° 
M©C⁄°Iãøt‹
& 
ô
 )

1755 
m
 = 
ô
.m; 
	gñemSize
 = it.
ñemSize
; 
	g±r
 = it.
±r
;

1756 
	g¶i˚Sèπ
 = 
ô
.
¶i˚Sèπ
; 
	g¶i˚End
 = it.
¶i˚End
;

1757  *
	gthis
;

1760 
ölöe
 
uch¨
* 
	gM©C⁄°Iãøt‹
::
›î©‹
 *(Ëc⁄° {  
±r
; }

1762 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 +(
±rdiff_t
 
ofs
)

1764 if–!
m
 || 
ofs
 == 0 )

1765  *
this
;

1766 
±rdiff_t
 
	gofsb
 = 
ofs
*
ñemSize
;

1767 
	g±r
 +
ofsb
;

1768 if–
	g±r
 < 
	g¶i˚Sèπ
 || 
	g¶i˚End
 <
±r
 )

1770 
±r
 -
ofsb
;

1771 
£ek
(
ofs
, 
åue
);

1773  *
	gthis
;

1776 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 -(
±rdiff_t
 
ofs
)

1777 {  (*
this
 +-
ofs
); }

1779 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 --()

1781 if–
m
 && (
±r
 -
ñemSize
Ë< 
¶i˚Sèπ
 )

1783 
±r
 +
ñemSize
;

1784 
£ek
(-1, 
åue
);

1786  *
	gthis
;

1789 
ölöe
 
M©C⁄°Iãøt‹
 
	gM©C⁄°Iãøt‹
::
›î©‹
 --()

1791 
M©C⁄°Iãøt‹
 
b
 = *
this
;

1792 *
	gthis
 += -1;

1793  
	gb
;

1796 
ölöe
 
	gM©C⁄°Iãøt‹
& M©C⁄°Iãøt‹::
›î©‹
 ++()

1798 if–
m
 && (
±r
 +
ñemSize
Ë>
¶i˚End
 )

1800 
±r
 -
ñemSize
;

1801 
£ek
(1, 
åue
);

1803  *
	gthis
;

1806 
ölöe
 
M©C⁄°Iãøt‹
 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++()

1808 
M©C⁄°Iãøt‹
 
b
 = *
this
;

1809 *
	gthis
 += 1;

1810  
	gb
;

1813 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::
	$M©C⁄°Iãøt‹_
(Ë{
	}
}

1815 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>::M©C⁄°Iãøt‹_(c⁄° 
M©_
<_Tp>* 
_m
)

1816 : 
	$M©C⁄°Iãøt‹
(
_m
Ë{
	}
}

1818 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>::

1819 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
_row
, 
_cﬁ
)

1820 : 
	$M©C⁄°Iãøt‹
(
_m
, 
_row
, 
_cﬁ
Ë{
	}
}

1822 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::

1823 
M©C⁄°Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
)

1824 : 
	$M©C⁄°Iãøt‹
(
_m
, 
_±
Ë{
	}
}

1826 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>::

1827 
	$M©C⁄°Iãøt‹_
(c⁄° 
M©C⁄°Iãøt‹_
& 
ô
)

1828 : 
	$M©C⁄°Iãøt‹
(
ô
Ë{
	}
}

1830 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©C⁄°Iãøt‹_
<_Tp>&

1831 
M©C⁄°Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° M©C⁄°Iãøt‹_& 
ô
 )

1833 
M©C⁄°Iãøt‹
::
›î©‹
 = (
ô
);

1834  *
	gthis
;

1837 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gM©C⁄°Iãøt‹_
<_Tp>::
›î©‹
 *(Ëc⁄° {  *(_Tp*)(
this
->
±r
); }

1839 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 +(
±rdiff_t
 
ofs
)

1841 
M©C⁄°Iãøt‹
::
›î©‹
 +(
ofs
);

1842  *
	gthis
;

1845 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 -(
±rdiff_t
 
ofs
)

1846 {  (*
this
 +-
ofs
); }

1848 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 --()

1850 
M©C⁄°Iãøt‹
::
›î©‹
 --();

1851  *
	gthis
;

1854 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 --()

1856 
M©C⁄°Iãøt‹_
 
b
 = *
this
;

1857 
	gM©C⁄°Iãøt‹
::
›î©‹
 --();

1858  
	gb
;

1861 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>& M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 ++()

1863 
M©C⁄°Iãøt‹
::
›î©‹
 ++();

1864  *
	gthis
;

1867 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> M©C⁄°Iãøt‹_<_Tp>::
›î©‹
 ++()

1869 
M©C⁄°Iãøt‹_
 
b
 = *
this
;

1870 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++();

1871  
	gb
;

1874 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
	$M©Iãøt‹_
(Ë: 
M©C⁄°Iãøt‹_
<
_Tp
>(Ë{
	}
}

1876 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>::M©Iãøt‹_(
M©_
<_Tp>* 
_m
)

1877 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
) {}

1879 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>::M©Iãøt‹_(
M©_
<_Tp>* 
_m
, 
_row
, 
_cﬁ
)

1880 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_row
, 
	g_cﬁ
) {}

1882 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, 
Poöt
 
_±
)

1883 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_±
) {}

1885 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
M©Iãøt‹_
(c⁄° 
M©_
<
_Tp
>* 
_m
, c⁄° * 
_idx
)

1886 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
_m
, 
	g_idx
) {}

1888 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>::
	$M©Iãøt‹_
(c⁄° 
M©Iãøt‹_
& 
ô
)

1889 : 
M©C⁄°Iãøt‹_
<
_Tp
>(
ô
Ë{
	}
}

1891 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
M©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 = (c⁄° M©Iãøt‹_<_Tp>& 
ô
 )

1893 
M©C⁄°Iãøt‹
::
›î©‹
 = (
ô
);

1894  *
	gthis
;

1897 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©Iãøt‹_
<_Tp>::
›î©‹
 *(Ëc⁄° {  *(
_Tp
*)(
this
->
±r
); }

1899 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 +(
±rdiff_t
 
ofs
)

1901 
M©C⁄°Iãøt‹
::
›î©‹
 +(
ofs
);

1902  *
	gthis
;

1905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 -(
±rdiff_t
 
ofs
)

1907 
M©C⁄°Iãøt‹
::
›î©‹
 +(-
ofs
);

1908  *
	gthis
;

1911 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 --()

1913 
M©C⁄°Iãøt‹
::
›î©‹
 --();

1914  *
	gthis
;

1917 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> M©Iãøt‹_<_Tp>::
›î©‹
 --()

1919 
M©Iãøt‹_
 
b
 = *
this
;

1920 
	gM©C⁄°Iãøt‹
::
›î©‹
 --();

1921  
	gb
;

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>& M©Iãøt‹_<_Tp>::
›î©‹
 ++()

1926 
M©C⁄°Iãøt‹
::
›î©‹
 ++();

1927  *
	gthis
;

1930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> M©Iãøt‹_<_Tp>::
›î©‹
 ++()

1932 
M©Iãøt‹_
 
b
 = *
this
;

1933 
	gM©C⁄°Iãøt‹
::
›î©‹
 ++();

1934  
	gb
;

1937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
Poöt
 
	gM©C⁄°Iãøt‹_
<_Tp>::
	$pos
() const

1939 if–!
m
 )

1940  
	`Poöt
();

1941 
	`CV_DbgAs£π
–
m
->
dims
 <= 2 );

1942 if–
m
->
	`isC⁄töuous
() )

1944 
±rdiff_t
 
ofs
 = (c⁄° 
_Tp
*)
±r
 - (c⁄° _Tp*)
m
->
d©a
;

1945 
y
 = ()(
ofs
 / 
m
->
cﬁs
), 
x
 = ()(of†- (
±rdiff_t
)y*m->cols);

1946  
	`Poöt
(
x
, 
y
);

1950 
±rdiff_t
 
ofs
 = (
uch¨
*)
±r
 - 
m
->
d©a
;

1951 
y
 = ()(
ofs
 / 
m
->
°ï
), 
x
 = ()((of†- y*m->°ï)/(
_Tp
));

1952  
	`Poöt
(
x
, 
y
);

1954 
	}
}

1956 
ölöe
 
boﬁ


1957 
	g›î©‹
 =(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1958 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1961 
	g›î©‹
 !(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1962 {  !(
	ga
 =
b
); }

1964 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1965 
	g›î©‹
 =(c⁄° 
M©C⁄°Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	gb
)

1966 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1968 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1969 
	g›î©‹
 !(c⁄° 
M©C⁄°Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	gb
)

1970 {  
	ga
.
	gm
 !
b
.
m
 || 
a
.
±r
 != b.ptr; }

1972 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1973 
	g›î©‹
 =(c⁄° 
M©Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	gb
)

1974 {  
	ga
.
	gm
 =
b
.
m
 && 
a
.
±r
 == b.ptr; }

1976 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ


1977 
	g›î©‹
 !(c⁄° 
M©Iãøt‹_
<
_Tp
>& 
a
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	gb
)

1978 {  
	ga
.
	gm
 !
b
.
m
 || 
a
.
±r
 != b.ptr; }

1980 
ölöe
 
boﬁ


1981 
	g›î©‹
 < (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, c⁄° M©C⁄°Iãøt‹& 
	gb
)

1982 {  
	ga
.
	g±r
 < 
	gb
.ptr; }

1984 
ölöe
 
boﬁ


1985 
	g›î©‹
 > (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, c⁄° M©C⁄°Iãøt‹& 
	gb
)

1986 {  
	ga
.
	g±r
 > 
	gb
.ptr; }

1988 
ölöe
 
boﬁ


1989 
	g›î©‹
 <(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1990 {  
	ga
.
	g±r
 <
b
.
±r
; }

1992 
ölöe
 
boﬁ


1993 
	g›î©‹
 >(c⁄° 
M©C⁄°Iãøt‹
& 
a
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
)

1994 {  
	ga
.
	g±r
 >
b
.
±r
; }

1996 
CV_EXPORTS
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹
& 
	gb
, c⁄° M©C⁄°Iãøt‹& 
	ga
);

1998 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 + (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, 
±rdiff_t
 
	gofs
)

1999 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +
ofs
; }

2001 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
)

2002 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +
ofs
; }

2004 
ölöe
 
M©C⁄°Iãøt‹
 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹
& 
	ga
, 
±rdiff_t
 
	gofs
)

2005 { 
M©C⁄°Iãøt‹
 
	gb
 = 
a
;  b +-
ofs
; }

2007 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2008 
	g›î©‹
 + (c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2009 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2011 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2012 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
)

2013 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2015 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp>

2016 
	g›î©‹
 - (c⁄° 
	gM©C⁄°Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2017 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 - 
ofs
;  (
	gM©C⁄°Iãøt‹_
<
	g_Tp
>&)t; }

2019 
ölöe
 
uch¨
* 
	gM©C⁄°Iãøt‹
::
›î©‹
 [](
±rdiff_t
 
i
) const

2020 {  *(*
this
 + 
i
); }

2022 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gM©C⁄°Iãøt‹_
<_Tp>::
›î©‹
 [](
±rdiff_t
 
i
) const

2023 {  *(
_Tp
*)
M©C⁄°Iãøt‹
::
›î©‹
 [](
i
); }

2025 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2026 
	g›î©‹
 + (c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2027 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2029 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2030 
	g›î©‹
 + (
±rdiff_t
 
	gofs
, c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
)

2031 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 + 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2033 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp>

2034 
	g›î©‹
 - (c⁄° 
	gM©Iãøt‹_
<
	g_Tp
>& 
	ga
, 
±rdiff_t
 
	gofs
)

2035 { 
M©C⁄°Iãøt‹
 
	gt
 = (c⁄° M©C⁄°Iãøt‹&)
a
 - 
ofs
;  (
	gM©Iãøt‹_
<
	g_Tp
>&)t; }

2037 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gM©Iãøt‹_
<_Tp>::
›î©‹
 [](
±rdiff_t
 
i
) const

2038 {  *(*
this
 + 
i
); }

2040 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$begö
() const

2041 {  
M©
::
begö
<
_Tp
>(); 
	}
}

2043 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©C⁄°Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$íd
() const

2044 {  
M©
::
íd
<
_Tp
>(); 
	}
}

2046 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$begö
()

2047 {  
M©
::
begö
<
_Tp
>(); 
	}
}

2049 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©Iãøt‹_
<_Tp> 
	gM©_
<_Tp>::
	$íd
()

2050 {  
M©
::
íd
<
_Tp
>(); 
	}
}

2052 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>::
M©CommaInôülizî_
(
M©_
<
_Tp
>* 
_m
Ë: 
	$ô
(
_m
Ë{
	}
}

2054 
ãm∂©e
<
ty≥«me
 
_Tp
>Åem∂©e<ty≥«mê
T2
> 
ölöe
 
M©CommaInôülizî_
<_Tp>&

2055 
M©CommaInôülizî_
<
_Tp
>::
›î©‹
 , (
T2
 
	gv
)

2057 
CV_DbgAs£π
–
this
->
ô
 < ((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2058 *
	gthis
->
	gô
 = 
_Tp
(
v
); ++this->it;

2059  *
	gthis
;

2062 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©_
<_Tp> 
	gM©CommaInôülizî_
<_Tp>::
›î©‹
 *() const

2064 
CV_DbgAs£π
–
this
->
ô
 =((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2065  
	gM©_
<
	g_Tp
>(*
	gthis
->
	gô
.
	gm
);

2068 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>::
›î©‹
 
M©_
<
_Tp
>() const

2070 
CV_DbgAs£π
–
this
->
ô
 =((c⁄° 
M©_
<
_Tp
>*Èhis->ô.
m
)->
íd
() );

2071  
	gM©_
<
	g_Tp
>(*
	gthis
->
	gô
.
	gm
);

2074 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	gT2
> 
ölöe
 
	gM©CommaInôülizî_
<_Tp>

2075 
	g›î©‹
 << (c⁄° 
	gM©_
<
	g_Tp
>& 
	gm
, 
T2
 
	gvÆ
)

2077 
	gM©CommaInôülizî_
<
	g_Tp
> 
commaInôülizî
((
M©_
<
_Tp
>*)&
m
);

2078  (
	gcommaInôülizî
, 
	gvÆ
);

2083 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
()

2084 : 
	`Êags
(
MAGIC_VAL
), 
	$hdr
(0)

2086 
	}
}

2088 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
(
_dims
, c⁄° * 
_sizes
, 
_ty≥
)

2089 : 
	`Êags
(
MAGIC_VAL
), 
	$hdr
(0)

2091 
	`¸óã
(
_dims
, 
_sizes
, 
_ty≥
);

2092 
	}
}

2094 
ölöe
 
	gS∑r£M©
::
	$S∑r£M©
(c⁄° 
S∑r£M©
& 
m
)

2095 : 
	`Êags
(
m
.
Êags
), 
	$hdr
(
m
.
hdr
)

2097 
	`addªf
();

2098 
	}
}

2100 
ölöe
 
	gS∑r£M©
::~
	$S∑r£M©
()

2102 
	`ªÀa£
();

2103 
	}
}

2105 
ölöe
 
	gS∑r£M©
& S∑r£M©::
›î©‹
 = (c⁄° 
S∑r£M©
& 
m
)

2107 if–
this
 !&
m
 )

2109 if–
m
.
hdr
 )

2110 
CV_XADD
(&
m
.
hdr
->
ªfcou¡
, 1);

2111 
ªÀa£
();

2112 
	gÊags
 = 
m
.
Êags
;

2113 
	ghdr
 = 
m
.
hdr
;

2115  *
	gthis
;

2118 
ölöe
 
	gS∑r£M©
& S∑r£M©::
›î©‹
 = (c⁄° 
M©
& 
m
)

2119 {  (*
this
 = 
S∑r£M©
(
m
)); }

2121 
ölöe
 
S∑r£M©
 
	gS∑r£M©
::
	$˛⁄e
() const

2123 
S∑r£M©
 
ãmp
;

2124 
this
->
	`c›yTo
(
ãmp
);

2125  
ãmp
;

2126 
	}
}

2129 
ölöe
 
	gS∑r£M©
::
	$assignTo
–
S∑r£M©
& 
m
, 
_ty≥
 ) const

2131 if–
_ty≥
 < 0 )

2132 
m
 = *
this
;

2134 
	`c⁄vîtTo
(
m
, 
_ty≥
);

2135 
	}
}

2137 
ölöe
 
	gS∑r£M©
::
	$addªf
()

2138 { if–
hdr
 ) 
	`CV_XADD
(&hdr->
ªfcou¡
, 1); 
	}
}

2140 
ölöe
 
	gS∑r£M©
::
	$ªÀa£
()

2142 if–
hdr
 && 
	`CV_XADD
(&hdr->
ªfcou¡
, -1) == 1 )

2143 
dñëe
 
hdr
;

2144 
hdr
 = 0;

2145 
	}
}

2147 
ölöe
 
size_t
 
	gS∑r£M©
::
	$ñemSize
() const

2148 {  
	`CV_ELEM_SIZE
(
Êags
); 
	}
}

2150 
ölöe
 
size_t
 
	gS∑r£M©
::
	$ñemSize1
() const

2151 {  
	`CV_ELEM_SIZE1
(
Êags
); 
	}
}

2153 
ölöe
 
	gS∑r£M©
::
	$ty≥
() const

2154 {  
	`CV_MAT_TYPE
(
Êags
); 
	}
}

2156 
ölöe
 
	gS∑r£M©
::
	$dïth
() const

2157 {  
	`CV_MAT_DEPTH
(
Êags
); 
	}
}

2159 
ölöe
 
	gS∑r£M©
::
	$ch™√ls
() const

2160 {  
	`CV_MAT_CN
(
Êags
); 
	}
}

2162 
ölöe
 c⁄° * 
	gS∑r£M©
::
	$size
() const

2164  
hdr
 ? hdr->
size
 : 0;

2165 
	}
}

2167 
ölöe
 
	gS∑r£M©
::
	$size
(
i
) const

2169 if–
hdr
 )

2171 
	`CV_DbgAs£π
(()
i
 < ()
hdr
->
dims
);

2172  
hdr
->
size
[
i
];

2175 
	}
}

2177 
ölöe
 
	gS∑r£M©
::
	$dims
() const

2179  
hdr
 ? hdr->
dims
 : 0;

2180 
	}
}

2182 
ölöe
 
size_t
 
	gS∑r£M©
::
	$nzcou¡
() const

2184  
hdr
 ? hdr->
nodeCou¡
 : 0;

2185 
	}
}

2187 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
) const

2189  (
size_t
)
i0
;

2190 
	}
}

2192 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
, 
i1
) const

2194  (
size_t
)()
i0
*
HASH_SCALE
 + ()
i1
;

2195 
	}
}

2197 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(
i0
, 
i1
, 
i2
) const

2199  ((
size_t
)()
i0
*
HASH_SCALE
 + ()
i1
)*HASH_SCALE + ()
i2
;

2200 
	}
}

2202 
ölöe
 
size_t
 
	gS∑r£M©
::
	$hash
(c⁄° * 
idx
) const

2204 
size_t
 
h
 = ()
idx
[0];

2205 if–!
hdr
 )

2207 
i
, 
d
 = 
hdr
->
dims
;

2208  
i
 = 1; i < 
d
; i++ )

2209 
h
 = h*
HASH_SCALE
 + ()
idx
[
i
];

2210  
h
;

2211 
	}
}

2213 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
size_t
* 
hashvÆ
)

2214 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
åue
, 
hashvÆ
); 
	}
}

2216 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
)

2217 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
åue
, 
hashvÆ
); 
	}
}

2219 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
)

2220 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
åue
, 
hashvÆ
); 
	}
}

2222 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
)

2223 {  *(
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
åue
, 
hashvÆ
); 
	}
}

2225 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
size_t
* 
hashvÆ
) const

2227 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
Ál£
, 
hashvÆ
);

2228  
p
 ? *∞: 
	`_Tp
();

2229 
	}
}

2231 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2233 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
Ál£
, 
hashvÆ
);

2234  
p
 ? *∞: 
	`_Tp
();

2235 
	}
}

2237 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2239 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
Ál£
, 
hashvÆ
);

2240  
p
 ? *∞: 
	`_Tp
();

2241 
	}
}

2243 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gS∑r£M©
::
	$vÆue
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2245 c⁄° 
_Tp
* 
p
 = (c⁄° _Tp*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
Ál£
, 
hashvÆ
);

2246  
p
 ? *∞: 
	`_Tp
();

2247 
	}
}

2249 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
size_t
* 
hashvÆ
) const

2250 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
Ál£
, 
hashvÆ
); 
	}
}

2252 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2253 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
Ál£
, 
hashvÆ
); 
	}
}

2255 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2256 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
i0
, 
i1
, 
i2
, 
Ál£
, 
hashvÆ
); 
	}
}

2258 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gS∑r£M©
::
	$föd
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2259 {  (c⁄° 
_Tp
*)((
S∑r£M©
*)
this
)->
	`±r
(
idx
, 
Ál£
, 
hashvÆ
); 
	}
}

2261 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©
::
	$vÆue
(
Node
* 
n
)

2262 {  *(
_Tp
*)((
uch¨
*)
n
 + 
hdr
->
vÆueOff£t
); 
	}
}

2264 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gS∑r£M©
::
	$vÆue
(c⁄° 
Node
* 
n
) const

2265 {  *(c⁄° 
_Tp
*)((c⁄° 
uch¨
*)
n
 + 
hdr
->
vÆueOff£t
); 
	}
}

2267 
ölöe
 
	gS∑r£M©
::
Node
* 
S∑r£M©
::
	$node
(
size_t
 
nidx
)

2268 {  (
Node
*)(*)&
hdr
->
poﬁ
[
nidx
]; 
	}
}

2270 
ölöe
 c⁄° 
	gS∑r£M©
::
Node
* 
S∑r£M©
::
	$node
(
size_t
 
nidx
) const

2271 {  (c⁄° 
Node
*)(*)&
hdr
->
poﬁ
[
nidx
]; 
	}
}

2273 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©
::
	$begö
()

2274 {  
	`S∑r£M©Iãøt‹
(
this
); 
	}
}

2276 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©
::
	$begö
() const

2277 {  
	`S∑r£M©C⁄°Iãøt‹
(
this
); 
	}
}

2279 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©
::
	$íd
()

2280 { 
S∑r£M©Iãøt‹
 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2282 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©
::
	$íd
() const

2283 { 
S∑r£M©C⁄°Iãøt‹
 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2285 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$begö
()

2286 {  
S∑r£M©Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2288 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$begö
() const

2289 {  
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2291 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$íd
()

2292 { 
S∑r£M©Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2294 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©
::
	$íd
() const

2295 { 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2298 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$S∑r£M©C⁄°Iãøt‹
()

2299 : 
	`m
(0), 
	`hashidx
(0), 
	$±r
(0)

2301 
	}
}

2303 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$S∑r£M©C⁄°Iãøt‹
(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
)

2304 : 
	`m
(
ô
.
m
), 
	`hashidx
(ô.
hashidx
), 
	$±r
(
ô
.
±r
)

2306 
	}
}

2308 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô1
, c⁄° 
	gS∑r£M©C⁄°Iãøt‹
& 
	gô2
)

2309 {  
	gô1
.
	gm
 =
ô2
.
m
 && 
ô1
.
±r
 == it2.ptr; }

2311 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô1
, c⁄° 
	gS∑r£M©C⁄°Iãøt‹
& 
	gô2
)

2312 {  !(
	gô1
 =
ô2
); }

2315 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
& S∑r£M©C⁄°Iãøt‹::
›î©‹
 = (c⁄° 
S∑r£M©C⁄°Iãøt‹
& 
ô
)

2317 if–
this
 !&
ô
 )

2319 
m
 = 
ô
.m;

2320 
	ghashidx
 = 
ô
.
hashidx
;

2321 
	g±r
 = 
ô
.
±r
;

2323  *
	gthis
;

2326 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gS∑r£M©C⁄°Iãøt‹
::
	$vÆue
() const

2327 {  *(
_Tp
*)
±r
; 
	}
}

2329 
ölöe
 c⁄° 
	gS∑r£M©
::
Node
* 
S∑r£M©C⁄°Iãøt‹
::
	$node
() const

2331  
±r
 && 
m
 && m->
hdr
 ?

2332 (c⁄° 
S∑r£M©
::
Node
*)(*)(
±r
 - 
m
->
hdr
->
vÆueOff£t
) : 0;

2333 
	}
}

2335 
ölöe
 
S∑r£M©C⁄°Iãøt‹
 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++()

2337 
S∑r£M©C⁄°Iãøt‹
 
ô
 = *
this
;

2338 ++*
	gthis
;

2339  
	gô
;

2343 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹
::
	$£ekEnd
()

2345 if–
m
 && m->
hdr
 )

2347 
hashidx
 = 
m
->
hdr
->
hashèb
.
	`size
();

2348 
±r
 = 0;

2350 
	}
}

2352 
ölöe
 
	gS∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
()

2353 {
	}
}

2355 
ölöe
 
S∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
(
S∑r£M©
* 
_m
)

2356 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2357 {
	}
}

2359 
ölöe
 
S∑r£M©Iãøt‹
::
	$S∑r£M©Iãøt‹
(c⁄° 
S∑r£M©Iãøt‹
& 
ô
)

2360 : 
	$S∑r£M©C⁄°Iãøt‹
(
ô
)

2362 
	}
}

2364 
ölöe
 
S∑r£M©Iãøt‹
& S∑r£M©Iãøt‹::
›î©‹
 = (c⁄° S∑r£M©Iãøt‹& 
ô
)

2366 (
S∑r£M©C⁄°Iãøt‹
&)*
this
 = 
ô
;

2367  *
	gthis
;

2370 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gS∑r£M©Iãøt‹
::
	$vÆue
() const

2371 {  *(
_Tp
*)
±r
; 
	}
}

2373 
ölöe
 
	gS∑r£M©
::
Node
* 
S∑r£M©Iãøt‹
::
	$node
() const

2375  (
S∑r£M©
::
Node
*)
S∑r£M©C⁄°Iãøt‹
::
	`node
();

2376 
	}
}

2378 
ölöe
 
	gS∑r£M©Iãøt‹
& S∑r£M©Iãøt‹::
›î©‹
 ++()

2380 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2381  *
	gthis
;

2384 
ölöe
 
S∑r£M©Iãøt‹
 
	gS∑r£M©Iãøt‹
::
›î©‹
 ++()

2386 
S∑r£M©Iãøt‹
 
ô
 = *
this
;

2387 ++*
	gthis
;

2388  
	gô
;

2392 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
()

2393 { 
Êags
 = 
MAGIC_VAL
 | 
D©aTy≥
<
_Tp
>::
ty≥
; 
	}
}

2395 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(
_dims
, c⁄° * 
_sizes
)

2396 : 
	`S∑r£M©
(
_dims
, 
_sizes
, 
D©aTy≥
<
_Tp
>::
ty≥
)

2397 {
	}
}

2399 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
S∑r£M©
& 
m
)

2401 if–
m
.
	`ty≥
(Ë=
D©aTy≥
<
_Tp
>::
ty≥
 )

2402 *
this
 = (c⁄° 
S∑r£M©_
<
_Tp
>&)
m
;

2404 
m
.
	`c⁄vîtTo
(*
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2405 
	}
}

2407 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
S∑r£M©_
(c⁄° S∑r£M©_<
_Tp
>& 
m
)

2409 
this
->
Êags
 = 
m
.flags;

2410 
	gthis
->
	ghdr
 = 
m
.
hdr
;

2411 if–
	gthis
->
	ghdr
 )

2412 
CV_XADD
(&
this
->
hdr
->
ªfcou¡
, 1);

2415 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
M©
& 
m
)

2417 
S∑r£M©
 
	`sm
(
m
);

2418 *
this
 = 
sm
;

2419 
	}
}

2421 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$S∑r£M©_
(c⁄° 
CvS∑r£M©
* 
m
)

2423 
S∑r£M©
 
	`sm
(
m
);

2424 *
this
 = 
sm
;

2425 
	}
}

2427 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2428 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
S∑r£M©_
<
_Tp
>& 
m
)

2430 if–
this
 !&
m
 )

2432 if–
m
.
hdr
 ) 
CV_XADD
(&m.hdr->
ªfcou¡
, 1);

2433 
ªÀa£
();

2434 
	gÊags
 = 
m
.
Êags
;

2435 
	ghdr
 = 
m
.
hdr
;

2437  *
	gthis
;

2440 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2441 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
S∑r£M©
& 
m
)

2443 if–
m
.
ty≥
(Ë=
D©aTy≥
<
_Tp
>::type )

2444  (*
this
 = (c⁄° 
S∑r£M©_
<
_Tp
>&)
m
);

2445 
	gm
.
c⁄vîtTo
(*
this
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2446  *
	gthis
;

2449 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>&

2450 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 = (c⁄° 
M©
& 
m
)

2451 {  (*
this
 = 
S∑r£M©
(
m
)); }

2453 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>

2454 
	gS∑r£M©_
<
	g_Tp
>::
	$˛⁄e
() const

2456 
S∑r£M©_
<
_Tp
> 
m
;

2457 
this
->
	`c›yTo
(
m
);

2458  
m
;

2459 
	}
}

2461 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

2462 
	gS∑r£M©_
<
	g_Tp
>::
	$¸óã
(
_dims
, c⁄° * 
_sizes
)

2464 
S∑r£M©
::
	`¸óã
(
_dims
, 
_sizes
, 
D©aTy≥
<
_Tp
>::
ty≥
);

2465 
	}
}

2467 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2468 
	gS∑r£M©_
<
	g_Tp
>::
›î©‹
 
CvS∑r£M©
*() const

2470  
S∑r£M©
::
›î©‹
 
CvS∑r£M©
*();

2473 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$ty≥
() const

2474 {  
D©aTy≥
<
_Tp
>::
ty≥
; 
	}
}

2476 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$dïth
() const

2477 {  
D©aTy≥
<
_Tp
>::
dïth
; 
	}
}

2479 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©_
<_Tp>::
	$ch™√ls
() const

2480 {  
D©aTy≥
<
_Tp
>::
ch™√ls
; 
	}
}

2482 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2483 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
size_t
* 
hashvÆ
)

2484 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
hashvÆ
); 
	}
}

2486 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2487 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
size_t
* 
hashvÆ
) const

2488 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
hashvÆ
); 
	}
}

2490 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2491 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
i1
, 
size_t
* 
hashvÆ
)

2492 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
i1
, 
hashvÆ
); 
	}
}

2494 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2495 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
i1
, 
size_t
* 
hashvÆ
) const

2496 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
i1
, 
hashvÆ
); 
	}
}

2498 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2499 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
)

2500 {  
S∑r£M©
::
ªf
<
_Tp
>(
i0
, 
i1
, 
i2
, 
hashvÆ
); 
	}
}

2502 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2503 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(
i0
, 
i1
, 
i2
, 
size_t
* 
hashvÆ
) const

2504 {  
S∑r£M©
::
vÆue
<
_Tp
>(
i0
, 
i1
, 
i2
, 
hashvÆ
); 
	}
}

2506 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2507 
	gS∑r£M©_
<
	g_Tp
>::
	$ªf
(c⁄° * 
idx
, 
size_t
* 
hashvÆ
)

2508 {  
S∑r£M©
::
ªf
<
_Tp
>(
idx
, 
hashvÆ
); 
	}
}

2510 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp


2511 
	gS∑r£M©_
<
	g_Tp
>::
	$›î©‹
()(c⁄° * 
idx
, 
size_t
* 
hashvÆ
) const

2512 {  
S∑r£M©
::
vÆue
<
_Tp
>(
idx
, 
hashvÆ
); 
	}
}

2514 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$begö
()

2515 {  
S∑r£M©Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2517 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$begö
() const

2518 {  
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
this
); 
	}
}

2520 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$íd
()

2521 { 
S∑r£M©Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2523 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp> 
	gS∑r£M©_
<_Tp>::
	$íd
() const

2524 { 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
> 
	`ô
(
this
); 
ô
.
	`£ekEnd
();  it; 
	}
}

2526 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2527 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
	$S∑r£M©C⁄°Iãøt‹_
()

2528 {
	}
}

2530 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2531 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::S∑r£M©C⁄°Iãøt‹_(c⁄° 
S∑r£M©_
<_Tp>* 
_m
)

2532 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2533 {
	}
}

2535 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2536 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::
	$S∑r£M©C⁄°Iãøt‹_
(c⁄° 
S∑r£M©
* 
_m
)

2537 : 
	$S∑r£M©C⁄°Iãøt‹
(
_m
)

2539 
	`CV_As£π
–
_m
->
	`ty≥
(Ë=
D©aTy≥
<
_Tp
>::
ty≥
 );

2540 
	}
}

2542 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2543 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
S∑r£M©C⁄°Iãøt‹_
(c⁄° S∑r£M©C⁄°Iãøt‹_<
_Tp
>& 
ô
)

2544 : 
	$S∑r£M©C⁄°Iãøt‹
(
ô
)

2545 {
	}
}

2547 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©C⁄°Iãøt‹_
<_Tp>&

2548 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° S∑r£M©C⁄°Iãøt‹_<_Tp>& 
ô
)

2549 {  
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>&>

2550 (*
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹
*>(
this
) =

2551 
ªöãΩªt_ˇ°
<c⁄° 
S∑r£M©C⁄°Iãøt‹
&>(
ô
)); }

2553 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 const _Tp&

2554 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 *() const

2555 {  *(c⁄° 
_Tp
*)
this
->
±r
; }

2557 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp>&

2558 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2560 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2561  *
	gthis
;

2564 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©C⁄°Iãøt‹_
<_Tp>

2565 
	gS∑r£M©C⁄°Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2567 
S∑r£M©C⁄°Iãøt‹
 
ô
 = *
this
;

2568 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2569  
	gô
;

2572 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2573 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
	$S∑r£M©Iãøt‹_
()

2574 {
	}
}

2576 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2577 
S∑r£M©Iãøt‹_
<
_Tp
>::S∑r£M©Iãøt‹_(
S∑r£M©_
<_Tp>* 
_m
)

2578 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
_m
)

2581 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2582 
S∑r£M©Iãøt‹_
<
_Tp
>::
	$S∑r£M©Iãøt‹_
(
S∑r£M©
* 
_m
)

2583 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
_m
)

2584 {
	}
}

2586 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe


2587 
S∑r£M©Iãøt‹_
<
_Tp
>::S∑r£M©Iãøt‹_(c⁄° S∑r£M©Iãøt‹_<_Tp>& 
ô
)

2588 : 
S∑r£M©C⁄°Iãøt‹_
<
_Tp
>(
ô
)

2591 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
S∑r£M©Iãøt‹_
<_Tp>&

2592 
S∑r£M©Iãøt‹_
<
_Tp
>::
›î©‹
 = (c⁄° S∑r£M©Iãøt‹_<_Tp>& 
ô
)

2593 {  
ªöãΩªt_ˇ°
<
S∑r£M©Iãøt‹_
<
_Tp
>&>

2594 (*
ªöãΩªt_ˇ°
<
S∑r£M©C⁄°Iãøt‹
*>(
this
) =

2595 
ªöãΩªt_ˇ°
<c⁄° 
S∑r£M©C⁄°Iãøt‹
&>(
ô
)); }

2597 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp&

2598 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 *() const

2599 {  *(
_Tp
*)
this
->
±r
; }

2601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp>&

2602 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2604 
S∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2605  *
	gthis
;

2608 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gS∑r£M©Iãøt‹_
<_Tp>

2609 
	gS∑r£M©Iãøt‹_
<
	g_Tp
>::
›î©‹
 ++()

2611 
S∑r£M©Iãøt‹
 
ô
 = *
this
;

2612 
	gS∑r£M©C⁄°Iãøt‹
::
›î©‹
 ++();

2613  
	gô
;

	@/usr/include/opencv2/core/operations.hpp

43 #i‚de‡
__OPENCV_CORE_OPERATIONS_HPP__


44 
	#__OPENCV_CORE_OPERATIONS_HPP__


	)

46 #i‚de‡
SKIP_INCLUDES


47 
	~<°rög.h
>

48 
	~<limôs.h
>

52 #ifde‡
__˝lu•lus


55 #i‡
deföed
 
__INTEL_COMPILER
 && !(deföed 
WIN32
 || deföed 
_WIN32
)

56 
	#CV_XADD
(
addr
,
dñè
Ë
	`_I¡îlockedExch™geAdd
(
c⁄°_ˇ°
<*>(
ªöãΩªt_ˇ°
<vﬁ©ûê*>◊ddr)), dñè)

	)

57 #ñi‡
deföed
 
__GNUC__


59 #i‡
deföed
 
__˛™g__
 && 
__˛™g_maj‹__
 >3 && !deföed 
__ANDROID__
 && !deföed 
__EMSCRIPTEN__


60 #ifde‡
__ATOMIC_SEQ_CST


61 
	#CV_XADD
(
addr
, 
dñè
Ë
	`__c11_©omic_„tch_add
((
	`_Atomic
()*)◊ddr), (dñè), 
__ATOMIC_SEQ_CST
)

	)

63 
	#CV_XADD
(
addr
, 
dñè
Ë
	`__©omic_„tch_add
((
	`_Atomic
()*)◊ddr), (dñè), 5)

	)

65 #ñi‡
__GNUC__
*10 + 
__GNUC_MINOR__
 >= 42

67 #i‡!(
deföed
 
WIN32
 || deföed 
_WIN32
Ë&& (deföed 
__i486__
 || deföed 
__i586__
 || \

68 
deföed
 
	g__i686__
 || deföed 
	g__MMX__
 || deföed 
	g__SSE__
 || deföed 
	g__µc__
) || \

69 (
deföed
 
	g__GNUC__
 && deföed 
	g_STLPORT_MAJOR
) || \

70 
deföed
 
	g__EMSCRIPTEN__


72 
	#CV_XADD
 
__sync_„tch_™d_add


	)

74 
	~<ext/©omicôy.h
>

75 
	#CV_XADD
 
__gnu_cxx
::
__exch™ge_™d_add


	)

79 
	~<bôs/©omicôy.h
>

80 #i‡
__GNUC__
*10 + 
__GNUC_MINOR__
 >= 34

81 
	#CV_XADD
 
__gnu_cxx
::
__exch™ge_™d_add


	)

83 
	#CV_XADD
 
__exch™ge_™d_add


	)

87 #ñi‡
deföed
 
WIN32
 || deföed 
_WIN32
 || deföed 
WINCE


88 
«me•a˚
 
	gcv
 { 
CV_EXPORTS
 
_öãæockedExch™geAdd
(* 
addr
, 
dñè
); }

89 
	#CV_XADD
 
cv
::
_öãæockedExch™geAdd


	)

92 
ölöe
 
	$CV_XADD
(* 
addr
, 
dñè
)

93 { 
tmp
 = *
addr
; *add∏+
dñè
; Åmp; 
	}
}

96 
	~<limôs
>

98 #ifde‡
_MSC_VER


99 #¥agm®
w¨nög
(
push
)

100 #¥agm®
w¨nög
(
dißbÀ
:4127)

103 
«me•a˚
 
	gcv


106 
usög
 
	g°d
::
cos
;

107 
usög
 
	g°d
::
sö
;

108 
usög
 
	g°d
::
max
;

109 
usög
 
	g°d
::
mö
;

110 
usög
 
	g°d
::
exp
;

111 
usög
 
	g°d
::
log
;

112 
usög
 
	g°d
::
pow
;

113 
usög
 
	g°d
::
sqπ
;

118 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
uch¨
 
v
) {  _Tp(v); }

119 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
sch¨
 
v
) {  _Tp(v); }

120 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
ush‹t
 
v
) {  _Tp(v); }

121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

122 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

123 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

124 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

125 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
ßtuøã_ˇ°
(
v
) {  _Tp(v); }

127 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
sch¨
 
	gv
)

128 {  (
	guch¨
)
	g°d
::
max
(()
v
, 0); }

129 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
ush‹t
 
	gv
)

130 {  (
	guch¨
)
	g°d
::
mö
(()
v
, ()
UCHAR_MAX
); }

131 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

132 {  (
	guch¨
)(()
	gv
 <
UCHAR_MAX
 ? 
v
 : v > 0 ? UCHAR_MAX : 0); }

133 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

134 {  
	gßtuøã_ˇ°
<
	guch¨
>(()
	gv
); }

135 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

136 {  (
	guch¨
)
	g°d
::
mö
(
v
, ()
UCHAR_MAX
); }

137 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

138 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	guch¨
>(iv); }

139 
	gãm∂©e
<> 
ölöe
 
uch¨
 
	gßtuøã_ˇ°
<
	guch¨
>(
	gv
)

140 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	guch¨
>(iv); }

142 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
uch¨
 
	gv
)

143 {  (
	gsch¨
)
	g°d
::
mö
(()
v
, 
SCHAR_MAX
); }

144 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
ush‹t
 
	gv
)

145 {  (
	gsch¨
)
	g°d
::
mö
(()
v
, ()
SCHAR_MAX
); }

146 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

148  (
	gsch¨
)(()(
	gv
-
	gSCHAR_MIN
Ë<()
UCHAR_MAX
 ?

149 
v
 : v > 0 ? 
SCHAR_MAX
 : 
SCHAR_MIN
);

151 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

152 {  
	gßtuøã_ˇ°
<
	gsch¨
>(()
	gv
); }

153 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

154 {  (
	gsch¨
)
	g°d
::
mö
(
v
, ()
SCHAR_MAX
); }

156 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

157 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gsch¨
>(iv); }

158 
	gãm∂©e
<> 
ölöe
 
sch¨
 
	gßtuøã_ˇ°
<
	gsch¨
>(
	gv
)

159 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gsch¨
>(iv); }

161 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
sch¨
 
	gv
)

162 {  (
	gush‹t
)
	g°d
::
max
(()
v
, 0); }

163 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

164 {  (
	gush‹t
)
	g°d
::
max
(()
v
, 0); }

165 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

166 {  (
	gush‹t
)(()
	gv
 <()
USHRT_MAX
 ? 
v
 : v > 0 ? USHRT_MAX : 0); }

167 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

168 {  (
	gush‹t
)
	g°d
::
mö
(
v
, ()
USHRT_MAX
); }

169 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

170 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gush‹t
>(iv); }

171 
	gãm∂©e
<> 
ölöe
 
ush‹t
 
	gßtuøã_ˇ°
<
	gush‹t
>(
	gv
)

172 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<
	gush‹t
>(iv); }

174 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
ush‹t
 
	gv
)

175 {  ()
	g°d
::
mö
(()
v
, 
SHRT_MAX
); }

176 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

178  ()(()(
	gv
 - 
	gSHRT_MIN
Ë<()
USHRT_MAX
 ?

179 
v
 : v > 0 ? 
SHRT_MAX
 : 
SHRT_MIN
);

181 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

182 {  ()
	g°d
::
mö
(
v
, ()
SHRT_MAX
); }

183 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

184 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<>(iv); }

185 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
)

186 { 
	giv
 = 
cvRound
(
v
);  
	gßtuøã_ˇ°
<>(iv); }

188 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

189 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

192 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
){  
cvRound
(
v
); }

193 
	gãm∂©e
<> 
ölöe
 
	gßtuøã_ˇ°
<>(
	gv
Ë{  
cvRound
(
v
); }

195 
ölöe
 
Á°_abs
(
uch¨
 
v
Ë{  
	gv
; }

196 
ölöe
 
Á°_abs
(
sch¨
 
v
Ë{  
	g°d
::
abs
(()v); }

197 
ölöe
 
Á°_abs
(
ush‹t
 
v
Ë{  
	gv
; }

198 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(()v); }

199 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

200 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

201 
ölöe
 
Á°_abs
(
v
Ë{  
	g°d
::
abs
(v); }

206 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
()

208 
i
 = 0; 
	gi
 < 
	gch™√ls
; i++Ë
	gvÆ
[i] = 
_Tp
(0);

211 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
)

213 
vÆ
[0] = 
v0
;

214 
	gi
 = 1; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

217 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
)

219 
as£π
(
ch™√ls
 >= 2);

220 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
;

221 
	gi
 = 2; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

224 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
)

226 
as£π
(
ch™√ls
 >= 3);

227 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
;

228 
	gi
 = 3; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

231 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

233 
as£π
(
ch™√ls
 >= 4);

234 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

235 
	gi
 = 4; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

238 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
)

240 
as£π
(
ch™√ls
 >= 5);

241 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
; vÆ[4] = 
v4
;

242 
	gi
 = 5; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

245 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

246 
_Tp
 
v4
, _T∞
v5
)

248 
as£π
(
ch™√ls
 >= 6);

249 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

250 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
;

251 
	gi
 = 6; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

254 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

255 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
)

257 
as£π
(
ch™√ls
 >= 7);

258 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

259 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
;

260 
	gi
 = 7; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

263 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

264 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
)

266 
as£π
(
ch™√ls
 >= 8);

267 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

268 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

269 
	gi
 = 8; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

272 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

273 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

274 
_Tp
 
v8
)

276 
as£π
(
ch™√ls
 >= 9);

277 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

278 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

279 
	gvÆ
[8] = 
v8
;

280 
	gi
 = 9; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

283 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

284 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

285 
_Tp
 
v8
, _T∞
v9
)

287 
as£π
(
ch™√ls
 >= 10);

288 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

289 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

290 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
;

291 
	gi
 = 10; i < 
	gch™√ls
; i++Ë
	gvÆ
[
i
] = 
_Tp
(0);

295 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

296 
ölöe
 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

297 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

298 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
)

300 
as£π
(
ch™√ls
 == 12);

301 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

302 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

303 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
; vÆ[10] = 
v10
; vÆ[11] = 
v11
;

306 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

307 
ölöe
 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

308 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

309 
_Tp
 
v8
, _T∞
v9
, _T∞
v10
, _T∞
v11
,

310 
_Tp
 
v12
, _T∞
v13
, _T∞
v14
, _T∞
v15
)

312 
as£π
(
ch™√ls
 == 16);

313 
	gvÆ
[0] = 
v0
; vÆ[1] = 
v1
; vÆ[2] = 
v2
; vÆ[3] = 
v3
;

314 
	gvÆ
[4] = 
v4
; vÆ[5] = 
v5
; vÆ[6] = 
v6
; vÆ[7] = 
v7
;

315 
	gvÆ
[8] = 
v8
; vÆ[9] = 
v9
; vÆ[10] = 
v10
; vÆ[11] = 
v11
;

316 
	gvÆ
[12] = 
v12
; vÆ[13] = 
v13
; vÆ[14] = 
v14
; vÆ[15] = 
v15
;

319 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
M©x
(c⁄° 
_Tp
* 
vÆues
)

321  
i
 = 0; 
	gi
 < 
	gch™√ls
; i++ ) 
	gvÆ
[i] = 
vÆues
[i];

324 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç> M©x<_Tp, m,Ç>::
Æl
(
_Tp
 
Æpha
)

326 
M©x
<
_Tp
, 
	gm
, 
	gn
> 
	gM
;

327  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gM
.
	gvÆ
[
i
] = 
Æpha
;

328  
	gM
;

331 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


332 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
zîos
()

334  
Æl
(0);

337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


338 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
⁄es
()

340  
Æl
(1);

343 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


344 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
eye
()

346 
M©x
<
_Tp
,
	gm
,
	gn
> 
	gM
;

347 
	gi
 = 0; i < 
MIN
(
m
,
n
); i++)

348 
M
(
i
,i) = 1;

349  
	gM
;

352 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
_Tp
 
	gM©x
<_Tp, m,Ç>::
dŸ
(c⁄° 
M©x
<_Tp, 
m
, 
n
>& 
M
) const

354 
_Tp
 
	gs
 = 0;

355  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gs
 +
vÆ
[
i
]*
M
.val[i];

356  
	gs
;

360 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	gM©x
<_Tp, m,Ç>::
ddŸ
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
) const

362 
	gs
 = 0;

363  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gs
 +()
vÆ
[
i
]*
M
.val[i];

364  
	gs
;

369 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


370 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
düg
(c⁄° 
ty≥«me
 
M©x
<
_Tp
,
m
,
n
>::
düg_ty≥
& 
d
)

372 
M©x
<
_Tp
,
	gm
,
	gn
> 
	gM
;

373 
	gi
 = 0; i < 
MIN
(
m
,
n
); i++)

374 
M
(
i
,iË
d
(i, 0);

375  
	gM
;

378 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


379 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
øndu
(
_Tp
 
a
, _T∞
b
)

381 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> 
	gM
;

382 
M©
 
m©M
(
M
, 
Ál£
);

383 
	gcv
::
øndu
(
m©M
, 
Sˇœr
(
a
), Sˇœr(
b
));

384  
	gM
;

387 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


388 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> M©x<_Tp,m,n>::
øndn
(
_Tp
 
a
, _T∞
b
)

390 
	gM©x
<
	g_Tp
,
	gm
,
	gn
> 
	gM
;

391 
M©
 
m©M
(
M
, 
Ál£
);

392 
	gcv
::
øndn
(
m©M
, 
Sˇœr
(
a
), Sˇœr(
b
));

393  
	gM
;

396 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	gT2
>

397 
ölöe
 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>::
›î©‹
 
M©x
<
T2
, m,Ç>() const

399 
	gM©x
<
	gT2
, 
	gm
, 
	gn
> 
	gM
;

400  
	gi
 = 0; i < 
m
*
	gn
; i++ ) 
	gM
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
T2
>(
vÆ
[i]);

401  
	gM
;

405 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gm1
, 
	gn1
> 
ölöe


406 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> M©x<_Tp, 
	gm
, 
	gn
>::
ªsh≠e
() const

408 
CV_DbgAs£π
(
m1
*
n1
 =
m
*
n
);

409  (c⁄° 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
>&)*
	gthis
;

413 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>

414 
	gãm∂©e
<
	gm1
, 
	gn1
> 
ölöe


415 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> M©x<_Tp, 
	gm
, 
	gn
>::
gë_mö‹
(
i
, 
j
) const

417 
CV_DbgAs£π
(0 <
i
 && i+
m1
 <
m
 && 0 <
j
 && j+
n1
 <
n
);

418 
	gM©x
<
	g_Tp
, 
	gm1
, 
	gn1
> 
	gs
;

419  
	gdi
 = 0; dò< 
	gm1
; di++ )

420  
	gdj
 = 0; dj < 
	gn1
; dj++ )

421 
s
(
di
, 
dj
Ë(*
this
)(
i
+di, 
	gj
+
	gdj
);

422  
	gs
;

426 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


427 
	gM©x
<
	g_Tp
, 1, 
	gn
> M©x<_Tp, 
	gm
,Ç>::
row
(
i
) const

429 
CV_DbgAs£π
(()
i
 < ()
m
);

430  
	gM©x
<
	g_Tp
, 1, 
	gn
>(&
	gvÆ
[
i
*
n
]);

434 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


435 
	gM©x
<
	g_Tp
, 
	gm
, 1> M©x<_Tp, m, 
	gn
>::
cﬁ
(
j
) const

437 
CV_DbgAs£π
(()
j
 < ()
n
);

438 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
	gv
;

439  
	gi
 = 0; i < 
	gm
; i++ )

440 
	gv
.
	gvÆ
[
i
] = 
vÆ
[i*
n
 + 
j
];

441  
	gv
;

445 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


446 
ty≥«me
 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>::
düg_ty≥
 
M©x
<
_Tp
, m,Ç>::
düg
() const

448 
düg_ty≥
 
d
;

449  
	gi
 = 0; i < 
MIN
(
m
, 
n
); i++ )

450 
	gd
.
	gvÆ
[
i
] = 
vÆ
[i*
n
 + i];

451  
	gd
;

455 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


456 c⁄° 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
, 
	gj
) const

458 
CV_DbgAs£π
–()
i
 < ()
m
 && ()
j
 < ()
n
 );

459  
	gthis
->
	gvÆ
[
i
*
n
 + 
j
];

463 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


464 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
, 
	gj
)

466 
CV_DbgAs£π
–()
i
 < ()
m
 && ()
j
 < ()
n
 );

467  
	gvÆ
[
i
*
n
 + 
j
];

471 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


472 c⁄° 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
) const

474 
CV_DbgAs£π
–(
m
 =1 || 
n
 =1Ë&& ()
i
 < ()(m+n-1) );

475  
	gvÆ
[
i
];

479 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


480 
	g_Tp
& 
	gM©x
<_Tp, 
	gm
, 
	gn
>::
›î©‹
 ()(
i
)

482 
CV_DbgAs£π
–(
m
 =1 || 
n
 =1Ë&& ()
i
 < ()(m+n-1) );

483  
	gvÆ
[
i
];

487 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	gm
, 
	gn
> 
ölöe


488 
	gM©x
<
	g_Tp1
, 
	gm
, 
	gn
>& 
	g›î©‹
 +(
M©x
<
_Tp1
, m,Ç>& 
	ga
, c⁄° M©x<
	g_Tp2
, m,Ç>& 
	gb
)

490  
	gi
 = 0; i < 
m
*
	gn
; i++ )

491 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] + 
b
.val[i]);

492  
	ga
;

496 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	gm
, 
	gn
> 
ölöe


497 
	gM©x
<
	g_Tp1
, 
	gm
, 
	gn
>& 
	g›î©‹
 -(
M©x
<
_Tp1
, m,Ç>& 
	ga
, c⁄° M©x<
	g_Tp2
, m,Ç>& 
	gb
)

499  
	gi
 = 0; i < 
m
*
	gn
; i++ )

500 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] - 
b
.val[i]);

501  
	ga
;

505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


506 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_AddOp
)

508  
	gi
 = 0; i < 
m
*
	gn
; i++ )

509 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] + 
b
.val[i]);

513 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


514 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_SubOp
)

516  
	gi
 = 0; i < 
m
*
	gn
; i++ )

517 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] - 
b
.val[i]);

521 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


522 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
)

524  
	gi
 = 0; i < 
m
*
	gn
; i++ )

525 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

529 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


530 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
n
>& 
a
, c⁄° M©x<_Tp, m,Ç>& 
b
, 
M©x_MulOp
)

532  
	gi
 = 0; i < 
m
*
	gn
; i++ )

533 
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
b
.val[i]);

537 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gl
> 
ölöe


538 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
m
, 
l
>& 
a
, c⁄° M©x<_Tp,Ü, 
n
>& 
b
, 
M©x_M©MulOp
)

540  
	gi
 = 0; i < 
	gm
; i++ )

541  
	gj
 = 0; j < 
	gn
; j++ )

543 
_Tp
 
	gs
 = 0;

544  
	gk
 = 0; k < 
	gl
; k++ )

545 
	gs
 +
a
(
i
, 
k
Ë* 
b
(k, 
j
);

546 
	gvÆ
[
i
*
n
 + 
j
] = 
s
;

551 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


552 
	gM©x
<
	g_Tp
,
	gm
,
	gn
>::
M©x
(c⁄° M©x<
_Tp
, 
n
, 
m
>& 
a
, 
M©x_TOp
)

554  
	gi
 = 0; i < 
	gm
; i++ )

555  
	gj
 = 0; j < 
	gn
; j++ )

556 
	gvÆ
[
i
*
n
 + 
j
] = 
a
(j, i);

560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


561 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 + (c⁄° M©x<_Tp, m,Ç>& 
	ga
, c⁄° M©x<_Tp, m,Ç>& 
	gb
)

563  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_AddOp
());

567 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


568 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 - (c⁄° M©x<_Tp, m,Ç>& 
	ga
, c⁄° M©x<_Tp, m,Ç>& 
	gb
)

570  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_SubOp
());

574 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


575 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

577  
	gi
 = 0; i < 
m
*
	gn
; i++ )

578 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

579  
	ga
;

582 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


583 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

585  
	gi
 = 0; i < 
m
*
	gn
; i++ )

586 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

587  
	ga
;

590 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


591 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	g›î©‹
 *(
M©x
<
_Tp
, m,Ç>& 
	ga
, 
	gÆpha
)

593  
	gi
 = 0; i < 
m
*
	gn
; i++ )

594 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[i] * 
Æpha
);

595  
	ga
;

598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


599 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

601  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

604 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


605 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

607  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

610 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


611 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m,Ç>& 
	ga
, 
	gÆpha
)

613  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

616 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


617 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

619  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

622 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


623 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

625  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

628 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


629 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (
	gÆpha
, c⁄° M©x<_Tp, m,Ç>& 
	ga
)

631  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

634 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


635 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 - (c⁄° M©x<_Tp, m,Ç>& 
	ga
)

637  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, -1, 
M©x_SˇÀOp
());

641 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
, 
	gl
> 
ölöe


642 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 * (c⁄° M©x<_Tp, m, 
	gl
>& 
	ga
, c⁄° M©x<_Tp,Ü,Ç>& 
	gb
)

644  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(
	ga
, 
	gb
, 
M©x_M©MulOp
());

648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


649 
	gVec
<
	g_Tp
, 
	gm
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, m, 
	gn
>& 
	ga
, c⁄° Vec<_Tp,Ç>& 
	gb
)

651 
	gM©x
<
	g_Tp
, 
	gm
, 1> 
c
(
a
, 
b
, 
M©x_M©MulOp
());

652  
	gªöãΩªt_ˇ°
<c⁄° 
	gVec
<
	g_Tp
, 
	gm
>&>(
	gc
);

656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


657 
	gPoöt_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 2, 2>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

659 
	gM©x
<
	g_Tp
, 2, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,2>(
	gb
.
	gx
, b.
	gy
);

660  
	gPoöt_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1]);

664 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


665 
	gPoöt3_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 3, 3>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

667 
	gM©x
<
	g_Tp
, 3, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,3>(
	gb
.
	gx
, b.
	gy
, b.
	gz
);

668  
	gPoöt3_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1],Åmp.val[2]);

672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


673 
	gPoöt3_
<
	g_Tp
> 
	g›î©‹
 * (c⁄° 
	gM©x
<_Tp, 3, 3>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

675 
	gM©x
<
	g_Tp
, 3, 1> 
	gtmp
 = 
a
*
Vec
<
_Tp
,3>(
	gb
.
	gx
, b.
	gy
, 1);

676  
	gPoöt3_
<
	g_Tp
>(
	gtmp
.
	gvÆ
[0],Åmp.val[1],Åmp.val[2]);

680 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


681 
	gM©x
<
	g_Tp
, 4, 1> 
	g›î©‹
 * (c⁄° M©x<_Tp, 4, 4>& 
	ga
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

683  
a
*
	gM©x
<
	g_Tp
, 4, 1>(
	gb
.
	gx
, b.
	gy
, b.
	gz
, 1);

687 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


688 
Sˇœr
 
	g›î©‹
 * (c⁄° 
	gM©x
<
	g_Tp
, 4, 4>& 
	ga
, c⁄° 
	gSˇœr
& 
	gb
)

690 
	gM©x
<, 4, 1> 
c
(
M©x
<, 4, 4>(
a
), 
b
, 
M©x_M©MulOp
());

691  
	g°©ic_ˇ°
<c⁄° 
	gSˇœr
&>(
	gc
);

695 
ölöe


696 
Sˇœr
 
	g›î©‹
 * (c⁄° 
	gM©x
<, 4, 4>& 
	ga
, c⁄° 
	gSˇœr
& 
	gb
)

698 
	gM©x
<, 4, 1> 
c
(
a
, 
b
, 
M©x_M©MulOp
());

699  
	g°©ic_ˇ°
<c⁄° 
	gSˇœr
&>(
	gc
);

703 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


704 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> M©x<_Tp, m,Ç>::
mul
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
) const

706  
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>(*
	gthis
, 
	ga
, 
M©x_MulOp
());

710 
CV_EXPORTS
 
LU
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

711 
CV_EXPORTS
 
LU
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

712 
CV_EXPORTS
 
boﬁ
 
Chﬁesky
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

713 
CV_EXPORTS
 
boﬁ
 
Chﬁesky
(* 
A
, 
size_t
 
a°ï
, 
m
, * 
b
, size_à
b°ï
, 
n
);

716 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
	sM©x_DëOp


718 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
) const

720 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

721 
	gp
 = 
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 0, 0, 0);

722 if–
	gp
 == 0 )

723  
p
;

724  
	gi
 = 0; i < 
	gm
; i++ )

725 
	gp
 *
ãmp
(
i
, i);

726  1./
	gp
;

731 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 1>

733 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 1, 1>& 
	ga
) const

735  
a
(0,0);

740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 2>

742 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
) const

744  
a
(0,0)*a(1,1) -á(0,1)*a(1,0);

749 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_DëOp
<_Tp, 3>

751 
›î©‹
 ()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
) const

753  
a
(0,0)*(a(1,1)*a(2,2) -á(2,1)*a(1,2)) -

754 
a
(0,1)*(a(1,0)*a(2,2) -á(2,0)*a(1,2)) +

755 
a
(0,2)*(a(1,0)*a(2,1) -á(2,0)*a(1,1));

759 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
ölöe


760 
dëîmö™t
(c⁄° 
M©x
<
_Tp
, 
m
, m>& 
a
)

762  
	gM©x_DëOp
<
	g_Tp
, 
	gm
>()(
	ga
);

766 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


767 
åa˚
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
a
)

769 
_Tp
 
	gs
 = 0;

770  
	gi
 = 0; i < 
	g°d
::
mö
(
m
, 
n
); i++ )

771 
	gs
 +
a
(
i
,i);

772  
	gs
;

776 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


777 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> M©x<_Tp, m,Ç>::
t
() const

779  
M©x
<
_Tp
, 
	gn
, 
	gm
>(*
	gthis
, 
M©x_TOp
());

783 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
> 
	sM©x_Fa°InvOp


785 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
, M©x<_Tp, m, m>& 
	gb
, 
	gmëhod
) const

787 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

790  
	gi
 = 0; i < 
	gm
; i++ )

791 
b
(
i
, iË(
_Tp
)1;

793 if–
	gmëhod
 =
DECOMP_CHOLESKY
 )

794  
Chﬁesky
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
b
.val, m*(_Tp), m);

796  
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
b
.val, m*(_Tp), m) != 0;

801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°InvOp
<_Tp, 2>

803 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
, M©x<_Tp, 2, 2>& 
	gb
, ) const

805 
_Tp
 
	gd
 = 
dëîmö™t
(
a
);

806 if–
	gd
 == 0 )

807  
Ál£
;

808 
	gd
 = 1/
d
;

809 
b
(1,1Ë
a
(0,0)*
	gd
;

810 
b
(0,0Ë
a
(1,1)*
	gd
;

811 
b
(0,1Ë-
a
(0,1)*
	gd
;

812 
b
(1,0Ë-
a
(1,0)*
	gd
;

813  
	gåue
;

818 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°InvOp
<_Tp, 3>

820 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
, M©x<_Tp, 3, 3>& 
	gb
, ) const

822 
_Tp
 
	gd
 = (_Tp)
dëîmö™t
(
a
);

823 if–
	gd
 == 0 )

824  
Ál£
;

825 
	gd
 = 1/
d
;

826 
b
(0,0Ë(
a
(1,1Ë*á(2,2Ë-á(1,2Ë*á(2,1)Ë* 
	gd
;

827 
b
(0,1Ë(
a
(0,2Ë*á(2,1Ë-á(0,1Ë*á(2,2)Ë* 
	gd
;

828 
b
(0,2Ë(
a
(0,1Ë*á(1,2Ë-á(0,2Ë*á(1,1)Ë* 
	gd
;

830 
b
(1,0Ë(
a
(1,2Ë*á(2,0Ë-á(1,0Ë*á(2,2)Ë* 
	gd
;

831 
b
(1,1Ë(
a
(0,0Ë*á(2,2Ë-á(0,2Ë*á(2,0)Ë* 
	gd
;

832 
b
(1,2Ë(
a
(0,2Ë*á(1,0Ë-á(0,0Ë*á(1,2)Ë* 
	gd
;

834 
b
(2,0Ë(
a
(1,0Ë*á(2,1Ë-á(1,1Ë*á(2,0)Ë* 
	gd
;

835 
b
(2,1Ë(
a
(0,1Ë*á(2,0Ë-á(0,0Ë*á(2,1)Ë* 
	gd
;

836 
b
(2,2Ë(
a
(0,0Ë*á(1,1Ë-á(0,1Ë*á(1,0)Ë* 
	gd
;

837  
	gåue
;

842 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


843 
	gM©x
<
	g_Tp
, 
	gn
, 
	gm
> M©x<_Tp, m,Ç>::
öv
(
mëhod
) const

845 
M©x
<
_Tp
, 
	gn
, 
	gm
> 
	gb
;

846 
boﬁ
 
	gok
;

847 if–
	gmëhod
 =
DECOMP_LU
 || 
mëhod
 =
DECOMP_CHOLESKY
 )

848 
ok
 = 
M©x_Fa°InvOp
<
_Tp
, 
	gm
>()(*
	gthis
, 
	gb
, 
	gmëhod
);

851 
M©
 
A
(*
this
, 
Ál£
), 
B
(
b
, false);

852 
	gok
 = (
övît
(
A
, 
B
, 
mëhod
) != 0);

854  
	gok
 ? 
	gb
 : 
M©x
<
_Tp
, 
	gn
, 
	gm
>::
zîos
();

858 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
	sM©x_Fa°SﬁveOp


860 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 
	gm
, m>& 
	ga
, c⁄° M©x<_Tp, m, 
	gn
>& 
	gb
,

861 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
>& 
	gx
, 
	gmëhod
) const

863 
	gM©x
<
	g_Tp
, 
	gm
, m> 
	gãmp
 = 
a
;

864 
	gx
 = 
b
;

865 if–
	gmëhod
 =
DECOMP_CHOLESKY
 )

866  
Chﬁesky
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
x
.vÆ, 
n
*(_Tp),Ç);

868  
LU
(
ãmp
.
vÆ
, 
m
*(
_Tp
), m, 
x
.vÆ, 
n
*(_Tp),Ç) != 0;

873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°SﬁveOp
<_Tp, 2, 1>

875 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 2, 2>& 
	ga
, c⁄° M©x<_Tp, 2, 1>& 
	gb
,

876 
	gM©x
<
	g_Tp
, 2, 1>& 
	gx
, ) const

878 
_Tp
 
	gd
 = 
dëîmö™t
(
a
);

879 if–
	gd
 == 0 )

880  
Ál£
;

881 
	gd
 = 1/
d
;

882 
x
(0Ë(
b
(0)*
a
(1,1Ë- b(1)*a(0,1))*
	gd
;

883 
x
(1Ë(
b
(1)*
a
(0,0Ë- b(0)*a(1,0))*
	gd
;

884  
	gåue
;

889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gM©x_Fa°SﬁveOp
<_Tp, 3, 1>

891 
boﬁ
 
›î©‹
()(c⁄° 
	gM©x
<
	g_Tp
, 3, 3>& 
	ga
, c⁄° M©x<_Tp, 3, 1>& 
	gb
,

892 
	gM©x
<
	g_Tp
, 3, 1>& 
	gx
, ) const

894 
_Tp
 
	gd
 = (_Tp)
dëîmö™t
(
a
);

895 if–
	gd
 == 0 )

896  
Ál£
;

897 
	gd
 = 1/
d
;

898 
x
(0Ë
d
*(
b
(0)*(
a
(1,1)*a(2,2) -á(1,2)*a(2,1)) -

899 
a
(0,1)*(
b
(1)*a(2,2) -á(1,2)*b(2)) +

900 
a
(0,2)*(
b
(1)*a(2,1) -á(1,1)*b(2)));

902 
x
(1Ë
d
*(
a
(0,0)*(
b
(1)*a(2,2) -á(1,2)*b(2)) -

903 
b
(0)*(
a
(1,0)*a(2,2) -á(1,2)*a(2,0)) +

904 
a
(0,2)*◊(1,0)*
b
(2) - b(1)*a(2,0)));

906 
x
(2Ë
d
*(
a
(0,0)*◊(1,1)*
b
(2) - b(1)*a(2,1)) -

907 
a
(0,1)*◊(1,0)*
b
(2) - b(1)*a(2,0)) +

908 
b
(0)*(
a
(1,0)*a(2,1) -á(1,1)*a(2,0)));

909  
	gåue
;

914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<
	gl
> 
ölöe


915 
	gM©x
<
	g_Tp
, 
	gn
, 
	gl
> M©x<_Tp, 
	gm
,Ç>::
sﬁve
(c⁄° 
M©x
<
_Tp
, 
m
, 
l
>& 
rhs
, 
mëhod
) const

917 
	gM©x
<
	g_Tp
, 
	gn
, 
	gl
> 
	gx
;

918 
boﬁ
 
	gok
;

919 if–
	gmëhod
 =
DECOMP_LU
 || 
mëhod
 =
DECOMP_CHOLESKY
 )

920 
ok
 = 
M©x_Fa°SﬁveOp
<
_Tp
, 
	gm
, 
	gl
>()(*
	gthis
, 
	grhs
, 
	gx
, 
	gmëhod
);

923 
M©
 
A
(*
this
, 
Ál£
), 
B
(
rhs
, fÆ£), 
X
(
x
, false);

924 
	gok
 = 
cv
::
sﬁve
(
A
, 
B
, 
X
, 
mëhod
);

927  
	gok
 ? 
	gx
 : 
M©x
<
_Tp
, 
	gn
, 
	gl
>::
zîos
();

930 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


931 
	gVec
<
	g_Tp
, 
	gn
> 
	gM©x
<_Tp, 
	gm
,Ç>::
sﬁve
(c⁄° 
Vec
<
_Tp
, 
m
>& 
rhs
, 
mëhod
) const

933 
	gM©x
<
	g_Tp
, 
	gn
, 1> 
	gx
 = 
sﬁve
(
ªöãΩªt_ˇ°
<c⁄° 
M©x
<
_Tp
, 
m
, 1>&>(
rhs
), 
mëhod
);

934  
	gªöãΩªt_ˇ°
<
	gVec
<
	g_Tp
, 
	gn
>&>(
	gx
);

937 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


938 
_AccTp
 
n‹mL2Sqr
(c⁄° 
_Tp
* 
a
, 
n
)

940 
_AccTp
 
	gs
 = 0;

941 
	gi
=0;

942 #i‡
CV_ENABLE_UNROLLED


943  ; 
	gi
 <
n
 - 4; i += 4 )

945 
_AccTp
 
v0
 = 
a
[
i
], 
	gv1
 =á[i+1], 
	gv2
 =á[i+2], 
	gv3
 =á[i+3];

946 
	gs
 +
v0
*v0 + 
v1
*v1 + 
v2
*v2 + 
v3
*v3;

949  ; 
	gi
 < 
	gn
; i++ )

951 
_AccTp
 
	gv
 = 
a
[
i
];

952 
	gs
 +
v
*v;

954  
	gs
;

958 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


959 
_AccTp
 
n‹mL1
(c⁄° 
_Tp
* 
a
, 
n
)

961 
_AccTp
 
	gs
 = 0;

962 
	gi
 = 0;

963 #i‡
CV_ENABLE_UNROLLED


964 ; 
	gi
 <
n
 - 4; i += 4 )

966 
s
 +(
_AccTp
)
Á°_abs
(
a
[
i
]) + (_AccTp)fast_abs(a[i+1]) +

967 (
_AccTp
)
Á°_abs
(
a
[
i
+2]) + (_AccTp)fast_abs(a[i+3]);

970  ; 
	gi
 < 
	gn
; i++ )

971 
	gs
 +
Á°_abs
(
a
[
i
]);

972  
	gs
;

976 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


977 
_AccTp
 
n‹mInf
(c⁄° 
_Tp
* 
a
, 
n
)

979 
_AccTp
 
	gs
 = 0;

980  
	gi
 = 0; i < 
	gn
; i++ )

981 
	gs
 = 
°d
::
max
(
s
, (
_AccTp
)
Á°_abs
(
a
[
i
]));

982  
	gs
;

986 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


987 
_AccTp
 
n‹mL2Sqr
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

989 
_AccTp
 
	gs
 = 0;

990 
	gi
= 0;

991 #i‡
CV_ENABLE_UNROLLED


992 ; 
	gi
 <
n
 - 4; i += 4 )

994 
_AccTp
 
v0
 = _AccTp(
a
[
i
] - 
b
[i]), 
	gv1
 = _AccTp◊[i+1] - b[i+1]), 
	gv2
 = _AccTp◊[i+2] - b[i+2]), 
	gv3
 = _AccTp(a[i+3] - b[i+3]);

995 
	gs
 +
v0
*v0 + 
v1
*v1 + 
v2
*v2 + 
v3
*v3;

998  ; 
	gi
 < 
	gn
; i++ )

1000 
_AccTp
 
	gv
 = _AccTp(
a
[
i
] - 
b
[i]);

1001 
	gs
 +
v
*v;

1003  
	gs
;

1006 
CV_EXPORTS
 
n‹mL2Sqr_
(c⁄° * 
a
, c⁄° * 
b
, 
n
);

1007 
CV_EXPORTS
 
n‹mL1_
(c⁄° * 
a
, c⁄° * 
b
, 
n
);

1008 
CV_EXPORTS
 
n‹mL1_
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
);

1009 
CV_EXPORTS
 
n‹mHammög
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
);

1010 
CV_EXPORTS
 
n‹mHammög
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
, 
˚ŒSize
);

1012 
	gãm∂©e
<> 
ölöe
 
n‹mL2Sqr
(c⁄° * 
a
, c⁄° * 
b
, 
n
)

1014 if–
	gn
 >= 8 )

1015  
n‹mL2Sqr_
(
a
, 
b
, 
n
);

1016 
	gs
 = 0;

1017  
	gi
 = 0; i < 
	gn
; i++ )

1019 
	gv
 = 
a
[
i
] - 
b
[i];

1020 
	gs
 +
v
*v;

1022  
	gs
;

1026 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


1027 
_AccTp
 
n‹mL1
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

1029 
_AccTp
 
	gs
 = 0;

1030 
	gi
= 0;

1031 #i‡
CV_ENABLE_UNROLLED


1032 ; 
	gi
 <
n
 - 4; i += 4 )

1034 
_AccTp
 
v0
 = _AccTp(
a
[
i
] - 
b
[i]), 
	gv1
 = _AccTp◊[i+1] - b[i+1]), 
	gv2
 = _AccTp◊[i+2] - b[i+2]), 
	gv3
 = _AccTp(a[i+3] - b[i+3]);

1035 
	gs
 +
°d
::
abs
(
v0
Ë+ std::abs(
v1
Ë+ std::abs(
v2
Ë+ std::abs(
v3
);

1038  ; 
	gi
 < 
	gn
; i++ )

1040 
_AccTp
 
	gv
 = _AccTp(
a
[
i
] - 
b
[i]);

1041 
	gs
 +
°d
::
abs
(
v
);

1043  
	gs
;

1046 
	gãm∂©e
<> 
ölöe
 
n‹mL1
(c⁄° * 
a
, c⁄° * 
b
, 
n
)

1048 if–
	gn
 >= 8 )

1049  
n‹mL1_
(
a
, 
b
, 
n
);

1050 
	gs
 = 0;

1051  
	gi
 = 0; i < 
	gn
; i++ )

1053 
	gv
 = 
a
[
i
] - 
b
[i];

1054 
	gs
 +
°d
::
abs
(
v
);

1056  
	gs
;

1059 
	gãm∂©e
<> 
ölöe
 
n‹mL1
(c⁄° 
uch¨
* 
a
, c⁄° uch¨* 
b
, 
n
)

1061  
n‹mL1_
(
a
, 
b
, 
n
);

1064 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_AccTp
> 
ölöe


1065 
_AccTp
 
n‹mInf
(c⁄° 
_Tp
* 
a
, c⁄° _Tp* 
b
, 
n
)

1067 
_AccTp
 
	gs
 = 0;

1068  
	gi
 = 0; i < 
	gn
; i++ )

1070 
_AccTp
 
	gv0
 = 
a
[
i
] - 
b
[i];

1071 
	gs
 = 
°d
::
max
(
s
, std::
abs
(
v0
));

1073  
	gs
;

1077 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1078 
n‹m
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
)

1080  
	g°d
::
sqπ
(
n‹mL2Sqr
<
_Tp
, >(
M
.
vÆ
, 
m
*
n
));

1084 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1085 
n‹m
(c⁄° 
M©x
<
_Tp
, 
m
, 
n
>& 
M
, 
n‹mTy≥
)

1087  
	gn‹mTy≥
 =
NORM_INF
 ? ()
n‹mInf
<
_Tp
, 
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
	gn
) :

1088 
n‹mTy≥
 =
NORM_L1
 ? ()
n‹mL1
<
_Tp
, 
ty≥«me
 
	gD©aTy≥
<
	g_Tp
>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
	gn
) :

1089 
°d
::
sqπ
(()
n‹mL2Sqr
<
_Tp
, 
ty≥«me
 
D©aTy≥
<_Tp>::
w‹k_ty≥
>(
M
.
vÆ
, 
m
*
n
));

1093 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1094 
boﬁ
 
	g›î©‹
 =(c⁄° 
M©x
<
_Tp
, 
	gm
, 
	gn
>& 
	ga
, c⁄° 
	gM©x
<
	g_Tp
, m,Ç>& 
	gb
)

1096  
	gi
 = 0; i < 
m
*
	gn
; i++ )

1097 if–
	ga
.
	gvÆ
[
i
] !
b
.
vÆ
[i] )  
Ál£
;

1098  
	gåue
;

1101 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1102 
boﬁ
 
	g›î©‹
 !(c⁄° 
M©x
<
_Tp
, 
	gm
, 
	gn
>& 
	ga
, c⁄° 
	gM©x
<
	g_Tp
, m,Ç>& 
	gb
)

1104  !(
	ga
 =
b
);

1108 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_T2
, 
	gm
, 
	gn
> 
ölöe


1109 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
> 
	g›î©‹
 << (c⁄° 
	gM©x
<_Tp, m,Ç>& 
	gmtx
, 
_T2
 
	gvÆ
)

1111 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
> 
commaInôülizî
((
M©x
<
_Tp
, 
m
, 
n
>*)&
mtx
);

1112  (
	gcommaInôülizî
, 
	gvÆ
);

1115 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1116 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>::
M©xCommaInôülizî
(
M©x
<
_Tp
, 
m
, 
n
>* 
_mtx
)

1117 : 
d°
(
_mtx
), 
idx
(0)

1120 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1121 
	gM©xCommaInôülizî
<
	g_Tp
, 
	gm
, 
	gn
>& M©xCommaInôülizî<_Tp, m,Ç>::
›î©‹
 , (
_T2
 
	gvÆue
)

1123 
CV_DbgAs£π
–
idx
 < 
m
*
n
 );

1124 
	gd°
->
	gvÆ
[
idx
++] = 
ßtuøã_ˇ°
<
_Tp
>(
vÆue
);

1125  *
	gthis
;

1128 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe


1129 
	gM©x
<
	g_Tp
, 
	gm
, 
	gn
> 
	gM©xCommaInôülizî
<_Tp, m,Ç>::
›î©‹
 *() const

1131 
CV_DbgAs£π
–
idx
 =
n
*
m
 );

1132  *
	gd°
;

1137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
()

1140 
ãm∂©e
<
ty≥«me
 
_Tp
, 
	g˙
> 
ölöe
 
	gVec
<
	g_Tp
, cn>::
Vec
(_T∞
v0
)

1141 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
)

1144 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
)

1145 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
)

1148 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
)

1149 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
)

1152 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

1153 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
)

1156 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
)

1157 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
)

1160 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
, _T∞
v4
, _T∞
v5
)

1161 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
)

1164 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1165 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
)

1166 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
)

1169 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1170 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
)

1171 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
)

1174 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1175 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

1176 
_Tp
 
v8
)

1177 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
, 
	gv8
)

1180 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
,

1181 
_Tp
 
v4
, _T∞
v5
, _T∞
v6
, _T∞
v7
,

1182 
_Tp
 
v8
, _T∞
v9
)

1183 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gv0
, 
	gv1
, 
	gv2
, 
	gv3
, 
	gv4
, 
	gv5
, 
	gv6
, 
	gv7
, 
	gv8
, 
	gv9
)

1186 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(c⁄° 
_Tp
* 
vÆues
)

1187 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gvÆues
)

1191 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
Vec
(c⁄° Vec<
_Tp
, 
˙
>& 
m
)

1192 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	gm
.
	gvÆ
)

1195 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1196 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_AddOp
 
›
)

1197 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gb
, 
	g›
)

1200 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1201 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, c⁄° M©x<_Tp, cn, 1>& 
b
, 
M©x_SubOp
 
›
)

1202 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gb
, 
	g›
)

1205 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1206 
	gVec
<
	g_Tp
, 
	g˙
>::
Vec
(c⁄° 
M©x
<
_Tp
, 
˙
, 1>& 
a
, 
_T2
 
Æpha
, 
M©x_SˇÀOp
 
›
)

1207 : 
M©x
<
_Tp
, 
	g˙
, 1>(
	ga
, 
	gÆpha
, 
	g›
)

1210 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
Æl
(
_Tp
 
Æpha
)

1212 
Vec
 
v
;

1213  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gv
.
	gvÆ
[
i
] = 
Æpha
;

1214  
	gv
;

1217 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
mul
(c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
) const

1219 
	gVec
<
	g_Tp
, 
	g˙
> 
	gw
;

1220  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gw
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
this
->
vÆ
[i]*
v
.val[i]);

1221  
	gw
;

1224 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gVec
<_Tp, 2> 
c⁄jug©e
(c⁄° 
Vec
<
_Tp
, 2>& 
v
)

1226  
	gVec
<
	g_Tp
, 2>(
	gv
[0], -v[1]);

1229 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
	gVec
<_Tp, 4> 
c⁄jug©e
(c⁄° 
Vec
<
_Tp
, 4>& 
v
)

1231  
	gVec
<
	g_Tp
, 4>(
	gv
[0], -v[1], -v[2], -v[3]);

1234 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 2> Vec<, 2>::
c⁄j
() const

1236  
c⁄jug©e
(*
this
);

1239 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 2> Vec<, 2>::
c⁄j
() const

1241  
c⁄jug©e
(*
this
);

1244 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 4> Vec<, 4>::
c⁄j
() const

1246  
c⁄jug©e
(*
this
);

1249 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 4> Vec<, 4>::
c⁄j
() const

1251  
c⁄jug©e
(*
this
);

1254 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> Vec<_Tp, cn>::
¸oss
(c⁄° 
Vec
<
_Tp
, 
˙
>&) const

1256 
CV_Eº‹
(
CV_StsEº‹
, "forárbitrary-size vectorÅhere isÇo cross-product defined");

1257  
	gVec
<
	g_Tp
, 
	g˙
>();

1260 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	gT2
>

1261 
ölöe
 
	gVec
<
	g_Tp
, 
	g˙
>::
›î©‹
 
Vec
<
T2
, cn>() const

1263 
	gVec
<
	gT2
, 
	g˙
> 
	gv
;

1264  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gv
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
T2
>(
this
->
vÆ
[i]);

1265  
	gv
;

1268 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>::
›î©‹
 
CvSˇœr
() const

1270 
CvSˇœr
 
s
 = {{0,0,0,0}};

1271 
	gi
;

1272  
	gi
 = 0; i < 
	g°d
::
mö
(
˙
, 4); i++ ) 
	gs
.
	gvÆ
[
i
] = 
this
->
vÆ
[i];

1273  ; 
	gi
 < 4; i++ ) 
	gs
.
	gvÆ
[
i
] = 0;

1274  
	gs
;

1277 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 c⁄° _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 [](
i
) const

1279 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1280  
	gthis
->
	gvÆ
[
i
];

1283 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 [](
i
)

1285 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1286  
	gthis
->
	gvÆ
[
i
];

1289 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 c⁄° _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 ()(
i
) const

1291 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1292  
	gthis
->
	gvÆ
[
i
];

1295 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 _Tp& 
	gVec
<_Tp, cn>::
›î©‹
 ()(
i
)

1297 
CV_DbgAs£π
–()
i
 < ()
˙
 );

1298  
	gthis
->
	gvÆ
[
i
];

1301 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	g˙
> 
ölöe
 
	gVec
<_Tp1, cn>&

1302 
	g›î©‹
 +(
Vec
<
_Tp1
, 
	g˙
>& 
	ga
, c⁄° 
	gVec
<
	g_Tp2
, cn>& 
	gb
)

1304  
	gi
 = 0; i < 
	g˙
; i++ )

1305 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] + 
b
.val[i]);

1306  
	ga
;

1309 
	gãm∂©e
<
ty≥«me
 
	g_Tp1
,Åy≥«mê
	g_Tp2
, 
	g˙
> 
ölöe
 
	gVec
<_Tp1, cn>&

1310 
	g›î©‹
 -(
Vec
<
_Tp1
, 
	g˙
>& 
	ga
, c⁄° 
	gVec
<
	g_Tp2
, cn>& 
	gb
)

1312  
	gi
 = 0; i < 
	g˙
; i++ )

1313 
	ga
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp1
>(
a
.
vÆ
[i] - 
b
.val[i]);

1314  
	ga
;

1317 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1318 
	g›î©‹
 + (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, c⁄° Vec<_Tp, cn>& 
	gb
)

1320  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gb
, 
M©x_AddOp
());

1323 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1324 
	g›î©‹
 - (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, c⁄° Vec<_Tp, cn>& 
	gb
)

1326  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gb
, 
M©x_SubOp
());

1329 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1330 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1332  
	gi
 = 0; i < 
	g˙
; i++ )

1333 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1334  
	ga
;

1337 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1338 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1340  
	gi
 = 0; i < 
	g˙
; i++ )

1341 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1342  
	ga
;

1345 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1346 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 *(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1348  
	gi
 = 0; i < 
	g˙
; i++ )

1349 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
Æpha
);

1350  
	ga
;

1353 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1354 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1356 
	güÕha
 = 1./
Æpha
;

1357  
	gi
 = 0; i < 
	g˙
; i++ )

1358 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1359  
	ga
;

1362 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1363 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1365 
	güÕha
 = 1.f/
Æpha
;

1366  
	gi
 = 0; i < 
	g˙
; i++ )

1367 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1368  
	ga
;

1371 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1372 
	gVec
<
	g_Tp
, 
	g˙
>& 
	g›î©‹
 /(
Vec
<
_Tp
, cn>& 
	ga
, 
	gÆpha
)

1374 
	güÕha
 = 1./
Æpha
;

1375  
	gi
 = 0; i < 
	g˙
; i++ )

1376 
	ga
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(
a
[i]*
üÕha
);

1377  
	ga
;

1380 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1381 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1383  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1386 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1387 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1389  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1392 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1393 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1395  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1398 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1399 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1401  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1404 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1405 
	g›î©‹
 * (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1407  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1410 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1411 
	g›î©‹
 * (
	gÆpha
, c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1413  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 
	gÆpha
, 
M©x_SˇÀOp
());

1416 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1417 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1419  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1./
	gÆpha
, 
M©x_SˇÀOp
());

1422 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1423 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1425  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1.f/
	gÆpha
, 
M©x_SˇÀOp
());

1428 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1429 
	g›î©‹
 / (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
, 
	gÆpha
)

1431  
	gVec
<
	g_Tp
, 
	g˙
>(
	ga
, 1./
	gÆpha
, 
M©x_SˇÀOp
());

1434 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn>

1435 
	g›î©‹
 - (c⁄° 
	gVec
<
	g_Tp
, 
	g˙
>& 
	ga
)

1437 
	gVec
<
	g_Tp
,
	g˙
> 
	gt
;

1438  
	gi
 = 0; i < 
	g˙
; i++ ) 
	gt
.
	gvÆ
[
i
] = 
ßtuøã_ˇ°
<
_Tp
>(-
a
.
vÆ
[i]);

1439  
	gt
;

1442 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gVec
<_Tp, 4> 
	g›î©‹
 * (c⁄° Vec<_Tp, 4>& 
	gv1
, c⁄° Vec<_Tp, 4>& 
	gv2
)

1444  
	gVec
<
	g_Tp
, 4>(
	gßtuøã_ˇ°
<_Tp>(
	gv1
[0]*
	gv2
[0] - v1[1]*v2[1] - v1[2]*v2[2] - v1[3]*v2[3]),

1445 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[1] + v1[1]*v2[0] + v1[2]*v2[3] - v1[3]*v2[2]),

1446 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[2] - v1[1]*v2[3] + v1[2]*v2[0] + v1[3]*v2[1]),

1447 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gv1
[0]*
	gv2
[3] + v1[1]*v2[2] - v1[2]*v2[1] + v1[3]*v2[0]));

1450 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gVec
<_Tp, 4>& 
	g›î©‹
 *(
Vec
<
_Tp
, 4>& 
	gv1
, c⁄° Vec<_Tp, 4>& 
	gv2
)

1452 
	gv1
 = 
v1
 * 
v2
;

1453  
	gv1
;

1456 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 3> Vec<, 3>::
¸oss
(c⁄° 
Vec
<, 3>& 
v
) const

1458  
	gVec
<,3>(
	gvÆ
[1]*
	gv
.val[2] - val[2]*v.val[1],

1459 
	gvÆ
[2]*
	gv
.val[0] - val[0]*v.val[2],

1460 
	gvÆ
[0]*
	gv
.val[1] - val[1]*v.val[0]);

1463 
	gãm∂©e
<> 
ölöe
 
	gVec
<, 3> Vec<, 3>::
¸oss
(c⁄° 
Vec
<, 3>& 
v
) const

1465  
	gVec
<,3>(
	gvÆ
[1]*
	gv
.val[2] - val[2]*v.val[1],

1466 
	gvÆ
[2]*
	gv
.val[0] - val[0]*v.val[2],

1467 
	gvÆ
[0]*
	gv
.val[1] - val[1]*v.val[0]);

1470 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
	gVec
<_Tp, cn> 
n‹mÆize
(c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
)

1472 
	gnv
 = 
n‹m
(
v
);

1473  
	gv
 * (
	gnv
 ? 1./nv : 0.);

1476 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_T2
, 
	g˙
> 
ölöe


1477 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
> 
	g›î©‹
 << (c⁄° 
	gVec
<_Tp, cn>& 
	gvec
, 
_T2
 
	gvÆ
)

1479 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
> 
commaInôülizî
((
Vec
<
_Tp
, 
˙
>*)&
vec
);

1480  (
	gcommaInôülizî
, 
	gvÆ
);

1483 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1484 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
>::
VecCommaInôülizî
(
Vec
<
_Tp
, 
˙
>* 
_vec
)

1485 : 
M©xCommaInôülizî
<
_Tp
, 
	g˙
, 1>(
	g_vec
)

1488 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
>Åem∂©e<ty≥«mê
	g_T2
> 
ölöe


1489 
	gVecCommaInôülizî
<
	g_Tp
, 
	g˙
>& VecCommaInôülizî<_Tp, cn>::
›î©‹
 , (
_T2
 
	gvÆue
)

1491 
CV_DbgAs£π
–
this
->
idx
 < 
˙
 );

1492 
	gthis
->
	gd°
->
	gvÆ
[
this
->
idx
++] = 
ßtuøã_ˇ°
<
_Tp
>(
vÆue
);

1493  *
	gthis
;

1496 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe


1497 
	gVec
<
	g_Tp
, 
	g˙
> 
	gVecCommaInôülizî
<_Tp, cn>::
›î©‹
 *() const

1499 
CV_DbgAs£π
–
this
->
idx
 =
˙
 );

1500  *
	gthis
->
	gd°
;

1505 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp>::
Com∂ex
(Ë: 
ª
(0), 
im
(0) {}

1506 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp>::
Com∂ex
–
_Tp
 
_ª
, _T∞
_im
 ) : 
ª
(_ª), 
im
(_im) {}

1507 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gCom∂ex
<_Tp>::
›î©‹
 
Com∂ex
<
T2
>() const

1508 {  
Com∂ex
<
T2
>(
ßtuøã_ˇ°
<T2>(
ª
), 
	gßtuøã_ˇ°
<
	gT2
>(
	gim
)); }

1509 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gCom∂ex
<_Tp> Com∂ex<_Tp>::
c⁄j
() const

1510 {  
Com∂ex
<
_Tp
>(
ª
, -
	gim
); }

1512 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1513 
boﬁ
 
	g›î©‹
 =(c⁄° 
Com∂ex
<
_Tp
>& 
a
, c⁄° 
	gCom∂ex
<
	g_Tp
>& 
	gb
)

1514 {  
	ga
.
	gª
 =
b
.
ª
 && 
a
.
im
 == b.im; }

1516 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1517 
boﬁ
 
	g›î©‹
 !(c⁄° 
Com∂ex
<
_Tp
>& 
a
, c⁄° 
	gCom∂ex
<
	g_Tp
>& 
	gb
)

1518 {  
	ga
.
	gª
 !
b
.
ª
 || 
a
.
im
 != b.im; }

1520 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1521 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1522 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
.ª,á.
	gim
 + b.im ); }

1524 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1525 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 +(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1526 { 
	ga
.
	gª
 +
b
.
ª
;á.
	gim
 +b.
im
; á; }

1528 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1529 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1530 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 - 
	gb
.ª,á.
	gim
 - b.im ); }

1532 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1533 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 -(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1534 { 
	ga
.
	gª
 -
b
.
ª
;á.
	gim
 -b.
im
; á; }

1536 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1537 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
)

1538 {  
	gCom∂ex
<
	g_Tp
>(-
	ga
.
	gª
, -a.
	gim
); }

1540 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1541 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1542 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
.
	gª
 -á.
im
*b.
	gim
,á.re*b.im +á.im*b.re ); }

1544 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1545 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1546 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
,á.
im
*b ); }

1548 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1549 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 * (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1550 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gb
,á.
im
*b ); }

1552 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1553 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1554 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
,á.
	gim
 ); }

1556 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1557 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1558 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 - 
	gb
,á.
	gim
 ); }

1560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1561 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 + (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1562 {  
	gCom∂ex
<
	g_Tp
>–
	ga
.
	gª
 + 
	gb
,á.
	gim
 ); }

1564 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1565 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 - (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1566 {  
	gCom∂ex
<
	g_Tp
>–
	gb
 - 
	ga
.
	gª
, -a.
	gim
 ); }

1568 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1569 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 +(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1570 { 
	ga
.
	gª
 +
b
; á; }

1572 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1573 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 -(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1574 { 
	ga
.
	gª
 -
b
; á; }

1576 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1577 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 *(
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1578 { 
	ga
.
	gª
 *
b
;á.
	gim
 *= b; á; }

1580 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1581 
abs
(c⁄° 
Com∂ex
<
_Tp
>& 
a
)

1582 {  
	g°d
::
sqπ
–()
a
.
ª
*a.ª + (Ô.
im
*a.im); }

1584 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1585 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Com∂ex<_Tp>& 
	ga
, c⁄° Com∂ex<_Tp>& 
	gb
)

1587 
	gt
 = 1./(()
b
.
ª
*b.ª + ()b.
im
*b.im);

1588  
	gCom∂ex
<
	g_Tp
>–(_Tp)((
	ga
.
ª
*
	gb
.
	gª
 +á.
im
*b.
	gim
)*
	gt
),

1589 (
	g_Tp
)((-
	ga
.
ª
*
	gb
.
	gim
 +á.
im
*b.
	gª
)*
	gt
) );

1592 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1593 
	gCom∂ex
<
	g_Tp
>& 
	g›î©‹
 /(
Com∂ex
<
_Tp
>& 
a
, c⁄° Com∂ex<_Tp>& 
	gb
)

1595  (
	ga
 = 
a
 / 
b
);

1598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1599 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Com∂ex<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1601 
_Tp
 
	gt
 = (_Tp)1/
b
;

1602  
	gCom∂ex
<
	g_Tp
>–
	ga
.
ª
*
	gt
,á.
im
*t );

1605 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1606 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 / (
_Tp
 
	gb
, c⁄° Com∂ex<_Tp>& 
	ga
)

1608  
	gCom∂ex
<
	g_Tp
>(
	gb
)/
	ga
;

1611 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


1612 
	gCom∂ex
<
	g_Tp
> 
	g›î©‹
 /(c⁄° 
Com∂ex
<
_Tp
>& 
a
, _T∞
	gb
)

1614 
_Tp
 
	gt
 = (_Tp)1/
b
;

1615 
	ga
.
	gª
 *
t
;á.
	gim
 *=Å; á;

1620 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(Ë: 
x
(0), 
y
(0) {}

1621 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(
_Tp
 
_x
, _T∞
_y
Ë: 
x
(_x), 
y
(_y) {}

1622 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° Poöt_& 
±
Ë: 
x
’t.x), 
y
(pt.y) {}

1623 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
CvPoöt
& 
±
Ë: 
x
((
_Tp
Ìt.x), 
y
((_Tp)pt.y) {}

1624 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
CvPoöt2D32f
& 
±
)

1625 : 
x
(
ßtuøã_ˇ°
<
_Tp
>(
±
.x)), 
y
(saturate_cast<_Tp>(pt.y)) {}

1626 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
Size_
<
_Tp
>& 
sz
Ë: 
x
(sz.
width
), 
y
(sz.
height
) {}

1627 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
Poöt_
(c⁄° 
Vec
<
_Tp
,2>& 
v
Ë: 
x
(v[0]), 
y
(v[1]) {}

1628 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>& Poöt_<_Tp>::
›î©‹
 = (c⁄° 
Poöt_
& 
±
)

1629 { 
x
 = 
±
.x; 
	gy
 =Öt.
y
;  *
	gthis
; }

1631 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
Poöt_
<
_Tp2
>() const

1632 {  
Poöt_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
)); }

1633 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
CvPoöt
() const

1634 {  
cvPoöt
(
ßtuøã_ˇ°
<>(
x
), s©uøã_ˇ°<>(
y
)); }

1635 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
CvPoöt2D32f
() const

1636 {  
cvPoöt2D32f
(()
x
, ()
y
); }

1637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
›î©‹
 
Vec
<
_Tp
, 2>() const

1638 {  
	gVec
<
	g_Tp
, 2>(
	gx
, 
	gy
); }

1640 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gPoöt_
<_Tp>::
dŸ
(c⁄° 
Poöt_
& 
±
) const

1641 {  
ßtuøã_ˇ°
<
_Tp
>(
x
*
±
.x + 
y
*pt.y); }

1642 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
ddŸ
(c⁄° 
Poöt_
& 
±
) const

1643 {  ()
x
*
±
.x + ()
y
*pt.y; }

1645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>::
¸oss
(c⁄° 
Poöt_
& 
±
) const

1646 {  ()
x
*
±
.
y
 - ()y*pt.x; }

1648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1649 
	g›î©‹
 +(
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<
	g_Tp
>& 
	gb
)

1651 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 + 
b
.x);

1652 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 + 
b
.y);

1653  
	ga
;

1656 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1657 
	g›î©‹
 -(
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<
	g_Tp
>& 
	gb
)

1659 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 - 
b
.x);

1660 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 - 
b
.y);

1661  
	ga
;

1664 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1665 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1667 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1668 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1669  
	ga
;

1672 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1673 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1675 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1676 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1677  
	ga
;

1680 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp>&

1681 
	g›î©‹
 *(
Poöt_
<
_Tp
>& 
a
, 
	gb
)

1683 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1684 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1685  
	ga
;

1688 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
n‹m
(c⁄° 
Poöt_
<
_Tp
>& 
±
)

1689 {  
	g°d
::
sqπ
(()
±
.
x
*±.x + (Ìt.
y
*pt.y); }

1691 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1692 {  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 == b.y; }

1694 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Poöt_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1695 {  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 != b.y; }

1697 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 + (c⁄° Poöt_<_Tp>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1698 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 + 
	gb
.x), s©uøã_ˇ°<_Tp>◊.
	gy
 + b.y) ); }

1700 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt_<_Tp>& 
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1701 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 - 
	gb
.x), s©uøã_ˇ°<_Tp>◊.
	gy
 - b.y) ); }

1703 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt_<_Tp>& 
	ga
)

1704 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gx
), s©uøã_ˇ°<_Tp>(-a.
	gy
) ); }

1706 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1707 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1709 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1710 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1712 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1713 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1715 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1716 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1718 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt_<_Tp>& 
	ga
, 
	gb
)

1719 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
), s©uøã_ˇ°<_Tp>◊.
y
*b) ); }

1721 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt_<_Tp>& 
	gb
)

1722 {  
	gPoöt_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
), s©uøã_ˇ°<_Tp>(b.
y
*a) ); }

1726 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(Ë: 
x
(0), 
y
(0), 
z
(0) {}

1727 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_z
Ë: 
x
(_x), 
y
(_y), 
z
(_z) {}

1728 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° Poöt3_& 
±
Ë: 
x
’t.x), 
y
’t.y), 
z
(pt.z) {}

1729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
Poöt_
<
_Tp
>& 
±
Ë: 
x
’t.x), 
y
’t.y), 
z
(_Tp()) {}

1730 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
CvPoöt3D32f
& 
±
) :

1731 
x
(
ßtuøã_ˇ°
<
_Tp
>(
±
.x)), 
y
(ßtuøã_ˇ°<_Tp>’t.y)), 
z
(saturate_cast<_Tp>(pt.z)) {}

1732 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
Poöt3_
(c⁄° 
Vec
<
_Tp
, 3>& 
v
Ë: 
x
(v[0]), 
y
(v[1]), 
z
(v[2]) {}

1734 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
Poöt3_
<
_Tp2
>() const

1735 {  
Poöt3_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
), s©uøã_ˇ°<_Tp2>(
	gz
)); }

1737 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
CvPoöt3D32f
() const

1738 {  
cvPoöt3D32f
(()
x
, ()
y
, ()
z
); }

1740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
›î©‹
 
Vec
<
_Tp
, 3>() const

1741 {  
	gVec
<
	g_Tp
, 3>(
	gx
, 
	gy
, 
	gz
); }

1743 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>& Poöt3_<_Tp>::
›î©‹
 = (c⁄° 
Poöt3_
& 
±
)

1744 { 
x
 = 
±
.x; 
	gy
 =Öt.
y
; 
	gz
 =Öt.
z
;  *
	gthis
; }

1746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gPoöt3_
<_Tp>::
dŸ
(c⁄° 
Poöt3_
& 
±
) const

1747 {  
ßtuøã_ˇ°
<
_Tp
>(
x
*
±
.x + 
y
*±.y + 
z
*pt.z); }

1748 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>::
ddŸ
(c⁄° 
Poöt3_
& 
±
) const

1749 {  ()
x
*
±
.x + ()
y
*±.y + ()
z
*pt.z; }

1751 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> Poöt3_<_Tp>::
¸oss
(c⁄° 
Poöt3_
<
_Tp
>& 
±
) const

1753  
Poöt3_
<
_Tp
>(
y
*
±
.
z
 - z*±.y, z*
	g±
.
	gx
 - 
x
*±.
	gz
, x*±.
	gy
 - y*pt.x);

1756 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1757 
	g›î©‹
 +(
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<
	g_Tp
>& 
	gb
)

1759 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 + 
b
.x);

1760 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 + 
b
.y);

1761 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
 + 
b
.z);

1762  
	ga
;

1765 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1766 
	g›î©‹
 -(
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<
	g_Tp
>& 
	gb
)

1768 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
 - 
b
.x);

1769 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
 - 
b
.y);

1770 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
 - 
b
.z);

1771  
	ga
;

1774 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1775 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1777 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1778 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1779 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1780  
	ga
;

1783 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1784 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1786 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1787 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1788 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1789  
	ga
;

1792 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp>&

1793 
	g›î©‹
 *(
Poöt3_
<
_Tp
>& 
a
, 
	gb
)

1795 
	ga
.
	gx
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
x
*
b
);

1796 
	ga
.
	gy
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
y
*
b
);

1797 
	ga
.
	gz
 = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
z
*
b
);

1798  
	ga
;

1801 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
n‹m
(c⁄° 
Poöt3_
<
_Tp
>& 
±
)

1802 {  
	g°d
::
sqπ
(()
±
.
x
*±.x + (Ìt.
y
*±.y + (Ìt.
z
*pt.z); }

1804 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

1805 {  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 =b.y &&á.
z
 == b.z; }

1807 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Poöt3_
<
_Tp
>& 
a
, c⁄° 
	gPoöt3_
<_Tp>& 
	gb
)

1808 {  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 !b.y ||á.
z
 != b.z; }

1810 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 + (c⁄° Poöt3_<_Tp>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1811 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 + 
	gb
.x),

1812 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gy
 + 
	gb
.y),

1813 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gz
 + 
	gb
.z)); }

1815 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt3_<_Tp>& 
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1816 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gx
 - 
	gb
.x),

1817 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gy
 - 
	gb
.y),

1818 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gz
 - 
	gb
.z)); }

1820 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 - (c⁄° Poöt3_<_Tp>& 
	ga
)

1821 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gx
),

1822 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gy
),

1823 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gz
) ); }

1825 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1826 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1827 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1828 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1830 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1831 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1832 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1833 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1835 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1836 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1837 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1838 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1840 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1841 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1842 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1843 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1845 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (c⁄° Poöt3_<_Tp>& 
	ga
, 
	gb
)

1846 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	ga
.
x
*
	gb
),

1847 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
y
*
	gb
),

1848 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
z
*
	gb
) ); }

1850 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt3_
<_Tp> 
	g›î©‹
 * (
	ga
, c⁄° Poöt3_<_Tp>& 
	gb
)

1851 {  
	gPoöt3_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gb
.
x
*
	ga
),

1852 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
y
*
	ga
),

1853 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gb
.
z
*
	ga
) ); }

1857 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
()

1858 : 
width
(0), 
height
(0) {}

1859 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(
_Tp
 
_width
, _T∞
_height
)

1860 : 
width
(
_width
), 
height
(
_height
) {}

1861 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° Size_& 
sz
)

1862 : 
width
(
sz
.width), 
height
(sz.height) {}

1863 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
CvSize
& 
sz
)

1864 : 
width
(
ßtuøã_ˇ°
<
_Tp
>(
sz
.width)), 
height
(saturate_cast<_Tp>(sz.height)) {}

1865 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
CvSize2D32f
& 
sz
)

1866 : 
width
(
ßtuøã_ˇ°
<
_Tp
>(
sz
.width)), 
height
(saturate_cast<_Tp>(sz.height)) {}

1867 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
Size_
(c⁄° 
Poöt_
<
_Tp
>& 
±
Ë: 
width
’t.
x
), 
height
’t.
y
) {}

1869 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
Size_
<
_Tp2
>() const

1870 {  
Size_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
width
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gheight
)); }

1871 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
CvSize
() const

1872 {  
cvSize
(
ßtuøã_ˇ°
<>(
width
), s©uøã_ˇ°<>(
height
)); }

1873 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>::
›î©‹
 
CvSize2D32f
() const

1874 {  
cvSize2D32f
(()
width
, ()
height
); }

1876 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& Size_<_Tp>::
›î©‹
 = (c⁄° 
Size_
<
_Tp
>& 
sz
)

1877 { 
width
 = 
sz
.width; 
	gheight
 = sz.
height
;  *
	gthis
; }

1878 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 * (c⁄° Size_<_Tp>& 
	ga
, 
_Tp
 
	gb
)

1879 {  
	gSize_
<
	g_Tp
>(
	ga
.
width
 * 
	gb
,á.
height
 * b); }

1880 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 + (c⁄° Size_<_Tp>& 
	ga
, c⁄° Size_<_Tp>& 
	gb
)

1881 {  
	gSize_
<
	g_Tp
>(
	ga
.
	gwidth
 + 
	gb
.width,á.
	gheight
 + b.height); }

1882 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	g›î©‹
 - (c⁄° Size_<_Tp>& 
	ga
, c⁄° Size_<_Tp>& 
	gb
)

1883 {  
	gSize_
<
	g_Tp
>(
	ga
.
	gwidth
 - 
	gb
.width,á.
	gheight
 - b.height); }

1884 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gSize_
<_Tp>::
¨ó
(Ëc⁄° {  
width
*
height
; }

1886 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& 
	g›î©‹
 +(
Size_
<
_Tp
>& 
a
, c⁄° Size_<_Tp>& 
	gb
)

1887 { 
	ga
.
	gwidth
 +
b
.
width
;á.
	gheight
 +b.
height
; á; }

1888 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp>& 
	g›î©‹
 -(
Size_
<
_Tp
>& 
a
, c⁄° Size_<_Tp>& 
	gb
)

1889 { 
	ga
.
	gwidth
 -
b
.
width
;á.
	gheight
 -b.
height
; á; }

1891 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Size_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1892 {  
	ga
.
	gwidth
 =
b
.
width
 && 
a
.
height
 == b.height; }

1893 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Size_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1894 {  
	ga
.
	gwidth
 !
b
.
width
 || 
a
.
height
 != b.height; }

1899 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(Ë: 
x
(0), 
y
(0), 
width
(0), 
height
(0) {}

1900 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(
_Tp
 
_x
, _T∞
_y
, _T∞
_width
, _T∞
_height
Ë: 
x
(_x), 
y
(_y), 
width
(_width), 
height
(_height) {}

1901 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° Re˘_<
_Tp
>& 
r
Ë: 
x
‘.x), 
y
‘.y), 
width
‘.width), 
height
(r.height) {}

1902 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
CvRe˘
& 
r
Ë: 
x
((
_Tp
Ï.x), 
y
((_TpÏ.y), 
width
((_TpÏ.width), 
height
((_Tp)r.height) {}

1903 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
‹g
, c⁄° 
Size_
<_Tp>& 
sz
) :

1904 
x
(
‹g
.x), 
y
(‹g.y), 
width
(
sz
.width), 
height
(sz.height) {}

1905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
Re˘_
(c⁄° 
Poöt_
<
_Tp
>& 
±1
, c⁄° Poöt_<_Tp>& 
±2
)

1907 
	gx
 = 
°d
::
mö
(
±1
.
x
, 
±2
.x); 
	gy
 = std::mö’t1.
y
,Öt2.y);

1908 
	gwidth
 = 
°d
::
max
(
±1
.
x
, 
±2
.xË- 
	gx
; 
	gheight
 = std::max’t1.
y
,Öt2.yË- 
	gy
;

1910 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& Re˘_<_Tp>::
›î©‹
 = ( c⁄° 
Re˘_
<
_Tp
>& 
r
 )

1911 { 
x
 = 
r
.x; 
	gy
 =Ñ.
y
; 
	gwidth
 =Ñ.
width
; 
	gheight
 =Ñ.
height
;  *
	gthis
; }

1913 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	gRe˘_
<_Tp>::
é
(Ëc⁄° {  
Poöt_
<
_Tp
>(
x
,
	gy
); }

1914 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPoöt_
<_Tp> 
	gRe˘_
<_Tp>::
br
(Ëc⁄° {  
Poöt_
<
_Tp
>(
x
+
width
, 
	gy
+
	gheight
); }

1916 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 +–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
 )

1917 { 
	ga
.
	gx
 +
b
.
x
;á.
	gy
 +b.
y
; á; }

1918 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 -–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
 )

1919 { 
	ga
.
	gx
 -
b
.
x
;á.
	gy
 -b.
y
; á; }

1921 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 +–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
 )

1922 { 
	ga
.
	gwidth
 +
b
.
width
;á.
	gheight
 +b.
height
; á; }

1924 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 -–
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gSize_
<_Tp>& 
	gb
 )

1925 { 
	ga
.
	gwidth
 -
b
.
width
;á.
	gheight
 -b.
height
; á; }

1927 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 &–
Re˘_
<
_Tp
>& 
a
, c⁄° Re˘_<_Tp>& 
	gb
 )

1929 
_Tp
 
	gx1
 = 
°d
::
max
(
a
.
x
, 
b
.x), 
	gy1
 = std::max◊.
y
, b.y);

1930 
	ga
.
	gwidth
 = 
°d
::
mö
(
a
.
x
 +á.
width
, 
b
.x + b.widthË- 
	gx1
;

1931 
	ga
.
	gheight
 = 
°d
::
mö
(
a
.
y
 +á.
height
, 
b
.y + b.heightË- 
	gy1
;

1932 
	ga
.
	gx
 = 
x1
;á.
	gy
 = 
y1
;

1933 if–
	ga
.
	gwidth
 <0 || 
a
.
height
 <= 0 )

1934 
a
 = 
Re˘
();

1935  
	ga
;

1938 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>& 
	g›î©‹
 |–
Re˘_
<
_Tp
>& 
a
, c⁄° Re˘_<_Tp>& 
	gb
 )

1940 
_Tp
 
	gx1
 = 
°d
::
mö
(
a
.
x
, 
b
.x), 
	gy1
 = std::mö◊.
y
, b.y);

1941 
	ga
.
	gwidth
 = 
°d
::
max
(
a
.
x
 +á.
width
, 
b
.x + b.widthË- 
	gx1
;

1942 
	ga
.
	gheight
 = 
°d
::
max
(
a
.
y
 +á.
height
, 
b
.y + b.heightË- 
	gy1
;

1943 
	ga
.
	gx
 = 
x1
;á.
	gy
 = 
y1
;

1944  
	ga
;

1947 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSize_
<_Tp> 
	gRe˘_
<_Tp>::
size
(Ëc⁄° {  
Size_
<
_Tp
>(
width
, 
	gheight
); }

1948 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	gRe˘_
<_Tp>::
¨ó
(Ëc⁄° {  
width
*
height
; }

1950 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gRe˘_
<_Tp>::
›î©‹
 
Re˘_
<
_Tp2
>() const

1951 {  
Re˘_
<
_Tp2
>(
ßtuøã_ˇ°
<_Tp2>(
x
), 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gy
),

1952 
	gßtuøã_ˇ°
<
	g_Tp2
>(
	gwidth
), s©uøã_ˇ°<_Tp2>(
	gheight
)); }

1953 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp>::
›î©‹
 
CvRe˘
() const

1954 {  
cvRe˘
(
ßtuøã_ˇ°
<>(
x
), s©uøã_ˇ°<>(
y
),

1955 
ßtuøã_ˇ°
<>(
width
), s©uøã_ˇ°<>(
height
)); }

1957 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gRe˘_
<_Tp>::
c⁄èös
(c⁄° 
Poöt_
<
_Tp
>& 
±
) const

1958 {  
x
 <
±
.x &&Öt.x < x + 
width
 && 
y
 <±.y &&Öt.y < y + 
height
; }

1960 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gRe˘_
<_Tp>& 
	gb
)

1962  
	ga
.
	gx
 =
b
.
x
 && 
a
.
y
 =b.y &&á.
width
 =b.width &&á.
height
 == b.height;

1965 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
Re˘_
<
_Tp
>& 
a
, c⁄° 
	gRe˘_
<_Tp>& 
	gb
)

1967  
	ga
.
	gx
 !
b
.
x
 || 
a
.
y
 !b.y ||á.
width
 !b.width ||á.
height
 != b.height;

1970 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 + (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1972  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
 + 
	gb
.x,á.
	gy
 + b.y,á.
	gwidth
,á.
	gheight
 );

1975 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 - (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gPoöt_
<_Tp>& 
	gb
)

1977  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
 - 
	gb
.x,á.
	gy
 - b.y,á.
	gwidth
,á.
	gheight
 );

1980 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 + (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° 
	gSize_
<_Tp>& 
	gb
)

1982  
	gRe˘_
<
	g_Tp
>–
	ga
.
	gx
,á.
	gy
,á.
	gwidth
 + 
	gb
.width,á.
	gheight
 + b.height );

1985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 & (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° Re˘_<_Tp>& 
	gb
)

1987 
	gRe˘_
<
	g_Tp
> 
	gc
 = 
a
;

1988  
	gc
 &
b
;

1991 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gRe˘_
<_Tp> 
	g›î©‹
 | (c⁄° Re˘_<_Tp>& 
	ga
, c⁄° Re˘_<_Tp>& 
	gb
)

1993 
	gRe˘_
<
	g_Tp
> 
	gc
 = 
a
;

1994  
	gc
 |
b
;

1997 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gPoöt_
<_Tp>::
öside
–c⁄° 
Re˘_
<
_Tp
>& 
r
 ) const

1999  
r
.
c⁄èös
(*
this
);

2002 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(Ë{ 
™gÀ
 = 0; }

2003 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(c⁄° 
Poöt2f
& 
_˚¡î
, c⁄° 
Size2f
& 
_size
, 
_™gÀ
)

2004 : 
˚¡î
(
_˚¡î
), 
size
(
_size
), 
™gÀ
(
_™gÀ
) {}

2005 
ölöe
 
	gRŸ©edRe˘
::
RŸ©edRe˘
(c⁄° 
CvBox2D
& 
box
)

2006 : 
˚¡î
(
box
.˚¡î), 
size
(box.size), 
™gÀ
(box.angle) {}

2007 
ölöe
 
	gRŸ©edRe˘
::
›î©‹
 
CvBox2D
() const

2009 
CvBox2D
 
box
; 
	gbox
.
	g˚¡î
 = 
˚¡î
; box.
	gsize
 = 
size
; box.
	g™gÀ
 = 
™gÀ
;

2010  
	gbox
;

2015 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
()

2016 { 
this
->
vÆ
[0] =Åhis->val[1] =Åhis->val[2] =Åhis->val[3] = 0; }

2018 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(
_Tp
 
v0
, _T∞
v1
, _T∞
v2
, _T∞
v3
)

2019 { 
	gthis
->
	gvÆ
[0] = 
v0
;Åhis->vÆ[1] = 
v1
;Åhis->vÆ[2] = 
v2
;Åhis->vÆ[3] = 
v3
; }

2021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(c⁄° 
CvSˇœr
& 
s
)

2023 
this
->
vÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.val[0]);

2024 
	gthis
->
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[1]);

2025 
	gthis
->
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[2]);

2026 
	gthis
->
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
s
.
vÆ
[3]);

2029 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
Sˇœr_
(
_Tp
 
v0
)

2030 { 
this
->
vÆ
[0] = 
v0
; 
	gthis
->
	gvÆ
[1] =Åhis->val[2] =Åhis->val[3] = 0; }

2032 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
Æl
(
_Tp
 
v0
)

2033 {  
Sˇœr_
<
_Tp
>(
v0
, 
	gv0
, v0, v0); }

2034 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>::
›î©‹
 
CvSˇœr
() const

2035 {  
cvSˇœr
(
this
->
vÆ
[0],Åhis->val[1],Åhis->val[2],Åhis->val[3]); }

2037 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	gT2
> 
ölöe
 
	gSˇœr_
<_Tp>::
›î©‹
 
Sˇœr_
<
T2
>() const

2039  
Sˇœr_
<
T2
>(
ßtuøã_ˇ°
<T2>(
this
->
vÆ
[0]),

2040 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[1]),

2041 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[2]),

2042 
	gßtuøã_ˇ°
<
	gT2
>(
	gthis
->
	gvÆ
[3]));

2045 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 +(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2047 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] + 
b
.val[0]);

2048 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] + 
b
.val[1]);

2049 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] + 
b
.val[2]);

2050 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] + 
b
.val[3]);

2051  
	ga
;

2054 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 -(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2056 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] - 
b
.val[0]);

2057 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] - 
b
.val[1]);

2058 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] - 
b
.val[2]);

2059 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] - 
b
.val[3]);

2060  
	ga
;

2063 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>& 
	g›î©‹
 *–
Sˇœr_
<
_Tp
>& 
a
, _T∞
	gv
 )

2065 
	ga
.
	gvÆ
[0] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[0] * 
v
);

2066 
	ga
.
	gvÆ
[1] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[1] * 
v
);

2067 
	ga
.
	gvÆ
[2] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[2] * 
v
);

2068 
	ga
.
	gvÆ
[3] = 
ßtuøã_ˇ°
<
_Tp
>(
a
.
vÆ
[3] * 
v
);

2069  
	ga
;

2072 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
mul
(c⁄° 
Sˇœr_
<
_Tp
>& 
t
, 
sˇÀ
 ) const

2074  
	gSˇœr_
<
	g_Tp
>–
	gßtuøã_ˇ°
<_Tp>(
	gthis
->
	gvÆ
[0]*
	gt
.vÆ[0]*
	gsˇÀ
),

2075 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[1]*
	gt
.vÆ[1]*
	gsˇÀ
),

2076 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[2]*
	gt
.vÆ[2]*
	gsˇÀ
),

2077 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gthis
->
	gvÆ
[3]*
	gt
.vÆ[3]*
	gsˇÀ
));

2080 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =–c⁄° 
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<_Tp>& 
	gb
 )

2082  
	ga
.
	gvÆ
[0] =
b
.
vÆ
[0] && 
a
.val[1] == b.val[1] &&

2083 
a
.
vÆ
[2] =
b
.val[2] &&á.val[3] == b.val[3];

2086 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !–c⁄° 
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<_Tp>& 
	gb
 )

2088  
	ga
.
	gvÆ
[0] !
b
.
vÆ
[0] || 
a
.val[1] != b.val[1] ||

2089 
a
.
vÆ
[2] !
b
.val[2] ||á.val[3] != b.val[3];

2092 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 + (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2094  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] + 
	gb
.val[0]),

2095 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] + 
	gb
.val[1]),

2096 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] + 
	gb
.val[2]),

2097 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] + 
	gb
.val[3]));

2100 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 - (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2102  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] - 
	gb
.val[0]),

2103 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] - 
	gb
.val[1]),

2104 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] - 
	gb
.val[2]),

2105 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] - 
	gb
.val[3]));

2108 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 * (c⁄° Sˇœr_<_Tp>& 
	ga
, 
_Tp
 
	gÆpha
)

2110  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] * 
	gÆpha
),

2111 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] * 
	gÆpha
),

2112 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] * 
	gÆpha
),

2113 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] * 
	gÆpha
));

2116 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 * (
_Tp
 
	gÆpha
, c⁄° Sˇœr_<_Tp>& 
	ga
)

2118  
a
*
	gÆpha
;

2121 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> 
	g›î©‹
 - (c⁄° Sˇœr_<_Tp>& 
	ga
)

2123  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(-
	ga
.
	gvÆ
[0]), saturate_cast<_Tp>(-a.val[1]),

2124 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	ga
.
	gvÆ
[2]), saturate_cast<_Tp>(-a.val[3]));

2128 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>

2129 
	g›î©‹
 * (c⁄° 
	gSˇœr_
<
	g_Tp
>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2131  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
[0]*
	gb
[0] -á[1]*b[1] -á[2]*b[2] -á[3]*b[3]),

2132 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[1] +á[1]*b[0] +á[2]*b[3] -á[3]*b[2]),

2133 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[2] -á[1]*b[3] +á[2]*b[0] +á[3]*b[1]),

2134 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
[0]*
	gb
[3] +á[1]*b[2] -á[2]*b[1] +á[3]*b[0]));

2137 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp>&

2138 
	g›î©‹
 *(
Sˇœr_
<
_Tp
>& 
a
, c⁄° 
	gSˇœr_
<
	g_Tp
>& 
	gb
)

2140 
	ga
 = 
a
*
b
;

2141  
	ga
;

2144 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSˇœr_
<_Tp> Sˇœr_<_Tp>::
c⁄j
() const

2146  
Sˇœr_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>(
this
->
vÆ
[0]),

2147 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[1]),

2148 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[2]),

2149 
	gßtuøã_ˇ°
<
	g_Tp
>(-
	gthis
->
	gvÆ
[3]));

2152 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gSˇœr_
<_Tp>::
isRól
() const

2154  
this
->
vÆ
[1] == 0 &&Åhis->val[2] == 0 &&Åhis->val[3] == 0;

2157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2158 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Sˇœr_<_Tp>& 
	ga
, 
_Tp
 
	gÆpha
)

2160  
	gSˇœr_
<
	g_Tp
>(
	gßtuøã_ˇ°
<_Tp>(
	ga
.
	gvÆ
[0] / 
	gÆpha
),

2161 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[1] / 
	gÆpha
),

2162 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[2] / 
	gÆpha
),

2163 
	gßtuøã_ˇ°
<
	g_Tp
>(
	ga
.
	gvÆ
[3] / 
	gÆpha
));

2166 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2167 
	gSˇœr_
<> 
	g›î©‹
 / (c⁄° Sˇœr_<>& 
	ga
, 
	gÆpha
)

2169 
	gs
 = 1/
Æpha
;

2170  
	gSˇœr_
<>(
	ga
.
	gvÆ
[0]*
	gs
,á.val[1]*s,á.val[2]*s,á.val[3]*s);

2173 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2174 
	gSˇœr_
<> 
	g›î©‹
 / (c⁄° Sˇœr_<>& 
	ga
, 
	gÆpha
)

2176 
	gs
 = 1/
Æpha
;

2177  
	gSˇœr_
<>(
	ga
.
	gvÆ
[0]*
	gs
,á.val[1]*s,á.val[2]*s,á.val[3]*s);

2180 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2181 
	gSˇœr_
<
	g_Tp
>& 
	g›î©‹
 /(
Sˇœr_
<
_Tp
>& 
a
, _T∞
	gÆpha
)

2183 
	ga
 = 
a
/
Æpha
;

2184  
	ga
;

2187 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2188 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (
_Tp
 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2190 
_Tp
 
	gs
 = 
a
/(
b
[0]*b[0] + b[1]*b[1] + b[2]*b[2] + b[3]*b[3]);

2191  
	gb
.
c⁄j
()*
	gs
;

2194 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2195 
	gSˇœr_
<
	g_Tp
> 
	g›î©‹
 / (c⁄° Sˇœr_<_Tp>& 
	ga
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2197  
	ga
*((
	g_Tp
)1/
	gb
);

2200 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


2201 
	gSˇœr_
<
	g_Tp
>& 
	g›î©‹
 /(
Sˇœr_
<
_Tp
>& 
a
, c⁄° Sˇœr_<_Tp>& 
	gb
)

2203 
	ga
 = 
a
/
b
;

2204  
	ga
;

2209 
ölöe
 
	gR™ge
::
R™ge
(Ë: 
°¨t
(0), 
íd
(0) {}

2210 
ölöe
 
	gR™ge
::
R™ge
(
_°¨t
, 
_íd
Ë: 
°¨t
(_°¨t), 
íd
(_end) {}

2211 
ölöe
 
	gR™ge
::
R™ge
(c⁄° 
CvSli˚
& 
¶i˚
Ë: 
°¨t
(¶i˚.
°¨t_ödex
), 
íd
(¶i˚.
íd_ödex
)

2213 if–
	g°¨t
 =0 && 
íd
 =
CV_WHOLE_SEQ_END_INDEX
 )

2214 *
this
 = 
R™ge
::
Æl
();

2217 
ölöe
 
	gR™ge
::
size
(Ëc⁄° {  
íd
 - 
°¨t
; }

2218 
ölöe
 
boﬁ
 
	gR™ge
::
em±y
(Ëc⁄° {  
°¨t
 =
íd
; }

2219 
ölöe
 
R™ge
 
	gR™ge
::
Æl
(Ë{  R™ge(
INT_MIN
, 
INT_MAX
); }

2221 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
R™ge
& 
r1
, c⁄° 
	gR™ge
& 
	gr2
)

2222 {  
	gr1
.
	g°¨t
 =
r2
.
°¨t
 && 
r1
.
íd
 ==Ñ2.end; }

2224 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
R™ge
& 
r1
, c⁄° 
	gR™ge
& 
	gr2
)

2225 {  !(
	gr1
 =
r2
); }

2227 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
	gR™ge
& 
	gr
)

2228 {  
	gr
.
	g°¨t
 =
r
.
íd
; }

2230 
ölöe
 
R™ge
 
	g›î©‹
 & (c⁄° 
	gR™ge
& 
	gr1
, c⁄° R™ge& 
	gr2
)

2232 
R™ge
 
r
(
°d
::
max
(
r1
.
°¨t
, 
r2
.°¨t), std::
mö
‘1.
íd
,Ñ2.end));

2233 
	gr
.
	gíd
 = 
°d
::
max
(
r
.
íd
,Ñ.
°¨t
);

2234  
	gr
;

2237 
ölöe
 
	gR™ge
& 
	g›î©‹
 &(
R™ge
& 
r1
, c⁄° R™ge& 
	gr2
)

2239 
	gr1
 = 
r1
 & 
r2
;

2240  
	gr1
;

2243 
ölöe
 
R™ge
 
	g›î©‹
 + (c⁄° 
	gR™ge
& 
	gr1
, 
	gdñè
)

2245  
R™ge
(
r1
.
°¨t
 + 
dñè
,Ñ1.
íd
 + delta);

2248 
ölöe
 
R™ge
 
	g›î©‹
 + (
	gdñè
, c⁄° 
	gR™ge
& 
	gr1
)

2250  
R™ge
(
r1
.
°¨t
 + 
dñè
,Ñ1.
íd
 + delta);

2253 
ölöe
 
R™ge
 
	g›î©‹
 - (c⁄° 
	gR™ge
& 
	gr1
, 
	gdñè
)

2255  
	gr1
 + (-
	gdñè
);

2258 
ölöe
 
	gR™ge
::
›î©‹
 
CvSli˚
() const

2259 {  *
this
 !
R™ge
::
Æl
(Ë? 
cvSli˚
(
°¨t
, 
íd
Ë: 
CV_WHOLE_SEQ
; }

2270 
	gãm∂©e
 <
ty≥«me
 
	g_Tp
> cœs†
	cVe˘‹


2272 
	gpublic
:

2273 
_Tp
 
	tvÆue_ty≥
;

2274 
_Tp
* 
	tôî©‹
;

2275 c⁄° 
	t_Tp
* 
	tc⁄°_ôî©‹
;

2276 
	g_Tp
& 
	tª„ªn˚
;

2277 c⁄° 
	t_Tp
& 
	tc⁄°_ª„ªn˚
;

2279 
	sHdr


2281 
Hdr
(Ë: 
d©a
(0), 
d©a°¨t
(0), 
ªfcou¡
(0), 
size
(0), 
ˇ∑côy
(0) {};

2282 
_Tp
* 
	gd©a
;

2283 
_Tp
* 
	gd©a°¨t
;

2284 
_Atomic_w‹d
* 
	gªfcou¡
;

2285 
size_t
 
	gsize
;

2286 
size_t
 
	gˇ∑côy
;

2289 
Ve˘‹
() {}

2290 
Ve˘‹
(
size_t
 
_size
Ë{ 
ªsize
(_size); }

2291 
Ve˘‹
(
size_t
 
_size
, c⁄° 
_Tp
& 
vÆ
)

2293 
ªsize
(
_size
);

2294 
size_t
 
	gi
 = 0; i < 
	g_size
; i++)

2295 
	ghdr
.
	gd©a
[
i
] = 
vÆ
;

2297 
Ve˘‹
(
_Tp
* 
_d©a
, 
size_t
 
_size
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2298 { 
£t
(
_d©a
, 
_size
, 
_c›yD©a
); }

2300 
	gãm∂©e
<
	gn
> 
Ve˘‹
(c⁄° 
Vec
<
_Tp
, 
n
>& 
vec
)

2301 { 
£t
((
_Tp
*)&
vec
.
vÆ
[0], 
n
, 
åue
); }

2303 
Ve˘‹
(c⁄° 
°d
::
ve˘‹
<
_Tp
>& 
vec
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2304 { 
£t
(!
vec
.
em±y
(Ë? (
_Tp
*)&vec[0] : 0, vec.
size
(), 
_c›yD©a
); }

2306 
Ve˘‹
(c⁄° Ve˘‹& 
d
Ë{ *
	gthis
 = d; }

2308 
Ve˘‹
(c⁄° Ve˘‹& 
d
, c⁄° 
R™ge
& 
r_
)

2310 
R™ge
 
	gr
 = 
r_
 =R™ge::
Æl
(Ë? R™ge(0, 
d
.
size
()) :Ñ_;

2313 if–
	gr
.
size
(Ë> 0 &&Ñ.
	g°¨t
 >0 && 
r
.
íd
 <
d
.size() )

2315 if–
d
.
hdr
.
ªfcou¡
 )

2316 
CV_XADD
(
d
.
hdr
.
ªfcou¡
, 1);

2317 
	ghdr
.
	gªfcou¡
 = 
d
.
hdr
.
ªfcou¡
;

2318 
	ghdr
.
	gd©a°¨t
 = 
d
.
hdr
.
d©a°¨t
;

2319 
	ghdr
.
	gd©a
 = 
d
.
hdr
.
d©a
 + 
r
.
°¨t
;

2320 
	ghdr
.
	gˇ∑côy
 = 
hdr
.
size
 = 
r
.size();

2324 
	gVe˘‹
<
	g_Tp
>& 
	g›î©‹
 = (c⁄° 
Ve˘‹
& 
d
)

2326 if–
this
 !&
d
 )

2328 if–
d
.
hdr
.
ªfcou¡
 )

2329 
CV_XADD
(
d
.
hdr
.
ªfcou¡
, 1);

2330 
ªÀa£
();

2331 
	ghdr
 = 
d
.
hdr
;

2333  *
	gthis
;

2336 ~
Ve˘‹
(Ë{ 
ªÀa£
(); }

2338 
	gVe˘‹
<
	g_Tp
> 
˛⁄e
() const

2339 {  
	ghdr
.
	gd©a
 ? 
	gVe˘‹
<
	g_Tp
>(hdr.d©a, hdr.
	gsize
, 
	gåue
Ë: 
Ve˘‹
<
_Tp
>(); }

2341 
c›yTo
(
Ve˘‹
<
_Tp
>& 
vec
) const

2343 
size_t
 
	gi
, 
	gsz
 = 
size
();

2344 
	gvec
.
ªsize
(
sz
);

2345 c⁄° 
_Tp
* 
	g§c
 = 
hdr
.
d©a
;

2346 
_Tp
* 
	gd°
 = 
vec
.
hdr
.
d©a
;

2347  
	gi
 = 0; i < 
	gsz
; i++ )

2348 
	gd°
[
i
] = 
§c
[i];

2351 
c›yTo
(
°d
::
ve˘‹
<
_Tp
>& 
vec
) const

2353 
size_t
 
i
, 
	gsz
 = 
size
();

2354 
	gvec
.
ªsize
(
sz
);

2355 c⁄° 
_Tp
* 
	g§c
 = 
hdr
.
d©a
;

2356 
_Tp
* 
	gd°
 = 
sz
 ? &
vec
[0] : 0;

2357  
	gi
 = 0; i < 
	gsz
; i++ )

2358 
	gd°
[
i
] = 
§c
[i];

2361 
›î©‹
 
CvM©
() const

2362 {  
cvM©
(()
size
(), 1, 
ty≥
(), (*)
hdr
.
d©a
); }

2364 
	g_Tp
& 
	g›î©‹
 [] (
size_t
 
	gi
Ë{ 
CV_DbgAs£π
–
i
 < 
size
(Ë);  
	ghdr
.
	gd©a
[i]; }

2365 c⁄° 
	g_Tp
& 
	g›î©‹
 [] (
size_t
 
	gi
Ëc⁄° { 
CV_DbgAs£π
–
i
 < 
size
(Ë);  
	ghdr
.
	gd©a
[i]; }

2366 
Ve˘‹
 
›î©‹
(Ë(c⁄° 
	gR™ge
& 
	gr
Ëc⁄° {  Ve˘‹(*
this
, 
r
); }

2367 
	g_Tp
& 
back
(Ë{ 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[
hdr
.
size
-1]; }

2368 c⁄° 
	g_Tp
& 
back
(Ëc⁄° { 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[
hdr
.
size
-1]; }

2369 
	g_Tp
& 
‰⁄t
(Ë{ 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[0]; }

2370 c⁄° 
	g_Tp
& 
‰⁄t
(Ëc⁄° { 
CV_DbgAs£π
(!
em±y
());  
	ghdr
.
	gd©a
[0]; }

2372 
_Tp
* 
begö
(Ë{  
	ghdr
.
	gd©a
; }

2373 
_Tp
* 
íd
(Ë{  
	ghdr
.
	gd©a
 + hdr.
	gsize
; }

2374 c⁄° 
_Tp
* 
begö
(Ëc⁄° {  
	ghdr
.
	gd©a
; }

2375 c⁄° 
_Tp
* 
íd
(Ëc⁄° {  
	ghdr
.
	gd©a
 + hdr.
	gsize
; }

2377 
addªf
(Ë{ if–
	ghdr
.
	gªfcou¡
 ) 
CV_XADD
(
hdr
.
ªfcou¡
, 1); }

2378 
ªÀa£
()

2380 if–
	ghdr
.
	gªfcou¡
 && 
CV_XADD
(
hdr
.
ªfcou¡
, -1) == 1 )

2382 
dñëe
[] 
hdr
.
d©a°¨t
;

2383 
dñëe
 
	ghdr
.
	gªfcou¡
;

2385 
	ghdr
 = 
Hdr
();

2388 
£t
(
_Tp
* 
_d©a
, 
size_t
 
_size
, 
boﬁ
 
_c›yD©a
=
Ál£
)

2390 if–!
_c›yD©a
 )

2392 
ªÀa£
();

2393 
	ghdr
.
	gd©a
 = 
hdr
.
d©a°¨t
 = 
_d©a
;

2394 
	ghdr
.
	gsize
 = 
hdr
.
ˇ∑côy
 = 
_size
;

2395 
	ghdr
.
	gªfcou¡
 = 0;

2399 
ª£rve
(
_size
);

2400  
size_t
 
	gi
 = 0; i < 
	g_size
; i++ )

2401 
	ghdr
.
	gd©a
[
i
] = 
_d©a
[i];

2402 
	ghdr
.
	gsize
 = 
_size
;

2406 
ª£rve
(
size_t
 
√wC≠acôy
)

2408 
_Tp
* 
	g√wD©a
;

2409 * 
	g√wRefcou¡
;

2410 
size_t
 
	gi
, 
	gﬁdSize
 = 
hdr
.
size
;

2411 if–(!
	ghdr
.
	gªfcou¡
 || *hdr.ªfcou¡ =1Ë&& 
hdr
.
ˇ∑côy
 >
√wC≠acôy
 )

2413 
	g√wC≠acôy
 = 
°d
::
max
(
√wC≠acôy
, 
ﬁdSize
);

2414 
	g√wD©a
 = 
√w
 
_Tp
[
√wC≠acôy
];

2415 
	g√wRefcou¡
 = 
√w
 (1);

2416  
	gi
 = 0; i < 
	gﬁdSize
; i++ )

2417 
	g√wD©a
[
i
] = 
hdr
.
d©a
[i];

2418 
ªÀa£
();

2419 
	ghdr
.
	gd©a
 = 
hdr
.
d©a°¨t
 = 
√wD©a
;

2420 
	ghdr
.
	gˇ∑côy
 = 
√wC≠acôy
;

2421 
	ghdr
.
	gsize
 = 
ﬁdSize
;

2422 
	ghdr
.
	gªfcou¡
 = 
√wRefcou¡
;

2425 
ªsize
(
size_t
 
√wSize
)

2427 
size_t
 
	gi
;

2428 
	g√wSize
 = 
°d
::
max
(
√wSize
, (
size_t
)0);

2429 if–(!
	ghdr
.
	gªfcou¡
 || *hdr.ªfcou¡ =1Ë&& 
hdr
.
size
 =
√wSize
 )

2431 if–
	g√wSize
 > 
	ghdr
.
	gˇ∑côy
 )

2432 
ª£rve
(
°d
::
max
(
√wSize
, std::max((
size_t
)4, 
hdr
.
ˇ∑côy
*2)));

2433  
	gi
 = 
hdr
.
size
; i < 
	g√wSize
; i++ )

2434 
	ghdr
.
	gd©a
[
i
] = 
_Tp
();

2435 
	ghdr
.
	gsize
 = 
√wSize
;

2438 
	gVe˘‹
<
	g_Tp
>& 
push_back
(c⁄° 
_Tp
& 
ñem
)

2440 if–
	ghdr
.
	gsize
 =
hdr
.
ˇ∑côy
 )

2441 
ª£rve
–
°d
::
max
((
size_t
)4, 
hdr
.
ˇ∑côy
*2) );

2442 
	ghdr
.
	gd©a
[
hdr
.
size
++] = 
ñem
;

2443  *
	gthis
;

2446 
	gVe˘‹
<
	g_Tp
>& 
p›_back
()

2448 if–
	ghdr
.
	gsize
 > 0 )

2449 --
	ghdr
.
	gsize
;

2450  *
	gthis
;

2453 
size_t
 
size
(Ëc⁄° {  
	ghdr
.
	gsize
; }

2454 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	ghdr
.
	gˇ∑côy
; }

2455 
boﬁ
 
em±y
(Ëc⁄° {  
	ghdr
.
	gsize
 == 0; }

2456 
˛ór
(Ë{ 
ªsize
(0); }

2457 
ty≥
(Ëc⁄° {  
	gD©aTy≥
<
	g_Tp
>::type; }

2459 
	g¥Ÿe˘ed
:

2460 
Hdr
 
hdr
;

2464 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gD©aTy≥
<_Tp>::
w‹k_ty≥


2465 
dŸ
(c⁄° 
Ve˘‹
<
_Tp
>& 
v1
, c⁄° Ve˘‹<_Tp>& 
v2
)

2467 
ty≥«me
 
	tD©aTy≥
<
	t_Tp
>::
	tw‹k_ty≥
 
	t_Tw
;

2468 
size_t
 
	gi
 = 0, 
	gn
 = 
v1
.
size
();

2469 
as£π
(
v1
.
size
(Ë=
v2
.size());

2471 
_Tw
 
	gs
 = 0;

2472 c⁄° 
_Tp
 *
	g±r1
 = &
v1
[0], *
	g±r2
 = &
v2
[0];

2473  ; 
	gi
 < 
	gn
; i++ )

2474 
	gs
 +(
_Tw
)
±r1
[
i
]*
±r2
[i];

2476  
	gs
;

2480 
ölöe
 
	gRNG
::
	$RNG
(Ë{ 
°©e
 = 0xffffffff; 
	}
}

2481 
ölöe
 
	gRNG
::
	$RNG
(
uöt64
 
_°©e
Ë{ 
°©e
 = _°©ê? _°©ê: 0xffffffff; 
	}
}

2482 
ölöe
 
	gRNG
::
	$√xt
()

2484 
°©e
 = (
uöt64
)()°©e*
CV_RNG_COEFF
 + ()(state >> 32);

2485  ()
°©e
;

2486 
	}
}

2488 
ölöe
 
	gRNG
::
›î©‹
 
	$uch¨
(Ë{  (
uch¨
)
	`√xt
(); 
	}
}

2489 
ölöe
 
	gRNG
::
›î©‹
 
	$sch¨
(Ë{  (
sch¨
)
	`√xt
(); 
	}
}

2490 
ölöe
 
	gRNG
::
›î©‹
 
	$ush‹t
(Ë{  (
ush‹t
)
	`√xt
(); 
	}
}

2491 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  ()
	`√xt
(); 
	}
}

2492 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  
	`√xt
(); 
	}
}

2493 
ölöe
 
	gRNG
::
	$›î©‹
 ()(
N
Ë{ ()
	`unif‹m
(0,N);
	}
}

2494 
ölöe
 
	gRNG
::
	$›î©‹
 ()(Ë{ 
	`√xt
();
	}
}

2495 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  ()
	`√xt
(); 
	}
}

2497 
ölöe
 
	gRNG
::
›î©‹
 (Ë{  
	`√xt
()*2.3283064365386962890625e-10f; 
	}
}

2498 
ölöe
 
	gRNG
::
›î©‹
 ()

2500 
t
 = 
	`√xt
();

2501  (((
uöt64
)
t
 << 32Ë| 
	`√xt
())*5.4210108624275221700372640043497e-20;

2502 
	}
}

2503 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{ á =b ?á : ()(
	`√xt
()%(b -áË+á); 
	}
}

2504 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{  (()*
this
)*(b -áË+á; 
	}
}

2505 
ölöe
 
	gRNG
::
	$unif‹m
(
a
, 
b
Ë{  (()*
this
)*(b -áË+á; 
	}
}

2507 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(Ë: 
	`ty≥
(0), 
	`maxCou¡
(0), 
	$ïsû⁄
(0Ë{
	}
}

2508 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(
_ty≥
, 
_maxCou¡
, 
_ïsû⁄
)

2509 : 
	`ty≥
(
_ty≥
), 
	`maxCou¡
(
_maxCou¡
), 
	$ïsû⁄
(
_ïsû⁄
Ë{
	}
}

2510 
ölöe
 
	gTîmCrôîü
::
	$TîmCrôîü
(c⁄° 
CvTîmCrôîü
& 
¸ôîü
)

2511 : 
	`ty≥
(
¸ôîü
.
ty≥
), 
	`maxCou¡
(¸ôîü.
max_ôî
), 
	$ïsû⁄
(
¸ôîü
.
ïsû⁄
Ë{
	}
}

2512 
ölöe
 
	gTîmCrôîü
::
›î©‹
 
	$CvTîmCrôîü
() const

2513 {  
	`cvTîmCrôîü
(
ty≥
, 
maxCou¡
, 
ïsû⁄
); 
	}
}

2515 
ölöe
 
uch¨
* 
	gLöeIãøt‹
::
›î©‹
 *(Ë{  
±r
; }

2516 
ölöe
 
	gLöeIãøt‹
& LöeIãøt‹::
›î©‹
 ++()

2518 
mask
 = 
îr
 < 0 ? -1 : 0;

2519 
	gîr
 +
möusDñè
 + (
∂usDñè
 & 
mask
);

2520 
	g±r
 +
möusSãp
 + (
∂usSãp
 & 
mask
);

2521  *
	gthis
;

2523 
ölöe
 
LöeIãøt‹
 
	gLöeIãøt‹
::
›î©‹
 ++()

2525 
LöeIãøt‹
 
ô
 = *
this
;

2526 ++(*
	gthis
);

2527  
	gô
;

2529 
ölöe
 
Poöt
 
	gLöeIãøt‹
::
	$pos
() const

2531 
Poöt
 
p
;

2532 
p
.
y
 = ()((
±r
 - 
±r0
)/
°ï
);

2533 
p
.
x
 = ()(((
±r
 - 
±r0
Ë-Ö.
y
*
°ï
)/
ñemSize
);

2534  
p
;

2535 
	}
}

2539 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$AutoBuf„r
()

2541 
±r
 = 
buf
;

2542 
size
 = 
fixed_size
;

2543 
	}
}

2545 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$AutoBuf„r
(
size_t
 
_size
)

2547 
±r
 = 
buf
;

2548 
size
 = 
fixed_size
;

2549 
	`Æloˇã
(
_size
);

2550 
	}
}

2552 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::~
	$AutoBuf„r
()

2553 { 
	`dóŒoˇã
(); 
	}
}

2555 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$Æloˇã
(
size_t
 
_size
)

2557 if(
_size
 <
size
)

2559 
	`dóŒoˇã
();

2560 if(
_size
 > 
fixed_size
)

2562 
±r
 = 
cv
::
Æloˇã
<
_Tp
>(
_size
);

2563 
size
 = 
_size
;

2565 
	}
}

2567 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
	$dóŒoˇã
()

2569 if–
±r
 !
buf
 )

2571 
cv
::
dóŒoˇã
<
_Tp
>(
±r
, 
size
);

2572 
±r
 = 
buf
;

2573 
size
 = 
fixed_size
;

2575 
	}
}

2577 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
›î©‹
 
_Tp
* ()

2578 {  
±r
; }

2580 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
size_t
 
	gfixed_size
> 
ölöe
 
	gAutoBuf„r
<_Tp, fixed_size>::
›î©‹
 c⁄° 
_Tp
* () const

2581 {  
±r
; }

2586 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$På
(Ë: 
	`obj
(0), 
	$ªfcou¡
(0Ë{
	}
}

2587 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$På
(
_Tp
* 
_obj
Ë: 
	$obj
(
_obj
)

2589 if(
obj
)

2591 
ªfcou¡
 = (
_Atomic_w‹d
*)
	`Á°MÆloc
((*refcount));

2592 *
ªfcou¡
 = 1;

2595 
ªfcou¡
 = 0;

2596 
	}
}

2598 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$addªf
()

2599 { if–
ªfcou¡
 ) 
	`CV_XADD
‘efcou¡, 1); 
	}
}

2601 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$ªÀa£
()

2603 if–
ªfcou¡
 && 
	`CV_XADD
(refcount, -1) == 1 )

2605 
	`dñëe_obj
();

2606 
	`Á°Fªe
(
ªfcou¡
);

2608 
ªfcou¡
 = 0;

2609 
obj
 = 0;

2610 
	}
}

2612 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
	$dñëe_obj
()

2614 if–
obj
 ) 
dñëe
 obj;

2615 
	}
}

2617 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::~
	$På
(Ë{ 
	`ªÀa£
(); 
	}
}

2619 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
På
(c⁄° På<
_Tp
>& 
_±r
)

2621 
obj
 = 
_±r
.obj;

2622 
	gªfcou¡
 = 
_±r
.
ªfcou¡
;

2623 
addªf
();

2626 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>& På<_Tp>::
›î©‹
 = (c⁄° 
På
<
_Tp
>& 
_±r
)

2628 
_Atomic_w‹d
* 
_ªfcou¡
 = 
_±r
.
ªfcou¡
;

2629 if–
	g_ªfcou¡
 )

2630 
CV_XADD
(
_ªfcou¡
, 1);

2631 
ªÀa£
();

2632 
	gobj
 = 
_±r
.
obj
;

2633 
	gªfcou¡
 = 
_ªfcou¡
;

2634  *
	gthis
;

2637 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
* 
	gPå
<_Tp>::
›î©‹
 -> (Ë{  
obj
; }

2638 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° 
_Tp
* 
	gPå
<_Tp>::
›î©‹
 -> (Ëc⁄° {  
obj
; }

2640 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
›î©‹
 
_Tp
* (Ë{  
obj
; }

2641 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp>::
›î©‹
 c⁄° 
_Tp
*(Ëc⁄° {  
obj
; }

2643 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gPå
<_Tp>::
	$em±y
(Ëc⁄° {  
obj
 =0; 
	}
}

2645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
	gPå
<_Tp>::
På
(c⁄° På<
_Tp2
>& 
p
)

2646 : 
obj
(0), 
	$ªfcou¡
(0)

2648 i‡(
p
.
	`em±y
())

2651 
_Tp
* 
p_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp*>(
p
.
obj
);

2652 i‡(!
p_ˇ°ed
)

2655 
obj
 = 
p_ˇ°ed
;

2656 
ªfcou¡
 = 
p
.refcount;

2657 
	`addªf
();

2658 
	}
}

2660 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 
	gPå
<_Tp2> På<_Tp>::
	$±r
()

2662 
På
<
_Tp2
> 
p
;

2663 if–!
obj
 )

2664  
p
;

2666 
_Tp2
* 
obj_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp2*>(
obj
);

2667 i‡(!
obj_ˇ°ed
)

2668  
p
;

2670 if–
ªfcou¡
 )

2671 
	`CV_XADD
(
ªfcou¡
, 1);

2673 
p
.
obj
 = 
obj_ˇ°ed
;

2674 
p
.
ªfcou¡
 =Ñefcount;

2675  
p
;

2676 
	}
}

2678 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>Åem∂©e<ty≥«mê
	g_Tp2
> 
ölöe
 c⁄° 
	gPå
<_Tp2> På<_Tp>::
	$±r
() const

2680 
På
<
_Tp2
> 
p
;

2681 if–!
obj
 )

2682  
p
;

2684 
_Tp2
* 
obj_ˇ°ed
 = 
dy«mic_ˇ°
<_Tp2*>(
obj
);

2685 i‡(!
obj_ˇ°ed
)

2686  
p
;

2688 if–
ªfcou¡
 )

2689 
	`CV_XADD
(
ªfcou¡
, 1);

2691 
p
.
obj
 = 
obj_ˇ°ed
;

2692 
p
.
ªfcou¡
 =Ñefcount;

2693  
p
;

2694 
	}
}

2698 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvM©
>::
dñëe_obj
();

2699 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gI∂Image
>::
dñëe_obj
();

2700 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvM©ND
>::
dñëe_obj
();

2701 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvS∑r£M©
>::
dñëe_obj
();

2702 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvMemSt‹age
>::
dñëe_obj
();

2703 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvFûeSt‹age
>::
dñëe_obj
();

2707 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2708 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2709 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, 
vÆue
 );

2710 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° såög& 
vÆue
 );

2712 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
_Tp
& 
vÆue
)

2713 { 
	`wrôe
(
fs
, 
	`°rög
(), 
vÆue
); 
	}
}

2715 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2716 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2717 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, 
vÆue
 );

2718 
CV_EXPORTS
 
wrôeSˇœr
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
vÆue
 );

2720 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2722 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2723 
	}
}

2725 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2727 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2728 
	}
}

2730 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° & 
vÆue
 )

2732 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2733 
	}
}

2735 
	gãm∂©e
<> 
ölöe
 
	$wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
vÆue
 )

2737 
	`wrôeSˇœr
(
fs
, 
vÆue
);

2738 
	}
}

2740 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Poöt_
<
_Tp
>& 
±
 )

2742 
wrôe
(
fs
, 
±
.
x
);

2743 
wrôe
(
fs
, 
±
.
y
);

2746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Poöt3_
<
_Tp
>& 
±
 )

2748 
wrôe
(
fs
, 
±
.
x
);

2749 
wrôe
(
fs
, 
±
.
y
);

2750 
wrôe
(
fs
, 
±
.
z
);

2753 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Size_
<
_Tp
>& 
sz
 )

2755 
wrôe
(
fs
, 
sz
.
width
);

2756 
wrôe
(
fs
, 
sz
.
height
);

2759 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Com∂ex
<
_Tp
>& 
c
 )

2761 
wrôe
(
fs
, 
c
.
ª
);

2762 
wrôe
(
fs
, 
c
.
im
);

2765 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Re˘_
<
_Tp
>& 
r
 )

2767 
wrôe
(
fs
, 
r
.
x
);

2768 
wrôe
(
fs
, 
r
.
y
);

2769 
wrôe
(
fs
, 
r
.
width
);

2770 
wrôe
(
fs
, 
r
.
height
);

2773 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
 )

2775 
	gi
 = 0; i < 
	g˙
; i++)

2776 
wrôe
(
fs
, 
v
.
vÆ
[
i
]);

2779 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Sˇœr_
<
_Tp
>& 
s
 )

2781 
wrôe
(
fs
, 
s
.
vÆ
[0]);

2782 
wrôe
(
fs
, 
s
.
vÆ
[1]);

2783 
wrôe
(
fs
, 
s
.
vÆ
[2]);

2784 
wrôe
(
fs
, 
s
.
vÆ
[3]);

2787 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
R™ge
& 
r
 )

2789 
	`wrôe
(
fs
, 
r
.
°¨t
);

2790 
	`wrôe
(
fs
, 
r
.
íd
);

2791 
	}
}

2793 ˛as†
	cCV_EXPORTS
 
	gWrôeSåu˘C⁄ãxt


2795 
	gpublic
:

2796 
WrôeSåu˘C⁄ãxt
(
FûeSt‹age
& 
_fs
, c⁄° 
°rög
& 
«me
,

2797 
Êags
, c⁄° 
°rög
& 
ty≥Name
=string());

2798 ~
WrôeSåu˘C⁄ãxt
();

2799 
FûeSt‹age
* 
	gfs
;

2802 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Poöt_
<
_Tp
>& 
±
 )

2804 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2805 
wrôe
(
fs
, 
±
.
x
);

2806 
wrôe
(
fs
, 
±
.
y
);

2809 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Poöt3_
<
_Tp
>& 
±
 )

2811 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2812 
wrôe
(
fs
, 
±
.
x
);

2813 
wrôe
(
fs
, 
±
.
y
);

2814 
wrôe
(
fs
, 
±
.
z
);

2817 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Size_
<
_Tp
>& 
sz
 )

2819 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2820 
wrôe
(
fs
, 
sz
.
width
);

2821 
wrôe
(
fs
, 
sz
.
height
);

2824 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Com∂ex
<
_Tp
>& 
c
 )

2826 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2827 
wrôe
(
fs
, 
c
.
ª
);

2828 
wrôe
(
fs
, 
c
.
im
);

2831 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Re˘_
<
_Tp
>& 
r
 )

2833 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2834 
wrôe
(
fs
, 
r
.
x
);

2835 
wrôe
(
fs
, 
r
.
y
);

2836 
wrôe
(
fs
, 
r
.
width
);

2837 
wrôe
(
fs
, 
r
.
height
);

2840 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Vec
<
_Tp
, 
˙
>& 
v
 )

2842 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2843 
	gi
 = 0; i < 
	g˙
; i++)

2844 
wrôe
(
fs
, 
v
.
vÆ
[
i
]);

2847 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
Sˇœr_
<
_Tp
>& 
s
 )

2849 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2850 
wrôe
(
fs
, 
s
.
vÆ
[0]);

2851 
wrôe
(
fs
, 
s
.
vÆ
[1]);

2852 
wrôe
(
fs
, 
s
.
vÆ
[2]);

2853 
wrôe
(
fs
, 
s
.
vÆ
[3]);

2856 
ölöe
 
	$wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
R™ge
& 
r
 )

2858 
WrôeSåu˘C⁄ãxt
 
	`ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+
CV_NODE_FLOW
);

2859 
	`wrôe
(
fs
, 
r
.
°¨t
);

2860 
	`wrôe
(
fs
, 
r
.
íd
);

2861 
	}
}

2863 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gnumÊag
> cœs†
	cVecWrôîProxy


2865 
	gpublic
:

2866 
VecWrôîProxy
–
FûeSt‹age
* 
_fs
 ) : 
fs
(_fs) {}

2867 
›î©‹
()(c⁄° 
ve˘‹
<
_Tp
>& 
vec
) const

2869 
size_t
 
i
, 
	gcou¡
 = 
vec
.
size
();

2870  
	gi
 = 0; i < 
	gcou¡
; i++ )

2871 
wrôe
–*
fs
, 
vec
[
i
] );

2873 
FûeSt‹age
* 
	gfs
;

2876 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gVecWrôîProxy
<_Tp,1>

2878 
	gpublic
:

2879 
VecWrôîProxy
–
FûeSt‹age
* 
_fs
 ) : 
fs
(_fs) {}

2880 
›î©‹
()(c⁄° 
ve˘‹
<
_Tp
>& 
vec
) const

2882 
_fmt
 = 
D©aTy≥
<
_Tp
>::
fmt
;

2883 
	gfmt
[] = { ()((
_fmt
>>8)+'1'), ()_fmt, '\0' };

2884 
	gfs
->
wrôeRaw
–
°rög
(
fmt
), !
vec
.
em±y
(Ë? (
uch¨
*)&vec[0] : 0, vec.
size
()*(
_Tp
) );

2886 
FûeSt‹age
* 
	gfs
;

2889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
ve˘‹
<
_Tp
>& 
vec
 )

2891 
	gVecWrôîProxy
<
	g_Tp
, 
	gD©aTy≥
<_Tp>::
fmt
 !0> 
w
(&
fs
);

2892 
w
(
vec
);

2895 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
,

2896 c⁄° 
ve˘‹
<
_Tp
>& 
vec
 )

2898 
WrôeSåu˘C⁄ãxt
 
ws
(
fs
, 
«me
, 
CV_NODE_SEQ
+(
D©aTy≥
<
_Tp
>::
fmt
 !0 ? 
CV_NODE_FLOW
 : 0));

2899 
wrôe
(
fs
, 
vec
);

2902 
CV_EXPORTS_W
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
M©
& 
vÆue
 );

2903 
CV_EXPORTS
 
wrôe
–
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
S∑r£M©
& 
vÆue
 );

2905 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° _Tp& 
	gvÆue
)

2907 if–!
	gfs
.
isO≥√d
() )

2908  
	gfs
;

2909 if–
	gfs
.
	g°©e
 =
FûeSt‹age
::
NAME_EXPECTED
 + FûeSt‹age::
INSIDE_MAP
 )

2910 
CV_Eº‹
–
CV_StsEº‹
, "NoÉlementÇame has been given" );

2911 
wrôe
–
fs
, fs.
ñ«me
, 
vÆue
 );

2912 if–
	gfs
.
	g°©e
 & 
	gFûeSt‹age
::
INSIDE_MAP
 )

2913 
fs
.
°©e
 = 
FûeSt‹age
::
NAME_EXPECTED
 + FûeSt‹age::
INSIDE_MAP
;

2914  
	gfs
;

2917 
CV_EXPORTS
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° 
	g°rög
& 
	g°r
);

2919 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, c⁄° * 
	g°r
)

2920 {  (
	gfs
 << 
°rög
(
°r
)); }

2922 
ölöe
 
	gFûeSt‹age
& 
	g›î©‹
 << (FûeSt‹age& 
	gfs
, * 
	gvÆue
)

2923 {  (
	gfs
 << 
°rög
(
vÆue
)); }

2925 
ölöe
 
	gFûeNode
::
	$FûeNode
(Ë: 
	`fs
(0), 
	$node
(0Ë{
	}
}

2926 
ölöe
 
	gFûeNode
::
	$FûeNode
(c⁄° 
CvFûeSt‹age
* 
_fs
, c⁄° 
CvFûeNode
* 
_node
)

2927 : 
	`fs
(
_fs
), 
	$node
(
_node
Ë{
	}
}

2929 
ölöe
 
	gFûeNode
::
	$FûeNode
(c⁄° 
FûeNode
& 
_node
Ë: 
	`fs
(_node.
fs
), 
	$node
(
_node
.
node
Ë{
	}
}

2931 
ölöe
 
	gFûeNode
::
	$ty≥
(Ëc⁄° {  !
node
 ? 
NONE
 : (node->
èg
 & 
TYPE_MASK
); 
	}
}

2932 
ölöe
 
boﬁ
 
	gFûeNode
::
	$em±y
(Ëc⁄° {  
node
 =0; 
	}
}

2933 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isN⁄e
(Ëc⁄° {  
	`ty≥
(Ë=
NONE
; 
	}
}

2934 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isSeq
(Ëc⁄° {  
	`ty≥
(Ë=
SEQ
; 
	}
}

2935 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isM≠
(Ëc⁄° {  
	`ty≥
(Ë=
MAP
; 
	}
}

2936 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isI¡
(Ëc⁄° {  
	`ty≥
(Ë=
INT
; 
	}
}

2937 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isRól
(Ëc⁄° {  
	`ty≥
(Ë=
REAL
; 
	}
}

2938 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isSåög
(Ëc⁄° {  
	`ty≥
(Ë=
STR
; 
	}
}

2939 
ölöe
 
boﬁ
 
	gFûeNode
::
	$isNamed
(Ëc⁄° {  !
node
 ? 
Ál£
 : (node->
èg
 & 
NAMED
Ë!0; 
	}
}

2940 
ölöe
 
size_t
 
	gFûeNode
::
	$size
() const

2942 
t
 = 
	`ty≥
();

2943  
t
 =
MAP
 ? (
size_t
)((
CvSë
*)
node
->
d©a
.
m≠
)->
a˘ive_cou¡
 :

2944 
t
 =
SEQ
 ? (
size_t
)
node
->
d©a
.
£q
->
tŸÆ
 : (size_t)!
	`isN⁄e
();

2945 
	}
}

2947 
ölöe
 
CvFûeNode
* 
	gFûeNode
::
›î©‹
 *(Ë{  (CvFûeNode*)
node
; }

2948 
ölöe
 c⁄° 
CvFûeNode
* 
	gFûeNode
::
›î©‹
* (Ëc⁄° {  
node
; }

2950 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2952 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2953 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë?Çode.node->
d©a
.
i
 :

2954 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë? 
	`cvRound
“ode.node->
d©a
.
f
) : 0x7fffffff;

2955 
	}
}

2957 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
boﬁ
& 
vÆue
, boﬁ 
deÁu…_vÆue
)

2959 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2960 
vÆue
 = 
ãmp
 != 0;

2961 
	}
}

2963 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
uch¨
& 
vÆue
, uch¨ 
deÁu…_vÆue
)

2965 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2966 
vÆue
 = 
ßtuøã_ˇ°
<
uch¨
>(
ãmp
);

2967 
	}
}

2969 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
sch¨
& 
vÆue
, sch¨ 
deÁu…_vÆue
)

2971 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2972 
vÆue
 = 
ßtuøã_ˇ°
<
sch¨
>(
ãmp
);

2973 
	}
}

2975 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
ush‹t
& 
vÆue
, ush‹à
deÁu…_vÆue
)

2977 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2978 
vÆue
 = 
ßtuøã_ˇ°
<
ush‹t
>(
ãmp
);

2979 
	}
}

2981 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2983 
ãmp
; 
	`ªad
(
node
,Åemp, ()
deÁu…_vÆue
);

2984 
vÆue
 = 
ßtuøã_ˇ°
<>(
ãmp
);

2985 
	}
}

2987 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2989 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2990 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
i
 :

2991 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
f
 : 1e30f;

2992 
	}
}

2994 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, & 
vÆue
, 
deÁu…_vÆue
)

2996 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 :

2997 
	`CV_NODE_IS_INT
(
node
.node->
èg
Ë? (Íode.node->
d©a
.
i
 :

2998 
	`CV_NODE_IS_REAL
(
node
.node->
èg
Ë?Çode.node->
d©a
.
f
 : 1e300;

2999 
	}
}

3001 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
°rög
& 
vÆue
, c⁄° såög& 
deÁu…_vÆue
)

3003 
vÆue
 = !
node
.nodê? 
deÁu…_vÆue
 : 
	`CV_NODE_IS_STRING
“ode.node->
èg
Ë? 
	`°rög
“ode.node->
d©a
.
°r
.
±r
) : string("");

3004 
	}
}

3006 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Poöt_
<
_Tp
>& 
vÆue
, c⁄° Poöt_<_Tp>& 
deÁu…_vÆue
)

3008 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3009 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Poöt_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3012 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Poöt3_
<
_Tp
>& 
vÆue
, c⁄° Poöt3_<_Tp>& 
deÁu…_vÆue
)

3014 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3015 
	gvÆue
 = 
ãmp
.
size
(Ë!3 ? 
deÁu…_vÆue
 : 
Poöt3_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3016 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]));

3019 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Size_
<
_Tp
>& 
vÆue
, c⁄° Size_<_Tp>& 
deÁu…_vÆue
)

3021 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3022 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Size_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3025 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Com∂ex
<
_Tp
>& 
vÆue
, c⁄° Com∂ex<_Tp>& 
deÁu…_vÆue
)

3027 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3028 
	gvÆue
 = 
ãmp
.
size
(Ë!2 ? 
deÁu…_vÆue
 : 
Com∂ex
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]));

3031 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Re˘_
<
_Tp
>& 
vÆue
, c⁄° Re˘_<_Tp>& 
deÁu…_vÆue
)

3033 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3034 
	gvÆue
 = 
ãmp
.
size
(Ë!4 ? 
deÁu…_vÆue
 : 
Re˘_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3035 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]), saturate_cast<_Tp>(temp[3]));

3038 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	g˙
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Vec
<
_Tp
, 
˙
>& 
vÆue
, c⁄° Vec<_Tp, cn>& 
deÁu…_vÆue
)

3040 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3041 
	gvÆue
 = 
ãmp
.
size
(Ë!
˙
 ? 
deÁu…_vÆue
 : 
Vec
<
_Tp
, 
	g˙
>(&
	gãmp
[0]);

3044 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
ªad
(c⁄° 
FûeNode
& 
node
, 
Sˇœr_
<
_Tp
>& 
vÆue
, c⁄° Sˇœr_<_Tp>& 
deÁu…_vÆue
)

3046 
	gve˘‹
<
	g_Tp
> 
	gãmp
; 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
(); it >>Åemp;

3047 
	gvÆue
 = 
ãmp
.
size
(Ë!4 ? 
deÁu…_vÆue
 : 
Sˇœr_
<
_Tp
>(
ßtuøã_ˇ°
<_Tp>—emp[0]), 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[1]),

3048 
	gßtuøã_ˇ°
<
	g_Tp
>(
	gãmp
[2]), saturate_cast<_Tp>(temp[3]));

3051 
ölöe
 
	$ªad
(c⁄° 
FûeNode
& 
node
, 
R™ge
& 
vÆue
, c⁄° R™ge& 
deÁu…_vÆue
)

3053 
Poöt2i
 
	`ãmp
(
vÆue
.
°¨t
, vÆue.
íd
); c⁄° Poöt2ò
deÁu…_ãmp
 = 
	`Poöt2i
(
deÁu…_vÆue
.start, default_value.end);

3054 
	`ªad
(
node
, 
ãmp
, 
deÁu…_ãmp
);

3055 
vÆue
.
°¨t
 = 
ãmp
.
x
; vÆue.
íd
 =Åemp.
y
;

3056 
	}
}

3058 
CV_EXPORTS_W
 
ªad
(c⁄° 
FûeNode
& 
node
, 
M©
& 
m©
, c⁄° M©& 
deÁu…_m©
=Mat() );

3059 
CV_EXPORTS
 
ªad
(c⁄° 
FûeNode
& 
node
, 
S∑r£M©
& 
m©
, c⁄° S∑r£M©& 
deÁu…_m©
=SparseMat() );

3061 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3063 
vÆue
;

3064 
	`ªad
(*
this
, 
vÆue
, 0);

3065  
vÆue
;

3066 
	}
}

3067 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3069 
vÆue
;

3070 
	`ªad
(*
this
, 
vÆue
, 0.f);

3071  
vÆue
;

3072 
	}
}

3073 
ölöe
 
	gFûeNode
::
›î©‹
 () const

3075 
vÆue
;

3076 
	`ªad
(*
this
, 
vÆue
, 0.);

3077  
vÆue
;

3078 
	}
}

3079 
ölöe
 
	gFûeNode
::
›î©‹
 
	$°rög
() const

3081 
°rög
 
vÆue
;

3082 
	`ªad
(*
this
, 
vÆue
, value);

3083  
vÆue
;

3084 
	}
}

3086 
ölöe
 
	gFûeNode
::
	$ªadRaw
–c⁄° 
°rög
& 
fmt
, 
uch¨
* 
vec
, 
size_t
 
Àn
 ) const

3088 
	`begö
().
	`ªadRaw
–
fmt
, 
vec
, 
Àn
 );

3089 
	}
}

3091 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gnumÊag
> cœs†
	cVecRódîProxy


3093 
	gpublic
:

3094 
VecRódîProxy
–
FûeNodeIãøt‹
* 
_ô
 ) : 
ô
(_it) {}

3095 
›î©‹
()(
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
	gcou¡
) const

3097 
	gcou¡
 = 
°d
::
mö
(
cou¡
, 
ô
->
ªmaöög
);

3098 
	gvec
.
ªsize
(
cou¡
);

3099  
size_t
 
	gi
 = 0; i < 
	gcou¡
; i++, ++(*
	gô
) )

3100 
ªad
(**
ô
, 
vec
[
i
], 
_Tp
());

3102 
FûeNodeIãøt‹
* 
	gô
;

3105 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
˛ass
 
	gVecRódîProxy
<_Tp,1>

3107 
	gpublic
:

3108 
VecRódîProxy
–
FûeNodeIãøt‹
* 
_ô
 ) : 
ô
(_it) {}

3109 
›î©‹
()(
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
	gcou¡
) const

3111 
size_t
 
	gªmaöög
 = 
ô
->
ªmaöög
, 
	g˙
 = 
D©aTy≥
<
_Tp
>::
ch™√ls
;

3112 
	g_fmt
 = 
D©aTy≥
<
_Tp
>::
fmt
;

3113 
	gfmt
[] = { ()((
_fmt
>>8)+'1'), ()_fmt, '\0' };

3114 
size_t
 
	gªmaöög1
 = 
ªmaöög
/
˙
;

3115 
	gcou¡
 = 
cou¡
 < 
ªmaöög1
 ? count :Ñemaining1;

3116 
	gvec
.
ªsize
(
cou¡
);

3117 
	gô
->
ªadRaw
–
°rög
(
fmt
), !
vec
.
em±y
(Ë? (
uch¨
*)&vec[0] : 0, 
cou¡
*(
_Tp
) );

3119 
FûeNodeIãøt‹
* 
	gô
;

3122 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

3123 
ªad
–
FûeNodeIãøt‹
& 
ô
, 
ve˘‹
<
_Tp
>& 
vec
, 
size_t
 
maxCou¡
=(size_t)
INT_MAX
 )

3125 
VecRódîProxy
<
_Tp
, 
D©aTy≥
<_Tp>::
fmt
 !0> 
r
(&
ô
);

3126 
r
(
vec
, 
maxCou¡
);

3129 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 

3130 
ªad
–c⁄° 
FûeNode
& 
node
, 
ve˘‹
<
_Tp
>& 
vec
, c⁄° ve˘‹<_Tp>& 
deÁu…_vÆue
=vector<_Tp>() )

3132 if(!
node
.node)

3133 
vec
 = 
deÁu…_vÆue
;

3136 
FûeNodeIãøt‹
 
	gô
 = 
node
.
begö
();

3137 
ªad
–
ô
, 
vec
 );

3141 
ölöe
 
FûeNodeIãøt‹
 
	gFûeNode
::
	$begö
() const

3143  
	`FûeNodeIãøt‹
(
fs
, 
node
);

3144 
	}
}

3146 
ölöe
 
FûeNodeIãøt‹
 
	gFûeNode
::
	$íd
() const

3148  
	`FûeNodeIãøt‹
(
fs
, 
node
, 
	`size
());

3149 
	}
}

3151 
ölöe
 
FûeNode
 
	gFûeNodeIãøt‹
::
›î©‹
 *() const

3152 {  
FûeNode
(
fs
, (c⁄° 
CvFûeNode
*)(*)
ªadî
.
±r
); }

3154 
ölöe
 
FûeNode
 
	gFûeNodeIãøt‹
::
›î©‹
 ->() const

3155 {  
FûeNode
(
fs
, (c⁄° 
CvFûeNode
*)(*)
ªadî
.
±r
); }

3157 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gFûeNodeIãøt‹
& 
	g›î©‹
 >> (FûeNodeIãøt‹& 
	gô
, _Tp& 
	gvÆue
)

3158 { 
ªad
–*
ô
, 
vÆue
, 
_Tp
());  ++
	gô
; }

3160 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe


3161 
	gFûeNodeIãøt‹
& 
	g›î©‹
 >> (FûeNodeIãøt‹& 
	gô
, 
	gve˘‹
<
	g_Tp
>& 
	gvec
)

3163 
	gVecRódîProxy
<
	g_Tp
, 
	gD©aTy≥
<_Tp>::
fmt
 !0> 
r
(&
ô
);

3164 
r
(
vec
, (
size_t
)
INT_MAX
);

3165  
	gô
;

3168 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g›î©‹
 >> (c⁄° 
	gFûeNode
& 
	gn
, _Tp& 
	gvÆue
)

3169 { 
ªad
–
n
, 
vÆue
, 
_Tp
()); }

3171 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g›î©‹
 >> (c⁄° 
	gFûeNode
& 
	gn
, 
	gve˘‹
<_Tp>& 
	gvec
)

3172 { 
FûeNodeIãøt‹
 
	gô
 = 
n
.
begö
(); ià>> 
	gvec
; }

3174 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
FûeNodeIãøt‹
& 
ô1
, c⁄° 
	gFûeNodeIãøt‹
& 
	gô2
)

3176  
	gô1
.
	gfs
 =
ô2
.
fs
 && 
ô1
.
c⁄èöî
 == it2.container &&

3177 
ô1
.
ªadî
.
±r
 =
ô2
.ªadî.±∏&& it1.
ªmaöög
 == it2.remaining;

3180 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
FûeNodeIãøt‹
& 
ô1
, c⁄° 
	gFûeNodeIãøt‹
& 
	gô2
)

3182  !(
	gô1
 =
ô2
);

3185 
ölöe
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gFûeNodeIãøt‹
& 
	gô1
, c⁄° FûeNodeIãøt‹& 
	gô2
)

3187  
	gô2
.
	gªmaöög
 - 
	gô1
.remaining;

3190 
ölöe
 
boﬁ
 
	g›î©‹
 < (c⁄° 
	gFûeNodeIãøt‹
& 
	gô1
, c⁄° FûeNodeIãøt‹& 
	gô2
)

3192  
	gô1
.
	gªmaöög
 > 
	gô2
.remaining;

3195 
ölöe
 
FûeNode
 
	gFûeSt‹age
::
	$gëFú°T›LevñNode
() const

3197 
FûeNode
 
r
 = 
	`roŸ
();

3198 
FûeNodeIãøt‹
 
ô
 = 
r
.
	`begö
();

3199  
ô
 !
r
.
	`íd
(Ë? *ô : 
	`FûeNode
();

3200 
	}
}

3204 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
_Tp
 
	$gcd
(
_Tp
 
a
, _T∞
b
)

3206 if–
a
 < 
b
 )

3207 
°d
::
	`sw≠
(
a
, 
b
);

3208  
b
 > 0 )

3210 
_Tp
 
r
 = 
a
 % 
b
;

3211 
a
 = 
b
;

3212 
b
 = 
r
;

3214  
a
;

3215 
	}
}

3257 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
˛ass
 
	g_LT
> 
s‹t
–
ve˘‹
<
_Tp
>& 
vec
, 
_LT
 
LT
=
	$_LT
() )

3259 
is‹t_thªsh
 = 7;

3260 
•
 = 0;

3264 
_Tp
 *
lb
;

3265 
_Tp
 *
ub
;

3266 } 
°ack
[48];

3268 
size_t
 
tŸÆ
 = 
vec
.
	`size
();

3270 if–
tŸÆ
 <= 1 )

3273 
_Tp
* 
¨r
 = &
vec
[0];

3274 
°ack
[0].
lb
 = 
¨r
;

3275 
°ack
[0].
ub
 = 
¨r
 + (
tŸÆ
 - 1);

3277  
•
 >= 0 )

3279 
_Tp
* 
À·
 = 
°ack
[
•
].
lb
;

3280 
_Tp
* 
right
 = 
°ack
[
•
--].
ub
;

3284 
i
, 
n
 = ()(
right
 - 
À·
Ë+ 1, 
m
;

3285 
_Tp
* 
±r
;

3286 
_Tp
* 
±r2
;

3288 if–
n
 <
is‹t_thªsh
 )

3290 
ö£π_s‹t
:

3291  
±r
 = 
À·
 + 1;Öå <
right
;Ötr++ )

3293  
±r2
 = 
±r
;Öå2 > 
À·
 && 
	`LT
(ptr2[0],ptr2[-1]);Ötr2--)

3294 
°d
::
	`sw≠
–
±r2
[0],Ötr2[-1] );

3300 
_Tp
* 
À·0
;

3301 
_Tp
* 
À·1
;

3302 
_Tp
* 
right0
;

3303 
_Tp
* 
right1
;

3304 
_Tp
* 
pivŸ
;

3305 
_Tp
* 
a
;

3306 
_Tp
* 
b
;

3307 
_Tp
* 
c
;

3308 
sw≠_˙t
 = 0;

3310 
À·0
 = 
À·
;

3311 
right0
 = 
right
;

3312 
pivŸ
 = 
À·
 + (
n
/2);

3314 if–
n
 > 40 )

3316 
d
 = 
n
 / 8;

3317 
a
 = 
À·
, 
b
 =Üe· + 
d
, 
c
 =Üeft + 2*d;

3318 
À·
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3319 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3321 
a
 = 
pivŸ
 - 
d
, 
b
 =ÖivŸ, 
c
 =Öivot + d;

3322 
pivŸ
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3323 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3325 
a
 = 
right
 - 2*
d
, 
b
 =Ñighà- d, 
c
 =Ñight;

3326 
right
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3327 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3330 
a
 = 
À·
, 
b
 = 
pivŸ
, 
c
 = 
right
;

3331 
pivŸ
 = 
	`LT
(*
a
, *
b
Ë? (LT(*b, *
c
) ? b : (LT(*a, *c) ? c :á))

3332 : (
	`LT
(*
c
, *
b
Ë? b : (LT(*
a
, *c) ?á : c));

3333 if–
pivŸ
 !
À·0
 )

3335 
°d
::
	`sw≠
–*
pivŸ
, *
À·0
 );

3336 
pivŸ
 = 
À·0
;

3338 
À·
 = 
À·1
 = 
À·0
 + 1;

3339 
right
 = 
right1
 = 
right0
;

3343  
À·
 <
right
 && !
	`LT
(*
pivŸ
, *left) )

3345 if–!
	`LT
(*
À·
, *
pivŸ
) )

3347 if–
À·
 > 
À·1
 )

3348 
°d
::
	`sw≠
–*
À·1
, *
À·
 );

3349 
sw≠_˙t
 = 1;

3350 
À·1
++;

3352 
À·
++;

3355  
À·
 <
right
 && !
	`LT
(*right, *
pivŸ
) )

3357 if–!
	`LT
(*
pivŸ
, *
right
) )

3359 if–
right
 < 
right1
 )

3360 
°d
::
	`sw≠
–*
right1
, *
right
 );

3361 
sw≠_˙t
 = 1;

3362 
right1
--;

3364 
right
--;

3367 if–
À·
 > 
right
 )

3369 
°d
::
	`sw≠
–*
À·
, *
right
 );

3370 
sw≠_˙t
 = 1;

3371 
À·
++;

3372 
right
--;

3375 if–
sw≠_˙t
 == 0 )

3377 
À·
 = 
À·0
, 
right
 = 
right0
;

3378 
ö£π_s‹t
;

3381 
n
 = 
°d
::
	`mö
–()(
À·1
 - 
À·0
), ()(
À·
 -Üeft1) );

3382  
i
 = 0; i < 
n
; i++ )

3383 
°d
::
	`sw≠
–
À·0
[
i
], 
À·
[i-
n
] );

3385 
n
 = 
°d
::
	`mö
–()(
right0
 - 
right1
), ()‘ight1 - 
right
) );

3386  
i
 = 0; i < 
n
; i++ )

3387 
°d
::
	`sw≠
–
À·
[
i
], 
right0
[i-
n
+1] );

3388 
n
 = ()(
À·
 - 
À·1
);

3389 
m
 = ()(
right1
 - 
right
);

3390 if–
n
 > 1 )

3392 if–
m
 > 1 )

3394 if–
n
 > 
m
 )

3396 
°ack
[++
•
].
lb
 = 
À·0
;

3397 
°ack
[
•
].
ub
 = 
À·0
 + 
n
 - 1;

3398 
À·
 = 
right0
 - 
m
 + 1, 
right
 =Ñight0;

3402 
°ack
[++
•
].
lb
 = 
right0
 - 
m
 + 1;

3403 
°ack
[
•
].
ub
 = 
right0
;

3404 
À·
 = 
À·0
, 
right
 =Üe·0 + 
n
 - 1;

3408 
À·
 = 
À·0
, 
right
 =Üe·0 + 
n
 - 1;

3410 if–
m
 > 1 )

3411 
À·
 = 
right0
 - 
m
 + 1, 
right
 =Ñight0;

3417 
	}
}

3419 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cLessTh™


3421 
	gpublic
:

3422 
boﬁ
 
›î©‹
()(c⁄° 
_Tp
& 
a
, c⁄° 
	g_Tp
& 
	gb
Ëc⁄° {  
	ga
 < b; }

3425 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cGª©îEq


3427 
	gpublic
:

3428 
boﬁ
 
›î©‹
()(c⁄° 
_Tp
& 
a
, c⁄° 
	g_Tp
& 
	gb
Ëc⁄° {  
	ga
 >
b
; }

3431 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cLessTh™Idx


3433 
	gpublic
:

3434 
LessTh™Idx
–c⁄° 
_Tp
* 
_¨r
 ) : 
¨r
(_arr) {}

3435 
boﬁ
 
›î©‹
()(
a
, 
	gb
Ëc⁄° {  
	g¨r
[a] <áº[
b
]; }

3436 c⁄° 
_Tp
* 
	g¨r
;

3439 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> cœs†
	cGª©îEqIdx


3441 
	gpublic
:

3442 
Gª©îEqIdx
–c⁄° 
_Tp
* 
_¨r
 ) : 
¨r
(_arr) {}

3443 
boﬁ
 
›î©‹
()(
a
, 
	gb
Ëc⁄° {  
	g¨r
[a] >
¨r
[
b
]; }

3444 c⁄° 
_Tp
* 
	g¨r
;

3454 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
˛ass
 
	g_EqPªdiˇã
> 

3455 
∑πôi⁄
–c⁄° 
ve˘‹
<
_Tp
>& 
_vec
, ve˘‹<>& 
œbñs
,

3456 
_EqPªdiˇã
 
¥ediˇã
=
	$_EqPªdiˇã
())

3458 
i
, 
j
, 
N
 = ()
_vec
.
	`size
();

3459 c⁄° 
_Tp
* 
vec
 = &
_vec
[0];

3461 c⁄° 
PARENT
=0;

3462 c⁄° 
RANK
=1;

3464 
ve˘‹
<> 
	`_nodes
(
N
*2);

3465 (*
nodes
)[2] = ((*)[2])&
_nodes
[0];

3468 
i
 = 0; i < 
N
; i++)

3470 
nodes
[
i
][
PARENT
]=-1;

3471 
nodes
[
i
][
RANK
] = 0;

3475  
i
 = 0; i < 
N
; i++ )

3477 
roŸ
 = 
i
;

3480  
nodes
[
roŸ
][
PARENT
] >= 0 )

3481 
roŸ
 = 
nodes
[roŸ][
PARENT
];

3483  
j
 = 0; j < 
N
; j++ )

3485 if–
i
 =
j
 || !
	`¥ediˇã
(
vec
[i], vec[j]))

3487 
roŸ2
 = 
j
;

3489  
nodes
[
roŸ2
][
PARENT
] >= 0 )

3490 
roŸ2
 = 
nodes
[roŸ2][
PARENT
];

3492 if–
roŸ2
 !
roŸ
 )

3495 
ønk
 = 
nodes
[
roŸ
][
RANK
], 
ønk2
 =Çodes[
roŸ2
][RANK];

3496 if–
ønk
 > 
ønk2
 )

3497 
nodes
[
roŸ2
][
PARENT
] = 
roŸ
;

3500 
nodes
[
roŸ
][
PARENT
] = 
roŸ2
;

3501 
nodes
[
roŸ2
][
RANK
] +
ønk
 =
ønk2
;

3502 
roŸ
 = 
roŸ2
;

3504 
	`as£π
–
nodes
[
roŸ
][
PARENT
] < 0 );

3506 
k
 = 
j
, 
∑ª¡
;

3509  (
∑ª¡
 = 
nodes
[
k
][
PARENT
]) >= 0 )

3511 
nodes
[
k
][
PARENT
] = 
roŸ
;

3512 
k
 = 
∑ª¡
;

3516 
k
 = 
i
;

3517  (
∑ª¡
 = 
nodes
[
k
][
PARENT
]) >= 0 )

3519 
nodes
[
k
][
PARENT
] = 
roŸ
;

3520 
k
 = 
∑ª¡
;

3527 
œbñs
.
	`ªsize
(
N
);

3528 
n˛as£s
 = 0;

3530  
i
 = 0; i < 
N
; i++ )

3532 
roŸ
 = 
i
;

3533  
nodes
[
roŸ
][
PARENT
] >= 0 )

3534 
roŸ
 = 
nodes
[roŸ][
PARENT
];

3536 if–
nodes
[
roŸ
][
RANK
] >= 0 )

3537 
nodes
[
roŸ
][
RANK
] = ~
n˛as£s
++;

3538 
œbñs
[
i
] = ~
nodes
[
roŸ
][
RANK
];

3541  
n˛as£s
;

3542 
	}
}

3548 
CV_EXPORTS
 
sch¨
* 
£qPush
–
CvSeq
* 
£q
, c⁄° * 
ñemít
=0);

3549 
CV_EXPORTS
 
sch¨
* 
£qPushFr⁄t
–
CvSeq
* 
£q
, c⁄° * 
ñemít
=0);

3550 
CV_EXPORTS
 
£qP›
–
CvSeq
* 
£q
, * 
ñemít
=0);

3551 
CV_EXPORTS
 
£qP›Fr⁄t
–
CvSeq
* 
£q
, * 
ñemít
=0);

3552 
CV_EXPORTS
 
£qP›Mu…i
–
CvSeq
* 
£q
, * 
ñemíts
,

3553 
cou¡
, 
ö_‰⁄t
=0 );

3554 
CV_EXPORTS
 
£qRemove
–
CvSeq
* 
£q
, 
ödex
 );

3555 
CV_EXPORTS
 
˛órSeq
–
CvSeq
* 
£q
 );

3556 
CV_EXPORTS
 
sch¨
* 
gëSeqEÀm
–c⁄° 
CvSeq
* 
£q
, 
ödex
 );

3557 
CV_EXPORTS
 
£qRemoveSli˚
–
CvSeq
* 
£q
, 
CvSli˚
 
¶i˚
 );

3558 
CV_EXPORTS
 
£qIn£πSli˚
–
CvSeq
* 
£q
, 
bef‹e_ödex
, c⁄° 
CvAº
* 
‰om_¨r
 );

3560 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$Seq
(Ë: 
	$£q
(0Ë{
	}
}

3561 
ãm∂©e
<
ty≥«me
 
_Tp
> 
ölöe
 
Seq
<_Tp>::
	$Seq
–c⁄° 
CvSeq
* 
_£q
 ) : 
	`£q
((CvSeq*)_seq)

3563 
	`CV_As£π
(!
_£q
 || _£q->
ñem_size
 =(
_Tp
));

3564 
	}
}

3566 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$Seq
–
MemSt‹age
& 
°‹age
,

3567 
hódîSize
 )

3569 
	`CV_As£π
(
hódîSize
 >()(
CvSeq
));

3570 
£q
 = 
	`cvCª©eSeq
(
D©aTy≥
<
_Tp
>::
ty≥
, 
hódîSize
, (_Tp), 
°‹age
);

3571 
	}
}

3573 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
›î©‹
 [](
idx
)

3574 {  *(
_Tp
*)
gëSeqEÀm
(
£q
, 
idx
); }

3576 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
›î©‹
 [](
idx
) const

3577 {  *(
_Tp
*)
gëSeqEÀm
(
£q
, 
idx
); }

3579 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> 
	gSeq
<_Tp>::
	$begö
() const

3580 {  
SeqIãøt‹
<
_Tp
>(*
this
); 
	}
}

3582 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> 
	gSeq
<_Tp>::
	$íd
() const

3583 {  
SeqIãøt‹
<
_Tp
>(*
this
, 
åue
); 
	}
}

3585 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$size
() const

3586 {  
£q
 ? seq->
tŸÆ
 : 0; 
	}
}

3588 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ty≥
() const

3589 {  
£q
 ? 
	`CV_MAT_TYPE
(£q->
Êags
Ë: 0; 
	}
}

3591 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$dïth
() const

3592 {  
£q
 ? 
	`CV_MAT_DEPTH
(£q->
Êags
Ë: 0; 
	}
}

3594 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ch™√ls
() const

3595 {  
£q
 ? 
	`CV_MAT_CN
(£q->
Êags
Ë: 0; 
	}
}

3597 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$ñemSize
() const

3598 {  
£q
 ? seq->
ñem_size
 : 0; 
	}
}

3600 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeq
<_Tp>::
	$ödex
(c⁄° 
_Tp
& 
ñem
) const

3601 {  
	`cvSeqEÀmIdx
(
£q
, &
ñem
); 
	}
}

3603 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_back
(c⁄° 
_Tp
& 
ñem
)

3604 { 
	`cvSeqPush
(
£q
, &
ñem
); 
	}
}

3606 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_‰⁄t
(c⁄° 
_Tp
& 
ñem
)

3607 { 
	`cvSeqPushFr⁄t
(
£q
, &
ñem
); 
	}
}

3609 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_back
(c⁄° 
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3610 { 
	`cvSeqPushMu…i
(
£q
, 
ñem
, ()
cou¡
, 0); 
	}
}

3612 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$push_‰⁄t
(c⁄° 
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3613 { 
	`cvSeqPushMu…i
(
£q
, 
ñem
, ()
cou¡
, 1); 
	}
}

3615 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
	$back
()

3616 {  *(
_Tp
*)
	`gëSeqEÀm
(
£q
, -1); 
	}
}

3618 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
	$back
() const

3619 {  *(c⁄° 
_Tp
*)
	`gëSeqEÀm
(
£q
, -1); 
	}
}

3621 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeq
<_Tp>::
	$‰⁄t
()

3622 {  *(
_Tp
*)
	`gëSeqEÀm
(
£q
, 0); 
	}
}

3624 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeq
<_Tp>::
	$‰⁄t
() const

3625 {  *(c⁄° 
_Tp
*)
	`gëSeqEÀm
(
£q
, 0); 
	}
}

3627 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	gSeq
<_Tp>::
	$em±y
() const

3628 {  !
£q
 || seq->
tŸÆ
 =0; 
	}
}

3630 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$˛ór
()

3631 { if(
£q
Ë
	`˛órSeq
(£q); 
	}
}

3633 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_back
()

3634 { 
	`£qP›
(
£q
); 
	}
}

3636 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_‰⁄t
()

3637 { 
	`£qP›Fr⁄t
(
£q
); 
	}
}

3639 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_back
(
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3640 { 
	`£qP›Mu…i
(
£q
, 
ñem
, ()
cou¡
, 0); 
	}
}

3642 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$p›_‰⁄t
(
_Tp
* 
ñem
, 
size_t
 
cou¡
)

3643 { 
	`£qP›Mu…i
(
£q
, 
ñem
, ()
cou¡
, 1); 
	}
}

3645 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ö£π
(
idx
, c⁄° 
_Tp
& 
ñem
)

3646 { 
	`£qIn£π
(
£q
, 
idx
, &
ñem
); 
	}
}

3648 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ö£π
(
idx
, c⁄° 
_Tp
* 
ñems
, 
size_t
 
cou¡
)

3650 
CvM©
 
m
 = 
	`cvM©
(1, 
cou¡
, 
D©aTy≥
<
_Tp
>::
ty≥
, 
ñems
);

3651 
	`£qIn£πSli˚
(
£q
, 
idx
, &
m
);

3652 
	}
}

3654 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ªmove
(
idx
)

3655 { 
	`£qRemove
(
£q
, 
idx
); 
	}
}

3657 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
	$ªmove
(c⁄° 
R™ge
& 
r
)

3658 { 
	`£qRemoveSli˚
(
£q
, 
r
); 
	}
}

3660 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
c›yTo
(
ve˘‹
<
_Tp
>& 
vec
, c⁄° 
R™ge
& 
ønge
) const

3662 
size_t
 
	gÀn
 = !
£q
 ? 0 : 
ønge
 =
R™ge
::
Æl
(Ë? seq->
tŸÆ
 :Ñ™ge.
íd
 -Ñ™ge.
°¨t
;

3663 
	gvec
.
ªsize
(
Àn
);

3664 if–
	g£q
 && 
	gÀn
 )

3665 
cvCvtSeqToAºay
(
£q
, &
vec
[0], 
ønge
);

3668 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeq
<_Tp>::
›î©‹
 
ve˘‹
<
_Tp
>() const

3670 
ve˘‹
<
_Tp
> 
vec
;

3671 
c›yTo
(
vec
);

3672  
	gvec
;

3675 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
	$SeqIãøt‹
()

3676 { 
	`mem£t
(
this
, 0, (*this)); 
	}
}

3678 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
SeqIãøt‹
(c⁄° 
Seq
<
_Tp
>& 
_£q
, 
boﬁ
 
£ekEnd
)

3680 
cvSèπRódSeq
(
_£q
.
£q
, 
this
);

3681 
	gödex
 = 
£ekEnd
 ? 
_£q
.
£q
->
tŸÆ
 : 0;

3684 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>::
	$£ek
(
size_t
 
pos
)

3686 
	`cvSëSeqRódîPos
(
this
, ()
pos
, 
Ál£
);

3687 
ödex
 = 
pos
;

3688 
	}
}

3690 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
size_t
 
	gSeqIãøt‹
<_Tp>::
	$ãŒ
() const

3691 {  
ödex
; 
	}
}

3693 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 _Tp& 
	gSeqIãøt‹
<_Tp>::
›î©‹
 *()

3694 {  *(
_Tp
*)
±r
; }

3696 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 c⁄° _Tp& 
	gSeqIãøt‹
<_Tp>::
›î©‹
 *() const

3697 {  *(c⁄° 
_Tp
*)
±r
; }

3699 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 ++()

3701 
CV_NEXT_SEQ_ELEM
((
_Tp
), *
this
);

3702 if–++
	gödex
 >
£q
->
tŸÆ
*2 )

3703 
ödex
 = 0;

3704  *
	gthis
;

3707 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> SeqIãøt‹<_Tp>::
›î©‹
 ++() const

3709 
SeqIãøt‹
<
_Tp
> 
ô
 = *
this
;

3710 ++*
	gthis
;

3711  
	gô
;

3714 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 --()

3716 
CV_PREV_SEQ_ELEM
((
_Tp
), *
this
);

3717 if–--
	gödex
 < 0 )

3718 
	gödex
 = 
£q
->
tŸÆ
*2-1;

3719  *
	gthis
;

3722 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp> SeqIãøt‹<_Tp>::
›î©‹
 --() const

3724 
SeqIãøt‹
<
_Tp
> 
ô
 = *
this
;

3725 --*
	gthis
;

3726  
	gô
;

3729 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 +=(
dñè
)

3731 
cvSëSeqRódîPos
(
this
, 
dñè
, 1);

3732 
	gödex
 +
dñè
;

3733 
	gn
 = 
£q
->
tŸÆ
*2;

3734 if–
	gödex
 < 0 )

3735 
	gödex
 +
n
;

3736 if–
	gödex
 >
n
 )

3737 
ödex
 -
n
;

3738  *
	gthis
;

3741 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gSeqIãøt‹
<_Tp>& SeqIãøt‹<_Tp>::
›î©‹
 -=(
dñè
)

3743  (*
this
 +-
dñè
);

3746 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
±rdiff_t
 
	g›î©‹
 - (c⁄° 
	gSeqIãøt‹
<_Tp>& 
	ga
,

3747 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3749 
±rdiff_t
 
	gdñè
 = 
a
.
ödex
 - 
b
.ödex, 
	gn
 =á.
£q
->
tŸÆ
;

3750 if–
	g°d
::
abs
(
°©ic_ˇ°
<>(
dñè
)Ë> 
n
 )

3751 
dñè
 +dñè < 0 ? 
n
 : -n;

3752  
	gdñè
;

3755 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 =(c⁄° 
SeqIãøt‹
<
_Tp
>& 
a
,

3756 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3758  
	ga
.
	g£q
 =
b
.
£q
 && 
a
.
ödex
 == b.index;

3761 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
boﬁ
 
	g›î©‹
 !(c⁄° 
SeqIãøt‹
<
_Tp
>& 
a
,

3762 c⁄° 
	gSeqIãøt‹
<
	g_Tp
>& 
	gb
)

3764  !(
	ga
 =
b
);

3768 
	gãm∂©e
<
ty≥«me
 
	g_ClsName
> 
	sRTTIIm∂


3770 
	gpublic
:

3771 
isIn°™˚
(c⁄° * 
±r
)

3773 
_ClsName
 
dummy
;

3774 * 
	gdummyp
 = &
dummy
;

3777 c⁄° * 
	gp
;

3778 c⁄° ** 
	gµ
;

3779 } 
	ga
, 
	gb
;

3780 
	ga
.
	gp
 = 
dummyp
;

3781 
	gb
.
	gp
 = 
±r
;

3782  *
	ga
.
	gµ
 =*
b
.
µ
;

3784 
ªÀa£
(** 
db±r
)

3786 if(
	gdb±r
 && *dbptr)

3788 
dñëe
 (
_ClsName
*)*
	gdb±r
;

3789 *
	gdb±r
 = 0;

3792 * 
ªad
(
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
n
)

3794 
FûeNode
 
‚
(
fs
, 
n
);

3795 
_ClsName
* 
	gobj
 = 
√w
 _ClsName;

3796 if(
	gobj
->
ªad
(
‚
))

3797  
	gobj
;

3798 
dñëe
 
	gobj
;

3802 
wrôe
(
CvFûeSt‹age
* 
_fs
, c⁄° * 
«me
, c⁄° * 
±r
, 
CvAârLi°
)

3804 if(
	g±r
 && 
	g_fs
)

3806 
FûeSt‹age
 
fs
(
_fs
);

3807 
	gfs
.fs.
addªf
();

3808 ((c⁄° 
	g_ClsName
*)
	g±r
)->
wrôe
(
fs
, 
°rög
(
«me
));

3812 * 
˛⁄e
(c⁄° * 
±r
)

3814 if(!
	g±r
)

3816  
√w
 
_ClsName
(*(c⁄° _ClsName*)
±r
);

3821 ˛as†
	cCV_EXPORTS
 
	gF‹m©ãr


3823 
	gpublic
:

3824 
vútuÆ
 ~
F‹m©ãr
() {}

3825 
vútuÆ
 
wrôe
(
°d
::
o°ªam
& 
out
, c⁄° 
M©
& 
m
, c⁄° * 
∑øms
=0, 
≈¨ams
=0) const = 0;

3826 
vútuÆ
 
wrôe
(
°d
::
o°ªam
& 
out
, c⁄° * 
d©a
, 
√Àms
, 
ty≥
,

3827 c⁄° * 
∑øms
=0, 
≈¨ams
=0) const = 0;

3828 c⁄° 
F‹m©ãr
* 
gë
(c⁄° * 
fmt
="");

3829 c⁄° 
F‹m©ãr
* 
£tDeÁu…
(c⁄° F‹m©ãr* 
fmt
);

3833 
CV_EXPORTS
 
	gF‹m©ãd


3835 
F‹m©ãd
(c⁄° 
M©
& 
m
, c⁄° 
F‹m©ãr
* 
fmt
,

3836 c⁄° 
ve˘‹
<>& 
∑øms
);

3837 
F‹m©ãd
(c⁄° 
M©
& 
m
, c⁄° 
F‹m©ãr
* 
fmt
,

3838 c⁄° * 
∑øms
=0);

3839 
M©
 
	gmtx
;

3840 c⁄° 
F‹m©ãr
* 
	gfmt
;

3841 
	gve˘‹
<> 
	g∑øms
;

3844 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
M©
& 
mtx
, c⁄° * 
fmt
,

3845 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3847  
F‹m©ãd
(
mtx
, 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3850 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
ve˘‹
<
Poöt_
<
_Tp
> >& 
vec
,

3851 c⁄° * 
fmt
, c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3853  
F‹m©ãd
(
M©
(
vec
), 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3856 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
F‹m©ãd
 
f‹m©
(c⁄° 
ve˘‹
<
Poöt3_
<
_Tp
> >& 
vec
,

3857 c⁄° * 
fmt
, c⁄° 
ve˘‹
<>& 
∑øms
=vector<>())

3859  
F‹m©ãd
(
M©
(
vec
), 
F‹m©ãr
::
gë
(
fmt
), 
∑øms
);

3869 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
, c⁄° 
	gM©
& 
	gmtx
)

3871 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
mtx
);

3872  
	gout
;

3882 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
, c⁄° 
	gF‹m©ãd
& 
	gfmtd
)

3884 
	gfmtd
.
	gfmt
->
wrôe
(
out
, 
fmtd
.
mtx
);

3885  
	gout
;

3889 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
,

3890 c⁄° 
	gve˘‹
<
	gPoöt_
<
	g_Tp
> >& 
	gvec
)

3892 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
M©
(
vec
));

3893  
	gout
;

3897 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
 << (
°d
::o°ªam& 
out
,

3898 c⁄° 
	gve˘‹
<
	gPoöt3_
<
	g_Tp
> >& 
	gvec
)

3900 
	gF‹m©ãr
::
gë
()->
wrôe
(
out
, 
M©
(
vec
));

3901  
	gout
;

3907 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gm
, 
	gn
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gM©x
<_Tp, m,Ç>& 
	gm©x
)

3909 
	gout
 << 
	gcv
::
M©
(
m©x
);

3910  
	gout
;

3915 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gPoöt_
<_Tp>& 
	gp
)

3917 
	gout
 << "[" << 
	gp
.
	gx
 << ", " <<Ö.
	gy
 << "]";

3918  
	gout
;

3923 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gPoöt3_
<_Tp>& 
	gp
)

3925 
	gout
 << "[" << 
	gp
.
	gx
 << ", " <<Ö.
	gy
 << ", " <<Ö.
	gz
 << "]";

3926  
	gout
;

3931 
	gãm∂©e
<
ty≥«me
 
	g_Tp
, 
	gn
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gVec
<_Tp,Ç>& 
	gvec
)

3933 
	gout
 << "[";

3935 if(
	gVec
<
	g_Tp
, 
	gn
>::
dïth
 < 
CV_32F
)

3937 
i
 = 0; 
	gi
 < 
	gn
 - 1; ++i) {

3938 
	gout
 << ()
	gvec
[
i
] << ", ";

3940 
	gout
 << ()
	gvec
[
n
-1] << "]";

3944 
	gi
 = 0; i < 
	gn
 - 1; ++i) {

3945 
	gout
 << 
	gvec
[
i
] << ", ";

3947 
	gout
 << 
	gvec
[
n
-1] << "]";

3950  
	gout
;

3955 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gSize_
<_Tp>& 
	gsize
)

3957 
	gout
 << "[" << 
	gsize
.
	gwidth
 << " x " << size.
	gheight
 << "]";

3958  
	gout
;

3963 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
out
, c⁄° 
	gRe˘_
<_Tp>& 
	gª˘
)

3965 
	gout
 << "[" << 
	gª˘
.
	gwidth
 << " x " <<Ñe˘.
	gheight
 << " from (" <<Ñe˘.
	gx
 << ", " <<Ñe˘.
	gy
 << ")]";

3966  
	gout
;

3970 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gPå
<_Tp> 
	gAlg‹ôhm
::
	$¸óã
(c⁄° 
°rög
& 
«me
)

3972  
	`_¸óã
(
«me
).
±r
<
_Tp
>();

3973 
	}
}

3975 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3976 
ölöe
 
	gAlg‹ôhm
::
£t
(c⁄° * 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3978 
	gPå
<
	gAlg‹ôhm
> 
	gÆgo_±r
 = 
vÆue
. 
ãm∂©e
 
±r
<
cv
::
Alg‹ôhm
>();

3979 i‡(
	gÆgo_±r
.
em±y
()) {

3980 
CV_Eº‹
–
CV_StsUnsuµ‹ãdF‹m©
, "unknown/unsupported PtrÅype ofÅhe secondÖarameter ofÅhe method Algorithm::set");

3982 
öfo
()->
£t
(
this
, 
_«me
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
Ægo_±r
);

3985 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3986 
ölöe
 
	gAlg‹ôhm
::
£t
(c⁄° 
°rög
& 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3988 
	gthis
->
	g£t
<
	g_Tp
>(
	g_«me
.
c_°r
(), 
	gvÆue
);

3991 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

3992 
ölöe
 
	gAlg‹ôhm
::
£tAlg‹ôhm
(c⁄° * 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

3994 
	gPå
<
	gAlg‹ôhm
> 
	gÆgo_±r
 = 
vÆue
. 
ãm∂©e
 
±r
<
cv
::
Alg‹ôhm
>();

3995 i‡(
	gÆgo_±r
.
em±y
()) {

3996 
CV_Eº‹
–
CV_StsUnsuµ‹ãdF‹m©
, "unknown/unsupported PtrÅype ofÅhe secondÖarameter ofÅhe method Algorithm::set");

3998 
öfo
()->
£t
(
this
, 
_«me
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
Ægo_±r
);

4001 
	gãm∂©e
<
ty≥«me
 
	g_Tp
>

4002 
ölöe
 
	gAlg‹ôhm
::
£tAlg‹ôhm
(c⁄° 
°rög
& 
_«me
, c⁄° 
På
<
_Tp
>& 
vÆue
)

4004 
	gthis
->
	g£t
<
	g_Tp
>(
	g_«me
.
c_°r
(), 
	gvÆue
);

4007 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
Alg‹ôhm
::
	$gë
(c⁄° 
°rög
& 
_«me
) const

4009 
ty≥«me
 
P¨amTy≥
<
_Tp
>::
membî_ty≥
 
vÆue
;

4010 
	`öfo
()->
	`gë
(
this
, 
_«me
.
	`c_°r
(), 
P¨amTy≥
<
_Tp
>::
ty≥
, &
vÆue
);

4011  
vÆue
;

4012 
	}
}

4014 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
Åy≥«mê
	gP¨amTy≥
<_Tp>::
membî_ty≥
 
Alg‹ôhm
::
	$gë
(c⁄° * 
_«me
) const

4016 
ty≥«me
 
P¨amTy≥
<
_Tp
>::
membî_ty≥
 
vÆue
;

4017 
	`öfo
()->
	`gë
(
this
, 
_«me
, 
P¨amTy≥
<
_Tp
>::
ty≥
, &
vÆue
);

4018  
vÆue
;

4019 
	}
}

4021 
	gãm∂©e
<
ty≥«me
 
	g_Tp
,Åy≥«mê
	g_Ba£
> 
ölöe
 
	gAlg‹ôhmInfo
::
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
∑ømëî
,

4022 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
, På<_Tp> (
Alg‹ôhm
::*
gëãr
)(), (Alg‹ôhm::*
£âî
)(const Ptr<_Tp>&),

4023 c⁄° 
°rög
& 
hñp
)

4026 
	`addP¨am_
(
Ægo
, 
∑ømëî
, 
P¨amTy≥
<
_Ba£
>::
ty≥
, &
vÆue
, 
ªadO∆y
,

4027 (
Alg‹ôhm
::
Gëãr
)
gëãr
, (Alg‹ôhm::
Sëãr
)
£âî
, 
hñp
);

4028 
	}
}

4030 
	gãm∂©e
<
ty≥«me
 
	g_Tp
> 
ölöe
 
	gAlg‹ôhmInfo
::
addP¨am
(
Alg‹ôhm
& 
Ægo
, c⁄° * 
∑ømëî
,

4031 
På
<
_Tp
>& 
vÆue
, 
boﬁ
 
ªadO∆y
, På<_Tp> (
Alg‹ôhm
::*
gëãr
)(), (Alg‹ôhm::*
£âî
)(const Ptr<_Tp>&),

4032 c⁄° 
°rög
& 
hñp
)

4035 
	`addP¨am_
(
Ægo
, 
∑ømëî
, 
P¨amTy≥
<
Alg‹ôhm
>::
ty≥
, &
vÆue
, 
ªadO∆y
,

4036 (
Alg‹ôhm
::
Gëãr
)
gëãr
, (Alg‹ôhm::
Sëãr
)
£âî
, 
hñp
);

4037 
	}
}

4041 #ifde‡
_MSC_VER


4042 #¥agm®
w¨nög
(
p›
)

	@/usr/include/opencv2/core/types_c.h

43 #i‚de‡
__OPENCV_CORE_TYPES_H__


44 
	#__OPENCV_CORE_TYPES_H__


	)

46 #i‡!
deföed
 
_CRT_SECURE_NO_DEPRECATE
 && deföed 
_MSC_VER


47 #i‡
_MSC_VER
 > 1300

48 
	#_CRT_SECURE_NO_DEPRECATE


	)

53 #i‚de‡
SKIP_INCLUDES


55 
	~<as£π.h
>

56 
	~<°dlib.h
>

57 
	~<°rög.h
>

58 
	~<Êﬂt.h
>

60 #i‡!
deföed
 
_MSC_VER
 && !deföed 
__BORLANDC__


61 
	~<°döt.h
>

64 #i‡
deföed
 
__ICL


65 
	#CV_ICC
 
__ICL


	)

66 #ñi‡
deföed
 
__ICC


67 
	#CV_ICC
 
__ICC


	)

68 #ñi‡
deföed
 
__ECL


69 
	#CV_ICC
 
__ECL


	)

70 #ñi‡
deföed
 
__ECC


71 
	#CV_ICC
 
__ECC


	)

72 #ñi‡
deföed
 
__INTEL_COMPILER


73 
	#CV_ICC
 
__INTEL_COMPILER


	)

76 #i‡
deföed
 
CV_ICC
 && !deföed 
CV_ENABLE_UNROLLED


77 
	#CV_ENABLE_UNROLLED
 0

	)

79 
	#CV_ENABLE_UNROLLED
 1

	)

82 #i‡(
deföed
 
_M_X64
 && deföed 
_MSC_VER
 && _MSC_VER >1400Ë|| (
__GNUC__
 >4 && deföed 
__x86_64__
)

83 #i‡
deföed
 
WIN32


84 
	~<öåö.h
>

86 #i‡
deföed
 
__SSE2__
 || !deföed 
__GNUC__


87 
	~<emmöåö.h
>

91 #i‡
deföed
 
__BORLANDC__


92 
	~<Á°m©h.h
>

94 
	~<m©h.h
>

97 #ifde‡
HAVE_IPL


98 #i‚de‡
__IPL_H__


99 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


100 
	~<ùl.h
>

102 
	~<ùl/ùl.h
>

105 #ñi‡
deföed
 
__IPL_H__


106 
	#HAVE_IPL


	)

111 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


112 
	#CV_CDECL
 
__cde˛


	)

113 
	#CV_STDCALL
 
__°dˇŒ


	)

115 
	#CV_CDECL


	)

116 
	#CV_STDCALL


	)

119 #i‚de‡
CV_EXTERN_C


120 #ifde‡
__˝lu•lus


121 
	#CV_EXTERN_C
 "C"

	)

122 
	#CV_DEFAULT
(
vÆ
Ë
	)
val

124 
	#CV_EXTERN_C


	)

125 
	#CV_DEFAULT
(
vÆ
)

	)

129 #i‚de‡
CV_EXTERN_C_FUNCPTR


130 #ifde‡
__˝lu•lus


131 
	#CV_EXTERN_C_FUNCPTR
(
x
Ë"C" { x; }

	)

133 
	#CV_EXTERN_C_FUNCPTR
(
x
Ë
	)
x

137 #i‚de‡
	tCV_INLINE


138 #i‡
	tdeföed
 
	t__˝lu•lus


139 
	tCV_INLINE
 
	tölöe


	)

140 #ñi‡
	tdeföed
 
	t_MSC_VER


141 
	tCV_INLINE
 
	t__ölöe


	)

143 
	tCV_INLINE
 

	)

147 #i‡(
	tdeföed
 
	tWIN32
 || deföed 
	t_WIN32
 || deföed 
	tWINCE
Ë&& deföed 
	tCVAPI_EXPORTS


148 
	tCV_EXPORTS
 
	t__de˛•ec
(
	tdŒexp‹t
)

	)

150 
	tCV_EXPORTS


	)

153 #i‚de‡
	tCVAPI


154 
	tCVAPI
(
	tªây≥
Ë
	tCV_EXTERN_C
 
	tCV_EXPORTS
Ñëty≥ 
	tCV_CDECL


	)

157 #i‡
	tdeföed
 
	t_MSC_VER
 || deföed 
	t__BORLANDC__


158 
__öt64
 
	töt64
;

159 
	t__öt64
 
	tuöt64
;

160 
	#CV_BIG_INT
(
n
Ën##
I64


	)

161 
	#CV_BIG_UINT
(
n
Ën##
UI64


	)

163 
öt64_t
 
	töt64
;

164 
uöt64_t
 
	tuöt64
;

165 
	#CV_BIG_INT
(
n
Ën##
LL


	)

166 
	#CV_BIG_UINT
(
n
Ën##
ULL


	)

169 #i‚de‡
HAVE_IPL


170 
	tuch¨
;

171 
	tush‹t
;

174 sig√d 
	tsch¨
;

177 
	#CV_CARRAY
(
cou¡î
)

	)

178 
	#CV_CUSTOM_CARRAY
(
¨gs
)

	)

179 
	#CV_EXPORTS_W
 
CV_EXPORTS


	)

180 
	#CV_EXPORTS_W_SIMPLE
 
CV_EXPORTS


	)

181 
	#CV_EXPORTS_AS
(
syn⁄ym
Ë
CV_EXPORTS


	)

182 
	#CV_EXPORTS_W_MAP
 
CV_EXPORTS


	)

183 
	#CV_IN_OUT


	)

184 
	#CV_OUT


	)

185 
	#CV_PROP


	)

186 
	#CV_PROP_RW


	)

187 
	#CV_WRAP


	)

188 
	#CV_WRAP_AS
(
syn⁄ym
)

	)

189 
	#CV_WRAP_DEFAULT
(
vÆue
)

	)

196 
	tCvAº
;

198 
	uCv32suf


200 
	mi
;

201 
	mu
;

202 
	mf
;

204 
	tCv32suf
;

206 
	uCv64suf


208 
öt64
 
	mi
;

209 
uöt64
 
	mu
;

210 
	mf
;

212 
	tCv64suf
;

214 
	tCVSètus
;

217 
	mCV_StsOk
= 0,

218 
	mCV_StsBackTø˚
= -1,

219 
	mCV_StsEº‹
= -2,

220 
	mCV_StsI¡î«l
= -3,

221 
	mCV_StsNoMem
= -4,

222 
	mCV_StsBadArg
= -5,

223 
	mCV_StsBadFunc
= -6,

224 
	mCV_StsNoC⁄v
= -7,

225 
	mCV_StsAutoTø˚
= -8,

226 
	mCV_HódîIsNuŒ
= -9,

227 
	mCV_BadImageSize
= -10,

228 
	mCV_BadOff£t
= -11,

229 
	mCV_BadD©aPå
= -12,

230 
	mCV_BadSãp
= -13,

231 
	mCV_BadModñOrChSeq
= -14,

232 
	mCV_BadNumCh™√ls
= -15,

233 
	mCV_BadNumCh™√l1U
= -16,

234 
	mCV_BadDïth
= -17,

235 
	mCV_BadAÕhaCh™√l
= -18,

236 
	mCV_BadOrdî
= -19,

237 
	mCV_BadOrigö
= -20,

238 
	mCV_BadAlign
= -21,

239 
	mCV_BadCÆlBack
= -22,

240 
	mCV_BadTûeSize
= -23,

241 
	mCV_BadCOI
= -24,

242 
	mCV_BadROISize
= -25,

243 
	mCV_MaskIsTûed
= -26,

244 
	mCV_StsNuŒPå
= -27,

245 
	mCV_StsVecLígthEº
= -28,

246 
	mCV_StsFûãrSåu˘C⁄ã¡Eº
= -29,

247 
	mCV_StsKî√lSåu˘C⁄ã¡Eº
= -30,

248 
	mCV_StsFûãrOff£tEº
= -31,

249 
	mCV_StsBadSize
= -201,

250 
	mCV_StsDivByZîo
= -202,

251 
	mCV_StsI≈œ˚NŸSuµ‹ãd
= -203,

252 
	mCV_StsObje˘NŸFound
= -204,

253 
	mCV_StsUnm©chedF‹m©s
= -205,

254 
	mCV_StsBadFœg
= -206,

255 
	mCV_StsBadPoöt
= -207,

256 
	mCV_StsBadMask
= -208,

257 
	mCV_StsUnm©chedSizes
= -209,

258 
	mCV_StsUnsuµ‹ãdF‹m©
= -210,

259 
	mCV_StsOutOfR™ge
= -211,

260 
	mCV_StsP¨£Eº‹
= -212,

261 
	mCV_StsNŸIm∂emíãd
= -213,

262 
	mCV_StsBadMemBlock
= -214,

263 
	mCV_StsAs£π
= -215,

264 
	mCV_GpuNŸSuµ‹ãd
= -216,

265 
	mCV_GpuApiCÆlEº‹
= -217,

266 
	mCV_O≥nGlNŸSuµ‹ãd
= -218,

267 
	mCV_O≥nGlApiCÆlEº‹
= -219,

268 
	mCV_O≥nCLDoubÀNŸSuµ‹ãd
= -220,

269 
	mCV_O≥nCLInôEº‹
= -221,

270 
	mCV_O≥nCLNoAMDBœsF·
= -222

277 #ifde‡
HAVE_TEGRA_OPTIMIZATION


278 
	~"ãgø_round.hµ
"

281 
	#CV_PI
 3.1415926535897932384626433832795

	)

282 
	#CV_LOG2
 0.69314718055994530941723212145818

	)

284 
	#CV_SWAP
(
a
,
b
,
t
Ë(—Ë◊), (aË(b), (bË—))

	)

286 #i‚de‡
MIN


287 
	#MIN
(
a
,
b
Ë(◊Ë> (bË? (bË: (a))

	)

290 #i‚de‡
MAX


291 
	#MAX
(
a
,
b
Ë(◊Ë< (bË? (bË: (a))

	)

295 
	#CV_IMIN
(
a
, 
b
Ë(◊Ë^ ((◊)^(b)Ë& ((◊Ë< (b)Ë- 1)))

	)

297 
	#CV_IMAX
(
a
, 
b
Ë(◊Ë^ ((◊)^(b)Ë& ((◊Ë> (b)Ë- 1)))

	)

300 #i‚de‡
__˝lu•lus


301 
	#CV_IABS
(
a
Ë((◊Ë^ (◊Ë< 0 ? -1 : 0)Ë- (◊Ë< 0 ? -1 : 0))

	)

303 
	#CV_IABS
(
a
Ë
	`abs
◊)

	)

305 
	#CV_CMP
(
a
,
b
Ë((◊Ë> (b)Ë- (◊Ë< (b)))

	)

306 
	#CV_SIGN
(
a
Ë
	`CV_CMP
(◊),0)

	)

308 
CV_INLINE
 
	$cvRound
–
vÆue
 )

310 #i‡(
deföed
 
_MSC_VER
 && deföed 
_M_X64
Ë|| (deföed 
__GNUC__
 && deföed 
__x86_64__
 && deföed 
__SSE2__
 && !deföed 
__APPLE__
)

311 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

312  
	`_mm_cvtsd_si32
(
t
);

313 #ñi‡
deföed
 
_MSC_VER
 && deföed 
_M_IX86


314 
t
;

315 
__asm


317 
Êd
 
vÆue
;

318 
fi°p
 
t
;

320  
t
;

321 #ñi‡
deföed
 
_MSC_VER
 && deföed 
_M_ARM
 && deföed 
HAVE_TEGRA_OPTIMIZATION


322 
	`TEGRA_ROUND
(
vÆue
);

323 #ñi‡
deföed
 
CV_ICC
 || deföed 
__GNUC__


324 #ifde‡
HAVE_TEGRA_OPTIMIZATION


325 
	`TEGRA_ROUND
(
vÆue
);

327  ()
	`Ãöt
(
vÆue
);

330 
öç¨t
, 
‰a˘∑π
;

331 
‰a˘∑π
 = 
	`modf
(
vÆue
, &
öç¨t
);

332 i‡((
	`Ábs
(
‰a˘∑π
Ë!0.5Ë|| (((()
öç¨t
) % 2) != 0))

333  ()(
vÆue
 + (value >= 0 ? 0.5 : -0.5));

335  ()
öç¨t
;

337 
	}
}

339 #i‡
deföed
 
__SSE2__
 || (deföed 
_M_IX86_FP
 && 2 == _M_IX86_FP)

340 
	~"emmöåö.h
"

343 
CV_INLINE
 
	$cvFlo‹
–
vÆue
 )

345 #i‡
deföed
 
_MSC_VER
 && deföed 
_M_X64
 || (deföed 
__GNUC__
 && deföed 
__SSE2__
 && !deföed 
__APPLE__
)

346 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

347 
i
 = 
	`_mm_cvtsd_si32
(
t
);

348  
i
 - 
	`_mm_movemask_pd
(
	`_mm_cm∂t_sd
(
t
, 
	`_mm_cvtsi32_sd
(t,i)));

349 #ñi‡
deföed
 
__GNUC__


350 
i
 = ()
vÆue
;

351  
i
 - (ò> 
vÆue
);

353 
i
 = 
	`cvRound
(
vÆue
);

354 
diff
 = ()(
vÆue
 - 
i
);

355  
i
 - (
diff
 < 0);

357 
	}
}

360 
CV_INLINE
 
	$cvCeû
–
vÆue
 )

362 #i‡
deföed
 
_MSC_VER
 && deföed 
_M_X64
 || (deföed 
__GNUC__
 && deföed 
__SSE2__
&& !deföed 
__APPLE__
)

363 
__m128d
 
t
 = 
	`_mm_£t_sd
–
vÆue
 );

364 
i
 = 
	`_mm_cvtsd_si32
(
t
);

365  
i
 + 
	`_mm_movemask_pd
(
	`_mm_cm∂t_sd
(
	`_mm_cvtsi32_sd
(
t
,i),Å));

366 #ñi‡
deföed
 
__GNUC__


367 
i
 = ()
vÆue
;

368  
i
 + (ò< 
vÆue
);

370 
i
 = 
	`cvRound
(
vÆue
);

371 
diff
 = ()(
i
 - 
vÆue
);

372  
i
 + (
diff
 < 0);

374 
	}
}

376 
	#cvInvSqπ
(
vÆue
Ë(()(1./
	`sqπ
(vÆue)))

	)

377 
	#cvSqπ
(
vÆue
Ë(()
	`sqπ
(vÆue))

	)

379 
CV_INLINE
 
	$cvIsNaN
–
vÆue
 )

381 
Cv64suf
 
õì754
;

382 
õì754
.
f
 = 
vÆue
;

383  (()(
õì754
.
u
 >> 32) & 0x7fffffff) +

384 (()
õì754
.
u
 != 0) > 0x7ff00000;

385 
	}
}

388 
CV_INLINE
 
	$cvIsInf
–
vÆue
 )

390 
Cv64suf
 
õì754
;

391 
õì754
.
f
 = 
vÆue
;

392  (()(
õì754
.
u
 >> 32) & 0x7fffffff) == 0x7ff00000 &&

393 ()
õì754
.
u
 == 0;

394 
	}
}

399 
uöt64
 
	tCvRNG
;

401 
	#CV_RNG_COEFF
 4164903690U

	)

403 
CV_INLINE
 
CvRNG
 
cvRNG
–
öt64
 
£ed
 
CV_DEFAULT
(-1))

405 
CvRNG
 
	g∫g
 = 
£ed
 ? (
uöt64
)£ed : (uöt64)(
öt64
)-1;

406  
	g∫g
;

410 
CV_INLINE
 
	$cvR™dI¡
–
CvRNG
* 
∫g
 )

412 
uöt64
 
ãmp
 = *
∫g
;

413 
ãmp
 = (
uöt64
)(Èemp*
CV_RNG_COEFF
 + (temp >> 32);

414 *
∫g
 = 
ãmp
;

415  ()
ãmp
;

416 
	}
}

419 
CV_INLINE
 
	$cvR™dRól
–
CvRNG
* 
∫g
 )

421  
	`cvR™dI¡
(
∫g
)*2.3283064365386962890625e-10 ;

422 
	}
}

428 #i‚de‡
HAVE_IPL


435 
	#IPL_DEPTH_SIGN
 0x80000000

	)

437 
	#IPL_DEPTH_1U
 1

	)

438 
	#IPL_DEPTH_8U
 8

	)

439 
	#IPL_DEPTH_16U
 16

	)

440 
	#IPL_DEPTH_32F
 32

	)

442 
	#IPL_DEPTH_8S
 (
IPL_DEPTH_SIGN
| 8)

	)

443 
	#IPL_DEPTH_16S
 (
IPL_DEPTH_SIGN
|16)

	)

444 
	#IPL_DEPTH_32S
 (
IPL_DEPTH_SIGN
|32)

	)

446 
	#IPL_DATA_ORDER_PIXEL
 0

	)

447 
	#IPL_DATA_ORDER_PLANE
 1

	)

449 
	#IPL_ORIGIN_TL
 0

	)

450 
	#IPL_ORIGIN_BL
 1

	)

452 
	#IPL_ALIGN_4BYTES
 4

	)

453 
	#IPL_ALIGN_8BYTES
 8

	)

454 
	#IPL_ALIGN_16BYTES
 16

	)

455 
	#IPL_ALIGN_32BYTES
 32

	)

457 
	#IPL_ALIGN_DWORD
 
IPL_ALIGN_4BYTES


	)

458 
	#IPL_ALIGN_QWORD
 
IPL_ALIGN_8BYTES


	)

460 
	#IPL_BORDER_CONSTANT
 0

	)

461 
	#IPL_BORDER_REPLICATE
 1

	)

462 
	#IPL_BORDER_REFLECT
 2

	)

463 
	#IPL_BORDER_WRAP
 3

	)

465 
	s_I∂Image


467 
	mnSize
;

468 
	mID
;

469 
	mnCh™√ls
;

470 
	mÆphaCh™√l
;

471 
	mdïth
;

473 
	mcﬁ‹Modñ
[4];

474 
	mch™√lSeq
[4];

475 
	md©aOrdî
;

477 
	m‹igö
;

479 
	mÆign
;

481 
	mwidth
;

482 
	mheight
;

483 
_I∂ROI
 *
	mroi
;

484 
_I∂Image
 *
	mmaskROI
;

485 *
	mimageId
;

486 
_I∂TûeInfo
 *
	mtûeInfo
;

487 
	mimageSize
;

490 *
	mimageD©a
;

491 
	mwidthSãp
;

492 
	mB‹dîMode
[4];

493 
	mB‹dîC⁄°
[4];

494 *
	mimageD©aOrigö
;

498 
	tI∂Image
;

500 
_I∂TûeInfo
 
	tI∂TûeInfo
;

502 
	s_I∂ROI


504 
	mcoi
;

505 
	mxOff£t
;

506 
	myOff£t
;

507 
	mwidth
;

508 
	mheight
;

510 
	tI∂ROI
;

512 
	s_I∂C⁄vKî√l


514 
	mnCﬁs
;

515 
	mnRows
;

516 
	m™ch‹X
;

517 
	m™ch‹Y
;

518 *
	mvÆues
;

519 
	mnShi·R
;

521 
	tI∂C⁄vKî√l
;

523 
	s_I∂C⁄vKî√lFP


525 
	mnCﬁs
;

526 
	mnRows
;

527 
	m™ch‹X
;

528 
	m™ch‹Y
;

529 *
	mvÆues
;

531 
	tI∂C⁄vKî√lFP
;

533 
	#IPL_IMAGE_HEADER
 1

	)

534 
	#IPL_IMAGE_DATA
 2

	)

535 
	#IPL_IMAGE_ROI
 4

	)

540 
	#IPL_BORDER_REFLECT_101
 4

	)

541 
	#IPL_BORDER_TRANSPARENT
 5

	)

543 
	#IPL_IMAGE_MAGIC_VAL
 (()(
I∂Image
))

	)

544 
	#CV_TYPE_NAME_IMAGE
 "›ícv-image"

	)

546 
	#CV_IS_IMAGE_HDR
(
img
) \

547 ((
img
Ë!
NULL
 && ((c⁄° 
I∂Image
*)(img))->
nSize
 =(I∂Image))

	)

549 
	#CV_IS_IMAGE
(
img
) \

550 (
	`CV_IS_IMAGE_HDR
(
img
Ë&& ((
I∂Image
*)img)->
imageD©a
 !
NULL
)

	)

554 
	#IPL_DEPTH_64F
 64

	)

558 
	#CV_IMAGE_ELEM
–
image
, 
ñemty≥
, 
row
, 
cﬁ
 ) \

559 (((
ñemty≥
*)((
image
)->
imageD©a
 + (image)->
widthSãp
*(
row
)))[(
cﬁ
)])

	)

565 
	#CV_CN_MAX
 512

	)

566 
	#CV_CN_SHIFT
 3

	)

567 
	#CV_DEPTH_MAX
 (1 << 
CV_CN_SHIFT
)

	)

569 
	#CV_8U
 0

	)

570 
	#CV_8S
 1

	)

571 
	#CV_16U
 2

	)

572 
	#CV_16S
 3

	)

573 
	#CV_32S
 4

	)

574 
	#CV_32F
 5

	)

575 
	#CV_64F
 6

	)

576 
	#CV_USRTYPE1
 7

	)

578 
	#CV_MAT_DEPTH_MASK
 (
CV_DEPTH_MAX
 - 1)

	)

579 
	#CV_MAT_DEPTH
(
Êags
Ë((ÊagsË& 
CV_MAT_DEPTH_MASK
)

	)

581 
	#CV_MAKETYPE
(
dïth
,
˙
Ë(
	`CV_MAT_DEPTH
(dïthË+ (((˙)-1Ë<< 
CV_CN_SHIFT
))

	)

582 
	#CV_MAKE_TYPE
 
CV_MAKETYPE


	)

584 
	#CV_8UC1
 
	`CV_MAKETYPE
(
CV_8U
,1)

	)

585 
	#CV_8UC2
 
	`CV_MAKETYPE
(
CV_8U
,2)

	)

586 
	#CV_8UC3
 
	`CV_MAKETYPE
(
CV_8U
,3)

	)

587 
	#CV_8UC4
 
	`CV_MAKETYPE
(
CV_8U
,4)

	)

588 
	#CV_8UC
(
n
Ë
	`CV_MAKETYPE
(
CV_8U
,“))

	)

590 
	#CV_8SC1
 
	`CV_MAKETYPE
(
CV_8S
,1)

	)

591 
	#CV_8SC2
 
	`CV_MAKETYPE
(
CV_8S
,2)

	)

592 
	#CV_8SC3
 
	`CV_MAKETYPE
(
CV_8S
,3)

	)

593 
	#CV_8SC4
 
	`CV_MAKETYPE
(
CV_8S
,4)

	)

594 
	#CV_8SC
(
n
Ë
	`CV_MAKETYPE
(
CV_8S
,“))

	)

596 
	#CV_16UC1
 
	`CV_MAKETYPE
(
CV_16U
,1)

	)

597 
	#CV_16UC2
 
	`CV_MAKETYPE
(
CV_16U
,2)

	)

598 
	#CV_16UC3
 
	`CV_MAKETYPE
(
CV_16U
,3)

	)

599 
	#CV_16UC4
 
	`CV_MAKETYPE
(
CV_16U
,4)

	)

600 
	#CV_16UC
(
n
Ë
	`CV_MAKETYPE
(
CV_16U
,“))

	)

602 
	#CV_16SC1
 
	`CV_MAKETYPE
(
CV_16S
,1)

	)

603 
	#CV_16SC2
 
	`CV_MAKETYPE
(
CV_16S
,2)

	)

604 
	#CV_16SC3
 
	`CV_MAKETYPE
(
CV_16S
,3)

	)

605 
	#CV_16SC4
 
	`CV_MAKETYPE
(
CV_16S
,4)

	)

606 
	#CV_16SC
(
n
Ë
	`CV_MAKETYPE
(
CV_16S
,“))

	)

608 
	#CV_32SC1
 
	`CV_MAKETYPE
(
CV_32S
,1)

	)

609 
	#CV_32SC2
 
	`CV_MAKETYPE
(
CV_32S
,2)

	)

610 
	#CV_32SC3
 
	`CV_MAKETYPE
(
CV_32S
,3)

	)

611 
	#CV_32SC4
 
	`CV_MAKETYPE
(
CV_32S
,4)

	)

612 
	#CV_32SC
(
n
Ë
	`CV_MAKETYPE
(
CV_32S
,“))

	)

614 
	#CV_32FC1
 
	`CV_MAKETYPE
(
CV_32F
,1)

	)

615 
	#CV_32FC2
 
	`CV_MAKETYPE
(
CV_32F
,2)

	)

616 
	#CV_32FC3
 
	`CV_MAKETYPE
(
CV_32F
,3)

	)

617 
	#CV_32FC4
 
	`CV_MAKETYPE
(
CV_32F
,4)

	)

618 
	#CV_32FC
(
n
Ë
	`CV_MAKETYPE
(
CV_32F
,“))

	)

620 
	#CV_64FC1
 
	`CV_MAKETYPE
(
CV_64F
,1)

	)

621 
	#CV_64FC2
 
	`CV_MAKETYPE
(
CV_64F
,2)

	)

622 
	#CV_64FC3
 
	`CV_MAKETYPE
(
CV_64F
,3)

	)

623 
	#CV_64FC4
 
	`CV_MAKETYPE
(
CV_64F
,4)

	)

624 
	#CV_64FC
(
n
Ë
	`CV_MAKETYPE
(
CV_64F
,“))

	)

626 
	#CV_AUTO_STEP
 0x7fffffff

	)

627 
	#CV_WHOLE_ARR
 
	`cvSli˚
–0, 0x3ffffff‡)

	)

629 
	#CV_MAT_CN_MASK
 ((
CV_CN_MAX
 - 1Ë<< 
CV_CN_SHIFT
)

	)

630 
	#CV_MAT_CN
(
Êags
Ë((((ÊagsË& 
CV_MAT_CN_MASK
Ë>> 
CV_CN_SHIFT
Ë+ 1)

	)

631 
	#CV_MAT_TYPE_MASK
 (
CV_DEPTH_MAX
*
CV_CN_MAX
 - 1)

	)

632 
	#CV_MAT_TYPE
(
Êags
Ë((ÊagsË& 
CV_MAT_TYPE_MASK
)

	)

633 
	#CV_MAT_CONT_FLAG_SHIFT
 14

	)

634 
	#CV_MAT_CONT_FLAG
 (1 << 
CV_MAT_CONT_FLAG_SHIFT
)

	)

635 
	#CV_IS_MAT_CONT
(
Êags
Ë((ÊagsË& 
CV_MAT_CONT_FLAG
)

	)

636 
	#CV_IS_CONT_MAT
 
CV_IS_MAT_CONT


	)

637 
	#CV_SUBMAT_FLAG_SHIFT
 15

	)

638 
	#CV_SUBMAT_FLAG
 (1 << 
CV_SUBMAT_FLAG_SHIFT
)

	)

639 
	#CV_IS_SUBMAT
(
Êags
Ë((ÊagsË& 
CV_MAT_SUBMAT_FLAG
)

	)

641 
	#CV_MAGIC_MASK
 0xFFFF0000

	)

642 
	#CV_MAT_MAGIC_VAL
 0x42420000

	)

643 
	#CV_TYPE_NAME_MAT
 "›ícv-m©rix"

	)

645 
	sCvM©


647 
	mty≥
;

648 
	m°ï
;

651 * 
	mªfcou¡
;

652 
	mhdr_ªfcou¡
;

656 
uch¨
* 
	m±r
;

657 * 
	ms
;

658 * 
	mi
;

659 * 
	mÊ
;

660 * 
	mdb
;

661 } 
	md©a
;

663 #ifde‡
__˝lu•lus


666 
	mrows
;

667 
	mheight
;

672 
	mcﬁs
;

673 
	mwidth
;

676 
	mrows
;

677 
	mcﬁs
;

681 
	tCvM©
;

684 
	#CV_IS_MAT_HDR
(
m©
) \

685 ((
m©
Ë!
NULL
 && \

686 (((c⁄° 
CvM©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MAT_MAGIC_VAL
 && \

687 ((c⁄° 
CvM©
*)(
m©
))->
cﬁs
 > 0 && ((c⁄° CvM©*)(m©))->
rows
 > 0)

	)

689 
	#CV_IS_MAT_HDR_Z
(
m©
) \

690 ((
m©
Ë!
NULL
 && \

691 (((c⁄° 
CvM©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MAT_MAGIC_VAL
 && \

692 ((c⁄° 
CvM©
*)(
m©
))->
cﬁs
 >0 && ((c⁄° CvM©*)(m©))->
rows
 >0)

	)

694 
	#CV_IS_MAT
(
m©
) \

695 (
	`CV_IS_MAT_HDR
(
m©
Ë&& ((c⁄° 
CvM©
*)(m©))->
d©a
.
±r
 !
NULL
)

	)

697 
	#CV_IS_MASK_ARR
(
m©
) \

698 (((
m©
)->
ty≥
 & (
CV_MAT_TYPE_MASK
 & ~
CV_8SC1
)Ë=0)

	)

700 
	#CV_ARE_TYPES_EQ
(
m©1
, 
m©2
) \

701 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_TYPE_MASK
Ë=0)

	)

703 
	#CV_ARE_CNS_EQ
(
m©1
, 
m©2
) \

704 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_CN_MASK
Ë=0)

	)

706 
	#CV_ARE_DEPTHS_EQ
(
m©1
, 
m©2
) \

707 ((((
m©1
)->
ty≥
 ^ (
m©2
)->ty≥Ë& 
CV_MAT_DEPTH_MASK
Ë=0)

	)

709 
	#CV_ARE_SIZES_EQ
(
m©1
, 
m©2
) \

710 ((
m©1
)->
rows
 =(
m©2
)->row†&& (m©1)->
cﬁs
 =(m©2)->cﬁs)

	)

712 
	#CV_IS_MAT_CONST
(
m©
) \

713 (((
m©
)->
rows
|(m©)->
cﬁs
Ë=1)

	)

717 
	#CV_ELEM_SIZE1
(
ty≥
) \

718 (((((
size_t
)<<28)|0x8442211Ë>> 
	`CV_MAT_DEPTH
(
ty≥
)*4Ë& 15)

	)

721 
	#CV_ELEM_SIZE
(
ty≥
) \

722 (
	`CV_MAT_CN
(
ty≥
Ë<< (((((
size_t
)/4+1)*16384|0x3a50Ë>> 
	`CV_MAT_DEPTH
—y≥)*2Ë& 3))

	)

724 
	#IPL2CV_DEPTH
(
dïth
) \

725 ((((
CV_8U
)+(
CV_16U
<<4)+(
CV_32F
<<8)+(
CV_64F
<<16)+(
CV_8S
<<20)+ \

726 (
CV_16S
<<24)+(
CV_32S
<<28)Ë>> ((((
dïth
) & 0xF0) >> 2) + \

727 (((
dïth
Ë& 
IPL_DEPTH_SIGN
Ë? 20 : 0))Ë& 15)

	)

733 
CV_INLINE
 
CvM©
 
cvM©
–
rows
, 
cﬁs
, 
ty≥
, * 
d©a
 
	$CV_DEFAULT
(
NULL
))

735 
CvM©
 
m
;

737 
	`as£π
–()
	`CV_MAT_DEPTH
(
ty≥
Ë<
CV_64F
 );

738 
ty≥
 = 
	`CV_MAT_TYPE
(type);

739 
m
.
ty≥
 = 
CV_MAT_MAGIC_VAL
 | 
CV_MAT_CONT_FLAG
 |Åype;

740 
m
.
cﬁs
 = cols;

741 
m
.
rows
 =Ñows;

742 
m
.
°ï
 = m.
cﬁs
*
	`CV_ELEM_SIZE
(
ty≥
);

743 
m
.
d©a
.
±r
 = (
uch¨
*)data;

744 
m
.
ªfcou¡
 = 
NULL
;

745 
m
.
hdr_ªfcou¡
 = 0;

747  
m
;

748 
	}
}

751 
	#CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, 
pix_size
 ) \

752 (
	`as£π
–()(
row
Ë< ()(
m©
).
rows
 && \

753 ()(
cﬁ
Ë< ()(
m©
).
cﬁs
 ), \

754 (
m©
).
d©a
.
±r
 + (
size_t
)(m©).
°ï
*(
row
Ë+ (
pix_size
)*(
cﬁ
))

	)

756 
	#CV_MAT_ELEM_PTR
–
m©
, 
row
, 
cﬁ
 ) \

757 
	`CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, 
	`CV_ELEM_SIZE
((m©).
ty≥
Ë)

	)

759 
	#CV_MAT_ELEM
–
m©
, 
ñemty≥
, 
row
, 
cﬁ
 ) \

760 (*(
ñemty≥
*)
	`CV_MAT_ELEM_PTR_FAST
–
m©
, 
row
, 
cﬁ
, ”Àmty≥)))

	)

763 
CV_INLINE
 
	$cvmGë
–c⁄° 
CvM©
* 
m©
, 
row
, 
cﬁ
 )

765 
ty≥
;

767 
ty≥
 = 
	`CV_MAT_TYPE
(
m©
->type);

768 
	`as£π
–()
row
 < ()
m©
->
rows
 &&

769 ()
cﬁ
 < ()
m©
->
cﬁs
 );

771 if–
ty≥
 =
CV_32FC1
 )

772  ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
];

775 
	`as£π
–
ty≥
 =
CV_64FC1
 );

776  ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
];

778 
	}
}

781 
CV_INLINE
 
	$cvmSë
–
CvM©
* 
m©
, 
row
, 
cﬁ
, 
vÆue
 )

783 
ty≥
;

784 
ty≥
 = 
	`CV_MAT_TYPE
(
m©
->type);

785 
	`as£π
–()
row
 < ()
m©
->
rows
 &&

786 ()
cﬁ
 < ()
m©
->
cﬁs
 );

788 if–
ty≥
 =
CV_32FC1
 )

789 ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
] = ()
vÆue
;

792 
	`as£π
–
ty≥
 =
CV_64FC1
 );

793 ((*)(*)(
m©
->
d©a
.
±r
 + (
size_t
)m©->
°ï
*
row
))[
cﬁ
] = ()
vÆue
;

795 
	}
}

798 
CV_INLINE
 
	$cvI∂Dïth
–
ty≥
 )

800 
dïth
 = 
	`CV_MAT_DEPTH
(
ty≥
);

801  
	`CV_ELEM_SIZE1
(
dïth
)*8 | (dïth =
CV_8S
 || dïth =
CV_16S
 ||

802 
dïth
 =
CV_32S
 ? 
IPL_DEPTH_SIGN
 : 0);

803 
	}
}

810 
	#CV_MATND_MAGIC_VAL
 0x42430000

	)

811 
	#CV_TYPE_NAME_MATND
 "›ícv-nd-m©rix"

	)

813 
	#CV_MAX_DIM
 32

	)

814 
	#CV_MAX_DIM_HEAP
 1024

	)

816 
	sCvM©ND


818 
	mty≥
;

819 
	mdims
;

821 * 
	mªfcou¡
;

822 
	mhdr_ªfcou¡
;

826 
uch¨
* 
	m±r
;

827 * 
	mÊ
;

828 * 
	mdb
;

829 * 
	mi
;

830 * 
	ms
;

831 } 
	md©a
;

835 
	msize
;

836 
	m°ï
;

838 
	mdim
[
CV_MAX_DIM
];

840 
	tCvM©ND
;

842 
	#CV_IS_MATND_HDR
(
m©
) \

843 ((
m©
Ë!
NULL
 && (((c⁄° 
CvM©ND
*)(m©))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_MATND_MAGIC_VAL
)

	)

845 
	#CV_IS_MATND
(
m©
) \

846 (
	`CV_IS_MATND_HDR
(
m©
Ë&& ((c⁄° 
CvM©ND
*)(m©))->
d©a
.
±r
 !
NULL
)

	)

853 
	#CV_SPARSE_MAT_MAGIC_VAL
 0x42440000

	)

854 
	#CV_TYPE_NAME_SPARSE_MAT
 "›ícv-•¨£-m©rix"

	)

856 
	gCvSë
;

858 
	sCvS∑r£M©


860 
	mty≥
;

861 
	mdims
;

862 * 
	mªfcou¡
;

863 
	mhdr_ªfcou¡
;

865 
CvSë
* 
	mhóp
;

866 ** 
	mhashèbÀ
;

867 
	mhashsize
;

868 
	mvÆoff£t
;

869 
	midxoff£t
;

870 
	msize
[
CV_MAX_DIM
];

872 
	tCvS∑r£M©
;

874 
	#CV_IS_SPARSE_MAT_HDR
(
m©
) \

875 ((
m©
Ë!
NULL
 && \

876 (((c⁄° 
CvS∑r£M©
*)(
m©
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_SPARSE_MAT_MAGIC_VAL
)

	)

878 
	#CV_IS_SPARSE_MAT
(
m©
) \

879 
	`CV_IS_SPARSE_MAT_HDR
(
m©
)

	)

883 
	sCvS∑r£Node


885 
	mhashvÆ
;

886 
CvS∑r£Node
* 
	m√xt
;

888 
	tCvS∑r£Node
;

890 
	sCvS∑r£M©Iãøt‹


892 
CvS∑r£M©
* 
	mm©
;

893 
CvS∑r£Node
* 
	mnode
;

894 
	mcuridx
;

896 
	tCvS∑r£M©Iãøt‹
;

898 
	#CV_NODE_VAL
(
m©
,
node
Ë((*)((
uch¨
*)“odeË+ (m©)->
vÆoff£t
))

	)

899 
	#CV_NODE_IDX
(
m©
,
node
Ë((*)((
uch¨
*)“odeË+ (m©)->
idxoff£t
))

	)

905 
	tCvHi°Ty≥
;

907 
	#CV_HIST_MAGIC_VAL
 0x42450000

	)

908 
	#CV_HIST_UNIFORM_FLAG
 (1 << 10)

	)

911 
	#CV_HIST_RANGES_FLAG
 (1 << 11)

	)

913 
	#CV_HIST_ARRAY
 0

	)

914 
	#CV_HIST_SPARSE
 1

	)

915 
	#CV_HIST_TREE
 
CV_HIST_SPARSE


	)

919 
	#CV_HIST_UNIFORM
 1

	)

921 
	sCvHi°ogøm


923 
	mty≥
;

924 
CvAº
* 
	mbös
;

925 
	mthªsh
[
CV_MAX_DIM
][2];

926 ** 
	mthªsh2
;

927 
CvM©ND
 
	mm©
;

929 
	tCvHi°ogøm
;

931 
	#CV_IS_HIST
–
hi°
 ) \

932 ((
hi°
Ë!
NULL
 && \

933 (((
CvHi°ogøm
*)(
hi°
))->
ty≥
 & 
CV_MAGIC_MASK
Ë=
CV_HIST_MAGIC_VAL
 && \

934 (
hi°
)->
bös
 !
NULL
)

	)

936 
	#CV_IS_UNIFORM_HIST
–
hi°
 ) \

937 (((
hi°
)->
ty≥
 & 
CV_HIST_UNIFORM_FLAG
Ë!0)

	)

939 
	#CV_IS_SPARSE_HIST
–
hi°
 ) \

940 
	`CV_IS_SPARSE_MAT
((
hi°
)->
bös
)

	)

942 
	#CV_HIST_HAS_RANGES
–
hi°
 ) \

943 (((
hi°
)->
ty≥
 & 
CV_HIST_RANGES_FLAG
Ë!0)

	)

951 
	sCvRe˘


953 
	mx
;

954 
	my
;

955 
	mwidth
;

956 
	mheight
;

958 
	tCvRe˘
;

960 
CV_INLINE
 
CvRe˘
 
	$cvRe˘
–
x
, 
y
, 
width
, 
height
 )

962 
CvRe˘
 
r
;

964 
r
.
x
 = x;

965 
r
.
y
 = y;

966 
r
.
width
 = width;

967 
r
.
height
 = height;

969  
r
;

970 
	}
}

973 
CV_INLINE
 
I∂ROI
 
	$cvRe˘ToROI
–
CvRe˘
 
ª˘
, 
coi
 )

975 
I∂ROI
 
roi
;

976 
roi
.
xOff£t
 = 
ª˘
.
x
;

977 
roi
.
yOff£t
 = 
ª˘
.
y
;

978 
roi
.
width
 = 
ª˘
.width;

979 
roi
.
height
 = 
ª˘
.height;

980 
roi
.
coi
 = coi;

982  
roi
;

983 
	}
}

986 
CV_INLINE
 
CvRe˘
 
	$cvROIToRe˘
–
I∂ROI
 
roi
 )

988  
	`cvRe˘
–
roi
.
xOff£t
,Ñoi.
yOff£t
,Ñoi.
width
,Ñoi.
height
 );

989 
	}
}

993 
	#CV_TERMCRIT_ITER
 1

	)

994 
	#CV_TERMCRIT_NUMBER
 
CV_TERMCRIT_ITER


	)

995 
	#CV_TERMCRIT_EPS
 2

	)

997 
	sCvTîmCrôîü


999 
	mty≥
;

1002 
	mmax_ôî
;

1003 
	mïsû⁄
;

1005 
	tCvTîmCrôîü
;

1007 
CV_INLINE
 
CvTîmCrôîü
 
	$cvTîmCrôîü
–
ty≥
, 
max_ôî
, 
ïsû⁄
 )

1009 
CvTîmCrôîü
 
t
;

1011 
t
.
ty≥
 =Åype;

1012 
t
.
max_ôî
 = max_iter;

1013 
t
.
ïsû⁄
 = ()epsilon;

1015  
t
;

1016 
	}
}

1021 
	sCvPoöt


1023 
	mx
;

1024 
	my
;

1026 
	tCvPoöt
;

1029 
CV_INLINE
 
CvPoöt
 
	$cvPoöt
–
x
, 
y
 )

1031 
CvPoöt
 
p
;

1033 
p
.
x
 = x;

1034 
p
.
y
 = y;

1036  
p
;

1037 
	}
}

1040 
	sCvPoöt2D32f


1042 
	mx
;

1043 
	my
;

1045 
	tCvPoöt2D32f
;

1048 
CV_INLINE
 
CvPoöt2D32f
 
	$cvPoöt2D32f
–
x
, 
y
 )

1050 
CvPoöt2D32f
 
p
;

1052 
p
.
x
 = ()x;

1053 
p
.
y
 = ()y;

1055  
p
;

1056 
	}
}

1059 
CV_INLINE
 
CvPoöt2D32f
 
	$cvPoötTo32f
–
CvPoöt
 
poöt
 )

1061  
	`cvPoöt2D32f
–()
poöt
.
x
, (Ìoöt.
y
 );

1062 
	}
}

1065 
CV_INLINE
 
CvPoöt
 
	$cvPoötFrom32f
–
CvPoöt2D32f
 
poöt
 )

1067 
CvPoöt
 
ùt
;

1068 
ùt
.
x
 = 
	`cvRound
(
poöt
.x);

1069 
ùt
.
y
 = 
	`cvRound
(
poöt
.y);

1071  
ùt
;

1072 
	}
}

1075 
	sCvPoöt3D32f


1077 
	mx
;

1078 
	my
;

1079 
	mz
;

1081 
	tCvPoöt3D32f
;

1084 
CV_INLINE
 
CvPoöt3D32f
 
	$cvPoöt3D32f
–
x
, 
y
, 
z
 )

1086 
CvPoöt3D32f
 
p
;

1088 
p
.
x
 = ()x;

1089 
p
.
y
 = ()y;

1090 
p
.
z
 = ()z;

1092  
p
;

1093 
	}
}

1096 
	sCvPoöt2D64f


1098 
	mx
;

1099 
	my
;

1101 
	tCvPoöt2D64f
;

1104 
CV_INLINE
 
CvPoöt2D64f
 
	$cvPoöt2D64f
–
x
, 
y
 )

1106 
CvPoöt2D64f
 
p
;

1108 
p
.
x
 = x;

1109 
p
.
y
 = y;

1111  
p
;

1112 
	}
}

1115 
	sCvPoöt3D64f


1117 
	mx
;

1118 
	my
;

1119 
	mz
;

1121 
	tCvPoöt3D64f
;

1124 
CV_INLINE
 
CvPoöt3D64f
 
	$cvPoöt3D64f
–
x
, 
y
, 
z
 )

1126 
CvPoöt3D64f
 
p
;

1128 
p
.
x
 = x;

1129 
p
.
y
 = y;

1130 
p
.
z
 = z;

1132  
p
;

1133 
	}
}

1138 
	sCvSize


1140 
	mwidth
;

1141 
	mheight
;

1143 
	tCvSize
;

1145 
CV_INLINE
 
CvSize
 
	$cvSize
–
width
, 
height
 )

1147 
CvSize
 
s
;

1149 
s
.
width
 = width;

1150 
s
.
height
 = height;

1152  
s
;

1153 
	}
}

1155 
	sCvSize2D32f


1157 
	mwidth
;

1158 
	mheight
;

1160 
	tCvSize2D32f
;

1163 
CV_INLINE
 
CvSize2D32f
 
	$cvSize2D32f
–
width
, 
height
 )

1165 
CvSize2D32f
 
s
;

1167 
s
.
width
 = ()width;

1168 
s
.
height
 = ()height;

1170  
s
;

1171 
	}
}

1173 
	sCvBox2D


1175 
CvPoöt2D32f
 
	m˚¡î
;

1176 
CvSize2D32f
 
	msize
;

1177 
	m™gÀ
;

1180 
	tCvBox2D
;

1184 
	sCvLöeIãøt‹


1187 
uch¨
* 
	m±r
;

1190 
	mîr
;

1191 
	m∂us_dñè
;

1192 
	mmöus_dñè
;

1193 
	m∂us_°ï
;

1194 
	mmöus_°ï
;

1196 
	tCvLöeIãøt‹
;

1202 
	sCvSli˚


1204 
	m°¨t_ödex
, 
	míd_ödex
;

1206 
	tCvSli˚
;

1208 
CV_INLINE
 
CvSli˚
 
	$cvSli˚
–
°¨t
, 
íd
 )

1210 
CvSli˚
 
¶i˚
;

1211 
¶i˚
.
°¨t_ödex
 = 
°¨t
;

1212 
¶i˚
.
íd_ödex
 = 
íd
;

1214  
¶i˚
;

1215 
	}
}

1217 
	#CV_WHOLE_SEQ_END_INDEX
 0x3fffffff

	)

1218 
	#CV_WHOLE_SEQ
 
	`cvSli˚
(0, 
CV_WHOLE_SEQ_END_INDEX
)

	)

1223 
	sCvSˇœr


1225 
	mvÆ
[4];

1227 
	tCvSˇœr
;

1229 
CV_INLINE
 
CvSˇœr
 
cvSˇœr
–
vÆ0
, 
vÆ1
 
CV_DEFAULT
(0),

1230 
vÆ2
 
CV_DEFAULT
(0), 
vÆ3
 
	$CV_DEFAULT
(0))

1232 
CvSˇœr
 
sˇœr
;

1233 
sˇœr
.
vÆ
[0] = 
vÆ0
; sˇœr.vÆ[1] = 
vÆ1
;

1234 
sˇœr
.
vÆ
[2] = 
vÆ2
; sˇœr.vÆ[3] = 
vÆ3
;

1235  
sˇœr
;

1236 
	}
}

1239 
CV_INLINE
 
CvSˇœr
 
	$cvRólSˇœr
–
vÆ0
 )

1241 
CvSˇœr
 
sˇœr
;

1242 
sˇœr
.
vÆ
[0] = 
vÆ0
;

1243 
sˇœr
.
vÆ
[1] = scalar.val[2] = scalar.val[3] = 0;

1244  
sˇœr
;

1245 
	}
}

1247 
CV_INLINE
 
CvSˇœr
 
	$cvSˇœrAŒ
–
vÆ0123
 )

1249 
CvSˇœr
 
sˇœr
;

1250 
sˇœr
.
vÆ
[0] = 
vÆ0123
;

1251 
sˇœr
.
vÆ
[1] = 
vÆ0123
;

1252 
sˇœr
.
vÆ
[2] = 
vÆ0123
;

1253 
sˇœr
.
vÆ
[3] = 
vÆ0123
;

1254  
sˇœr
;

1255 
	}
}

1263 
	sCvMemBlock


1265 
CvMemBlock
* 
	m¥ev
;

1266 
CvMemBlock
* 
	m√xt
;

1268 
	tCvMemBlock
;

1270 
	#CV_STORAGE_MAGIC_VAL
 0x42890000

	)

1272 
	sCvMemSt‹age


1274 
	msig«tuª
;

1275 
CvMemBlock
* 
	mbŸtom
;

1276 
CvMemBlock
* 
	mt›
;

1277 
CvMemSt‹age
* 
	m∑ª¡
;

1278 
	mblock_size
;

1279 
	m‰ì_•a˚
;

1281 
	tCvMemSt‹age
;

1283 
	#CV_IS_STORAGE
(
°‹age
) \

1284 ((
°‹age
Ë!
NULL
 && \

1285 (((
CvMemSt‹age
*)(
°‹age
))->
sig«tuª
 & 
CV_MAGIC_MASK
Ë=
CV_STORAGE_MAGIC_VAL
)

	)

1288 
	sCvMemSt‹agePos


1290 
CvMemBlock
* 
	mt›
;

1291 
	m‰ì_•a˚
;

1293 
	tCvMemSt‹agePos
;

1298 
	sCvSeqBlock


1300 
CvSeqBlock
* 
	m¥ev
;

1301 
CvSeqBlock
* 
	m√xt
;

1302 
	m°¨t_ödex
;

1304 
	mcou¡
;

1305 
sch¨
* 
	md©a
;

1307 
	tCvSeqBlock
;

1310 
	#CV_TREE_NODE_FIELDS
(
node_ty≥
) \

1311 
Êags
; \

1312 
hódî_size
; \

1313 
node_ty≥
* 
h_¥ev
; \

1314 
node_ty≥
* 
h_√xt
; \

1315 
node_ty≥
* 
v_¥ev
; \

1316 
node_ty≥
* 
v_√xt


	)

1322 
	#CV_SEQUENCE_FIELDS
() \

1323 
	`CV_TREE_NODE_FIELDS
(
CvSeq
); \

1324 
tŸÆ
; \

1325 
ñem_size
; \

1326 
sch¨
* 
block_max
; \

1327 
sch¨
* 
±r
; \

1328 
dñè_ñems
; \

1329 
CvMemSt‹age
* 
°‹age
; \

1330 
CvSeqBlock
* 
‰ì_blocks
; \

1331 
CvSeqBlock
* 
fú°
;

	)

1333 
	sCvSeq


1335 
CV_SEQUENCE_FIELDS
()

1337 
	tCvSeq
;

1339 
	#CV_TYPE_NAME_SEQ
 "›ícv-£quí˚"

	)

1340 
	#CV_TYPE_NAME_SEQ_TREE
 "›ícv-£quí˚-åì"

	)

1349 
	#CV_SET_ELEM_FIELDS
(
ñem_ty≥
) \

1350 
Êags
; \

1351 
ñem_ty≥
* 
√xt_‰ì
;

	)

1353 
	sCvSëEÀm


1355 
CV_SET_ELEM_FIELDS
(
CvSëEÀm
)

1357 
	tCvSëEÀm
;

1359 
	#CV_SET_FIELDS
() \

1360 
	`CV_SEQUENCE_FIELDS
() \

1361 
CvSëEÀm
* 
‰ì_ñems
; \

1362 
a˘ive_cou¡
;

	)

1364 
	sCvSë


1366 
CV_SET_FIELDS
()

1368 
	tCvSë
;

1371 
	#CV_SET_ELEM_IDX_MASK
 ((1 << 26Ë- 1)

	)

1372 
	#CV_SET_ELEM_FREE_FLAG
 (1 << (()*8-1))

	)

1375 
	#CV_IS_SET_ELEM
–
±r
 ) (((
CvSëEÀm
*)’å))->
Êags
 >0)

	)

1397 
	#CV_GRAPH_EDGE_FIELDS
() \

1398 
Êags
; \

1399 
weight
; \

1400 
CvGøphEdge
* 
√xt
[2]; \

1401 
CvGøphVtx
* 
vtx
[2];

	)

1404 
	#CV_GRAPH_VERTEX_FIELDS
() \

1405 
Êags
; \

1406 
CvGøphEdge
* 
fú°
;

	)

1409 
	sCvGøphEdge


1411 
CV_GRAPH_EDGE_FIELDS
()

1413 
	tCvGøphEdge
;

1415 
	sCvGøphVtx


1417 
CV_GRAPH_VERTEX_FIELDS
()

1419 
	tCvGøphVtx
;

1421 
	sCvGøphVtx2D


1423 
CV_GRAPH_VERTEX_FIELDS
()

1424 
CvPoöt2D32f
* 
	m±r
;

1426 
	tCvGøphVtx2D
;

1432 
	#CV_GRAPH_FIELDS
() \

1433 
	`CV_SET_FIELDS
() \

1434 
CvSë
* 
edges
;

	)

1436 
	sCvGøph


1438 
CV_GRAPH_FIELDS
()

1440 
	tCvGøph
;

1442 
	#CV_TYPE_NAME_GRAPH
 "›ícv-gøph"

	)

1446 
	sCvChaö


1448 
CV_SEQUENCE_FIELDS
()

1449 
CvPoöt
 
	m‹igö
;

1451 
	tCvChaö
;

1453 
	#CV_CONTOUR_FIELDS
() \

1454 
	`CV_SEQUENCE_FIELDS
() \

1455 
CvRe˘
 
ª˘
; \

1456 
cﬁ‹
; \

1457 
ª£rved
[3];

	)

1459 
	sCvC⁄tour


1461 
CV_CONTOUR_FIELDS
()

1463 
	tCvC⁄tour
;

1465 
CvC⁄tour
 
	tCvPoöt2DSeq
;

1471 
	#CV_SEQ_MAGIC_VAL
 0x42990000

	)

1473 
	#CV_IS_SEQ
(
£q
) \

1474 ((
£q
Ë!
NULL
 && (((
CvSeq
*)(£q))->
Êags
 & 
CV_MAGIC_MASK
Ë=
CV_SEQ_MAGIC_VAL
)

	)

1476 
	#CV_SET_MAGIC_VAL
 0x42980000

	)

1477 
	#CV_IS_SET
(
£t
) \

1478 ((
£t
Ë!
NULL
 && (((
CvSeq
*)(£t))->
Êags
 & 
CV_MAGIC_MASK
Ë=
CV_SET_MAGIC_VAL
)

	)

1480 
	#CV_SEQ_ELTYPE_BITS
 12

	)

1481 
	#CV_SEQ_ELTYPE_MASK
 ((1 << 
CV_SEQ_ELTYPE_BITS
Ë- 1)

	)

1483 
	#CV_SEQ_ELTYPE_POINT
 
CV_32SC2


	)

1484 
	#CV_SEQ_ELTYPE_CODE
 
CV_8UC1


	)

1485 
	#CV_SEQ_ELTYPE_GENERIC
 0

	)

1486 
	#CV_SEQ_ELTYPE_PTR
 
CV_USRTYPE1


	)

1487 
	#CV_SEQ_ELTYPE_PPOINT
 
CV_SEQ_ELTYPE_PTR


	)

1488 
	#CV_SEQ_ELTYPE_INDEX
 
CV_32SC1


	)

1489 
	#CV_SEQ_ELTYPE_GRAPH_EDGE
 0

	)

1490 
	#CV_SEQ_ELTYPE_GRAPH_VERTEX
 0

	)

1491 
	#CV_SEQ_ELTYPE_TRIAN_ATR
 0

	)

1492 
	#CV_SEQ_ELTYPE_CONNECTED_COMP
 0

	)

1493 
	#CV_SEQ_ELTYPE_POINT3D
 
CV_32FC3


	)

1495 
	#CV_SEQ_KIND_BITS
 2

	)

1496 
	#CV_SEQ_KIND_MASK
 (((1 << 
CV_SEQ_KIND_BITS
Ë- 1)<<
CV_SEQ_ELTYPE_BITS
)

	)

1499 
	#CV_SEQ_KIND_GENERIC
 (0 << 
CV_SEQ_ELTYPE_BITS
)

	)

1500 
	#CV_SEQ_KIND_CURVE
 (1 << 
CV_SEQ_ELTYPE_BITS
)

	)

1501 
	#CV_SEQ_KIND_BIN_TREE
 (2 << 
CV_SEQ_ELTYPE_BITS
)

	)

1504 
	#CV_SEQ_KIND_GRAPH
 (1 << 
CV_SEQ_ELTYPE_BITS
)

	)

1505 
	#CV_SEQ_KIND_SUBDIV2D
 (2 << 
CV_SEQ_ELTYPE_BITS
)

	)

1507 
	#CV_SEQ_FLAG_SHIFT
 (
CV_SEQ_KIND_BITS
 + 
CV_SEQ_ELTYPE_BITS
)

	)

1510 
	#CV_SEQ_FLAG_CLOSED
 (1 << 
CV_SEQ_FLAG_SHIFT
)

	)

1511 
	#CV_SEQ_FLAG_SIMPLE
 (0 << 
CV_SEQ_FLAG_SHIFT
)

	)

1512 
	#CV_SEQ_FLAG_CONVEX
 (0 << 
CV_SEQ_FLAG_SHIFT
)

	)

1513 
	#CV_SEQ_FLAG_HOLE
 (2 << 
CV_SEQ_FLAG_SHIFT
)

	)

1516 
	#CV_GRAPH_FLAG_ORIENTED
 (1 << 
CV_SEQ_FLAG_SHIFT
)

	)

1518 
	#CV_GRAPH
 
CV_SEQ_KIND_GRAPH


	)

1519 
	#CV_ORIENTED_GRAPH
 (
CV_SEQ_KIND_GRAPH
|
CV_GRAPH_FLAG_ORIENTED
)

	)

1522 
	#CV_SEQ_POINT_SET
 (
CV_SEQ_KIND_GENERIC
| 
CV_SEQ_ELTYPE_POINT
)

	)

1523 
	#CV_SEQ_POINT3D_SET
 (
CV_SEQ_KIND_GENERIC
| 
CV_SEQ_ELTYPE_POINT3D
)

	)

1524 
	#CV_SEQ_POLYLINE
 (
CV_SEQ_KIND_CURVE
 | 
CV_SEQ_ELTYPE_POINT
)

	)

1525 
	#CV_SEQ_POLYGON
 (
CV_SEQ_FLAG_CLOSED
 | 
CV_SEQ_POLYLINE
 )

	)

1526 
	#CV_SEQ_CONTOUR
 
CV_SEQ_POLYGON


	)

1527 
	#CV_SEQ_SIMPLE_POLYGON
 (
CV_SEQ_FLAG_SIMPLE
 | 
CV_SEQ_POLYGON
 )

	)

1530 
	#CV_SEQ_CHAIN
 (
CV_SEQ_KIND_CURVE
 | 
CV_SEQ_ELTYPE_CODE
)

	)

1531 
	#CV_SEQ_CHAIN_CONTOUR
 (
CV_SEQ_FLAG_CLOSED
 | 
CV_SEQ_CHAIN
)

	)

1534 
	#CV_SEQ_POLYGON_TREE
 (
CV_SEQ_KIND_BIN_TREE
 | 
CV_SEQ_ELTYPE_TRIAN_ATR
)

	)

1537 
	#CV_SEQ_CONNECTED_COMP
 (
CV_SEQ_KIND_GENERIC
 | 
CV_SEQ_ELTYPE_CONNECTED_COMP
)

	)

1540 
	#CV_SEQ_INDEX
 (
CV_SEQ_KIND_GENERIC
 | 
CV_SEQ_ELTYPE_INDEX
)

	)

1542 
	#CV_SEQ_ELTYPE
–
£q
 ) ((£q)->
Êags
 & 
CV_SEQ_ELTYPE_MASK
)

	)

1543 
	#CV_SEQ_KIND
–
£q
 ) ((£q)->
Êags
 & 
CV_SEQ_KIND_MASK
 )

	)

1546 
	#CV_IS_SEQ_INDEX
–
£q
 ) ((
	`CV_SEQ_ELTYPE
(£qË=
CV_SEQ_ELTYPE_INDEX
) && \

1547 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_GENERIC
))

	)

1549 
	#CV_IS_SEQ_CURVE
–
£q
 ) (
	`CV_SEQ_KIND
(£qË=
CV_SEQ_KIND_CURVE
)

	)

1550 
	#CV_IS_SEQ_CLOSED
–
£q
 ) (((£q)->
Êags
 & 
CV_SEQ_FLAG_CLOSED
Ë!0)

	)

1551 
	#CV_IS_SEQ_CONVEX
–
£q
 ) 0

	)

1552 
	#CV_IS_SEQ_HOLE
–
£q
 ) (((£q)->
Êags
 & 
CV_SEQ_FLAG_HOLE
Ë!0)

	)

1553 
	#CV_IS_SEQ_SIMPLE
–
£q
 ) 1

	)

1556 
	#CV_IS_SEQ_POINT_SET
–
£q
 ) \

1557 ((
	`CV_SEQ_ELTYPE
(
£q
Ë=
CV_32SC2
 || CV_SEQ_ELTYPE(£qË=
CV_32FC2
))

	)

1559 
	#CV_IS_SEQ_POINT_SUBSET
–
£q
 ) \

1560 (
	`CV_IS_SEQ_INDEX
–
£q
 ) || 
	`CV_SEQ_ELTYPE
(£qË=
CV_SEQ_ELTYPE_PPOINT
)

	)

1562 
	#CV_IS_SEQ_POLYLINE
–
£q
 ) \

1563 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_CURVE
 && 
	`CV_IS_SEQ_POINT_SET
(£q))

	)

1565 
	#CV_IS_SEQ_POLYGON
–
£q
 ) \

1566 (
	`CV_IS_SEQ_POLYLINE
(
£q
Ë&& 
	`CV_IS_SEQ_CLOSED
(£q))

	)

1568 
	#CV_IS_SEQ_CHAIN
–
£q
 ) \

1569 (
	`CV_SEQ_KIND
(
£q
Ë=
CV_SEQ_KIND_CURVE
 && (£q)->
ñem_size
 =1)

	)

1571 
	#CV_IS_SEQ_CONTOUR
–
£q
 ) \

1572 (
	`CV_IS_SEQ_CLOSED
(
£q
Ë&& (
	`CV_IS_SEQ_POLYLINE
(£qË|| 
	`CV_IS_SEQ_CHAIN
(£q)))

	)

1574 
	#CV_IS_SEQ_CHAIN_CONTOUR
–
£q
 ) \

1575 (
	`CV_IS_SEQ_CHAIN
–
£q
 ) && 
	`CV_IS_SEQ_CLOSED
–£q ))

	)

1577 
	#CV_IS_SEQ_POLYGON_TREE
–
£q
 ) \

1578 (
	`CV_SEQ_ELTYPE
 (
£q
Ë=
CV_SEQ_ELTYPE_TRIAN_ATR
 && \

1579 
	`CV_SEQ_KIND
–
£q
 ) =
CV_SEQ_KIND_BIN_TREE
 )

	)

1581 
	#CV_IS_GRAPH
–
£q
 ) \

1582 (
	`CV_IS_SET
(
£q
Ë&& 
	`CV_SEQ_KIND
((
CvSë
*)(£q)Ë=
CV_SEQ_KIND_GRAPH
)

	)

1584 
	#CV_IS_GRAPH_ORIENTED
–
£q
 ) \

1585 (((
£q
)->
Êags
 & 
CV_GRAPH_FLAG_ORIENTED
Ë!0)

	)

1587 
	#CV_IS_SUBDIV2D
–
£q
 ) \

1588 (
	`CV_IS_SET
(
£q
Ë&& 
	`CV_SEQ_KIND
((
CvSë
*)(£q)Ë=
CV_SEQ_KIND_SUBDIV2D
)

	)

1594 
	#CV_SEQ_WRITER_FIELDS
() \

1595 
hódî_size
; \

1596 
CvSeq
* 
£q
; \

1597 
CvSeqBlock
* 
block
; \

1598 
sch¨
* 
±r
; \

1599 
sch¨
* 
block_mö
; \

1600 
sch¨
* 
block_max
;

	)

1602 
	sCvSeqWrôî


1604 
CV_SEQ_WRITER_FIELDS
()

1606 
	tCvSeqWrôî
;

1609 
	#CV_SEQ_READER_FIELDS
() \

1610 
hódî_size
; \

1611 
CvSeq
* 
£q
; \

1612 
CvSeqBlock
* 
block
; \

1613 
sch¨
* 
±r
; \

1614 
sch¨
* 
block_mö
; \

1615 
sch¨
* 
block_max
; \

1616 
dñè_ödex
; \

1617 
sch¨
* 
¥ev_ñem
;

	)

1620 
	sCvSeqRódî


1622 
CV_SEQ_READER_FIELDS
()

1624 
	tCvSeqRódî
;

1630 
	#CV_SEQ_ELEM
–
£q
, 
ñem_ty≥
, 
ödex
 ) \

1632 –
	`as£π
(((
£q
)->
fú°
[0]Ë=(
CvSeqBlock
) && \

1633 (
£q
)->
ñem_size
 =(
ñem_ty≥
)), \

1634 (
ñem_ty≥
*)((
£q
)->
fú°
 && ()
ödex
 < \

1635 ()((
£q
)->
fú°
->
cou¡
) ? \

1636 (
£q
)->
fú°
->
d©a
 + (
ödex
Ë* (
ñem_ty≥
) : \

1637 
	`cvGëSeqEÀm
–(
CvSeq
*)(
£q
), (
ödex
Ë)))

	)

1638 
	#CV_GET_SEQ_ELEM
–
ñem_ty≥
, 
£q
, 
ödex
 ) 
	`CV_SEQ_ELEM
–(£q),ÉÀm_ty≥, (ödexË)

	)

1641 
	#CV_WRITE_SEQ_ELEM_VAR
–
ñem_±r
, 
wrôî
 ) \

1643 if–(
wrôî
).
±r
 >(wrôî).
block_max
 ) \

1645 
	`cvCª©eSeqBlock
–&
wrôî
); \

1647 
	`mem˝y
((
wrôî
).
±r
, 
ñem_±r
, (wrôî).
£q
->
ñem_size
);\

1648 (
wrôî
).
±r
 +(wrôî).
£q
->
ñem_size
; \

1649 }

	)

1651 
	#CV_WRITE_SEQ_ELEM
–
ñem
, 
wrôî
 ) \

1653 
	`as£π
–(
wrôî
).
£q
->
ñem_size
 =(
ñem
)); \

1654 if–(
wrôî
).
±r
 >(wrôî).
block_max
 ) \

1656 
	`cvCª©eSeqBlock
–&
wrôî
); \

1658 
	`as£π
–(
wrôî
).
±r
 <(wrôî).
block_max
 - (
ñem
));\

1659 
	`mem˝y
((
wrôî
).
±r
, &(
ñem
), (elem)); \

1660 (
wrôî
).
±r
 +(
ñem
); \

1661 }

	)

1665 
	#CV_NEXT_SEQ_ELEM
–
ñem_size
, 
ªadî
 ) \

1667 if–((
ªadî
).
±r
 +(
ñem_size
)Ë>‘ódî).
block_max
 ) \

1669 
	`cvCh™geSeqBlock
–&(
ªadî
), 1 ); \

1671 }

	)

1675 
	#CV_PREV_SEQ_ELEM
–
ñem_size
, 
ªadî
 ) \

1677 if–((
ªadî
).
±r
 -(
ñem_size
)Ë< (ªadî).
block_mö
 ) \

1679 
	`cvCh™geSeqBlock
–&(
ªadî
), -1 ); \

1681 }

	)

1684 
	#CV_READ_SEQ_ELEM
–
ñem
, 
ªadî
 ) \

1686 
	`as£π
–(
ªadî
).
£q
->
ñem_size
 =(
ñem
)); \

1687 
	`mem˝y
–&(
ñem
), (
ªadî
).
±r
, ((elem))); \

1688 
	`CV_NEXT_SEQ_ELEM
–(
ñem
), 
ªadî
 ) \

1689 }

	)

1692 
	#CV_REV_READ_SEQ_ELEM
–
ñem
, 
ªadî
 ) \

1694 
	`as£π
–(
ªadî
).
£q
->
ñem_size
 =(
ñem
)); \

1695 
	`mem˝y
(&(
ñem
), (
ªadî
).
±r
, ((elem))); \

1696 
	`CV_PREV_SEQ_ELEM
–(
ñem
), 
ªadî
 ) \

1697 }

	)

1700 
	#CV_READ_CHAIN_POINT
–
_±
, 
ªadî
 ) \

1702 (
_±
Ë(
ªadî
).
±
; \

1703 if–(
ªadî
).
±r
 ) \

1705 
	`CV_READ_SEQ_ELEM
–(
ªadî
).
code
, (reader)); \

1706 
	`as£π
–((
ªadî
).
code
 & ~7) == 0 ); \

1707 (
ªadî
).
±
.
x
 +‘ódî).
dñès
[()‘ódî).
code
][0]; \

1708 (
ªadî
).
±
.
y
 +‘ódî).
dñès
[()‘ódî).
code
][1]; \

1710 }

	)

1712 
	#CV_CURRENT_POINT
–
ªadî
 ) (*((
CvPoöt
*)(‘ódî).
±r
)))

	)

1713 
	#CV_PREV_POINT
–
ªadî
 ) (*((
CvPoöt
*)(‘ódî).
¥ev_ñem
)))

	)

1715 
	#CV_READ_EDGE
–
±1
, 
±2
, 
ªadî
 ) \

1717 
	`as£π
–(
±1
Ë=(
CvPoöt
) && \

1718 (
±2
Ë=(
CvPoöt
) && \

1719 
ªadî
.
£q
->
ñem_size
 =(
CvPoöt
)); \

1720 (
±1
Ë
	`CV_PREV_POINT
–
ªadî
 ); \

1721 (
±2
Ë
	`CV_CURRENT_POINT
–
ªadî
 ); \

1722 (
ªadî
).
¥ev_ñem
 = (ªadî).
±r
; \

1723 
	`CV_NEXT_SEQ_ELEM
–(
CvPoöt
), (
ªadî
)); \

1724 }

	)

1729 
	#CV_NEXT_GRAPH_EDGE
–
edge
, 
vîãx
 ) \

1730 (
	`as£π
((
edge
)->
vtx
[0] =(
vîãx
) || (edge)->vtx[1] == (vertex)), \

1731 (
edge
)->
√xt
[”dge)->
vtx
[1] =(
vîãx
)])

	)

1740 
CvFûeSt‹age
 
	tCvFûeSt‹age
;

1743 
	#CV_STORAGE_READ
 0

	)

1744 
	#CV_STORAGE_WRITE
 1

	)

1745 
	#CV_STORAGE_WRITE_TEXT
 
CV_STORAGE_WRITE


	)

1746 
	#CV_STORAGE_WRITE_BINARY
 
CV_STORAGE_WRITE


	)

1747 
	#CV_STORAGE_APPEND
 2

	)

1748 
	#CV_STORAGE_MEMORY
 4

	)

1749 
	#CV_STORAGE_FORMAT_MASK
 (7<<3)

	)

1750 
	#CV_STORAGE_FORMAT_AUTO
 0

	)

1751 
	#CV_STORAGE_FORMAT_XML
 8

	)

1752 
	#CV_STORAGE_FORMAT_YAML
 16

	)

1755 
	sCvAârLi°


1757 c⁄° ** 
	m©å
;

1758 
CvAârLi°
* 
	m√xt
;

1760 
	tCvAârLi°
;

1762 
CV_INLINE
 
CvAârLi°
 
cvAârLi°
–c⁄° ** 
©å
 
CV_DEFAULT
(
NULL
),

1763 
CvAârLi°
* 
√xt
 
	$CV_DEFAULT
(
NULL
) )

1765 
CvAârLi°
 
l
;

1766 
l
.
©å
 =áttr;

1767 
l
.
√xt
 =Çext;

1769  
l
;

1770 
	}
}

1772 
	gCvTy≥Info
;

1774 
	#CV_NODE_NONE
 0

	)

1775 
	#CV_NODE_INT
 1

	)

1776 
	#CV_NODE_INTEGER
 
CV_NODE_INT


	)

1777 
	#CV_NODE_REAL
 2

	)

1778 
	#CV_NODE_FLOAT
 
CV_NODE_REAL


	)

1779 
	#CV_NODE_STR
 3

	)

1780 
	#CV_NODE_STRING
 
CV_NODE_STR


	)

1781 
	#CV_NODE_REF
 4

	)

1782 
	#CV_NODE_SEQ
 5

	)

1783 
	#CV_NODE_MAP
 6

	)

1784 
	#CV_NODE_TYPE_MASK
 7

	)

1786 
	#CV_NODE_TYPE
(
Êags
Ë((ÊagsË& 
CV_NODE_TYPE_MASK
)

	)

1789 
	#CV_NODE_FLOW
 8

	)

1790 
	#CV_NODE_USER
 16

	)

1791 
	#CV_NODE_EMPTY
 32

	)

1792 
	#CV_NODE_NAMED
 64

	)

1794 
	#CV_NODE_IS_INT
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_INT
)

	)

1795 
	#CV_NODE_IS_REAL
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_REAL
)

	)

1796 
	#CV_NODE_IS_STRING
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_STRING
)

	)

1797 
	#CV_NODE_IS_SEQ
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_SEQ
)

	)

1798 
	#CV_NODE_IS_MAP
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË=
CV_NODE_MAP
)

	)

1799 
	#CV_NODE_IS_COLLECTION
(
Êags
Ë(
	`CV_NODE_TYPE
(ÊagsË>
CV_NODE_SEQ
)

	)

1800 
	#CV_NODE_IS_FLOW
(
Êags
Ë(((ÊagsË& 
CV_NODE_FLOW
Ë!0)

	)

1801 
	#CV_NODE_IS_EMPTY
(
Êags
Ë(((ÊagsË& 
CV_NODE_EMPTY
Ë!0)

	)

1802 
	#CV_NODE_IS_USER
(
Êags
Ë(((ÊagsË& 
CV_NODE_USER
Ë!0)

	)

1803 
	#CV_NODE_HAS_NAME
(
Êags
Ë(((ÊagsË& 
CV_NODE_NAMED
Ë!0)

	)

1805 
	#CV_NODE_SEQ_SIMPLE
 256

	)

1806 
	#CV_NODE_SEQ_IS_SIMPLE
(
£q
Ë(((£q)->
Êags
 & 
CV_NODE_SEQ_SIMPLE
Ë!0)

	)

1808 
	sCvSåög


1810 
	mÀn
;

1811 * 
	m±r
;

1813 
	tCvSåög
;

1817 
	sCvSåögHashNode


1819 
	mhashvÆ
;

1820 
CvSåög
 
	m°r
;

1821 
CvSåögHashNode
* 
	m√xt
;

1823 
	tCvSåögHashNode
;

1825 
CvGíîicHash
 
	tCvFûeNodeHash
;

1828 
	sCvFûeNode


1830 
	mèg
;

1831 
CvTy≥Info
* 
	möfo
;

1835 
	mf
;

1836 
	mi
;

1837 
CvSåög
 
	m°r
;

1838 
CvSeq
* 
	m£q
;

1839 
CvFûeNodeHash
* 
	mm≠
;

1840 } 
	md©a
;

1842 
	tCvFûeNode
;

1844 #ifde‡
__˝lu•lus


1847 (
CV_CDECL
 *
	tCvIsIn°™˚Func
)–c⁄° * 
	t°ru˘_±r
 );

1848 (
CV_CDECL
 *
	tCvRñó£Func
)–** 
	t°ru˘_dbÕå
 );

1849 * (
	tCV_CDECL
 *
	tCvRódFunc
)–
	tCvFûeSt‹age
* 
	t°‹age
, 
	tCvFûeNode
* 
	tnode
 );

1850 (
CV_CDECL
 *
	tCvWrôeFunc
)–
	tCvFûeSt‹age
* 
	t°‹age
, c⁄° * 
	t«me
,

1851 c⁄° * 
	t°ru˘_±r
, 
	tCvAârLi°
 
	t©åibuãs
 );

1852 * (
	tCV_CDECL
 *
	tCvCl⁄eFunc
)–c⁄° * 
	t°ru˘_±r
 );

1853 #ifde‡
__˝lu•lus


1857 
	sCvTy≥Info


1859 
Êags
;

1860 
hódî_size
;

1861 
CvTy≥Info
* 
¥ev
;

1862 
CvTy≥Info
* 
√xt
;

1863 c⁄° * 
ty≥_«me
;

1864 
CvIsIn°™˚Func
 
is_ö°™˚
;

1865 
CvRñó£Func
 
ªÀa£
;

1866 
CvRódFunc
 
ªad
;

1867 
CvWrôeFunc
 
wrôe
;

1868 
CvCl⁄eFunc
 
˛⁄e
;

1870 
	tCvTy≥Info
;

1875 
	sCvPlugöFuncInfo


1877 ** 
	mfunc_addr
;

1878 * 
	mdeÁu…_func_addr
;

1879 c⁄° * 
	mfunc_«mes
;

1880 
	m£¨ch_moduÀs
;

1881 
	mlﬂded_‰om
;

1883 
	tCvPlugöFuncInfo
;

1885 
	sCvModuÀInfo


1887 
CvModuÀInfo
* 
	m√xt
;

1888 c⁄° * 
	m«me
;

1889 c⁄° * 
	mvîsi⁄
;

1890 
CvPlugöFuncInfo
* 
	mfunc_èb
;

1892 
	tCvModuÀInfo
;

	@/usr/include/opencv2/core/version.hpp

47 #i‚de‡
__OPENCV_VERSION_HPP__


48 
	#__OPENCV_VERSION_HPP__


	)

50 
	#CV_VERSION_EPOCH
 2

	)

51 
	#CV_VERSION_MAJOR
 4

	)

52 
	#CV_VERSION_MINOR
 9

	)

53 
	#CV_VERSION_REVISION
 1

	)

55 
	#CVAUX_STR_EXP
(
__A
Ë#__A

	)

56 
	#CVAUX_STR
(
__A
Ë
	`CVAUX_STR_EXP
(__A)

	)

58 
	#CVAUX_STRW_EXP
(
__A
Ë
L
#__A

	)

59 
	#CVAUX_STRW
(
__A
Ë
	`CVAUX_STRW_EXP
(__A)

	)

61 #i‡
CV_VERSION_REVISION


62 
	#CV_VERSION
 
	`CVAUX_STR
(
CV_VERSION_EPOCH
Ë"." CVAUX_STR(
CV_VERSION_MAJOR
Ë"." CVAUX_STR(
CV_VERSION_MINOR
Ë"." CVAUX_STR(
CV_VERSION_REVISION
)

	)

64 
	#CV_VERSION
 
	`CVAUX_STR
(
CV_VERSION_EPOCH
Ë"." CVAUX_STR(
CV_VERSION_MAJOR
Ë"." CVAUX_STR(
CV_VERSION_MINOR
)

	)

68 
	#CV_MAJOR_VERSION
 
CV_VERSION_EPOCH


	)

69 
	#CV_MINOR_VERSION
 
CV_VERSION_MAJOR


	)

70 
	#CV_SUBMINOR_VERSION
 
CV_VERSION_MINOR


	)

	@/usr/include/opencv2/features2d/features2d.hpp

43 #i‚de‡
__OPENCV_FEATURES_2D_HPP__


44 
	#__OPENCV_FEATURES_2D_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/Ê™n/möiÊ™n.hµ
"

49 #ifde‡
__˝lu•lus


50 
	~<limôs
>

52 
«me•a˚
 
	gcv


55 
CV_EXPORTS
 
boﬁ
 
öôModuÀ_„©uªs2d
();

69 ˛as†
	cCV_EXPORTS_W_SIMPLE
 
	gKeyPoöt


71 
	gpublic
:

73 
CV_WRAP
 
KeyPoöt
(Ë: 
±
(0,0), 
size
(0), 
™gÀ
(-1), 
ª•⁄£
(0), 
o˘ave
(0), 
˛ass_id
(-1) {}

75 
KeyPoöt
(
Poöt2f
 
_±
, 
_size
, 
_™gÀ
=-1,

76 
_ª•⁄£
=0, 
_o˘ave
=0, 
_˛ass_id
=-1)

77 : 
±
(
_±
), 
size
(
_size
), 
™gÀ
(
_™gÀ
),

78 
ª•⁄£
(
_ª•⁄£
), 
o˘ave
(
_o˘ave
), 
˛ass_id
(
_˛ass_id
) {}

80 
CV_WRAP
 
KeyPoöt
(
x
, 
y
, 
_size
, 
_™gÀ
=-1,

81 
_ª•⁄£
=0, 
_o˘ave
=0, 
_˛ass_id
=-1)

82 : 
±
(
x
, 
y
), 
size
(
_size
), 
™gÀ
(
_™gÀ
),

83 
ª•⁄£
(
_ª•⁄£
), 
o˘ave
(
_o˘ave
), 
˛ass_id
(
_˛ass_id
) {}

85 
size_t
 
hash
() const;

88 
c⁄vît
(c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

89 
CV_OUT
 
ve˘‹
<
Poöt2f
>& 
poöts2f
,

90 c⁄° 
ve˘‹
<>& 
keypoötIndexes
=vector<>());

92 
c⁄vît
(c⁄° 
ve˘‹
<
Poöt2f
>& 
poöts2f
,

93 
CV_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

94 
size
=1, 
ª•⁄£
=1, 
o˘ave
=0, 
˛ass_id
=-1);

99 
ovîœp
(c⁄° 
KeyPoöt
& 
kp1
, c⁄° KeyPoöt& 
kp2
);

101 
CV_PROP_RW
 
Poöt2f
 
	g±
;

102 
CV_PROP_RW
 
	gsize
;

103 
CV_PROP_RW
 
	g™gÀ
;

106 
CV_PROP_RW
 
	gª•⁄£
;

107 
CV_PROP_RW
 
	go˘ave
;

108 
CV_PROP_RW
 
	g˛ass_id
;

112 
CV_EXPORTS
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
°rög
& 
«me
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts
);

114 
CV_EXPORTS
 
ªad
(c⁄° 
FûeNode
& 
node
, 
CV_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
);

121 ˛as†
	cCV_EXPORTS
 
	gKeyPoötsFûãr


123 
	gpublic
:

124 
KeyPoötsFûãr
(){}

129 
runByImageB‹dî
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
, 
Size
 
imageSize
, 
b‹dîSize
 );

133 
runByKeypoötSize
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
, 
möSize
,

134 
maxSize
=
FLT_MAX
 );

138 
runByPixñsMask
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° 
M©
& 
mask
 );

142 
ªmoveDu∂iˇãd
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
 );

147 
ªèöBe°
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
, 
≈oöts
 );

156 ˛as†
	cCV_EXPORTS_W
 
	gFótuªDëe˘‹
 : 
public
 
vútuÆ
 
Alg‹ôhm


158 
public
:

159 
vútuÆ
 ~
FótuªDëe˘‹
();

168 
CV_WRAP
 
dëe˘
–c⁄° 
M©
& 
image
, 
CV_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

176 
dëe˘
–c⁄° 
ve˘‹
<
M©
>& 
images
, ve˘‹<ve˘‹<
KeyPoöt
> >& 
keypoöts
, c⁄° ve˘‹<M©>& 
masks
=vector<Mat>() ) const;

179 
CV_WRAP
 
vútuÆ
 
boﬁ
 
em±y
() const;

182 
CV_WRAP
 
	gPå
<
	gFótuªDëe˘‹
> 
¸óã
–c⁄° 
°rög
& 
dëe˘‹Ty≥
 );

184 
	g¥Ÿe˘ed
:

185 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const = 0;

192 
ªmoveInvÆidPoöts
–c⁄° 
M©
& 
mask
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
 );

205 ˛as†
	cCV_EXPORTS_W
 
	gDes¸ùt‹Exåa˘‹
 : 
public
 
vútuÆ
 
Alg‹ôhm


207 
public
:

208 
vútuÆ
 ~
Des¸ùt‹Exåa˘‹
();

216 
CV_WRAP
 
compuã
–c⁄° 
M©
& 
image
, 
CV_OUT
 
CV_IN_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, CV_OUT M©& 
des¸ùt‹s
 ) const;

225 
compuã
–c⁄° 
ve˘‹
<
M©
>& 
images
, ve˘‹<ve˘‹<
KeyPoöt
> >& 
keypoöts
, ve˘‹<M©>& 
des¸ùt‹s
 ) const;

227 
CV_WRAP
 
vútuÆ
 
des¸ùt‹Size
() const = 0;

228 
CV_WRAP
 
vútuÆ
 
des¸ùt‹Ty≥
() const = 0;

230 
CV_WRAP
 
vútuÆ
 
boﬁ
 
em±y
() const;

232 
CV_WRAP
 
	gPå
<
	gDes¸ùt‹Exåa˘‹
> 
¸óã
–c⁄° 
°rög
& 
des¸ùt‹Exåa˘‹Ty≥
 );

234 
	g¥Ÿe˘ed
:

235 
vútuÆ
 
compuãIm∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
 ) const = 0;

240 
ªmoveB‹dîKeypoöts
–
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

241 
Size
 
imageSize
, 
b‹dîSize
 );

249 
˛ass
 
CV_EXPORTS_W
 
	gFótuª2D
 : 
public
 
FótuªDëe˘‹
,Öubli¯
	gDes¸ùt‹Exåa˘‹


251 
	gpublic
:

261 
CV_WRAP_AS
(
dëe˘AndCompuã
Ë
vútuÆ
 
›î©‹
()–
I≈utAºay
 
image
, I≈utAºay 
	gmask
,

262 
CV_OUT
 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
,

263 
OuçutAºay
 
	gdes¸ùt‹s
,

264 
boﬁ
 
	gu£ProvidedKeypoöts
=
Ál£
 ) const = 0;

266 
CV_WRAP
 
compuã
–c⁄° 
M©
& 
image
, 
CV_OUT
 
CV_IN_OUT
 
°d
::
ve˘‹
<
KeyPoöt
>& 
keypoöts
, CV_OUT M©& 
des¸ùt‹s
 ) const;

269 
CV_WRAP
 
	gPå
<
	gFótuª2D
> 
¸óã
–c⁄° 
°rög
& 
«me
 );

275 ˛as†
	cCV_EXPORTS_W
 
	gBRISK
 : 
public
 
Fótuª2D


277 
public
:

278 
CV_WRAP
 
ex∂icô
 
BRISK
(
thªsh
=30, 
o˘aves
=3, 
∑âînSˇÀ
=1.0f);

280 
	gvútuÆ
 ~
BRISK
();

283 
des¸ùt‹Size
() const;

285 
des¸ùt‹Ty≥
() const;

288 
›î©‹
()(
I≈utAºay
 
	gimage
, I≈utAºay 
	gmask
, 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
) const;

291 
›î©‹
()–
I≈utAºay
 
	gimage
, I≈utAºay 
	gmask
, 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
,

292 
OuçutAºay
 
	gdes¸ùt‹s
, 
boﬁ
 
	gu£ProvidedKeypoöts
=
Ál£
 ) const;

294 
Alg‹ôhmInfo
* 
öfo
() const;

297 
CV_WRAP
 
ex∂icô
 
BRISK
(
°d
::
ve˘‹
<> &
ødiusLi°
, std::ve˘‹<> &
numbîLi°
,

298 
dMax
=5.85f, 
dMö
=8.2f, 
°d
::
ve˘‹
<> 
ödexCh™ge
=std::vector<>());

303 
CV_WRAP
 
gíî©eKî√l
(
°d
::
ve˘‹
<> &
ødiusLi°
,

304 
°d
::
ve˘‹
<> &
numbîLi°
, 
dMax
=5.85f, 
dMö
=8.2f,

305 
°d
::
ve˘‹
<> 
ödexCh™ge
=std::vector<>());

307 
	g¥Ÿe˘ed
:

309 
compuãIm∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
 ) const;

310 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

312 
compuãKeypoötsNoOrõ¡©i⁄
(
I≈utAºay
 
image
, I≈utAºay 
mask
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
) const;

313 
compuãDes¸ùt‹sAndOrOrõ¡©i⁄
(
I≈utAºay
 
image
, I≈utAºay 
mask
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

314 
OuçutAºay
 
des¸ùt‹s
, 
boﬁ
 
doDes¸ùt‹s
, boﬁ 
doOrõ¡©i⁄
,

315 
boﬁ
 
u£ProvidedKeypoöts
) const;

318 
CV_PROP_RW
 
	gthªshﬁd
;

319 
CV_PROP_RW
 
	go˘aves
;

322 
	sBriskP©ã∫Poöt
{

323 
	gx
;

324 
	gy
;

325 
	gsigma
;

327 
	sBriskSh‹tPaú
{

328 
	gi
;

329 
	gj
;

331 
	sBriskL⁄gPaú
{

332 
	gi
;

333 
	gj
;

334 
	gweighãd_dx
;

335 
	gweighãd_dy
;

337 
ölöe
 
smoŸhedI¡ísôy
(c⁄° 
cv
::
M©
& 
image
,

338 c⁄° 
cv
::
M©
& 
öãgøl
,c⁄° 
key_x
,

339 c⁄° 
key_y
, c⁄° 
sˇÀ
,

340 c⁄° 
rŸ
, c⁄° 
poöt
) const;

342 
BriskP©ã∫Poöt
* 
	g∑âînPoöts_
;

343 
	gpoöts_
;

344 * 
	gsˇÀLi°_
;

345 * 
	gsizeLi°_
;

346 c⁄° 
	gsˇÀs_
;

347 c⁄° 
	gsˇÀønge_
;

348 c⁄° 
	gn_rŸ_
;

351 
	g°rögs_
;

352 
	gdMax_
;

353 
	gdMö_
;

354 
BriskSh‹tPaú
* 
	gsh‹tPaús_
;

355 
BriskL⁄gPaú
* 
	gl⁄gPaús_
;

356 
	gnoSh‹tPaús_
;

357 
	gnoL⁄gPaús_
;

360 c⁄° 
	gbasicSize_
;

367 ˛as†
	cCV_EXPORTS_W
 
	gORB
 : 
public
 
Fótuª2D


369 
public
:

371 íum { 
kByãs
 = 32, 
	gHARRIS_SCORE
=0, 
	gFAST_SCORE
=1 };

373 
CV_WRAP
 
ex∂icô
 
ORB
(
n„©uªs
 = 500, 
sˇÀFa˘‹
 = 1.2f, 
∆evñs
 = 8, 
edgeThªshﬁd
 = 31,

374 
fú°Levñ
 = 0, 
WTA_K
=2, 
sc‹eTy≥
=
ORB
::
HARRIS_SCORE
, 
∑tchSize
=31 );

377 
des¸ùt‹Size
() const;

379 
des¸ùt‹Ty≥
() const;

382 
›î©‹
()(
I≈utAºay
 
	gimage
, I≈utAºay 
	gmask
, 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
) const;

385 
›î©‹
()–
I≈utAºay
 
	gimage
, I≈utAºay 
	gmask
, 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
,

386 
OuçutAºay
 
	gdes¸ùt‹s
, 
boﬁ
 
	gu£ProvidedKeypoöts
=
Ál£
 ) const;

388 
Alg‹ôhmInfo
* 
öfo
() const;

390 
	g¥Ÿe˘ed
:

392 
compuãIm∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
 ) const;

393 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

395 
CV_PROP_RW
 
	gn„©uªs
;

396 
CV_PROP_RW
 
	gsˇÀFa˘‹
;

397 
CV_PROP_RW
 
	g∆evñs
;

398 
CV_PROP_RW
 
	gedgeThªshﬁd
;

399 
CV_PROP_RW
 
	gfú°Levñ
;

400 
CV_PROP_RW
 
	gWTA_K
;

401 
CV_PROP_RW
 
	gsc‹eTy≥
;

402 
CV_PROP_RW
 
	g∑tchSize
;

405 
ORB
 
	tOrbFótuªDëe˘‹
;

406 
ORB
 
	tOrbDes¸ùt‹Exåa˘‹
;

411 ˛as†
	cCV_EXPORTS
 
	gFREAK
 : 
public
 
Des¸ùt‹Exåa˘‹


413 
public
:

421 
ex∂icô
 
FREAK
–
boﬁ
 
‹õ¡©i⁄N‹mÆized
 = 
åue
,

422 
boﬁ
 
sˇÀN‹mÆized
 = 
åue
,

423 
∑âînSˇÀ
 = 22.0f,

424 
nO˘aves
 = 4,

425 c⁄° 
ve˘‹
<>& 
£À˘edPaús
 = vector<>());

426 
FREAK
–c⁄° FREAK& 
rhs
 );

427 
	gFREAK
& 
	g›î©‹
=–c⁄° 
FREAK
& );

429 
	gvútuÆ
 ~
FREAK
();

432 
vútuÆ
 
des¸ùt‹Size
() const;

435 
vútuÆ
 
des¸ùt‹Ty≥
() const;

444 
	gve˘‹
<> 
£À˘Paús
–c⁄° 
ve˘‹
<
M©
>& 
images
, ve˘‹<ve˘‹<
KeyPoöt
> >& 
keypoöts
,

445 c⁄° 
c‹rThªsh
 = 0.7, 
boﬁ
 
vîbo£
 = 
åue
 );

447 
Alg‹ôhmInfo
* 
öfo
() const;

451 
	gNB_SCALES
 = 64, 
	gNB_PAIRS
 = 512, 
	gNB_ORIENPAIRS
 = 45

454 
	g¥Ÿe˘ed
:

455 
vútuÆ
 
compuãIm∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
 ) const;

456 
buûdP©ã∫
();

457 
uch¨
 
mónI¡ísôy
–c⁄° 
M©
& 
image
, c⁄° M©& 
öãgøl
, c⁄° 
kp_x
, c⁄° 
kp_y
,

458 c⁄° 
sˇÀ
, c⁄° 
rŸ
, c⁄° 
poöt
 ) const;

460 
boﬁ
 
	g‹õ¡©i⁄N‹mÆized
;

461 
boﬁ
 
	gsˇÀN‹mÆized
;

462 
	g∑âînSˇÀ
;

463 
	gnO˘aves
;

464 
boﬁ
 
	gextAŒ
;

466 
	g∑âînSˇÀ0
;

467 
	gnO˘aves0
;

468 
	gve˘‹
<> 
	g£À˘edPaús0
;

470 
	sP©ã∫Poöt


472 
	gx
;

473 
	gy
;

474 
	gsigma
;

477 
	sDes¸ùti⁄Paú


479 
uch¨
 
	gi
;

480 
uch¨
 
	gj
;

483 
	sOrõ¡©i⁄Paú


485 
uch¨
 
	gi
;

486 
uch¨
 
	gj
;

487 
	gweight_dx
;

488 
	gweight_dy
;

491 
	gve˘‹
<
	gP©ã∫Poöt
> 
	g∑âînLookup
;

492 
	g∑âînSizes
[
NB_SCALES
];

493 
Des¸ùti⁄Paú
 
	gdes¸ùti⁄Paús
[
NB_PAIRS
];

494 
Orõ¡©i⁄Paú
 
	g‹õ¡©i⁄Paús
[
NB_ORIENPAIRS
];

507 ˛as†
	cCV_EXPORTS_W
 
	gMSER
 : 
public
 
FótuªDëe˘‹


509 
public
:

511 
CV_WRAP
 
ex∂icô
 
MSER
–
_dñè
=5, 
_mö_¨ó
=60, 
_max_¨ó
=14400,

512 
_max_v¨üti⁄
=0.25, 
_mö_divîsôy
=.2,

513 
_max_evﬁuti⁄
=200, 
_¨ó_thªshﬁd
=1.01,

514 
_mö_m¨gö
=0.003, 
_edge_blur_size
=5 );

517 
CV_WRAP_AS
(
dëe˘
Ë
›î©‹
()–c⁄° 
	gM©
& 
	gimage
, 
CV_OUT
 
	gve˘‹
<ve˘‹<
	gPoöt
> >& 
	gm£rs
,

518 c⁄° 
	gM©
& 
	gmask
=
M©
() ) const;

519 
Alg‹ôhmInfo
* 
öfo
() const;

521 
	g¥Ÿe˘ed
:

522 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

524 
	gdñè
;

525 
	gmöAªa
;

526 
	gmaxAªa
;

527 
	gmaxV¨üti⁄
;

528 
	gmöDivîsôy
;

529 
	gmaxEvﬁuti⁄
;

530 
	g¨óThªshﬁd
;

531 
	gmöM¨gö
;

532 
	gedgeBlurSize
;

535 
MSER
 
	tM£rFótuªDëe˘‹
;

542 ˛as†
	cCV_EXPORTS_W
 
	gSèrDëe˘‹
 : 
public
 
FótuªDëe˘‹


544 
public
:

546 
CV_WRAP
 
SèrDëe˘‹
(
_maxSize
=45, 
_ª•⁄£Thªshﬁd
=30,

547 
_löeThªshﬁdProje˘ed
=10,

548 
_löeThªshﬁdBö¨ized
=8,

549 
_suµªssN⁄maxSize
=5);

552 
CV_WRAP_AS
(
dëe˘
Ë
›î©‹
()(c⁄° 
	gM©
& 
	gimage
,

553 
CV_OUT
 
	gve˘‹
<
	gKeyPoöt
>& 
	gkeypoöts
) const;

555 
Alg‹ôhmInfo
* 
öfo
() const;

557 
	g¥Ÿe˘ed
:

558 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

560 
	gmaxSize
;

561 
	gª•⁄£Thªshﬁd
;

562 
	glöeThªshﬁdProje˘ed
;

563 
	glöeThªshﬁdBö¨ized
;

564 
	gsuµªssN⁄maxSize
;

568 
CV_EXPORTS
 
FAST
–
I≈utAºay
 
image
, 
CV_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

569 
thªshﬁd
, 
boﬁ
 
n⁄maxSuµªssi⁄
=
åue
 );

571 
CV_EXPORTS
 
FASTX
–
I≈utAºay
 
image
, 
CV_OUT
 
ve˘‹
<
KeyPoöt
>& 
keypoöts
,

572 
thªshﬁd
, 
boﬁ
 
n⁄maxSuµªssi⁄
, 
ty≥
 );

574 ˛as†
	cCV_EXPORTS_W
 
	gFa°FótuªDëe˘‹
 : 
public
 
FótuªDëe˘‹


576 
public
:

580 
TYPE_5_8
 = 0, 
	gTYPE_7_12
 = 1, 
	gTYPE_9_16
 = 2

583 
CV_WRAP
 
Fa°FótuªDëe˘‹
–
thªshﬁd
=10, 
boﬁ
 
n⁄maxSuµªssi⁄
=
åue
 );

584 
Alg‹ôhmInfo
* 
öfo
() const;

586 
	g¥Ÿe˘ed
:

587 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

589 
	gthªshﬁd
;

590 
boﬁ
 
	gn⁄maxSuµªssi⁄
;

594 ˛as†
	cCV_EXPORTS_W
 
	gGFTTDëe˘‹
 : 
public
 
FótuªDëe˘‹


596 
public
:

597 
CV_WRAP
 
GFTTDëe˘‹
–
maxC‹√rs
=1000, 
quÆôyLevñ
=0.01, 
möDi°™˚
=1,

598 
blockSize
=3, 
boﬁ
 
u£H¨risDëe˘‹
=
Ál£
, 
k
=0.04 );

599 
Alg‹ôhmInfo
* 
öfo
() const;

601 
	g¥Ÿe˘ed
:

602 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

604 
	gn„©uªs
;

605 
	gquÆôyLevñ
;

606 
	gmöDi°™˚
;

607 
	gblockSize
;

608 
boﬁ
 
	gu£H¨risDëe˘‹
;

609 
	gk
;

612 
GFTTDëe˘‹
 
	tGoodFótuªsToTøckDëe˘‹
;

613 
SèrDëe˘‹
 
	tSèrFótuªDëe˘‹
;

615 ˛as†
	cCV_EXPORTS_W
 
	gSim∂eBlobDëe˘‹
 : 
public
 
FótuªDëe˘‹


617 
public
:

618 
CV_EXPORTS_W_SIMPLE
 
P¨ams


620 
CV_WRAP
 
P¨ams
();

621 
CV_PROP_RW
 
	gthªshﬁdSãp
;

622 
CV_PROP_RW
 
	gmöThªshﬁd
;

623 
CV_PROP_RW
 
	gmaxThªshﬁd
;

624 
CV_PROP_RW
 
size_t
 
	gmöRïóèbûôy
;

625 
CV_PROP_RW
 
	gmöDi°BëwìnBlobs
;

627 
CV_PROP_RW
 
boﬁ
 
	gfûãrByCﬁ‹
;

628 
CV_PROP_RW
 
uch¨
 
	gblobCﬁ‹
;

630 
CV_PROP_RW
 
boﬁ
 
	gfûãrByAªa
;

631 
CV_PROP_RW
 
	gmöAªa
, 
	gmaxAªa
;

633 
CV_PROP_RW
 
boﬁ
 
	gfûãrByCúcuœrôy
;

634 
CV_PROP_RW
 
	gmöCúcuœrôy
, 
	gmaxCúcuœrôy
;

636 
CV_PROP_RW
 
boﬁ
 
	gfûãrByI√πü
;

637 
CV_PROP_RW
 
	gmöI√πüR©io
, 
	gmaxI√πüR©io
;

639 
CV_PROP_RW
 
boﬁ
 
	gfûãrByC⁄vexôy
;

640 
CV_PROP_RW
 
	gmöC⁄vexôy
, 
	gmaxC⁄vexôy
;

642 
ªad
–c⁄° 
FûeNode
& 
‚
 );

643 
wrôe
–
FûeSt‹age
& 
fs
 ) const;

646 
CV_WRAP
 
Sim∂eBlobDëe˘‹
(c⁄° Sim∂eBlobDëe˘‹::
P¨ams
 &
∑ømëîs
 = SimpleBlobDetector::Params());

648 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& 
‚
 );

649 
vútuÆ
 
wrôe
–
FûeSt‹age
& 
fs
 ) const;

651 
	g¥Ÿe˘ed
:

652 
CV_EXPORTS
 
Cíãr


654 
Poöt2d
 
loˇti⁄
;

655 
	gødius
;

656 
	gc⁄fidí˚
;

659 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

660 
vútuÆ
 
födBlobs
(c⁄° 
M©
 &
image
, c⁄° M© &
bö¨yImage
, 
ve˘‹
<
Cíãr
> &
˚¡îs
) const;

662 
P¨ams
 
	g∑øms
;

663 
Alg‹ôhmInfo
* 
öfo
() const;

667 ˛as†
	cCV_EXPORTS
 
	gDí£FótuªDëe˘‹
 : 
public
 
FótuªDëe˘‹


669 
public
:

670 
ex∂icô
 
Dí£FótuªDëe˘‹
–
öôFótuªSˇÀ
=1.f, 
„©uªSˇÀLevñs
=1,

671 
„©uªSˇÀMul
=0.1f,

672 
öôXySãp
=6, 
öôImgBound
=0,

673 
boﬁ
 
v¨yXySãpWôhSˇÀ
=
åue
,

674 
boﬁ
 
v¨yImgBoundWôhSˇÀ
=
Ál£
 );

675 
Alg‹ôhmInfo
* 
öfo
() const;

677 
	g¥Ÿe˘ed
:

678 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

680 
	göôFótuªSˇÀ
;

681 
	g„©uªSˇÀLevñs
;

682 
	g„©uªSˇÀMul
;

684 
	göôXySãp
;

685 
	göôImgBound
;

687 
boﬁ
 
	gv¨yXySãpWôhSˇÀ
;

688 
boﬁ
 
	gv¨yImgBoundWôhSˇÀ
;

695 ˛as†
	cCV_EXPORTS_W
 
	gGridAd≠ãdFótuªDëe˘‹
 : 
public
 
FótuªDëe˘‹


697 
public
:

705 
CV_WRAP
 
GridAd≠ãdFótuªDëe˘‹
–c⁄° 
På
<
FótuªDëe˘‹
>& 
dëe˘‹
=0,

706 
maxTŸÆKeypoöts
=1000,

707 
gridRows
=4, 
gridCﬁs
=4 );

710 
vútuÆ
 
boﬁ
 
em±y
() const;

712 
Alg‹ôhmInfo
* 
öfo
() const;

714 
	g¥Ÿe˘ed
:

715 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

717 
	gPå
<
	gFótuªDëe˘‹
> 
	gdëe˘‹
;

718 
	gmaxTŸÆKeypoöts
;

719 
	ggridRows
;

720 
	ggridCﬁs
;

727 ˛as†
	cCV_EXPORTS_W
 
	gPyømidAd≠ãdFótuªDëe˘‹
 : 
public
 
FótuªDëe˘‹


729 
public
:

731 
CV_WRAP
 
PyømidAd≠ãdFótuªDëe˘‹
–c⁄° 
På
<
FótuªDëe˘‹
>& 
dëe˘‹
, 
maxLevñ
=2 );

734 
vútuÆ
 
boﬁ
 
em±y
() const;

736 
	g¥Ÿe˘ed
:

737 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

739 
	gPå
<
	gFótuªDëe˘‹
> 
	gdëe˘‹
;

740 
	gmaxLevñ
;

746 ˛as†
	cCV_EXPORTS
 
	gAdju°îAd≠ãr
: 
public
 
FótuªDëe˘‹


748 
public
:

751 
vútuÆ
 ~
Adju°îAd≠ãr
() {}

756 
vútuÆ
 
tooFew
(
mö
, 
n_dëe˘ed
) = 0;

761 
vútuÆ
 
tooM™y
(
max
, 
n_dëe˘ed
) = 0;

765 
vútuÆ
 
boﬁ
 
good
() const = 0;

767 
vútuÆ
 
	gPå
<
	gAdju°îAd≠ãr
> 
˛⁄e
() const = 0;

769 
	gPå
<
	gAdju°îAd≠ãr
> 
¸óã
–c⁄° 
°rög
& 
dëe˘‹Ty≥
 );

783 ˛as†
	cCV_EXPORTS
 
	gDy«micAd≠ãdFótuªDëe˘‹
: 
public
 
FótuªDëe˘‹


785 
public
:

793 
Dy«micAd≠ãdFótuªDëe˘‹
–c⁄° 
På
<
Adju°îAd≠ãr
>& 
adju°î
, 
mö_„©uªs
=400, 
max_„©uªs
=500, 
max_ôîs
=5 );

795 
vútuÆ
 
boﬁ
 
em±y
() const;

797 
	g¥Ÿe˘ed
:

798 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

800 
	g¥iv©e
:

801 
Dy«micAd≠ãdFótuªDëe˘‹
& 
›î©‹
=(const DynamicAdaptedFeatureDetector&);

802 
Dy«micAd≠ãdFótuªDëe˘‹
(const DynamicAdaptedFeatureDetector&);

804 
	gesˇ≥_ôîs_
;

805 
	gmö_„©uªs_
, 
	gmax_„©uªs_
;

806 c⁄° 
	gPå
<
	gAdju°îAd≠ãr
> 
	gadju°î_
;

812 ˛as†
	cCV_EXPORTS
 
	gFa°Adju°î
: 
public
 
Adju°îAd≠ãr


814 
public
:

818 
Fa°Adju°î
(
öô_thªsh
=20, 
boﬁ
 
n⁄max
=
åue
, 
mö_thªsh
=1, 
max_thªsh
=200);

820 
vútuÆ
 
tooFew
(
möv
, 
n_dëe˘ed
);

821 
vútuÆ
 
tooM™y
(
maxv
, 
n_dëe˘ed
);

822 
vútuÆ
 
boﬁ
 
good
() const;

824 
vútuÆ
 
	gPå
<
	gAdju°îAd≠ãr
> 
˛⁄e
() const;

826 
	g¥Ÿe˘ed
:

827 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

829 
	gthªsh_
;

830 
boﬁ
 
	gn⁄max_
;

831 
	göô_thªsh_
, 
	gmö_thªsh_
, 
	gmax_thªsh_
;

838 ˛as†
	cCV_EXPORTS
 
	gSèrAdju°î
: 
public
 
Adju°îAd≠ãr


840 
public
:

841 
SèrAdju°î
(
öôül_thªsh
=30.0, 
mö_thªsh
=2., 
max_thªsh
=200.);

843 
vútuÆ
 
tooFew
(
möv
, 
n_dëe˘ed
);

844 
vútuÆ
 
tooM™y
(
maxv
, 
n_dëe˘ed
);

845 
vútuÆ
 
boﬁ
 
good
() const;

847 
vútuÆ
 
	gPå
<
	gAdju°îAd≠ãr
> 
˛⁄e
() const;

849 
	g¥Ÿe˘ed
:

850 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

852 
	gthªsh_
, 
	göô_thªsh_
, 
	gmö_thªsh_
, 
	gmax_thªsh_
;

855 ˛as†
	cCV_EXPORTS
 
	gSurfAdju°î
: 
public
 
Adju°îAd≠ãr


857 
public
:

858 
SurfAdju°î
–
öôül_thªsh
=400.f, 
mö_thªsh
=2, 
max_thªsh
=1000 );

860 
vútuÆ
 
tooFew
(
möv
, 
n_dëe˘ed
);

861 
vútuÆ
 
tooM™y
(
maxv
, 
n_dëe˘ed
);

862 
vútuÆ
 
boﬁ
 
good
() const;

864 
vútuÆ
 
	gPå
<
	gAdju°îAd≠ãr
> 
˛⁄e
() const;

866 
	g¥Ÿe˘ed
:

867 
vútuÆ
 
dëe˘Im∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, c⁄° M©& 
mask
=Mat() ) const;

869 
	gthªsh_
, 
	göô_thªsh_
, 
	gmö_thªsh_
, 
	gmax_thªsh_
;

872 
CV_EXPORTS
 
M©
 
wödowedM©chögMask
–c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts1
, c⁄° ve˘‹<KeyPoöt>& 
keypoöts2
,

873 
maxDñèX
, 
maxDñèY
 );

886 ˛as†
	cCV_EXPORTS
 
	gOµ⁄ítCﬁ‹Des¸ùt‹Exåa˘‹
 : 
public
 
Des¸ùt‹Exåa˘‹


888 
public
:

889 
Oµ⁄ítCﬁ‹Des¸ùt‹Exåa˘‹
–c⁄° 
På
<
Des¸ùt‹Exåa˘‹
>& 
des¸ùt‹Exåa˘‹
 );

891 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& );

892 
vútuÆ
 
wrôe
–
FûeSt‹age
& ) const;

894 
vútuÆ
 
des¸ùt‹Size
() const;

895 
vútuÆ
 
des¸ùt‹Ty≥
() const;

897 
vútuÆ
 
boﬁ
 
em±y
() const;

899 
	g¥Ÿe˘ed
:

900 
vútuÆ
 
compuãIm∂
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
 ) const;

902 
	gPå
<
	gDes¸ùt‹Exåa˘‹
> 
	gdes¸ùt‹Exåa˘‹
;

908 ˛as†
	cCV_EXPORTS
 
	gBrõfDes¸ùt‹Exåa˘‹
 : 
public
 
Des¸ùt‹Exåa˘‹


910 
public
:

911 c⁄° 
PATCH_SIZE
 = 48;

912 c⁄° 
	gKERNEL_SIZE
 = 9;

915 
BrõfDes¸ùt‹Exåa˘‹
–
byãs
 = 32 );

917 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& );

918 
vútuÆ
 
wrôe
–
FûeSt‹age
& ) const;

920 
vútuÆ
 
des¸ùt‹Size
() const;

921 
vútuÆ
 
des¸ùt‹Ty≥
() const;

925 
Alg‹ôhmInfo
* 
öfo
() const;

927 
	g¥Ÿe˘ed
:

928 
vútuÆ
 
compuãIm∂
(c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
des¸ùt‹s
) const;

930 (*
	gPixñTe°Fn
)(c⁄° 
	tM©
&, c⁄° 
	tve˘‹
<
	tKeyPoöt
>&, Mat&);

932 
	gbyãs_
;

933 
PixñTe°Fn
 
	gã°_‚_
;

941 
	gãm∂©e
<
ty≥«me
 
	gT
>

942 
CV_EXPORTS
 
	gAccumuœt‹


944 
T
 
	tTy≥
;

947 
	gãm∂©e
<> 
	gAccumuœt‹
<> { 
	tTy≥
; };

948 
	gãm∂©e
<> 
	gAccumuœt‹
<> { 
	tTy≥
; };

949 
	gãm∂©e
<> 
	gAccumuœt‹
<> { 
	tTy≥
; };

950 
	gãm∂©e
<> 
	gAccumuœt‹
<> { 
	tTy≥
; };

955 
	gãm∂©e
<
˛ass
 
	gT
>

956 
CV_EXPORTS
 
	gSL2


958 íum { 
	gn‹mTy≥
 = 
NORM_L2SQR
 };

959 
T
 
	tVÆueTy≥
;

960 
ty≥«me
 
	tAccumuœt‹
<
	tT
>::
	tTy≥
 
	tResu…Ty≥
;

962 
Resu…Ty≥
 
›î©‹
()–c⁄° 
T
* 
	ga
, c⁄° T* 
	gb
, 
	gsize
 ) const

964  
	gn‹mL2Sqr
<
	gVÆueTy≥
, 
	gResu…Ty≥
>(
	ga
, 
	gb
, 
	gsize
);

971 
	gãm∂©e
<
˛ass
 
	gT
>

972 
CV_EXPORTS
 
	gL2


974 íum { 
	gn‹mTy≥
 = 
NORM_L2
 };

975 
T
 
	tVÆueTy≥
;

976 
ty≥«me
 
	tAccumuœt‹
<
	tT
>::
	tTy≥
 
	tResu…Ty≥
;

978 
Resu…Ty≥
 
›î©‹
()–c⁄° 
T
* 
	ga
, c⁄° T* 
	gb
, 
	gsize
 ) const

980  (
	gResu…Ty≥
)
sqπ
(()
n‹mL2Sqr
<
VÆueTy≥
, 
Resu…Ty≥
>(
a
, 
b
, 
size
));

987 
	gãm∂©e
<
˛ass
 
	gT
>

988 
CV_EXPORTS
 
	gL1


990 íum { 
	gn‹mTy≥
 = 
NORM_L1
 };

991 
T
 
	tVÆueTy≥
;

992 
ty≥«me
 
	tAccumuœt‹
<
	tT
>::
	tTy≥
 
	tResu…Ty≥
;

994 
Resu…Ty≥
 
›î©‹
()–c⁄° 
T
* 
	ga
, c⁄° T* 
	gb
, 
	gsize
 ) const

996  
	gn‹mL1
<
	gVÆueTy≥
, 
	gResu…Ty≥
>(
	ga
, 
	gb
, 
	gsize
);

1004 
CV_EXPORTS
 
	gHammög


1006 íum { 
	gn‹mTy≥
 = 
NORM_HAMMING
 };

1007 
	tVÆueTy≥
;

1008 
	tResu…Ty≥
;

1012 
Resu…Ty≥
 
›î©‹
()–c⁄° * 
	ga
, c⁄° * 
	gb
, 
	gsize
 ) const

1014  
n‹mHammög
(
a
, 
b
, 
size
);

1018 
Hammög
 
	tHammögLUT
;

1020 
	gãm∂©e
<
	g˚Œsize
> 
	sHammögMu…ûevñ


1022 íum { 
	gn‹mTy≥
 = 
NORM_HAMMING
 + (
˚Œsize
>1) };

1023 
	tVÆueTy≥
;

1024 
	tResu…Ty≥
;

1026 
Resu…Ty≥
 
›î©‹
()–c⁄° * 
	ga
, c⁄° * 
	gb
, 
	gsize
 ) const

1028  
n‹mHammög
(
a
, 
b
, 
size
, 
˚Œsize
);

1038 
CV_EXPORTS_W_SIMPLE
 
	gDM©ch


1040 
CV_WRAP
 
DM©ch
(Ë: 
quîyIdx
(-1), 
åaöIdx
(-1), 
imgIdx
(-1), 
di°™˚
(
FLT_MAX
) {}

1041 
CV_WRAP
 
DM©ch
–
_quîyIdx
, 
_åaöIdx
, 
_di°™˚
 ) :

1042 
quîyIdx
(
_quîyIdx
), 
åaöIdx
(
_åaöIdx
), 
imgIdx
(-1), 
di°™˚
(
_di°™˚
) {}

1043 
CV_WRAP
 
DM©ch
–
_quîyIdx
, 
_åaöIdx
, 
_imgIdx
, 
_di°™˚
 ) :

1044 
quîyIdx
(
_quîyIdx
), 
åaöIdx
(
_åaöIdx
), 
imgIdx
(
_imgIdx
), 
di°™˚
(
_di°™˚
) {}

1046 
CV_PROP_RW
 
	gquîyIdx
;

1047 
CV_PROP_RW
 
	gåaöIdx
;

1048 
CV_PROP_RW
 
	gimgIdx
;

1050 
CV_PROP_RW
 
	gdi°™˚
;

1053 
boﬁ
 
	g›î©‹
<–c⁄° 
	gDM©ch
 &
	gm
 ) const

1055  
	gdi°™˚
 < 
	gm
.distance;

1065 ˛as†
	cCV_EXPORTS_W
 
	gDes¸ùt‹M©chî
 : 
public
 
Alg‹ôhm


1067 
public
:

1068 
vútuÆ
 ~
Des¸ùt‹M©chî
();

1074 
CV_WRAP
 
vútuÆ
 
add
–c⁄° 
ve˘‹
<
M©
>& 
des¸ùt‹s
 );

1078 
CV_WRAP
 c⁄° 
	gve˘‹
<
	gM©
>& 
gëTøöDes¸ùt‹s
() const;

1082 
CV_WRAP
 
vútuÆ
 
˛ór
();

1087 
CV_WRAP
 
vútuÆ
 
boﬁ
 
em±y
() const;

1091 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isMaskSuµ‹ãd
() const = 0;

1104 
CV_WRAP
 
vútuÆ
 
åaö
();

1110 
CV_WRAP
 
m©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, c⁄° M©& 
åaöDes¸ùt‹s
,

1111 
CV_OUT
 
ve˘‹
<
DM©ch
>& 
m©ches
, c⁄° 
M©
& 
mask
=Mat() ) const;

1116 
CV_WRAP
 
k¬M©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, c⁄° M©& 
åaöDes¸ùt‹s
,

1117 
CV_OUT
 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1118 c⁄° 
M©
& 
mask
=M©(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) const;

1121 
ødiusM©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, c⁄° M©& 
åaöDes¸ùt‹s
,

1122 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1123 c⁄° 
M©
& 
mask
=M©(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) const;

1128 
CV_WRAP
 
m©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
CV_OUT
 
ve˘‹
<
DM©ch
>& 
m©ches
,

1129 c⁄° 
ve˘‹
<
M©
>& 
masks
=vector<Mat>() );

1130 
CV_WRAP
 
k¬M©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
CV_OUT
 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1131 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1132 
ødiusM©ch
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1133 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1136 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& );

1138 
vútuÆ
 
wrôe
–
FûeSt‹age
& ) const;

1143 
vútuÆ
 
	gPå
<
	gDes¸ùt‹M©chî
> 
˛⁄e
–
boﬁ
 
em±yTøöD©a
=
Ál£
 ) const = 0;

1145 
CV_WRAP
 
	gPå
<
	gDes¸ùt‹M©chî
> 
¸óã
–c⁄° 
°rög
& 
des¸ùt‹M©chîTy≥
 );

1146 
	g¥Ÿe˘ed
:

1151 ˛as†
	cCV_EXPORTS
 
Des¸ùt‹CﬁÀ˘i⁄


1153 
public
:

1154 
Des¸ùt‹CﬁÀ˘i⁄
();

1155 
Des¸ùt‹CﬁÀ˘i⁄
–c⁄° Des¸ùt‹CﬁÀ˘i⁄& 
cﬁÀ˘i⁄
 );

1156 
	gvútuÆ
 ~
Des¸ùt‹CﬁÀ˘i⁄
();

1159 
£t
–c⁄° 
ve˘‹
<
M©
>& 
des¸ùt‹s
 );

1160 
vútuÆ
 
˛ór
();

1162 c⁄° 
	gM©
& 
gëDes¸ùt‹s
() const;

1163 c⁄° 
M©
 
gëDes¸ùt‹
–
imgIdx
, 
loˇlDescIdx
 ) const;

1164 c⁄° 
M©
 
gëDes¸ùt‹
–
globÆDescIdx
 ) const;

1165 
gëLoˇlIdx
–
globÆDescIdx
, & 
imgIdx
, & 
loˇlDescIdx
 ) const;

1167 
size
() const;

1169 
	g¥Ÿe˘ed
:

1170 
M©
 
mîgedDes¸ùt‹s
;

1171 
	gve˘‹
<> 
	g°¨tIdxs
;

1177 
vútuÆ
 
k¬M©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1178 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) = 0;

1179 
vútuÆ
 
ødiusM©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1180 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) = 0;

1182 
boﬁ
 
isPossibÀM©ch
–c⁄° 
M©
& 
mask
, 
quîyIdx
, 
åaöIdx
 );

1183 
boﬁ
 
isMaskedOut
–c⁄° 
ve˘‹
<
M©
>& 
masks
, 
quîyIdx
 );

1185 
M©
 
˛⁄e_›
–M© 
m
 ) {  
	gm
.
˛⁄e
(); }

1186 
checkMasks
–c⁄° 
ve˘‹
<
M©
>& 
masks
, 
quîyDes¸ùt‹sCou¡
 ) const;

1189 
	gve˘‹
<
	gM©
> 
	gåaöDescCﬁÀ˘i⁄
;

1201 ˛as†
	cCV_EXPORTS_W
 
	gBFM©chî
 : 
public
 
Des¸ùt‹M©chî


1203 
public
:

1204 
CV_WRAP
 
BFM©chî
–
n‹mTy≥
=
NORM_L2
, 
boﬁ
 
¸ossCheck
=
Ál£
 );

1205 
	gvútuÆ
 ~
BFM©chî
() {}

1207 
vútuÆ
 
boﬁ
 
isMaskSuµ‹ãd
(Ëc⁄° {  
	gåue
; }

1209 
vútuÆ
 
	gPå
<
	gDes¸ùt‹M©chî
> 
˛⁄e
–
boﬁ
 
em±yTøöD©a
=
Ál£
 ) const;

1211 
Alg‹ôhmInfo
* 
öfo
() const;

1212 
	g¥Ÿe˘ed
:

1213 
vútuÆ
 
k¬M©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1214 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1215 
vútuÆ
 
ødiusM©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1216 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1218 
	gn‹mTy≥
;

1219 
boﬁ
 
	g¸ossCheck
;

1226 ˛as†
	cCV_EXPORTS_W
 
	gFœ¬Ba£dM©chî
 : 
public
 
Des¸ùt‹M©chî


1228 
public
:

1229 
CV_WRAP
 
Fœ¬Ba£dM©chî
–c⁄° 
På
<
Ê™n
::
IndexP¨ams
>& 
ödexP¨ams
=
√w
 fœ¬::
KDTªeIndexP¨ams
(),

1230 c⁄° 
På
<
Ê™n
::
SórchP¨ams
>& 
£¨chP¨ams
=
√w
 flann::SearchParams() );

1232 
vútuÆ
 
add
–c⁄° 
ve˘‹
<
M©
>& 
des¸ùt‹s
 );

1233 
vútuÆ
 
˛ór
();

1236 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& );

1238 
vútuÆ
 
wrôe
–
FûeSt‹age
& ) const;

1240 
vútuÆ
 
åaö
();

1241 
vútuÆ
 
boﬁ
 
isMaskSuµ‹ãd
() const;

1243 
vútuÆ
 
	gPå
<
	gDes¸ùt‹M©chî
> 
˛⁄e
–
boﬁ
 
em±yTøöD©a
=
Ál£
 ) const;

1245 
Alg‹ôhmInfo
* 
öfo
() const;

1246 
	g¥Ÿe˘ed
:

1247 
c⁄vîtToDM©ches
–c⁄° 
Des¸ùt‹CﬁÀ˘i⁄
& 
des¸ùt‹s
,

1248 c⁄° 
M©
& 
ödi˚s
, c⁄° M©& 
di°™˚s
,

1249 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
 );

1251 
vútuÆ
 
k¬M©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1252 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1253 
vútuÆ
 
ødiusM©chIm∂
–c⁄° 
M©
& 
quîyDes¸ùt‹s
, 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1254 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1256 
	gPå
<
	gÊ™n
::
IndexP¨ams
> 
ödexP¨ams
;

1257 
	gPå
<
	gÊ™n
::
SórchP¨ams
> 
£¨chP¨ams
;

1258 
	gPå
<
	gÊ™n
::
Index
> 
Ê™nIndex
;

1260 
Des¸ùt‹CﬁÀ˘i⁄
 
	gmîgedDes¸ùt‹s
;

1261 
	gaddedDescCou¡
;

1270 
˛ass
 
	gGíîicDes¸ùt‹M©chî
;

1271 
GíîicDes¸ùt‹M©chî
 
	tGíîicDes¸ùt‹M©ch
;

1273 ˛as†
	cCV_EXPORTS
 
	gGíîicDes¸ùt‹M©chî


1275 
	gpublic
:

1276 
GíîicDes¸ùt‹M©chî
();

1277 
	gvútuÆ
 ~
GíîicDes¸ùt‹M©chî
();

1289 
vútuÆ
 
add
–c⁄° 
ve˘‹
<
M©
>& 
images
,

1290 
ve˘‹
<ve˘‹<
KeyPoöt
> >& 
keypoöts
 );

1292 c⁄° 
	gve˘‹
<
	gM©
>& 
gëTøöImages
() const;

1293 c⁄° 
	gve˘‹
<ve˘‹<
	gKeyPoöt
> >& 
gëTøöKeypoöts
() const;

1298 
vútuÆ
 
˛ór
();

1302 
vútuÆ
 
boﬁ
 
isMaskSuµ‹ãd
() = 0;

1308 
vútuÆ
 
åaö
();

1318 
˛assify
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1319 c⁄° 
M©
& 
åaöImage
, 
ve˘‹
<
KeyPoöt
>& 
åaöKeypoöts
 ) const;

1321 
˛assify
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
 );

1329 
m©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1330 c⁄° 
M©
& 
åaöImage
, 
ve˘‹
<
KeyPoöt
>& 
åaöKeypoöts
,

1331 
ve˘‹
<
DM©ch
>& 
m©ches
, c⁄° 
M©
& 
mask
=Mat() ) const;

1336 
k¬M©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1337 c⁄° 
M©
& 
åaöImage
, 
ve˘‹
<
KeyPoöt
>& 
åaöKeypoöts
,

1338 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1339 c⁄° 
M©
& 
mask
=M©(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) const;

1341 
ødiusM©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1342 c⁄° 
M©
& 
åaöImage
, 
ve˘‹
<
KeyPoöt
>& 
åaöKeypoöts
,

1343 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1344 c⁄° 
M©
& 
mask
=M©(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 ) const;

1349 
m©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1350 
ve˘‹
<
DM©ch
>& 
m©ches
, c⁄° ve˘‹<
M©
>& 
masks
=vector<Mat>() );

1351 
k¬M©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1352 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1353 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1354 
ødiusM©ch
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1355 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1356 c⁄° 
ve˘‹
<
M©
>& 
masks
=ve˘‹<M©>(), 
boﬁ
 
com∑˘Resu…
=
Ál£
 );

1359 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& 
‚
 );

1361 
vútuÆ
 
wrôe
–
FûeSt‹age
& 
fs
 ) const;

1364 
vútuÆ
 
boﬁ
 
em±y
() const;

1369 
vútuÆ
 
	gPå
<
	gGíîicDes¸ùt‹M©chî
> 
˛⁄e
–
boﬁ
 
em±yTøöD©a
=
Ál£
 ) const = 0;

1371 
	gPå
<
	gGíîicDes¸ùt‹M©chî
> 
¸óã
–c⁄° 
°rög
& 
gíîicDes¸ô±‹M©chîTy≥
,

1372 c⁄° 
°rög
 &
∑ømsFûíame
=string() );

1374 
	g¥Ÿe˘ed
:

1378 
vútuÆ
 
k¬M©chIm∂
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1379 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1380 c⁄° 
ve˘‹
<
M©
>& 
masks
, 
boﬁ
 
com∑˘Resu…
 ) = 0;

1381 
vútuÆ
 
ødiusM©chIm∂
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1382 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1383 c⁄° 
ve˘‹
<
M©
>& 
masks
, 
boﬁ
 
com∑˘Resu…
 ) = 0;

1387 ˛as†
	cCV_EXPORTS
 
	gKeyPoötCﬁÀ˘i⁄


1389 
	gpublic
:

1390 
KeyPoötCﬁÀ˘i⁄
();

1391 
KeyPoötCﬁÀ˘i⁄
–c⁄° KeyPoötCﬁÀ˘i⁄& 
cﬁÀ˘i⁄
 );

1392 
add
–c⁄° 
ve˘‹
<
M©
>& 
images
, c⁄° ve˘‹<ve˘‹<
KeyPoöt
> >& 
keypoöts
 );

1393 
˛ór
();

1396 
size_t
 
keypoötCou¡
() const;

1397 
size_t
 
imageCou¡
() const;

1399 c⁄° 
	gve˘‹
<ve˘‹<
	gKeyPoöt
> >& 
gëKeypoöts
() const;

1400 c⁄° 
	gve˘‹
<
	gKeyPoöt
>& 
gëKeypoöts
–
imgIdx
 ) const;

1401 c⁄° 
	gKeyPoöt
& 
gëKeyPoöt
–
imgIdx
, 
loˇlPoötIdx
 ) const;

1402 c⁄° 
	gKeyPoöt
& 
gëKeyPoöt
–
globÆPoötIdx
 ) const;

1403 
gëLoˇlIdx
–
globÆPoötIdx
, & 
imgIdx
, & 
loˇlPoötIdx
 ) const;

1405 c⁄° 
	gve˘‹
<
	gM©
>& 
gëImages
() const;

1406 c⁄° 
	gM©
& 
gëImage
–
imgIdx
 ) const;

1408 
	g¥Ÿe˘ed
:

1409 
poötCou¡
;

1411 
	gve˘‹
<
	gM©
> 
	gimages
;

1412 
	gve˘‹
<ve˘‹<
	gKeyPoöt
> > 
	gkeypoöts
;

1414 
	gve˘‹
<> 
	g°¨tIndi˚s
;

1416 
	g¥iv©e
:

1417 
M©
 
˛⁄e_›
–M© 
m
 ) {  m.
˛⁄e
(); }

1420 
KeyPoötCﬁÀ˘i⁄
 
	gåaöPoötCﬁÀ˘i⁄
;

1431 
˛ass
 
	gVe˘‹Des¸ùt‹M©chî
;

1432 
Ve˘‹Des¸ùt‹M©chî
 
	tVe˘‹Des¸ùt‹M©ch
;

1434 ˛as†
	cCV_EXPORTS
 
	gVe˘‹Des¸ùt‹M©chî
 : 
public
 
GíîicDes¸ùt‹M©chî


1436 
public
:

1437 
Ve˘‹Des¸ùt‹M©chî
–c⁄° 
På
<
Des¸ùt‹Exåa˘‹
>& 
exåa˘‹
, c⁄° På<
Des¸ùt‹M©chî
>& 
m©chî
 );

1438 
	gvútuÆ
 ~
Ve˘‹Des¸ùt‹M©chî
();

1440 
vútuÆ
 
add
–c⁄° 
ve˘‹
<
M©
>& 
imgCﬁÀ˘i⁄
,

1441 
ve˘‹
<ve˘‹<
KeyPoöt
> >& 
poötCﬁÀ˘i⁄
 );

1443 
vútuÆ
 
˛ór
();

1445 
vútuÆ
 
åaö
();

1447 
vútuÆ
 
boﬁ
 
isMaskSuµ‹ãd
();

1449 
vútuÆ
 
ªad
–c⁄° 
FûeNode
& 
‚
 );

1450 
vútuÆ
 
wrôe
–
FûeSt‹age
& 
fs
 ) const;

1451 
vútuÆ
 
boﬁ
 
em±y
() const;

1453 
vútuÆ
 
	gPå
<
	gGíîicDes¸ùt‹M©chî
> 
˛⁄e
–
boﬁ
 
em±yTøöD©a
=
Ál£
 ) const;

1455 
	g¥Ÿe˘ed
:

1456 
vútuÆ
 
k¬M©chIm∂
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1457 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
k
,

1458 c⁄° 
ve˘‹
<
M©
>& 
masks
, 
boﬁ
 
com∑˘Resu…
 );

1459 
vútuÆ
 
ødiusM©chIm∂
–c⁄° 
M©
& 
quîyImage
, 
ve˘‹
<
KeyPoöt
>& 
quîyKeypoöts
,

1460 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches
, 
maxDi°™˚
,

1461 c⁄° 
ve˘‹
<
M©
>& 
masks
, 
boﬁ
 
com∑˘Resu…
 );

1463 
	gPå
<
	gDes¸ùt‹Exåa˘‹
> 
	gexåa˘‹
;

1464 
	gPå
<
	gDes¸ùt‹M©chî
> 
	gm©chî
;

1470 
CV_EXPORTS
 
	gDøwM©chesFœgs


1472 íum{ 
	gDEFAULT
 = 0,

1477 
	gDRAW_OVER_OUTIMG
 = 1,

1479 
	gNOT_DRAW_SINGLE_POINTS
 = 2,

1480 
	gDRAW_RICH_KEYPOINTS
 = 4

1486 
CV_EXPORTS_W
 
døwKeypoöts
–c⁄° 
M©
& 
image
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, 
CV_OUT
 M©& 
outImage
,

1487 c⁄° 
Sˇœr
& 
cﬁ‹
=Sˇœr::
Æl
(-1), 
Êags
=
DøwM©chesFœgs
::
DEFAULT
 );

1490 
CV_EXPORTS
 
døwM©ches
–c⁄° 
M©
& 
img1
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts1
,

1491 c⁄° 
M©
& 
img2
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts2
,

1492 c⁄° 
ve˘‹
<
DM©ch
>& 
m©ches1to2
, 
M©
& 
outImg
,

1493 c⁄° 
Sˇœr
& 
m©chCﬁ‹
=Sˇœr::
Æl
(-1), c⁄° Sˇœr& 
sögÀPoötCﬁ‹
=Scalar::all(-1),

1494 c⁄° 
ve˘‹
<>& 
m©chesMask
=ve˘‹<>(), 
Êags
=
DøwM©chesFœgs
::
DEFAULT
 );

1496 
CV_EXPORTS
 
døwM©ches
–c⁄° 
M©
& 
img1
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts1
,

1497 c⁄° 
M©
& 
img2
, c⁄° 
ve˘‹
<
KeyPoöt
>& 
keypoöts2
,

1498 c⁄° 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches1to2
, 
M©
& 
outImg
,

1499 c⁄° 
Sˇœr
& 
m©chCﬁ‹
=Sˇœr::
Æl
(-1), c⁄° Sˇœr& 
sögÀPoötCﬁ‹
=Scalar::all(-1),

1500 c⁄° 
ve˘‹
<ve˘‹<> >& 
m©chesMask
=ve˘‹<ve˘‹<> >(), 
Êags
=
DøwM©chesFœgs
::
DEFAULT
 );

1506 
CV_EXPORTS
 
evÆu©eFótuªDëe˘‹
–c⁄° 
M©
& 
img1
, c⁄° M©& 
img2
, c⁄° M©& 
H1to2
,

1507 
ve˘‹
<
KeyPoöt
>* 
keypoöts1
, ve˘‹<KeyPoöt>* 
keypoöts2
,

1508 & 
ª≥©abûôy
, & 
c‹ª•Cou¡
,

1509 c⁄° 
På
<
FótuªDëe˘‹
>& 
fdëe˘‹
=Ptr<FeatureDetector>() );

1511 
CV_EXPORTS
 
compuãReˇŒPªcisi⁄Curve
–c⁄° 
ve˘‹
<ve˘‹<
DM©ch
> >& 
m©ches1to2
,

1512 c⁄° 
ve˘‹
<ve˘‹<
uch¨
> >& 
c‹ª˘M©ches1to2Mask
,

1513 
ve˘‹
<
Poöt2f
>& 
ªˇŒPªcisi⁄Curve
 );

1515 
CV_EXPORTS
 
gëReˇŒ
–c⁄° 
ve˘‹
<
Poöt2f
>& 
ªˇŒPªcisi⁄Curve
, 
l_¥ecisi⁄
 );

1516 
CV_EXPORTS
 
gëNóª°Poöt
–c⁄° 
ve˘‹
<
Poöt2f
>& 
ªˇŒPªcisi⁄Curve
, 
l_¥ecisi⁄
 );

1518 
CV_EXPORTS
 
evÆu©eGíîicDes¸ùt‹M©chî
–c⁄° 
M©
& 
img1
, c⁄° M©& 
img2
, c⁄° M©& 
H1to2
,

1519 
ve˘‹
<
KeyPoöt
>& 
keypoöts1
, ve˘‹<KeyPoöt>& 
keypoöts2
,

1520 
ve˘‹
<ve˘‹<
DM©ch
> >* 
m©ches1to2
, ve˘‹<ve˘‹<
uch¨
> >* 
c‹ª˘M©ches1to2Mask
,

1521 
ve˘‹
<
Poöt2f
>& 
ªˇŒPªcisi⁄Curve
,

1522 c⁄° 
På
<
GíîicDes¸ùt‹M©chî
>& 
dm©ch
=Ptr<GenericDescriptorMatcher>() );

1531 ˛as†
	cCV_EXPORTS
 
	gBOWTøöî


1533 
	gpublic
:

1534 
BOWTøöî
();

1535 
	gvútuÆ
 ~
BOWTøöî
();

1537 
add
–c⁄° 
M©
& 
des¸ùt‹s
 );

1538 c⁄° 
	gve˘‹
<
	gM©
>& 
gëDes¸ùt‹s
() const;

1539 
des¸ùŸ‹sCou¡
() const;

1541 
vútuÆ
 
˛ór
();

1550 
vútuÆ
 
M©
 
˛u°î
() const = 0;

1551 
vútuÆ
 
M©
 
˛u°î
–c⁄° M©& 
des¸ùt‹s
 ) const = 0;

1553 
	g¥Ÿe˘ed
:

1554 
ve˘‹
<
M©
> 
des¸ùt‹s
;

1555 
	gsize
;

1561 ˛as†
	cCV_EXPORTS
 
	gBOWKMónsTøöî
 : 
public
 
BOWTøöî


1563 
public
:

1564 
BOWKMónsTøöî
–
˛u°îCou¡
, c⁄° 
TîmCrôîü
& 
ãrm¸ô
=TermCriteria(),

1565 
©ãm±s
=3, 
Êags
=
KMEANS_PP_CENTERS
 );

1566 
	gvútuÆ
 ~
BOWKMónsTøöî
();

1569 
vútuÆ
 
M©
 
˛u°î
() const;

1570 
vútuÆ
 
M©
 
˛u°î
–c⁄° M©& 
des¸ùt‹s
 ) const;

1572 
	g¥Ÿe˘ed
:

1574 
˛u°îCou¡
;

1575 
TîmCrôîü
 
	gãrm¸ô
;

1576 
	g©ãm±s
;

1577 
	gÊags
;

1583 ˛as†
	cCV_EXPORTS
 
	gBOWImgDes¸ùt‹Exåa˘‹


1585 
	gpublic
:

1586 
BOWImgDes¸ùt‹Exåa˘‹
–c⁄° 
På
<
Des¸ùt‹Exåa˘‹
>& 
dexåa˘‹
,

1587 c⁄° 
På
<
Des¸ùt‹M©chî
>& 
dm©chî
 );

1588 
	gvútuÆ
 ~
BOWImgDes¸ùt‹Exåa˘‹
();

1590 
£tVoˇbuœry
–c⁄° 
M©
& 
voˇbuœry
 );

1591 c⁄° 
	gM©
& 
gëVoˇbuœry
() const;

1592 
compuã
–c⁄° 
M©
& 
image
, 
ve˘‹
<
KeyPoöt
>& 
keypoöts
, M©& 
imgDes¸ùt‹
,

1593 
ve˘‹
<ve˘‹<> >* 
poötIdxsOfClu°îs
=0, 
M©
* 
des¸ùt‹s
=0 );

1596 
des¸ùt‹Size
() const;

1597 
des¸ùt‹Ty≥
() const;

1599 
	g¥Ÿe˘ed
:

1600 
M©
 
voˇbuœry
;

1601 
	gPå
<
	gDes¸ùt‹Exåa˘‹
> 
	gdexåa˘‹
;

1602 
	gPå
<
	gDes¸ùt‹M©chî
> 
	gdm©chî
;

	@/usr/include/opencv2/flann/miniflann.hpp

43 #i‚de‡
_OPENCV_MINIFLANN_HPP_


44 
	#_OPENCV_MINIFLANN_HPP_


	)

46 #ifde‡
__˝lu•lus


48 
	~"›ícv2/c‹e/c‹e.hµ
"

49 
	~"›ícv2/Ê™n/deföes.h
"

51 
«me•a˚
 
	gcv


54 
«me•a˚
 
	gÊ™n


57 
CV_EXPORTS
 
	gIndexP¨ams


59 
IndexP¨ams
();

60 ~
IndexP¨ams
();

62 
	g°d
::
°rög
 
gëSåög
(c⁄° 
°d
::°rög& 
key
, c⁄° std::°rög& 
deÁu…VÆ
=std::string()) const;

63 
gëI¡
(c⁄° 
°d
::
°rög
& 
key
, 
deÁu…VÆ
=-1) const;

64 
gëDoubÀ
(c⁄° 
°d
::
°rög
& 
key
, 
deÁu…VÆ
=-1) const;

66 
£tSåög
(c⁄° 
°d
::
°rög
& 
key
, c⁄° std::°rög& 
vÆue
);

67 
£tI¡
(c⁄° 
°d
::
°rög
& 
key
, 
vÆue
);

68 
£tDoubÀ
(c⁄° 
°d
::
°rög
& 
key
, 
vÆue
);

69 
£tFlﬂt
(c⁄° 
°d
::
°rög
& 
key
, 
vÆue
);

70 
£tBoﬁ
(c⁄° 
°d
::
°rög
& 
key
, 
boﬁ
 
vÆue
);

71 
£tAlg‹ôhm
(
vÆue
);

73 
gëAŒ
(
°d
::
ve˘‹
<°d::
°rög
>& 
«mes
,

74 
°d
::
ve˘‹
<>& 
ty≥s
,

75 
°d
::
ve˘‹
<°d::
°rög
>& 
°rVÆues
,

76 
°d
::
ve˘‹
<>& 
numVÆues
) const;

78 * 
	g∑øms
;

81 
CV_EXPORTS
 
	gKDTªeIndexP¨ams
 : 
public
 
IndexP¨ams


83 
KDTªeIndexP¨ams
(
åìs
=4);

86 
CV_EXPORTS
 
	gLöórIndexP¨ams
 : 
public
 
IndexP¨ams


88 
LöórIndexP¨ams
();

91 
CV_EXPORTS
 
	gComposôeIndexP¨ams
 : 
public
 
IndexP¨ams


93 
ComposôeIndexP¨ams
(
åìs
 = 4, 
bønchög
 = 32, 
ôî©i⁄s
 = 11,

94 
cvÊ™n
::
Ê™n_˚¡îs_öô_t
 
˚¡îs_öô
 = cvÊ™n::
FLANN_CENTERS_RANDOM
, 
cb_ödex
 = 0.2 );

97 
CV_EXPORTS
 
	gAutŸu√dIndexP¨ams
 : 
public
 
IndexP¨ams


99 
AutŸu√dIndexP¨ams
(
èrgë_¥ecisi⁄
 = 0.8, 
buûd_weight
 = 0.01,

100 
mem‹y_weight
 = 0, 
ßm∂e_‰a˘i⁄
 = 0.1);

103 
CV_EXPORTS
 
	gHõørchiˇlClu°îögIndexP¨ams
 : 
public
 
IndexP¨ams


105 
HõørchiˇlClu°îögIndexP¨ams
(
bønchög
 = 32,

106 
cvÊ™n
::
Ê™n_˚¡îs_öô_t
 
˚¡îs_öô
 = cvÊ™n::
FLANN_CENTERS_RANDOM
, 
åìs
 = 4, 
Àaf_size
 = 100 );

109 
CV_EXPORTS
 
	gKMónsIndexP¨ams
 : 
public
 
IndexP¨ams


111 
KMónsIndexP¨ams
(
bønchög
 = 32, 
ôî©i⁄s
 = 11,

112 
cvÊ™n
::
Ê™n_˚¡îs_öô_t
 
˚¡îs_öô
 = cvÊ™n::
FLANN_CENTERS_RANDOM
, 
cb_ödex
 = 0.2 );

115 
CV_EXPORTS
 
	gLshIndexP¨ams
 : 
public
 
IndexP¨ams


117 
LshIndexP¨ams
(
èbÀ_numbî
, 
key_size
, 
mu…i_¥obe_Àvñ
);

120 
CV_EXPORTS
 
	gSavedIndexP¨ams
 : 
public
 
IndexP¨ams


122 
SavedIndexP¨ams
(c⁄° 
°d
::
°rög
& 
fûíame
);

125 
CV_EXPORTS
 
	gSórchP¨ams
 : 
public
 
IndexP¨ams


127 
SórchP¨ams
–
checks
 = 32, 
ïs
 = 0, 
boﬁ
 
s‹ãd
 = 
åue
 );

130 ˛as†
	cCV_EXPORTS_W
 
	gIndex


132 
	gpublic
:

133 
CV_WRAP
 
Index
();

134 
CV_WRAP
 
Index
(
I≈utAºay
 
„©uªs
, c⁄° 
IndexP¨ams
& 
∑øms
, 
cvÊ™n
::
Ê™n_di°™˚_t
 
di°Ty≥
=cvÊ™n::
FLANN_DIST_L2
);

135 
	gvútuÆ
 ~
Index
();

137 
CV_WRAP
 
vútuÆ
 
buûd
(
I≈utAºay
 
„©uªs
, c⁄° 
IndexP¨ams
& 
∑øms
, 
cvÊ™n
::
Ê™n_di°™˚_t
 
di°Ty≥
=cvÊ™n::
FLANN_DIST_L2
);

138 
CV_WRAP
 
vútuÆ
 
k¬Sórch
(
I≈utAºay
 
quîy
, 
OuçutAºay
 
ödi˚s
,

139 
OuçutAºay
 
di°s
, 
k¬
, c⁄° 
SórchP¨ams
& 
∑øms
=SearchParams());

141 
CV_WRAP
 
vútuÆ
 
ødiusSórch
(
I≈utAºay
 
quîy
, 
OuçutAºay
 
ödi˚s
,

142 
OuçutAºay
 
di°s
, 
ødius
, 
maxResu…s
,

143 c⁄° 
SórchP¨ams
& 
∑øms
=SearchParams());

145 
CV_WRAP
 
vútuÆ
 
ßve
(c⁄° 
°d
::
°rög
& 
fûíame
) const;

146 
CV_WRAP
 
vútuÆ
 
boﬁ
 
lﬂd
(
I≈utAºay
 
„©uªs
, c⁄° 
°d
::
°rög
& 
fûíame
);

147 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

148 
CV_WRAP
 
	gcvÊ™n
::
Ê™n_di°™˚_t
 
gëDi°™˚
() const;

149 
CV_WRAP
 
	gcvÊ™n
::
Ê™n_Æg‹ôhm_t
 
gëAlg‹ôhm
() const;

151 
	g¥Ÿe˘ed
:

152 
cvÊ™n
::
Ê™n_di°™˚_t
 
di°Ty≥
;

153 
	gcvÊ™n
::
Ê™n_Æg‹ôhm_t
 
Ægo
;

154 
	g„©uªTy≥
;

155 * 
	gödex
;

	@/usr/include/opencv2/highgui/highgui.hpp

43 #i‚de‡
__OPENCV_HIGHGUI_HPP__


44 
	#__OPENCV_HIGHGUI_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/highgui/highgui_c.h
"

49 #ifde‡
__˝lu•lus


51 
	gCvC≠tuª
;

52 
	gCvVideoWrôî
;

54 
«me•a˚
 
	gcv


59 
	gWINDOW_NORMAL
 = 
CV_WINDOW_NORMAL
,

60 
	gWINDOW_AUTOSIZE
 = 
CV_WINDOW_AUTOSIZE
,

61 
	gWINDOW_OPENGL
 = 
CV_WINDOW_OPENGL
,

64 
	gWND_PROP_FULLSCREEN
 = 
CV_WND_PROP_FULLSCREEN
,

65 
	gWND_PROP_AUTOSIZE
 = 
CV_WND_PROP_AUTOSIZE
,

66 
	gWND_PROP_ASPECT_RATIO
 = 
CV_WND_PROP_ASPECTRATIO
,

67 
	gWND_PROP_OPENGL
 = 
CV_WND_PROP_OPENGL


70 
CV_EXPORTS_W
 
«medWödow
(c⁄° 
°rög
& 
wö«me
, 
Êags
 = 
WINDOW_AUTOSIZE
);

71 
CV_EXPORTS_W
 
de°royWödow
(c⁄° 
°rög
& 
wö«me
);

72 
CV_EXPORTS_W
 
de°royAŒWödows
();

74 
CV_EXPORTS_W
 
°¨tWödowThªad
();

76 
CV_EXPORTS_W
 
waôKey
(
dñay
 = 0);

78 
CV_EXPORTS_W
 
imshow
(c⁄° 
°rög
& 
wö«me
, 
I≈utAºay
 
m©
);

80 
CV_EXPORTS_W
 
ªsizeWödow
(c⁄° 
°rög
& 
wö«me
, 
width
, 
height
);

81 
CV_EXPORTS_W
 
moveWödow
(c⁄° 
°rög
& 
wö«me
, 
x
, 
y
);

83 
CV_EXPORTS_W
 
£tWödowPr›îty
(c⁄° 
°rög
& 
wö«me
, 
¥›_id
, 
¥›_vÆue
);

84 
CV_EXPORTS_W
 
gëWödowPr›îty
(c⁄° 
°rög
& 
wö«me
, 
¥›_id
);

88 
	gEVENT_MOUSEMOVE
 =0,

89 
	gEVENT_LBUTTONDOWN
 =1,

90 
	gEVENT_RBUTTONDOWN
 =2,

91 
	gEVENT_MBUTTONDOWN
 =3,

92 
	gEVENT_LBUTTONUP
 =4,

93 
	gEVENT_RBUTTONUP
 =5,

94 
	gEVENT_MBUTTONUP
 =6,

95 
	gEVENT_LBUTTONDBLCLK
 =7,

96 
	gEVENT_RBUTTONDBLCLK
 =8,

97 
	gEVENT_MBUTTONDBLCLK
 =9

102 
	gEVENT_FLAG_LBUTTON
 =1,

103 
	gEVENT_FLAG_RBUTTON
 =2,

104 
	gEVENT_FLAG_MBUTTON
 =4,

105 
	gEVENT_FLAG_CTRLKEY
 =8,

106 
	gEVENT_FLAG_SHIFTKEY
 =16,

107 
	gEVENT_FLAG_ALTKEY
 =32

110 (*
	gMou£CÆlback
)(
	tevít
, 
	tx
, 
	ty
, 
	tÊags
, * 
	tu£rd©a
);

113 
CV_EXPORTS
 
£tMou£CÆlback
(c⁄° 
°rög
& 
wö«me
, 
Mou£CÆlback
 
⁄Mou£
, * 
u£rd©a
 = 0);

116 (
CV_CDECL
 *
	tTøckb¨CÆlback
)(
	tpos
, * 
	tu£rd©a
);

118 
CV_EXPORTS
 
¸óãTøckb¨
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
,

119 * 
vÆue
, 
cou¡
,

120 
Tøckb¨CÆlback
 
⁄Ch™ge
 = 0,

121 * 
u£rd©a
 = 0);

123 
CV_EXPORTS_W
 
gëTøckb¨Pos
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
);

124 
CV_EXPORTS_W
 
£tTøckb¨Pos
(c⁄° 
°rög
& 
åackb¨«me
, c⁄° såög& 
wö«me
, 
pos
);

128 (*
	gO≥nGlDøwCÆlback
)(* 
	tu£rd©a
);

129 
CV_EXPORTS
 
£tO≥nGlDøwCÆlback
(c⁄° 
°rög
& 
wö«me
, 
O≥nGlDøwCÆlback
 
⁄O≥nGlDøw
, * 
u£rd©a
 = 0);

131 
CV_EXPORTS
 
£tO≥nGlC⁄ãxt
(c⁄° 
°rög
& 
wö«me
);

133 
CV_EXPORTS
 
upd©eWödow
(c⁄° 
°rög
& 
wö«me
);

136 
CV_EXPORTS
 
poötCloudShow
(c⁄° 
°rög
& 
wö«me
, c⁄° 
GlCamîa
& 
ˇmîa
, c⁄° 
GlAºays
& 
¨r
);

137 
CV_EXPORTS
 
poötCloudShow
(c⁄° 
°rög
& 
wö«me
, c⁄° 
GlCamîa
& 
ˇmîa
, 
I≈utAºay
 
poöts
, I≈utAºay 
cﬁ‹s
 = 
noAºay
());

142 
CV_EXPORTS
 
CvF⁄t
 
f⁄tQt
(c⁄° 
°rög
& 
«meF⁄t
, 
poötSize
=-1,

143 
Sˇœr
 
cﬁ‹
=Sˇœr::
Æl
(0), 
weight
=
CV_FONT_NORMAL
,

144 
°yÀ
=
CV_STYLE_NORMAL
, 
•acög
=0);

145 
CV_EXPORTS
 
addText
–c⁄° 
M©
& 
img
, c⁄° 
°rög
& 
ãxt
, 
Poöt
 
‹g
, 
CvF⁄t
 
f⁄t
);

147 
CV_EXPORTS
 
di•œyOvîœy
(c⁄° 
°rög
& 
wö«me
, c⁄° såög& 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

148 
CV_EXPORTS
 
di•œySètusB¨
(c⁄° 
°rög
& 
wö«me
, c⁄° såög& 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

150 
CV_EXPORTS
 
ßveWödowP¨amëîs
(c⁄° 
°rög
& 
wödowName
);

151 
CV_EXPORTS
 
lﬂdWödowP¨amëîs
(c⁄° 
°rög
& 
wödowName
);

152 
CV_EXPORTS
 
°¨tLo›
((*
±2Func
)(
¨gc
, *
¨gv
[]), argc, *árgv[]);

153 
CV_EXPORTS
 
°›Lo›
();

155 (
CV_CDECL
 *
	tBuâ⁄CÆlback
)(
	t°©e
, * 
	tu£rd©a
);

156 
CV_EXPORTS
 
¸óãBuâ⁄
–c⁄° 
°rög
& 
b¨_«me
, 
Buâ⁄CÆlback
 
⁄_ch™ge
,

157 * 
u£rd©a
=
NULL
, 
ty≥
=
CV_PUSH_BUTTON
,

158 
boﬁ
 
öôül_buâ⁄_°©e
=0);

165 
	gIMREAD_UNCHANGED
 =-1,

167 
	gIMREAD_GRAYSCALE
 =0,

169 
	gIMREAD_COLOR
 =1,

171 
	gIMREAD_ANYDEPTH
 =2,

173 
	gIMREAD_ANYCOLOR
 =4

178 
	gIMWRITE_JPEG_QUALITY
 =1,

179 
	gIMWRITE_PNG_COMPRESSION
 =16,

180 
	gIMWRITE_PNG_STRATEGY
 =17,

181 
	gIMWRITE_PNG_BILEVEL
 =18,

182 
	gIMWRITE_PNG_STRATEGY_DEFAULT
 =0,

183 
	gIMWRITE_PNG_STRATEGY_FILTERED
 =1,

184 
	gIMWRITE_PNG_STRATEGY_HUFFMAN_ONLY
 =2,

185 
	gIMWRITE_PNG_STRATEGY_RLE
 =3,

186 
	gIMWRITE_PNG_STRATEGY_FIXED
 =4,

187 
	gIMWRITE_PXM_BINARY
 =32

190 
CV_EXPORTS_W
 
M©
 
imªad
–c⁄° 
°rög
& 
fûíame
, 
Êags
=1 );

191 
CV_EXPORTS_W
 
boﬁ
 
imwrôe
–c⁄° 
°rög
& 
fûíame
, 
I≈utAºay
 
img
,

192 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>());

193 
CV_EXPORTS_W
 
M©
 
imdecode
–
I≈utAºay
 
buf
, 
Êags
 );

194 
CV_EXPORTS
 
M©
 
imdecode
–
I≈utAºay
 
buf
, 
Êags
, M©* 
d°
 );

195 
CV_EXPORTS_W
 
boﬁ
 
imícode
–c⁄° 
°rög
& 
ext
, 
I≈utAºay
 
img
,

196 
CV_OUT
 
ve˘‹
<
uch¨
>& 
buf
,

197 c⁄° 
ve˘‹
<>& 
∑øms
=vector<>());

199 #i‚de‡
CV_NO_VIDEO_CAPTURE_CPP_API


201 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvC≠tuª
>::
dñëe_obj
();

202 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvVideoWrôî
>::
dñëe_obj
();

204 ˛as†
	cCV_EXPORTS_W
 
	gVideoC≠tuª


206 
	gpublic
:

207 
CV_WRAP
 
VideoC≠tuª
();

208 
CV_WRAP
 
VideoC≠tuª
(c⁄° 
°rög
& 
fûíame
);

209 
CV_WRAP
 
VideoC≠tuª
(
devi˚
);

211 
	gvútuÆ
 ~
VideoC≠tuª
();

212 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
);

213 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(
devi˚
);

214 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

215 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

217 
CV_WRAP
 
vútuÆ
 
boﬁ
 
gøb
();

218 
CV_WRAP
 
vútuÆ
 
boﬁ
 
ªåõve
(
CV_OUT
 
M©
& 
image
, 
ch™√l
=0);

219 
vútuÆ
 
	gVideoC≠tuª
& 
	g›î©‹
 >> (
CV_OUT
 
	gM©
& 
	gimage
);

220 
CV_WRAP
 
vútuÆ
 
boﬁ
 
ªad
(
CV_OUT
 
M©
& 
image
);

222 
CV_WRAP
 
vútuÆ
 
boﬁ
 
£t
(
¥›Id
, 
vÆue
);

223 
CV_WRAP
 
vútuÆ
 
gë
(
¥›Id
);

225 
	g¥Ÿe˘ed
:

226 
På
<
CvC≠tuª
> 
ˇp
;

230 ˛as†
	cCV_EXPORTS_W
 
	gVideoWrôî


232 
	gpublic
:

233 
CV_WRAP
 
VideoWrôî
();

234 
CV_WRAP
 
VideoWrôî
(c⁄° 
°rög
& 
fûíame
, 
fourcc
, 
Âs
,

235 
Size
 
‰ameSize
, 
boﬁ
 
isCﬁ‹
=
åue
);

237 
	gvútuÆ
 ~
VideoWrôî
();

238 
CV_WRAP
 
vútuÆ
 
boﬁ
 
›í
(c⁄° 
°rög
& 
fûíame
, 
fourcc
, 
Âs
,

239 
Size
 
‰ameSize
, 
boﬁ
 
isCﬁ‹
=
åue
);

240 
CV_WRAP
 
vútuÆ
 
boﬁ
 
isO≥√d
() const;

241 
CV_WRAP
 
vútuÆ
 
ªÀa£
();

242 
vútuÆ
 
	gVideoWrôî
& 
	g›î©‹
 << (c⁄° 
	gM©
& 
	gimage
);

243 
CV_WRAP
 
vútuÆ
 
wrôe
(c⁄° 
M©
& 
image
);

245 
	g¥Ÿe˘ed
:

246 
På
<
CvVideoWrôî
> 
wrôî
;

	@/usr/include/opencv2/highgui/highgui_c.h

42 #i‚de‡
__OPENCV_HIGHGUI_H__


43 
	#__OPENCV_HIGHGUI_H__


	)

45 
	~"›ícv2/c‹e/c‹e_c.h
"

47 #ifde‡
__˝lu•lus


57 íum { 
CV_FONT_LIGHT
 = 25,

58 
CV_FONT_NORMAL
 = 50,

59 
CV_FONT_DEMIBOLD
 = 63,

60 
CV_FONT_BOLD
 = 75,

61 
CV_FONT_BLACK
 = 87

64 íum { 
CV_STYLE_NORMAL
 = 0,

65 
CV_STYLE_ITALIC
 = 1,

66 
CV_STYLE_OBLIQUE
 = 2

72 
CVAPI
(
CvF⁄t
Ë
cvF⁄tQt
(c⁄° * 
«meF⁄t
, 
poötSize
 
CV_DEFAULT
(-1), 
CvSˇœr
 
cﬁ‹
 CV_DEFAULT(
cvSˇœrAŒ
(0)), 
weight
 CV_DEFAULT(
CV_FONT_NORMAL
), 
°yÀ
 CV_DEFAULT(
CV_STYLE_NORMAL
), 
•acög
 CV_DEFAULT(0));

74 
CVAPI
(Ë
cvAddText
(c⁄° 
CvAº
* 
img
, c⁄° * 
ãxt
, 
CvPoöt
 
‹g
, 
CvF⁄t
 *
¨g2
);

76 
CVAPI
(Ë
cvDi•œyOvîœy
(c⁄° * 
«me
, c⁄° * 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

77 
CVAPI
(Ë
cvDi•œySètusB¨
(c⁄° * 
«me
, c⁄° * 
ãxt
, 
dñayms
 
CV_DEFAULT
(0));

79 
CVAPI
(Ë
cvSaveWödowP¨amëîs
(c⁄° * 
«me
);

80 
CVAPI
(Ë
cvLﬂdWödowP¨amëîs
(c⁄° * 
«me
);

81 
CVAPI
(Ë
cvSèπLo›
((*
±2Func
)(
¨gc
, *
¨gv
[]), argc, *árgv[]);

82 
CVAPI
(Ë
cvSt›Lo›
( );

84 (
CV_CDECL
 *
	tCvBuâ⁄CÆlback
)(
	t°©e
, * 
	tu£rd©a
);

85 íum {
CV_PUSH_BUTTON
 = 0, 
CV_CHECKBOX
 = 1, 
CV_RADIOBOX
 = 2};

86 
CVAPI
(Ë
cvCª©eBuâ⁄
–c⁄° * 
buâ⁄_«me
 
CV_DEFAULT
(
NULL
),
CvBuâ⁄CÆlback
 
⁄_ch™ge
 CV_DEFAULT(NULL), * 
u£rd©a
 CV_DEFAULT(NULLË, 
buâ⁄_ty≥
 CV_DEFAULT(
CV_PUSH_BUTTON
), 
öôül_buâ⁄_°©e
 CV_DEFAULT(0));

91 
CVAPI
(Ë
cvInôSy°em
–
¨gc
, ** 
¨gv
 );

93 
CVAPI
(Ë
cvSèπWödowThªad
( );

99 
CV_WND_PROP_FULLSCREEN
 = 0,

100 
CV_WND_PROP_AUTOSIZE
 = 1,

101 
CV_WND_PROP_ASPECTRATIO
= 2,

102 
CV_WND_PROP_OPENGL
 = 3,

105 
CV_WINDOW_NORMAL
 = 0x00000000,

106 
CV_WINDOW_AUTOSIZE
 = 0x00000001,

107 
CV_WINDOW_OPENGL
 = 0x00001000,

110 
CV_GUI_EXPANDED
 = 0x00000000,

111 
CV_GUI_NORMAL
 = 0x00000010,

114 
CV_WINDOW_FULLSCREEN
 = 1,

115 
CV_WINDOW_FREERATIO
 = 0x00000100,

116 
CV_WINDOW_KEEPRATIO
 = 0x00000000

120 
CVAPI
(Ë
cvNamedWödow
–c⁄° * 
«me
, 
Êags
 
CV_DEFAULT
(
CV_WINDOW_AUTOSIZE
) );

123 
CVAPI
(Ë
cvSëWödowPr›îty
(c⁄° * 
«me
, 
¥›_id
, 
¥›_vÆue
);

124 
CVAPI
(Ë
cvGëWödowPr›îty
(c⁄° * 
«me
, 
¥›_id
);

127 
CVAPI
(Ë
cvShowImage
–c⁄° * 
«me
, c⁄° 
CvAº
* 
image
 );

130 
CVAPI
(Ë
cvResizeWödow
–c⁄° * 
«me
, 
width
, 
height
 );

131 
CVAPI
(Ë
cvMoveWödow
–c⁄° * 
«me
, 
x
, 
y
 );

135 
CVAPI
(Ë
cvDe°royWödow
–c⁄° * 
«me
 );

137 
CVAPI
(Ë
cvDe°royAŒWödows
();

140 
CVAPI
(*Ë
cvGëWödowH™dÀ
–c⁄° * 
«me
 );

143 
CVAPI
(c⁄° *Ë
cvGëWödowName
–* 
wödow_h™dÀ
 );

146 (
CV_CDECL
 *
	tCvTøckb¨CÆlback
)(
	tpos
);

149 
CVAPI
(Ë
cvCª©eTøckb¨
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
,

150 * 
vÆue
, 
cou¡
, 
CvTøckb¨CÆlback
 
⁄_ch™ge
 
CV_DEFAULT
(
NULL
));

152 (
CV_CDECL
 *
	tCvTøckb¨CÆlback2
)(
	tpos
, * 
	tu£rd©a
);

154 
CVAPI
(Ë
cvCª©eTøckb¨2
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
,

155 * 
vÆue
, 
cou¡
, 
CvTøckb¨CÆlback2
 
⁄_ch™ge
,

156 * 
u£rd©a
 
CV_DEFAULT
(0));

159 
CVAPI
(Ë
cvGëTøckb¨Pos
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
 );

160 
CVAPI
(Ë
cvSëTøckb¨Pos
–c⁄° * 
åackb¨_«me
, c⁄° * 
wödow_«me
, 
pos
 );

164 
CV_EVENT_MOUSEMOVE
 =0,

165 
CV_EVENT_LBUTTONDOWN
 =1,

166 
CV_EVENT_RBUTTONDOWN
 =2,

167 
CV_EVENT_MBUTTONDOWN
 =3,

168 
CV_EVENT_LBUTTONUP
 =4,

169 
CV_EVENT_RBUTTONUP
 =5,

170 
CV_EVENT_MBUTTONUP
 =6,

171 
CV_EVENT_LBUTTONDBLCLK
 =7,

172 
CV_EVENT_RBUTTONDBLCLK
 =8,

173 
CV_EVENT_MBUTTONDBLCLK
 =9

178 
CV_EVENT_FLAG_LBUTTON
 =1,

179 
CV_EVENT_FLAG_RBUTTON
 =2,

180 
CV_EVENT_FLAG_MBUTTON
 =4,

181 
CV_EVENT_FLAG_CTRLKEY
 =8,

182 
CV_EVENT_FLAG_SHIFTKEY
 =16,

183 
CV_EVENT_FLAG_ALTKEY
 =32

186 (
CV_CDECL
 *
	tCvMou£CÆlback
 )(
	tevít
, 
	tx
, 
	ty
, 
	tÊags
, * 
	t∑øm
);

189 
CVAPI
(Ë
cvSëMou£CÆlback
–c⁄° * 
wödow_«me
, 
CvMou£CÆlback
 
⁄_mou£
,

190 * 
∑øm
 
CV_DEFAULT
(
NULL
));

195 
CV_LOAD_IMAGE_UNCHANGED
 =-1,

197 
CV_LOAD_IMAGE_GRAYSCALE
 =0,

199 
CV_LOAD_IMAGE_COLOR
 =1,

201 
CV_LOAD_IMAGE_ANYDEPTH
 =2,

203 
CV_LOAD_IMAGE_ANYCOLOR
 =4

212 
CVAPI
(
I∂Image
*Ë
cvLﬂdImage
–c⁄° * 
fûíame
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

213 
CVAPI
(
CvM©
*Ë
cvLﬂdImageM
–c⁄° * 
fûíame
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

217 
CV_IMWRITE_JPEG_QUALITY
 =1,

218 
CV_IMWRITE_PNG_COMPRESSION
 =16,

219 
CV_IMWRITE_PNG_STRATEGY
 =17,

220 
CV_IMWRITE_PNG_BILEVEL
 =18,

221 
CV_IMWRITE_PNG_STRATEGY_DEFAULT
 =0,

222 
CV_IMWRITE_PNG_STRATEGY_FILTERED
 =1,

223 
CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY
 =2,

224 
CV_IMWRITE_PNG_STRATEGY_RLE
 =3,

225 
CV_IMWRITE_PNG_STRATEGY_FIXED
 =4,

226 
CV_IMWRITE_PXM_BINARY
 =32

230 
CVAPI
(Ë
cvSaveImage
–c⁄° * 
fûíame
, c⁄° 
CvAº
* 
image
,

231 c⁄° * 
∑øms
 
CV_DEFAULT
(0) );

234 
CVAPI
(
I∂Image
*Ë
cvDecodeImage
–c⁄° 
CvM©
* 
buf
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

235 
CVAPI
(
CvM©
*Ë
cvDecodeImageM
–c⁄° CvM©* 
buf
, 
iscﬁ‹
 
CV_DEFAULT
(
CV_LOAD_IMAGE_COLOR
));

238 
CVAPI
(
CvM©
*Ë
cvEncodeImage
–c⁄° * 
ext
, c⁄° 
CvAº
* 
image
,

239 c⁄° * 
∑øms
 
CV_DEFAULT
(0) );

243 
CV_CVTIMG_FLIP
 =1,

244 
CV_CVTIMG_SWAP_RB
 =2

248 
CVAPI
(Ë
cvC⁄vîtImage
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
Êags
 
CV_DEFAULT
(0));

251 
CVAPI
(Ë
cvWaôKey
(
dñay
 
CV_DEFAULT
(0));

255 (
CV_CDECL
 *
	tCvO≥nGlDøwCÆlback
)(* 
	tu£rd©a
);

256 
CVAPI
(Ë
cvSëO≥nGlDøwCÆlback
(c⁄° * 
wödow_«me
, 
CvO≥nGlDøwCÆlback
 
ˇŒback
, * 
u£rd©a
 
CV_DEFAULT
(
NULL
));

258 
CVAPI
(Ë
cvSëO≥nGlC⁄ãxt
(c⁄° * 
wödow_«me
);

259 
CVAPI
(Ë
cvUpd©eWödow
(c⁄° * 
wödow_«me
);

267 
CvC≠tuª
 
	tCvC≠tuª
;

270 
CVAPI
(
CvC≠tuª
*Ë
cvCª©eFûeC≠tuª
–c⁄° * 
fûíame
 );

274 
CV_CAP_ANY
 =0,

276 
CV_CAP_MIL
 =100,

278 
CV_CAP_VFW
 =200,

279 
CV_CAP_V4L
 =200,

280 
CV_CAP_V4L2
 =200,

282 
CV_CAP_FIREWARE
 =300,

283 
CV_CAP_FIREWIRE
 =300,

284 
CV_CAP_IEEE1394
 =300,

285 
CV_CAP_DC1394
 =300,

286 
CV_CAP_CMU1394
 =300,

288 
CV_CAP_STEREO
 =400,

289 
CV_CAP_TYZX
 =400,

290 
CV_TYZX_LEFT
 =400,

291 
CV_TYZX_RIGHT
 =401,

292 
CV_TYZX_COLOR
 =402,

293 
CV_TYZX_Z
 =403,

295 
CV_CAP_QT
 =500,

297 
CV_CAP_UNICAP
 =600,

299 
CV_CAP_DSHOW
 =700,

300 
CV_CAP_MSMF
 =1400,

302 
CV_CAP_PVAPI
 =800,

304 
CV_CAP_OPENNI
 =900,

305 
CV_CAP_OPENNI_ASUS
 =910,

307 
CV_CAP_ANDROID
 =1000,

308 
CV_CAP_ANDROID_BACK
 =
CV_CAP_ANDROID
+99,

309 
CV_CAP_ANDROID_FRONT
 =
CV_CAP_ANDROID
+98,

311 
CV_CAP_XIAPI
 =1100,

313 
CV_CAP_AVFOUNDATION
 = 1200,

315 
CV_CAP_GIGANETIX
 = 1300,

317 
CV_CAP_INTELPERC
 = 1500

321 
CVAPI
(
CvC≠tuª
*Ë
cvCª©eCamîaC≠tuª
–
ödex
 );

325 
CVAPI
(Ë
cvGøbFøme
–
CvC≠tuª
* 
ˇ±uª
 );

331 
CVAPI
(
I∂Image
*Ë
cvRërõveFøme
–
CvC≠tuª
* 
ˇ±uª
, 
°ªamIdx
 
CV_DEFAULT
(0) );

335 
CVAPI
(
I∂Image
*Ë
cvQuîyFøme
–
CvC≠tuª
* 
ˇ±uª
 );

338 
CVAPI
(Ë
cvRñó£C≠tuª
–
CvC≠tuª
** 
ˇ±uª
 );

344 
CV_CAP_PROP_DC1394_OFF
 = -4,

345 
CV_CAP_PROP_DC1394_MODE_MANUAL
 = -3,

346 
CV_CAP_PROP_DC1394_MODE_AUTO
 = -2,

347 
CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO
 = -1,

348 
CV_CAP_PROP_POS_MSEC
 =0,

349 
CV_CAP_PROP_POS_FRAMES
 =1,

350 
CV_CAP_PROP_POS_AVI_RATIO
 =2,

351 
CV_CAP_PROP_FRAME_WIDTH
 =3,

352 
CV_CAP_PROP_FRAME_HEIGHT
 =4,

353 
CV_CAP_PROP_FPS
 =5,

354 
CV_CAP_PROP_FOURCC
 =6,

355 
CV_CAP_PROP_FRAME_COUNT
 =7,

356 
CV_CAP_PROP_FORMAT
 =8,

357 
CV_CAP_PROP_MODE
 =9,

358 
CV_CAP_PROP_BRIGHTNESS
 =10,

359 
CV_CAP_PROP_CONTRAST
 =11,

360 
CV_CAP_PROP_SATURATION
 =12,

361 
CV_CAP_PROP_HUE
 =13,

362 
CV_CAP_PROP_GAIN
 =14,

363 
CV_CAP_PROP_EXPOSURE
 =15,

364 
CV_CAP_PROP_CONVERT_RGB
 =16,

365 
CV_CAP_PROP_WHITE_BALANCE_BLUE_U
 =17,

366 
CV_CAP_PROP_RECTIFICATION
 =18,

367 
CV_CAP_PROP_MONOCROME
 =19,

368 
CV_CAP_PROP_SHARPNESS
 =20,

369 
CV_CAP_PROP_AUTO_EXPOSURE
 =21,

372 
CV_CAP_PROP_GAMMA
 =22,

373 
CV_CAP_PROP_TEMPERATURE
 =23,

374 
CV_CAP_PROP_TRIGGER
 =24,

375 
CV_CAP_PROP_TRIGGER_DELAY
 =25,

376 
CV_CAP_PROP_WHITE_BALANCE_RED_V
 =26,

377 
CV_CAP_PROP_ZOOM
 =27,

378 
CV_CAP_PROP_FOCUS
 =28,

379 
CV_CAP_PROP_GUID
 =29,

380 
CV_CAP_PROP_ISO_SPEED
 =30,

381 
CV_CAP_PROP_MAX_DC1394
 =31,

382 
CV_CAP_PROP_BACKLIGHT
 =32,

383 
CV_CAP_PROP_PAN
 =33,

384 
CV_CAP_PROP_TILT
 =34,

385 
CV_CAP_PROP_ROLL
 =35,

386 
CV_CAP_PROP_IRIS
 =36,

387 
CV_CAP_PROP_SETTINGS
 =37,

389 
CV_CAP_PROP_AUTOGRAB
 =1024,

390 
CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING
=1025,

391 
CV_CAP_PROP_PREVIEW_FORMAT
=1026,

394 
CV_CAP_OPENNI_DEPTH_GENERATOR
 = 1 << 31,

395 
CV_CAP_OPENNI_IMAGE_GENERATOR
 = 1 << 30,

396 
CV_CAP_OPENNI_GENERATORS_MASK
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_OPENNI_IMAGE_GENERATOR
,

399 
CV_CAP_PROP_OPENNI_OUTPUT_MODE
 = 100,

400 
CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH
 = 101,

401 
CV_CAP_PROP_OPENNI_BASELINE
 = 102,

402 
CV_CAP_PROP_OPENNI_FOCAL_LENGTH
 = 103,

403 
CV_CAP_PROP_OPENNI_REGISTRATION
 = 104,

404 
CV_CAP_PROP_OPENNI_REGISTRATION_ON
 = 
CV_CAP_PROP_OPENNI_REGISTRATION
,

407 
CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC
 = 105,

408 
CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE
 = 106,

409 
CV_CAP_PROP_OPENNI_CIRCLE_BUFFER
 = 107,

410 
CV_CAP_PROP_OPENNI_MAX_TIME_DURATION
 = 108,

412 
CV_CAP_PROP_OPENNI_GENERATOR_PRESENT
 = 109,

414 
CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT
 = 
CV_CAP_OPENNI_IMAGE_GENERATOR
 + 
CV_CAP_PROP_OPENNI_GENERATOR_PRESENT
,

415 
CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE
 = 
CV_CAP_OPENNI_IMAGE_GENERATOR
 + 
CV_CAP_PROP_OPENNI_OUTPUT_MODE
,

416 
CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_BASELINE
,

417 
CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_FOCAL_LENGTH
,

418 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR
 + 
CV_CAP_PROP_OPENNI_REGISTRATION
,

419 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON
 = 
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION
,

422 
CV_CAP_GSTREAMER_QUEUE_LENGTH
 = 200,

423 
CV_CAP_PROP_PVAPI_MULTICASTIP
 = 300,

426 
CV_CAP_PROP_XI_DOWNSAMPLING
 = 400,

427 
CV_CAP_PROP_XI_DATA_FORMAT
 = 401,

428 
CV_CAP_PROP_XI_OFFSET_X
 = 402,

429 
CV_CAP_PROP_XI_OFFSET_Y
 = 403,

430 
CV_CAP_PROP_XI_TRG_SOURCE
 = 404,

431 
CV_CAP_PROP_XI_TRG_SOFTWARE
 = 405,

432 
CV_CAP_PROP_XI_GPI_SELECTOR
 = 406,

433 
CV_CAP_PROP_XI_GPI_MODE
 = 407,

434 
CV_CAP_PROP_XI_GPI_LEVEL
 = 408,

435 
CV_CAP_PROP_XI_GPO_SELECTOR
 = 409,

436 
CV_CAP_PROP_XI_GPO_MODE
 = 410,

437 
CV_CAP_PROP_XI_LED_SELECTOR
 = 411,

438 
CV_CAP_PROP_XI_LED_MODE
 = 412,

439 
CV_CAP_PROP_XI_MANUAL_WB
 = 413,

440 
CV_CAP_PROP_XI_AUTO_WB
 = 414,

441 
CV_CAP_PROP_XI_AEAG
 = 415,

442 
CV_CAP_PROP_XI_EXP_PRIORITY
 = 416,

443 
CV_CAP_PROP_XI_AE_MAX_LIMIT
 = 417,

444 
CV_CAP_PROP_XI_AG_MAX_LIMIT
 = 418,

445 
CV_CAP_PROP_XI_AEAG_LEVEL
 = 419,

446 
CV_CAP_PROP_XI_TIMEOUT
 = 420,

449 
CV_CAP_PROP_ANDROID_FLASH_MODE
 = 8001,

450 
CV_CAP_PROP_ANDROID_FOCUS_MODE
 = 8002,

451 
CV_CAP_PROP_ANDROID_WHITE_BALANCE
 = 8003,

452 
CV_CAP_PROP_ANDROID_ANTIBANDING
 = 8004,

453 
CV_CAP_PROP_ANDROID_FOCAL_LENGTH
 = 8005,

454 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR
 = 8006,

455 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL
 = 8007,

456 
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR
 = 8008,

457 
CV_CAP_PROP_ANDROID_EXPOSE_LOCK
 = 8009,

458 
CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK
 = 8010,

461 
CV_CAP_PROP_IOS_DEVICE_FOCUS
 = 9001,

462 
CV_CAP_PROP_IOS_DEVICE_EXPOSURE
 = 9002,

463 
CV_CAP_PROP_IOS_DEVICE_FLASH
 = 9003,

464 
CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE
 = 9004,

465 
CV_CAP_PROP_IOS_DEVICE_TORCH
 = 9005,

469 
CV_CAP_PROP_GIGA_FRAME_OFFSET_X
 = 10001,

470 
CV_CAP_PROP_GIGA_FRAME_OFFSET_Y
 = 10002,

471 
CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX
 = 10003,

472 
CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX
 = 10004,

473 
CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH
 = 10005,

474 
CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH
 = 10006,

476 
CV_CAP_PROP_INTELPERC_PROFILE_COUNT
 = 11001,

477 
CV_CAP_PROP_INTELPERC_PROFILE_IDX
 = 11002,

478 
CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE
 = 11003,

479 
CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE
 = 11004,

480 
CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD
 = 11005,

481 
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ
 = 11006,

482 
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT
 = 11007,

485 
CV_CAP_INTELPERC_DEPTH_GENERATOR
 = 1 << 29,

486 
CV_CAP_INTELPERC_IMAGE_GENERATOR
 = 1 << 28,

487 
CV_CAP_INTELPERC_GENERATORS_MASK
 = 
CV_CAP_INTELPERC_DEPTH_GENERATOR
 + 
CV_CAP_INTELPERC_IMAGE_GENERATOR


493 
CV_CAP_OPENNI_DEPTH_MAP
 = 0,

494 
CV_CAP_OPENNI_POINT_CLOUD_MAP
 = 1,

495 
CV_CAP_OPENNI_DISPARITY_MAP
 = 2,

496 
CV_CAP_OPENNI_DISPARITY_MAP_32F
 = 3,

497 
CV_CAP_OPENNI_VALID_DEPTH_MASK
 = 4,

500 
CV_CAP_OPENNI_BGR_IMAGE
 = 5,

501 
CV_CAP_OPENNI_GRAY_IMAGE
 = 6

507 
CV_CAP_OPENNI_VGA_30HZ
 = 0,

508 
CV_CAP_OPENNI_SXGA_15HZ
 = 1,

509 
CV_CAP_OPENNI_SXGA_30HZ
 = 2,

510 
CV_CAP_OPENNI_QVGA_30HZ
 = 3,

511 
CV_CAP_OPENNI_QVGA_60HZ
 = 4

517 
CV_CAP_ANDROID_COLOR_FRAME_BGR
 = 0,

518 
CV_CAP_ANDROID_COLOR_FRAME
 = 
CV_CAP_ANDROID_COLOR_FRAME_BGR
,

519 
CV_CAP_ANDROID_GREY_FRAME
 = 1,

520 
CV_CAP_ANDROID_COLOR_FRAME_RGB
 = 2,

521 
CV_CAP_ANDROID_COLOR_FRAME_BGRA
 = 3,

522 
CV_CAP_ANDROID_COLOR_FRAME_RGBA
 = 4

528 
CV_CAP_ANDROID_FLASH_MODE_AUTO
 = 0,

529 
CV_CAP_ANDROID_FLASH_MODE_OFF
,

530 
CV_CAP_ANDROID_FLASH_MODE_ON
,

531 
CV_CAP_ANDROID_FLASH_MODE_RED_EYE
,

532 
CV_CAP_ANDROID_FLASH_MODE_TORCH


538 
CV_CAP_ANDROID_FOCUS_MODE_AUTO
 = 0,

539 
CV_CAP_ANDROID_FOCUS_MODE_CONTINUOUS_PICTURE
,

540 
CV_CAP_ANDROID_FOCUS_MODE_CONTINUOUS_VIDEO
,

541 
CV_CAP_ANDROID_FOCUS_MODE_EDOF
,

542 
CV_CAP_ANDROID_FOCUS_MODE_FIXED
,

543 
CV_CAP_ANDROID_FOCUS_MODE_INFINITY
,

544 
CV_CAP_ANDROID_FOCUS_MODE_MACRO


550 
CV_CAP_ANDROID_WHITE_BALANCE_AUTO
 = 0,

551 
CV_CAP_ANDROID_WHITE_BALANCE_CLOUDY_DAYLIGHT
,

552 
CV_CAP_ANDROID_WHITE_BALANCE_DAYLIGHT
,

553 
CV_CAP_ANDROID_WHITE_BALANCE_FLUORESCENT
,

554 
CV_CAP_ANDROID_WHITE_BALANCE_INCANDESCENT
,

555 
CV_CAP_ANDROID_WHITE_BALANCE_SHADE
,

556 
CV_CAP_ANDROID_WHITE_BALANCE_TWILIGHT
,

557 
CV_CAP_ANDROID_WHITE_BALANCE_WARM_FLUORESCENT


563 
CV_CAP_ANDROID_ANTIBANDING_50HZ
 = 0,

564 
CV_CAP_ANDROID_ANTIBANDING_60HZ
,

565 
CV_CAP_ANDROID_ANTIBANDING_AUTO
,

566 
CV_CAP_ANDROID_ANTIBANDING_OFF


571 
CV_CAP_INTELPERC_DEPTH_MAP
 = 0,

572 
CV_CAP_INTELPERC_UVDEPTH_MAP
 = 1,

573 
CV_CAP_INTELPERC_IR_MAP
 = 2,

574 
CV_CAP_INTELPERC_IMAGE
 = 3

578 
CVAPI
(Ë
cvGëC≠tuªPr›îty
–
CvC≠tuª
* 
ˇ±uª
, 
¥›îty_id
 );

579 
CVAPI
(Ë
cvSëC≠tuªPr›îty
–
CvC≠tuª
* 
ˇ±uª
, 
¥›îty_id
, 
vÆue
 );

582 
CVAPI
(Ë
cvGëC≠tuªDomaö
–
CvC≠tuª
* 
ˇ±uª
);

585 
CvVideoWrôî
 
	tCvVideoWrôî
;

587 
	#CV_FOURCC_MACRO
(
c1
, 
c2
, 
c3
, 
c4
Ë(((c1Ë& 255Ë+ (((c2Ë& 255Ë<< 8Ë+ (((c3Ë& 255Ë<< 16Ë+ (((c4Ë& 255Ë<< 24))

	)

589 
CV_INLINE
 
CV_FOURCC
(
c1
, 
c2
, 
c3
, 
c4
)

591  
CV_FOURCC_MACRO
(
c1
, 
c2
, 
c3
, 
c4
);

594 
	#CV_FOURCC_PROMPT
 -1

	)

595 
	#CV_FOURCC_DEFAULT
 
	`CV_FOURCC
('I', 'Y', 'U', 'V'Ë

	)

598 
CVAPI
(
CvVideoWrôî
*Ë
cvCª©eVideoWrôî
–c⁄° * 
fûíame
, 
fourcc
,

599 
Âs
, 
CvSize
 
‰ame_size
,

600 
is_cﬁ‹
 
CV_DEFAULT
(1));

606 
CVAPI
(Ë
cvWrôeFøme
–
CvVideoWrôî
* 
wrôî
, c⁄° 
I∂Image
* 
image
 );

609 
CVAPI
(Ë
cvRñó£VideoWrôî
–
CvVideoWrôî
** 
wrôî
 );

615 
	#cvC≠tuªFromFûe
 
cvCª©eFûeC≠tuª


	)

616 
	#cvC≠tuªFromCAM
 
cvCª©eCamîaC≠tuª


	)

617 
	#cvC≠tuªFromAVI
 
cvC≠tuªFromFûe


	)

618 
	#cvCª©eAVIWrôî
 
cvCª©eVideoWrôî


	)

619 
	#cvWrôeToAVI
 
cvWrôeFøme


	)

620 
	#cvAddSórchP©h
(
∑th
)

	)

621 
	#cvvInôSy°em
 
cvInôSy°em


	)

622 
	#cvvNamedWödow
 
cvNamedWödow


	)

623 
	#cvvShowImage
 
cvShowImage


	)

624 
	#cvvResizeWödow
 
cvResizeWödow


	)

625 
	#cvvDe°royWödow
 
cvDe°royWödow


	)

626 
	#cvvCª©eTøckb¨
 
cvCª©eTøckb¨


	)

627 
	#cvvLﬂdImage
(
«me
Ë
	`cvLﬂdImage
(“ame),1)

	)

628 
	#cvvSaveImage
 
cvSaveImage


	)

629 
	#cvvAddSórchP©h
 
cvAddSórchP©h


	)

630 
	#cvvWaôKey
(
«me
Ë
	`cvWaôKey
(0)

	)

631 
	#cvvWaôKeyEx
(
«me
,
dñay
Ë
	`cvWaôKey
(dñay)

	)

632 
	#cvvC⁄vîtImage
 
cvC⁄vîtImage


	)

633 
	#HG_AUTOSIZE
 
CV_WINDOW_AUTOSIZE


	)

634 
	#£t_¥ïro˚ss_func
 
cvSëPª¥o˚ssFuncWö32


	)

635 
	#£t_po°¥o˚ss_func
 
cvSëPo°¥o˚ssFuncWö32


	)

637 #i‡
deföed
 
WIN32
 || deföed 
_WIN32


639 
CVAPI
(Ë
cvSëPª¥o˚ssFuncWö32_
(c⁄° * 
ˇŒback
);

640 
CVAPI
(Ë
cvSëPo°¥o˚ssFuncWö32_
(c⁄° * 
ˇŒback
);

641 
	#cvSëPª¥o˚ssFuncWö32
(
ˇŒback
Ë
	`cvSëPª¥o˚ssFuncWö32_
((c⁄° *)(ˇŒback))

	)

642 
	#cvSëPo°¥o˚ssFuncWö32
(
ˇŒback
Ë
	`cvSëPo°¥o˚ssFuncWö32_
((c⁄° *)(ˇŒback))

	)

646 #ifde‡
__˝lu•lus


	@/usr/include/opencv2/imgproc/imgproc.hpp

47 #i‚de‡
__OPENCV_IMGPROC_HPP__


48 
	#__OPENCV_IMGPROC_HPP__


	)

50 
	~"›ícv2/c‹e/c‹e.hµ
"

51 
	~"›ícv2/img¥oc/ty≥s_c.h
"

53 #ifde‡
__˝lu•lus


58 
«me•a˚
 
	gcv


62 íum { 
	gBORDER_REPLICATE
=
IPL_BORDER_REPLICATE
, 
	gBORDER_CONSTANT
=
IPL_BORDER_CONSTANT
,

63 
	gBORDER_REFLECT
=
IPL_BORDER_REFLECT
, 
	gBORDER_WRAP
=
IPL_BORDER_WRAP
,

64 
	gBORDER_REFLECT_101
=
IPL_BORDER_REFLECT_101
, 
	gBORDER_REFLECT101
=
BORDER_REFLECT_101
,

65 
	gBORDER_TRANSPARENT
=
IPL_BORDER_TRANSPARENT
,

66 
	gBORDER_DEFAULT
=
BORDER_REFLECT_101
, 
	gBORDER_ISOLATED
=16 };

69 
CV_EXPORTS_W
 
b‹dîI¡îpﬁ©e
–
p
, 
Àn
, 
b‹dîTy≥
 );

80 ˛as†
	cCV_EXPORTS
 
	gBa£RowFûãr


82 
	gpublic
:

84 
Ba£RowFûãr
();

86 
	gvútuÆ
 ~
Ba£RowFûãr
();

88 
vútuÆ
 
›î©‹
()(c⁄° 
uch¨
* 
	g§c
, uch¨* 
	gd°
,

89 
	gwidth
, 
	g˙
) = 0;

90 
	gksize
, 
	g™ch‹
;

107 ˛as†
	cCV_EXPORTS
 
	gBa£CﬁumnFûãr


109 
	gpublic
:

111 
Ba£CﬁumnFûãr
();

113 
	gvútuÆ
 ~
Ba£CﬁumnFûãr
();

115 
vútuÆ
 
›î©‹
()(c⁄° 
uch¨
** 
	g§c
, uch¨* 
	gd°
, 
	gd°°ï
,

116 
	gd°cou¡
, 
	gwidth
) = 0;

118 
vútuÆ
 
ª£t
();

119 
	gksize
, 
	g™ch‹
;

133 ˛as†
	cCV_EXPORTS
 
	gBa£Fûãr


135 
	gpublic
:

137 
Ba£Fûãr
();

139 
	gvútuÆ
 ~
Ba£Fûãr
();

141 
vútuÆ
 
›î©‹
()(c⁄° 
uch¨
** 
	g§c
, uch¨* 
	gd°
, 
	gd°°ï
,

142 
	gd°cou¡
, 
	gwidth
, 
	g˙
) = 0;

144 
vútuÆ
 
ª£t
();

145 
Size
 
	gksize
;

146 
Poöt
 
	g™ch‹
;

222 ˛as†
	cCV_EXPORTS
 
	gFûãrEngöe


224 
	gpublic
:

226 
FûãrEngöe
();

228 
FûãrEngöe
(c⁄° 
På
<
Ba£Fûãr
>& 
_fûãr2D
,

229 c⁄° 
På
<
Ba£RowFûãr
>& 
_rowFûãr
,

230 c⁄° 
På
<
Ba£CﬁumnFûãr
>& 
_cﬁumnFûãr
,

231 
§cTy≥
, 
d°Ty≥
, 
bufTy≥
,

232 
_rowB‹dîTy≥
=
BORDER_REPLICATE
,

233 
_cﬁumnB‹dîTy≥
=-1,

234 c⁄° 
Sˇœr
& 
_b‹dîVÆue
=Scalar());

236 
	gvútuÆ
 ~
FûãrEngöe
();

238 
öô
(c⁄° 
På
<
Ba£Fûãr
>& 
_fûãr2D
,

239 c⁄° 
På
<
Ba£RowFûãr
>& 
_rowFûãr
,

240 c⁄° 
På
<
Ba£CﬁumnFûãr
>& 
_cﬁumnFûãr
,

241 
§cTy≥
, 
d°Ty≥
, 
bufTy≥
,

242 
_rowB‹dîTy≥
=
BORDER_REPLICATE
, 
_cﬁumnB‹dîTy≥
=-1,

243 c⁄° 
Sˇœr
& 
_b‹dîVÆue
=Scalar());

245 
vútuÆ
 
°¨t
(
Size
 
whﬁeSize
, 
Re˘
 
roi
, 
maxBufRows
=-1);

247 
vútuÆ
 
°¨t
(c⁄° 
M©
& 
§c
, c⁄° 
Re˘
& 
§cRoi
=Rect(0,0,-1,-1),

248 
boﬁ
 
isﬁ©ed
=
Ál£
, 
maxBufRows
=-1);

250 
vútuÆ
 
¥o˚ed
(c⁄° 
uch¨
* 
§c
, 
§cSãp
, 
§cCou¡
,

251 
uch¨
* 
d°
, 
d°Sãp
);

253 
vútuÆ
 
≠∂y
–c⁄° 
M©
& 
§c
, M©& 
d°
,

254 c⁄° 
Re˘
& 
§cRoi
=Rect(0,0,-1,-1),

255 
Poöt
 
d°Ofs
=Point(0,0),

256 
boﬁ
 
isﬁ©ed
=
Ál£
);

258 
boﬁ
 
isSï¨abÀ
(Ëc⁄° {  (c⁄° 
	gBa£Fûãr
*)
	gfûãr2D
 == 0; }

260 
ªmaöögI≈utRows
() const;

261 
ªmaöögOuçutRows
() const;

263 
	g§cTy≥
, 
	gd°Ty≥
, 
	gbufTy≥
;

264 
Size
 
	gksize
;

265 
Poöt
 
	g™ch‹
;

266 
	gmaxWidth
;

267 
Size
 
	gwhﬁeSize
;

268 
Re˘
 
	groi
;

269 
	gdx1
, 
	gdx2
;

270 
	growB‹dîTy≥
, 
	gcﬁumnB‹dîTy≥
;

271 
	gve˘‹
<> 
	gb‹dîTab
;

272 
	gb‹dîEÀmSize
;

273 
	gve˘‹
<
	guch¨
> 
	grögBuf
;

274 
	gve˘‹
<
	guch¨
> 
	g§cRow
;

275 
	gve˘‹
<
	guch¨
> 
	gc⁄°B‹dîVÆue
;

276 
	gve˘‹
<
	guch¨
> 
	gc⁄°B‹dîRow
;

277 
	gbufSãp
, 
	g°¨tY
, 
	g°¨tY0
, 
	gídY
, 
	growCou¡
, 
	gd°Y
;

278 
	gve˘‹
<
	guch¨
*> 
	grows
;

280 
	gPå
<
	gBa£Fûãr
> 
	gfûãr2D
;

281 
	gPå
<
	gBa£RowFûãr
> 
	growFûãr
;

282 
	gPå
<
	gBa£CﬁumnFûãr
> 
	gcﬁumnFûãr
;

286 íum { 
	gKERNEL_GENERAL
=0, 
	gKERNEL_SYMMETRICAL
=1, 
	gKERNEL_ASYMMETRICAL
=2,

287 
	gKERNEL_SMOOTH
=4, 
	gKERNEL_INTEGER
=8 };

290 
CV_EXPORTS
 
gëKî√lTy≥
(
I≈utAºay
 
kî√l
, 
Poöt
 
™ch‹
);

293 
CV_EXPORTS
 
	gPå
<
	gBa£RowFûãr
> 
gëLöórRowFûãr
(
§cTy≥
, 
bufTy≥
,

294 
I≈utAºay
 
kî√l
, 
™ch‹
,

295 
symmëryTy≥
);

298 
CV_EXPORTS
 
	gPå
<
	gBa£CﬁumnFûãr
> 
gëLöórCﬁumnFûãr
(
bufTy≥
, 
d°Ty≥
,

299 
I≈utAºay
 
kî√l
, 
™ch‹
,

300 
symmëryTy≥
, 
dñè
=0,

301 
bôs
=0);

304 
CV_EXPORTS
 
	gPå
<
	gBa£Fûãr
> 
gëLöórFûãr
(
§cTy≥
, 
d°Ty≥
,

305 
I≈utAºay
 
kî√l
,

306 
Poöt
 
™ch‹
=Point(-1,-1),

307 
dñè
=0, 
bôs
=0);

310 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãSï¨abÀLöórFûãr
(
§cTy≥
, 
d°Ty≥
,

311 
I≈utAºay
 
rowKî√l
, I≈utAºay 
cﬁumnKî√l
,

312 
Poöt
 
™ch‹
=Poöt(-1,-1), 
dñè
=0,

313 
rowB‹dîTy≥
=
BORDER_DEFAULT
,

314 
cﬁumnB‹dîTy≥
=-1,

315 c⁄° 
Sˇœr
& 
b‹dîVÆue
=Scalar());

318 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãLöórFûãr
(
§cTy≥
, 
d°Ty≥
,

319 
I≈utAºay
 
kî√l
, 
Poöt
 
_™ch‹
=Point(-1,-1),

320 
dñè
=0, 
rowB‹dîTy≥
=
BORDER_DEFAULT
,

321 
cﬁumnB‹dîTy≥
=-1, c⁄° 
Sˇœr
& 
b‹dîVÆue
=Scalar());

324 
CV_EXPORTS_W
 
M©
 
gëGaussünKî√l
–
ksize
, 
sigma
, 
kty≥
=
CV_64F
 );

327 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãGaussünFûãr
–
ty≥
, 
Size
 
ksize
,

328 
sigma1
, 
sigma2
=0,

329 
b‹dîTy≥
=
BORDER_DEFAULT
);

331 
CV_EXPORTS_W
 
gëDîivKî√ls
–
OuçutAºay
 
kx
, OuçutAºay 
ky
,

332 
dx
, 
dy
, 
ksize
,

333 
boﬁ
 
n‹mÆize
=
Ál£
, 
kty≥
=
CV_32F
 );

335 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãDîivFûãr
–
§cTy≥
, 
d°Ty≥
,

336 
dx
, 
dy
, 
ksize
,

337 
b‹dîTy≥
=
BORDER_DEFAULT
 );

339 
CV_EXPORTS
 
	gPå
<
	gBa£RowFûãr
> 
gëRowSumFûãr
(
§cTy≥
, 
sumTy≥
,

340 
ksize
, 
™ch‹
=-1);

342 
CV_EXPORTS
 
	gPå
<
	gBa£CﬁumnFûãr
> 
gëCﬁumnSumFûãr
–
sumTy≥
, 
d°Ty≥
,

343 
ksize
, 
™ch‹
=-1,

344 
sˇÀ
=1);

346 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãBoxFûãr
–
§cTy≥
, 
d°Ty≥
, 
Size
 
ksize
,

347 
Poöt
 
™ch‹
=Point(-1,-1),

348 
boﬁ
 
n‹mÆize
=
åue
,

349 
b‹dîTy≥
=
BORDER_DEFAULT
);

352 
CV_EXPORTS_W
 
M©
 
gëGab‹Kî√l
–
Size
 
ksize
, 
sigma
, 
thëa
, 
œmbd
,

353 
gamma
, 
psi
=
CV_PI
*0.5, 
kty≥
=
CV_64F
 );

356 íum { 
	gMORPH_ERODE
=
CV_MOP_ERODE
, 
	gMORPH_DILATE
=
CV_MOP_DILATE
,

357 
	gMORPH_OPEN
=
CV_MOP_OPEN
, 
	gMORPH_CLOSE
=
CV_MOP_CLOSE
,

358 
	gMORPH_GRADIENT
=
CV_MOP_GRADIENT
, 
	gMORPH_TOPHAT
=
CV_MOP_TOPHAT
,

359 
	gMORPH_BLACKHAT
=
CV_MOP_BLACKHAT
 };

362 
CV_EXPORTS
 
	gPå
<
	gBa£RowFûãr
> 
gëM‹phﬁogyRowFûãr
(
›
, 
ty≥
, 
ksize
, 
™ch‹
=-1);

364 
CV_EXPORTS
 
	gPå
<
	gBa£CﬁumnFûãr
> 
gëM‹phﬁogyCﬁumnFûãr
(
›
, 
ty≥
, 
ksize
, 
™ch‹
=-1);

366 
CV_EXPORTS
 
	gPå
<
	gBa£Fûãr
> 
gëM‹phﬁogyFûãr
(
›
, 
ty≥
, 
I≈utAºay
 
kî√l
,

367 
Poöt
 
™ch‹
=Point(-1,-1));

370 
ölöe
 
Sˇœr
 
	$m‹phﬁogyDeÁu…B‹dîVÆue
(Ë{  
Sˇœr
::
	`Æl
(
DBL_MAX
); 
	}
}

373 
CV_EXPORTS
 
	gPå
<
	gFûãrEngöe
> 
¸óãM‹phﬁogyFûãr
(
›
, 
ty≥
, 
I≈utAºay
 
kî√l
,

374 
Poöt
 
™ch‹
=Poöt(-1,-1), 
rowB‹dîTy≥
=
BORDER_CONSTANT
,

375 
cﬁumnB‹dîTy≥
=-1,

376 c⁄° 
Sˇœr
& 
b‹dîVÆue
=
m‹phﬁogyDeÁu…B‹dîVÆue
());

379 íum { 
	gMORPH_RECT
=0, 
	gMORPH_CROSS
=1, 
	gMORPH_ELLIPSE
=2 };

381 
CV_EXPORTS_W
 
M©
 
gëSåu˘urögEÀmít
(
sh≠e
, 
Size
 
ksize
, 
Poöt
 
™ch‹
=Point(-1,-1));

383 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gI∂C⁄vKî√l
>::
dñëe_obj
();

386 
CV_EXPORTS_W
 
c›yMakeB‹dî
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

387 
t›
, 
bŸtom
, 
À·
, 
right
,

388 
b‹dîTy≥
, c⁄° 
Sˇœr
& 
vÆue
=Scalar() );

391 
CV_EXPORTS_W
 
medünBlur
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ksize
 );

393 
CV_EXPORTS_W
 
GaussünBlur
–
I≈utAºay
 
§c
,

394 
OuçutAºay
 
d°
, 
Size
 
ksize
,

395 
sigmaX
, 
sigmaY
=0,

396 
b‹dîTy≥
=
BORDER_DEFAULT
 );

398 
CV_EXPORTS_W
 
bû©îÆFûãr
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
d
,

399 
sigmaCﬁ‹
, 
sigmaS∑˚
,

400 
b‹dîTy≥
=
BORDER_DEFAULT
 );

402 
CV_EXPORTS_W
 
ad≠tiveBû©îÆFûãr
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
Size
 
ksize
,

403 
sigmaS∑˚
, 
maxSigmaCﬁ‹
 = 20.0, 
Poöt
 
™ch‹
=Point(-1, -1),

404 
b‹dîTy≥
=
BORDER_DEFAULT
 );

406 
CV_EXPORTS_W
 
boxFûãr
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

407 
Size
 
ksize
, 
Poöt
 
™ch‹
=Point(-1,-1),

408 
boﬁ
 
n‹mÆize
=
åue
,

409 
b‹dîTy≥
=
BORDER_DEFAULT
 );

411 
CV_EXPORTS_W
 
blur
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

412 
Size
 
ksize
, 
Poöt
 
™ch‹
=Point(-1,-1),

413 
b‹dîTy≥
=
BORDER_DEFAULT
 );

416 
CV_EXPORTS_W
 
fûãr2D
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

417 
I≈utAºay
 
kî√l
, 
Poöt
 
™ch‹
=Point(-1,-1),

418 
dñè
=0, 
b‹dîTy≥
=
BORDER_DEFAULT
 );

421 
CV_EXPORTS_W
 
£pFûãr2D
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

422 
I≈utAºay
 
kî√lX
, I≈utAºay 
kî√lY
,

423 
Poöt
 
™ch‹
=Point(-1,-1),

424 
dñè
=0, 
b‹dîTy≥
=
BORDER_DEFAULT
 );

427 
CV_EXPORTS_W
 
Sobñ
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

428 
dx
, 
dy
, 
ksize
=3,

429 
sˇÀ
=1, 
dñè
=0,

430 
b‹dîTy≥
=
BORDER_DEFAULT
 );

433 
CV_EXPORTS_W
 
Sch¨r
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

434 
dx
, 
dy
, 
sˇÀ
=1, 
dñè
=0,

435 
b‹dîTy≥
=
BORDER_DEFAULT
 );

438 
CV_EXPORTS_W
 
L≠œcün
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ddïth
,

439 
ksize
=1, 
sˇÀ
=1, 
dñè
=0,

440 
b‹dîTy≥
=
BORDER_DEFAULT
 );

443 
CV_EXPORTS_W
 
C™ny
–
I≈utAºay
 
image
, 
OuçutAºay
 
edges
,

444 
thªshﬁd1
, 
thªshﬁd2
,

445 
≠îtuªSize
=3, 
boﬁ
 
L2gødõ¡
=
Ál£
 );

448 
CV_EXPORTS_W
 
c‹√rMöEigíVÆ
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

449 
blockSize
, 
ksize
=3,

450 
b‹dîTy≥
=
BORDER_DEFAULT
 );

453 
CV_EXPORTS_W
 
c‹√rH¨ris
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
blockSize
,

454 
ksize
, 
k
,

455 
b‹dîTy≥
=
BORDER_DEFAULT
 );

458 
CV_EXPORTS
 
eigí2x2
–c⁄° * 
a
, * 
e
, 
n
 );

461 
CV_EXPORTS_W
 
c‹√rEigíVÆsAndVecs
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

462 
blockSize
, 
ksize
,

463 
b‹dîTy≥
=
BORDER_DEFAULT
 );

466 
CV_EXPORTS_W
 
¥eC‹√rDëe˘
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
ksize
,

467 
b‹dîTy≥
=
BORDER_DEFAULT
 );

470 
CV_EXPORTS_W
 
c‹√rSubPix
–
I≈utAºay
 
image
, 
I≈utOuçutAºay
 
c‹√rs
,

471 
Size
 
wöSize
, Sizê
zîoZ⁄e
,

472 
TîmCrôîü
 
¸ôîü
 );

475 
CV_EXPORTS_W
 
goodFótuªsToTøck
–
I≈utAºay
 
image
, 
OuçutAºay
 
c‹√rs
,

476 
maxC‹√rs
, 
quÆôyLevñ
, 
möDi°™˚
,

477 
I≈utAºay
 
mask
=
noAºay
(), 
blockSize
=3,

478 
boﬁ
 
u£H¨risDëe˘‹
=
Ál£
, 
k
=0.04 );

481 
CV_EXPORTS_W
 
HoughLöes
–
I≈utAºay
 
image
, 
OuçutAºay
 
löes
,

482 
rho
, 
thëa
, 
thªshﬁd
,

483 
§n
=0, 
°n
=0 );

486 
CV_EXPORTS_W
 
HoughLöesP
–
I≈utAºay
 
image
, 
OuçutAºay
 
löes
,

487 
rho
, 
thëa
, 
thªshﬁd
,

488 
möLöeLígth
=0, 
maxLöeG≠
=0 );

491 
CV_EXPORTS_W
 
HoughCú˛es
–
I≈utAºay
 
image
, 
OuçutAºay
 
cú˛es
,

492 
mëhod
, 
dp
, 
möDi°
,

493 
∑øm1
=100, 
∑øm2
=100,

494 
möRadius
=0, 
maxRadius
=0 );

498 
	gGHT_POSITION
 = 0,

499 
	gGHT_SCALE
 = 1,

500 
	gGHT_ROTATION
 = 2

506 ˛as†
	cCV_EXPORTS
 
	gGíîÆizedHough
 : 
public
 
Alg‹ôhm


508 
public
:

509 
På
<
GíîÆizedHough
> 
¸óã
(
mëhod
);

511 
	gvútuÆ
 ~
GíîÆizedHough
();

514 
£tTem∂©e
(
I≈utAºay
 
ãm∂
, 
ˇ¬yThªshﬁd
 = 100, 
Poöt
 
ãm∂Cíãr
 = Point(-1, -1));

515 
£tTem∂©e
(
I≈utAºay
 
edges
, I≈utAºay 
dx
, I≈utAºay 
dy
, 
Poöt
 
ãm∂Cíãr
 = Point(-1, -1));

518 
dëe˘
(
I≈utAºay
 
image
, 
OuçutAºay
 
posôi⁄s
, OuçutAºay 
vŸes
 = 
cv
::
noAºay
(), 
ˇ¬yThªshﬁd
 = 100);

519 
dëe˘
(
I≈utAºay
 
edges
, I≈utAºay 
dx
, I≈utAºay 
dy
, 
OuçutAºay
 
posôi⁄s
, OuçutAºay 
vŸes
 = 
cv
::
noAºay
());

521 
ªÀa£
();

523 
	g¥Ÿe˘ed
:

524 
vútuÆ
 
£tTem∂©eIm∂
(c⁄° 
M©
& 
edges
, c⁄° M©& 
dx
, c⁄° M©& 
dy
, 
Poöt
 
ãm∂Cíãr
) = 0;

525 
vútuÆ
 
dëe˘Im∂
(c⁄° 
M©
& 
edges
, c⁄° M©& 
dx
, c⁄° M©& 
dy
, 
OuçutAºay
 
posôi⁄s
, OuçutAºay 
vŸes
) = 0;

526 
vútuÆ
 
ªÀa£Im∂
() = 0;

528 
	g¥iv©e
:

529 
M©
 
edges_
, 
	gdx_
, 
	gdy_
;

533 
CV_EXPORTS_W
 
îode
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
kî√l
,

534 
Poöt
 
™ch‹
=Poöt(-1,-1), 
ôî©i⁄s
=1,

535 
b‹dîTy≥
=
BORDER_CONSTANT
,

536 c⁄° 
Sˇœr
& 
b‹dîVÆue
=
m‹phﬁogyDeÁu…B‹dîVÆue
() );

539 
CV_EXPORTS_W
 
dû©e
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, I≈utAºay 
kî√l
,

540 
Poöt
 
™ch‹
=Poöt(-1,-1), 
ôî©i⁄s
=1,

541 
b‹dîTy≥
=
BORDER_CONSTANT
,

542 c⁄° 
Sˇœr
& 
b‹dîVÆue
=
m‹phﬁogyDeÁu…B‹dîVÆue
() );

545 
CV_EXPORTS_W
 
m‹phﬁogyEx
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

546 
›
, 
I≈utAºay
 
kî√l
,

547 
Poöt
 
™ch‹
=Poöt(-1,-1), 
ôî©i⁄s
=1,

548 
b‹dîTy≥
=
BORDER_CONSTANT
,

549 c⁄° 
Sˇœr
& 
b‹dîVÆue
=
m‹phﬁogyDeÁu…B‹dîVÆue
() );

554 
	gINTER_NEAREST
=
CV_INTER_NN
,

555 
	gINTER_LINEAR
=
CV_INTER_LINEAR
,

556 
	gINTER_CUBIC
=
CV_INTER_CUBIC
,

557 
	gINTER_AREA
=
CV_INTER_AREA
,

558 
	gINTER_LANCZOS4
=
CV_INTER_LANCZOS4
,

559 
	gINTER_MAX
=7,

560 
	gWARP_INVERSE_MAP
=
CV_WARP_INVERSE_MAP


564 
CV_EXPORTS_W
 
ªsize
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

565 
Size
 
dsize
, 
fx
=0, 
fy
=0,

566 
öãΩﬁ©i⁄
=
INTER_LINEAR
 );

569 
CV_EXPORTS_W
 
w¨pAfföe
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

570 
I≈utAºay
 
M
, 
Size
 
dsize
,

571 
Êags
=
INTER_LINEAR
,

572 
b‹dîMode
=
BORDER_CONSTANT
,

573 c⁄° 
Sˇœr
& 
b‹dîVÆue
=Scalar());

576 
CV_EXPORTS_W
 
w¨pPî•e˘ive
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

577 
I≈utAºay
 
M
, 
Size
 
dsize
,

578 
Êags
=
INTER_LINEAR
,

579 
b‹dîMode
=
BORDER_CONSTANT
,

580 c⁄° 
Sˇœr
& 
b‹dîVÆue
=Scalar());

584 
	gINTER_BITS
=5, 
	gINTER_BITS2
=
INTER_BITS
*2,

585 
	gINTER_TAB_SIZE
=(1<<
INTER_BITS
),

586 
	gINTER_TAB_SIZE2
=
INTER_TAB_SIZE
*INTER_TAB_SIZE

590 
CV_EXPORTS_W
 
ªm≠
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

591 
I≈utAºay
 
m≠1
, I≈utAºay 
m≠2
,

592 
öãΩﬁ©i⁄
, 
b‹dîMode
=
BORDER_CONSTANT
,

593 c⁄° 
Sˇœr
& 
b‹dîVÆue
=Scalar());

596 
CV_EXPORTS_W
 
c⁄vîtM≠s
–
I≈utAºay
 
m≠1
, I≈utAºay 
m≠2
,

597 
OuçutAºay
 
d°m≠1
, OuçutAºay 
d°m≠2
,

598 
d°m≠1ty≥
, 
boﬁ
 
¬öãΩﬁ©i⁄
=
Ál£
 );

601 
CV_EXPORTS_W
 
M©
 
gëRŸ©i⁄M©rix2D
–
Poöt2f
 
˚¡î
, 
™gÀ
, 
sˇÀ
 );

603 
CV_EXPORTS
 
M©
 
gëPî•e˘iveTønsf‹m
–c⁄° 
Poöt2f
 
§c
[], c⁄° Poöt2‡
d°
[] );

605 
CV_EXPORTS
 
M©
 
gëAfföeTønsf‹m
–c⁄° 
Poöt2f
 
§c
[], c⁄° Poöt2‡
d°
[] );

607 
CV_EXPORTS_W
 
övîtAfföeTønsf‹m
–
I≈utAºay
 
M
, 
OuçutAºay
 
iM
 );

609 
CV_EXPORTS_W
 
M©
 
gëPî•e˘iveTønsf‹m
–
I≈utAºay
 
§c
, I≈utAºay 
d°
 );

610 
CV_EXPORTS_W
 
M©
 
gëAfföeTønsf‹m
–
I≈utAºay
 
§c
, I≈utAºay 
d°
 );

613 
CV_EXPORTS_W
 
gëRe˘SubPix
–
I≈utAºay
 
image
, 
Size
 
∑tchSize
,

614 
Poöt2f
 
˚¡î
, 
OuçutAºay
 
∑tch
, 
∑tchTy≥
=-1 );

617 
CV_EXPORTS_W
 
öãgøl
–
I≈utAºay
 
§c
, 
OuçutAºay
 
sum
, 
sdïth
=-1 );

620 
	$CV_EXPORTS_AS
(
öãgøl2
Ë
	`öãgøl
–
I≈utAºay
 
§c
, 
OuçutAºay
 
sum
,

621 
OuçutAºay
 
sqsum
, 
sdïth
=-1 );

623 
	$CV_EXPORTS_AS
(
öãgøl3
Ë
	`öãgøl
–
I≈utAºay
 
§c
, 
OuçutAºay
 
sum
,

624 
OuçutAºay
 
sqsum
, OuçutAºay 
tûãd
,

625 
sdïth
=-1 );

628 
CV_EXPORTS_W
 
	`accumuœã
–
I≈utAºay
 
§c
, 
I≈utOuçutAºay
 
d°
,

629 
I≈utAºay
 
mask
=
	`noAºay
() );

631 
CV_EXPORTS_W
 
	`accumuœãSqu¨e
–
I≈utAºay
 
§c
, 
I≈utOuçutAºay
 
d°
,

632 
I≈utAºay
 
mask
=
	`noAºay
() );

634 
CV_EXPORTS_W
 
	`accumuœãProdu˘
–
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

635 
I≈utOuçutAºay
 
d°
, 
I≈utAºay
 
mask
=
	`noAºay
() );

637 
CV_EXPORTS_W
 
	`accumuœãWeighãd
–
I≈utAºay
 
§c
, 
I≈utOuçutAºay
 
d°
,

638 
Æpha
, 
I≈utAºay
 
mask
=
	`noAºay
() );

641 
CV_EXPORTS_W
 
	`PSNR
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
);

643 
CV_EXPORTS_W
 
Poöt2d
 
	`pha£C‹ªœã
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

644 
I≈utAºay
 
wödow
 = 
	`noAºay
());

645 
CV_EXPORTS_W
 
Poöt2d
 
	`pha£C‹ªœãRes
(
I≈utAºay
 
§c1
, I≈utAºay 
§c2
,

646 
I≈utAºay
 
wödow
, 
CV_OUT
 * 
ª•⁄£
 = 0);

647 
CV_EXPORTS_W
 
	`¸óãH™nögWödow
(
OuçutAºay
 
d°
, 
Size
 
wöSize
, 
ty≥
);

650 íum { 
THRESH_BINARY
=
CV_THRESH_BINARY
, 
THRESH_BINARY_INV
=
CV_THRESH_BINARY_INV
,

651 
THRESH_TRUNC
=
CV_THRESH_TRUNC
, 
THRESH_TOZERO
=
CV_THRESH_TOZERO
,

652 
THRESH_TOZERO_INV
=
CV_THRESH_TOZERO_INV
, 
THRESH_MASK
=
CV_THRESH_MASK
,

653 
THRESH_OTSU
=
CV_THRESH_OTSU
 
	}
};

656 
CV_EXPORTS_W
 
thªshﬁd
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

657 
thªsh
, 
maxvÆ
, 
ty≥
 );

660 íum { 
	gADAPTIVE_THRESH_MEAN_C
=0, 
	gADAPTIVE_THRESH_GAUSSIAN_C
=1 };

663 
CV_EXPORTS_W
 
ad≠tiveThªshﬁd
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

664 
maxVÆue
, 
ad≠tiveMëhod
,

665 
thªshﬁdTy≥
, 
blockSize
, 
C
 );

668 
CV_EXPORTS_W
 
pyrDown
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

669 c⁄° 
Size
& 
d°size
=Size(), 
b‹dîTy≥
=
BORDER_DEFAULT
 );

671 
CV_EXPORTS_W
 
pyrUp
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

672 c⁄° 
Size
& 
d°size
=Size(), 
b‹dîTy≥
=
BORDER_DEFAULT
 );

675 
CV_EXPORTS
 
buûdPyømid
–
I≈utAºay
 
§c
, 
OuçutAºayOfAºays
 
d°
,

676 
maxÀvñ
, 
b‹dîTy≥
=
BORDER_DEFAULT
 );

679 
CV_EXPORTS_W
 
undi°‹t
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

680 
I≈utAºay
 
ˇmîaM©rix
,

681 
I≈utAºay
 
di°C€ffs
,

682 
I≈utAºay
 
√wCamîaM©rix
=
noAºay
() );

685 
CV_EXPORTS_W
 
öôUndi°‹tRe˘ifyM≠
–
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

686 
I≈utAºay
 
R
, I≈utAºay 
√wCamîaM©rix
,

687 
Size
 
size
, 
m1ty≥
, 
OuçutAºay
 
m≠1
, OuçutAºay 
m≠2
 );

691 
	gPROJ_SPHERICAL_ORTHO
 = 0,

692 
	gPROJ_SPHERICAL_EQRECT
 = 1

696 
CV_EXPORTS_W
 
öôWideAngÀProjM≠
–
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

697 
Size
 
imageSize
, 
de°ImageWidth
,

698 
m1ty≥
, 
OuçutAºay
 
m≠1
, OuçutAºay 
m≠2
,

699 
¥ojTy≥
=
PROJ_SPHERICAL_EQRECT
, 
Æpha
=0);

702 
CV_EXPORTS_W
 
M©
 
gëDeÁu…NewCamîaM©rix
–
I≈utAºay
 
ˇmîaM©rix
, 
Size
 
imgsize
=Size(),

703 
boﬁ
 
˚¡îPröcùÆPoöt
=
Ál£
 );

706 
CV_EXPORTS_W
 
undi°‹tPoöts
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

707 
I≈utAºay
 
ˇmîaM©rix
, I≈utAºay 
di°C€ffs
,

708 
I≈utAºay
 
R
=
noAºay
(), I≈utAºay 
P
=noArray());

710 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvHi°ogøm
>::
dñëe_obj
();

713 
CV_EXPORTS
 
ˇlcHi°
–c⁄° 
M©
* 
images
, 
nimages
,

714 c⁄° * 
ch™√ls
, 
I≈utAºay
 
mask
,

715 
OuçutAºay
 
hi°
, 
dims
, c⁄° * 
hi°Size
,

716 c⁄° ** 
ønges
, 
boﬁ
 
unif‹m
=
åue
, boﬁ 
accumuœã
=
Ál£
 );

719 
CV_EXPORTS
 
ˇlcHi°
–c⁄° 
M©
* 
images
, 
nimages
,

720 c⁄° * 
ch™√ls
, 
I≈utAºay
 
mask
,

721 
S∑r£M©
& 
hi°
, 
dims
,

722 c⁄° * 
hi°Size
, c⁄° ** 
ønges
,

723 
boﬁ
 
unif‹m
=
åue
, boﬁ 
accumuœã
=
Ál£
 );

725 
CV_EXPORTS_W
 
ˇlcHi°
–
I≈utAºayOfAºays
 
images
,

726 c⁄° 
ve˘‹
<>& 
ch™√ls
,

727 
I≈utAºay
 
mask
, 
OuçutAºay
 
hi°
,

728 c⁄° 
ve˘‹
<>& 
hi°Size
,

729 c⁄° 
ve˘‹
<>& 
ønges
,

730 
boﬁ
 
accumuœã
=
Ál£
 );

733 
CV_EXPORTS
 
ˇlcBackProje˘
–c⁄° 
M©
* 
images
, 
nimages
,

734 c⁄° * 
ch™√ls
, 
I≈utAºay
 
hi°
,

735 
OuçutAºay
 
backProje˘
, c⁄° ** 
ønges
,

736 
sˇÀ
=1, 
boﬁ
 
unif‹m
=
åue
 );

739 
CV_EXPORTS
 
ˇlcBackProje˘
–c⁄° 
M©
* 
images
, 
nimages
,

740 c⁄° * 
ch™√ls
, c⁄° 
S∑r£M©
& 
hi°
,

741 
OuçutAºay
 
backProje˘
, c⁄° ** 
ønges
,

742 
sˇÀ
=1, 
boﬁ
 
unif‹m
=
åue
 );

744 
CV_EXPORTS_W
 
ˇlcBackProje˘
–
I≈utAºayOfAºays
 
images
, c⁄° 
ve˘‹
<>& 
ch™√ls
,

745 
I≈utAºay
 
hi°
, 
OuçutAºay
 
d°
,

746 c⁄° 
ve˘‹
<>& 
ønges
,

747 
sˇÀ
 );

758 
CV_EXPORTS_W
 
com∑ªHi°
–
I≈utAºay
 
H1
, I≈utAºay 
H2
, 
mëhod
 );

761 
CV_EXPORTS
 
com∑ªHi°
–c⁄° 
S∑r£M©
& 
H1
, c⁄° S∑r£M©& 
H2
, 
mëhod
 );

764 
CV_EXPORTS_W
 
equÆizeHi°
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
 );

766 ˛as†
	cCV_EXPORTS_W
 
	gCLAHE
 : 
public
 
Alg‹ôhm


768 
public
:

769 
CV_WRAP
 
vútuÆ
 
≠∂y
(
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
) = 0;

771 
CV_WRAP
 
vútuÆ
 
£tClùLimô
(
˛ùLimô
) = 0;

772 
CV_WRAP
 
vútuÆ
 
gëClùLimô
() const = 0;

774 
CV_WRAP
 
vútuÆ
 
£tTûesGridSize
(
Size
 
tûeGridSize
) = 0;

775 
CV_WRAP
 
vútuÆ
 
Size
 
gëTûesGridSize
() const = 0;

777 
CV_WRAP
 
vútuÆ
 
cﬁÀ˘G¨bage
() = 0;

779 
CV_EXPORTS_W
 
	gPå
<
	gCLAHE
> 
¸óãCLAHE
(
˛ùLimô
 = 40.0, 
Size
 
tûeGridSize
 = Size(8, 8));

781 
CV_EXPORTS
 
EMD
–
I≈utAºay
 
sig«tuª1
, I≈utAºay 
sig«tuª2
,

782 
di°Ty≥
, 
I≈utAºay
 
co°
=
noAºay
(),

783 * 
lowîBound
=0, 
OuçutAºay
 
Êow
=
noAºay
() );

786 
CV_EXPORTS_W
 
w©îshed
–
I≈utAºay
 
image
, 
I≈utOuçutAºay
 
m¨kîs
 );

789 
CV_EXPORTS_W
 
pyrMónShi·Fûãrög
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

790 
•
, 
§
, 
maxLevñ
=1,

791 
TîmCrôîü
 
ãrm¸ô
=TermCriteria(

792 
TîmCrôîü
::
MAX_ITER
+TîmCrôîü::
EPS
,5,1) );

797 
	gGC_BGD
 = 0,

798 
	gGC_FGD
 = 1,

799 
	gGC_PR_BGD
 = 2,

800 
	gGC_PR_FGD
 = 3

806 
	gGC_INIT_WITH_RECT
 = 0,

807 
	gGC_INIT_WITH_MASK
 = 1,

808 
	gGC_EVAL
 = 2

812 
CV_EXPORTS_W
 
gøbCut
–
I≈utAºay
 
img
, 
I≈utOuçutAºay
 
mask
, 
Re˘
 
ª˘
,

813 
I≈utOuçutAºay
 
bgdModñ
, I≈utOuçutAºay 
fgdModñ
,

814 
ôîCou¡
, 
mode
 = 
GC_EVAL
 );

818 
	gDIST_LABEL_CCOMP
 = 0,

819 
	gDIST_LABEL_PIXEL
 = 1

823 
	$CV_EXPORTS_AS
(
di°™˚Tønsf‹mWôhLabñs
Ë
	`di°™˚Tønsf‹m
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

824 
OuçutAºay
 
œbñs
, 
di°™˚Ty≥
, 
maskSize
,

825 
œbñTy≥
=
DIST_LABEL_CCOMP
 );

828 
CV_EXPORTS_W
 
	`di°™˚Tønsf‹m
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

829 
di°™˚Ty≥
, 
maskSize
 );

831 íum { 
FLOODFILL_FIXED_RANGE
 = 1 << 16, 
FLOODFILL_MASK_ONLY
 = 1 << 17 
	}
};

834 
CV_EXPORTS
 
ÊoodFûl
–
I≈utOuçutAºay
 
image
,

835 
Poöt
 
£edPoöt
, 
Sˇœr
 
√wVÆ
, 
CV_OUT
 
Re˘
* 
ª˘
=0,

836 
Sˇœr
 
loDiff
=Sˇœr(), Sˇœ∏
upDiff
=Scalar(),

837 
Êags
=4 );

840 
CV_EXPORTS_W
 
ÊoodFûl
–
I≈utOuçutAºay
 
image
, I≈utOuçutAºay 
mask
,

841 
Poöt
 
£edPoöt
, 
Sˇœr
 
√wVÆ
, 
CV_OUT
 
Re˘
* 
ª˘
=0,

842 
Sˇœr
 
loDiff
=Sˇœr(), Sˇœ∏
upDiff
=Scalar(),

843 
Êags
=4 );

848 
	gCOLOR_BGR2BGRA
 =0,

849 
	gCOLOR_RGB2RGBA
 =
COLOR_BGR2BGRA
,

851 
	gCOLOR_BGRA2BGR
 =1,

852 
	gCOLOR_RGBA2RGB
 =
COLOR_BGRA2BGR
,

854 
	gCOLOR_BGR2RGBA
 =2,

855 
	gCOLOR_RGB2BGRA
 =
COLOR_BGR2RGBA
,

857 
	gCOLOR_RGBA2BGR
 =3,

858 
	gCOLOR_BGRA2RGB
 =
COLOR_RGBA2BGR
,

860 
	gCOLOR_BGR2RGB
 =4,

861 
	gCOLOR_RGB2BGR
 =
COLOR_BGR2RGB
,

863 
	gCOLOR_BGRA2RGBA
 =5,

864 
	gCOLOR_RGBA2BGRA
 =
COLOR_BGRA2RGBA
,

866 
	gCOLOR_BGR2GRAY
 =6,

867 
	gCOLOR_RGB2GRAY
 =7,

868 
	gCOLOR_GRAY2BGR
 =8,

869 
	gCOLOR_GRAY2RGB
 =
COLOR_GRAY2BGR
,

870 
	gCOLOR_GRAY2BGRA
 =9,

871 
	gCOLOR_GRAY2RGBA
 =
COLOR_GRAY2BGRA
,

872 
	gCOLOR_BGRA2GRAY
 =10,

873 
	gCOLOR_RGBA2GRAY
 =11,

875 
	gCOLOR_BGR2BGR565
 =12,

876 
	gCOLOR_RGB2BGR565
 =13,

877 
	gCOLOR_BGR5652BGR
 =14,

878 
	gCOLOR_BGR5652RGB
 =15,

879 
	gCOLOR_BGRA2BGR565
 =16,

880 
	gCOLOR_RGBA2BGR565
 =17,

881 
	gCOLOR_BGR5652BGRA
 =18,

882 
	gCOLOR_BGR5652RGBA
 =19,

884 
	gCOLOR_GRAY2BGR565
 =20,

885 
	gCOLOR_BGR5652GRAY
 =21,

887 
	gCOLOR_BGR2BGR555
 =22,

888 
	gCOLOR_RGB2BGR555
 =23,

889 
	gCOLOR_BGR5552BGR
 =24,

890 
	gCOLOR_BGR5552RGB
 =25,

891 
	gCOLOR_BGRA2BGR555
 =26,

892 
	gCOLOR_RGBA2BGR555
 =27,

893 
	gCOLOR_BGR5552BGRA
 =28,

894 
	gCOLOR_BGR5552RGBA
 =29,

896 
	gCOLOR_GRAY2BGR555
 =30,

897 
	gCOLOR_BGR5552GRAY
 =31,

899 
	gCOLOR_BGR2XYZ
 =32,

900 
	gCOLOR_RGB2XYZ
 =33,

901 
	gCOLOR_XYZ2BGR
 =34,

902 
	gCOLOR_XYZ2RGB
 =35,

904 
	gCOLOR_BGR2YCrCb
 =36,

905 
	gCOLOR_RGB2YCrCb
 =37,

906 
	gCOLOR_YCrCb2BGR
 =38,

907 
	gCOLOR_YCrCb2RGB
 =39,

909 
	gCOLOR_BGR2HSV
 =40,

910 
	gCOLOR_RGB2HSV
 =41,

912 
	gCOLOR_BGR2Lab
 =44,

913 
	gCOLOR_RGB2Lab
 =45,

915 
	gCOLOR_BayîBG2BGR
 =46,

916 
	gCOLOR_BayîGB2BGR
 =47,

917 
	gCOLOR_BayîRG2BGR
 =48,

918 
	gCOLOR_BayîGR2BGR
 =49,

920 
	gCOLOR_BayîBG2RGB
 =
COLOR_BayîRG2BGR
,

921 
	gCOLOR_BayîGB2RGB
 =
COLOR_BayîGR2BGR
,

922 
	gCOLOR_BayîRG2RGB
 =
COLOR_BayîBG2BGR
,

923 
	gCOLOR_BayîGR2RGB
 =
COLOR_BayîGB2BGR
,

925 
	gCOLOR_BGR2Luv
 =50,

926 
	gCOLOR_RGB2Luv
 =51,

927 
	gCOLOR_BGR2HLS
 =52,

928 
	gCOLOR_RGB2HLS
 =53,

930 
	gCOLOR_HSV2BGR
 =54,

931 
	gCOLOR_HSV2RGB
 =55,

933 
	gCOLOR_Lab2BGR
 =56,

934 
	gCOLOR_Lab2RGB
 =57,

935 
	gCOLOR_Luv2BGR
 =58,

936 
	gCOLOR_Luv2RGB
 =59,

937 
	gCOLOR_HLS2BGR
 =60,

938 
	gCOLOR_HLS2RGB
 =61,

940 
	gCOLOR_BayîBG2BGR_VNG
 =62,

941 
	gCOLOR_BayîGB2BGR_VNG
 =63,

942 
	gCOLOR_BayîRG2BGR_VNG
 =64,

943 
	gCOLOR_BayîGR2BGR_VNG
 =65,

945 
	gCOLOR_BayîBG2RGB_VNG
 =
COLOR_BayîRG2BGR_VNG
,

946 
	gCOLOR_BayîGB2RGB_VNG
 =
COLOR_BayîGR2BGR_VNG
,

947 
	gCOLOR_BayîRG2RGB_VNG
 =
COLOR_BayîBG2BGR_VNG
,

948 
	gCOLOR_BayîGR2RGB_VNG
 =
COLOR_BayîGB2BGR_VNG
,

950 
	gCOLOR_BGR2HSV_FULL
 = 66,

951 
	gCOLOR_RGB2HSV_FULL
 = 67,

952 
	gCOLOR_BGR2HLS_FULL
 = 68,

953 
	gCOLOR_RGB2HLS_FULL
 = 69,

955 
	gCOLOR_HSV2BGR_FULL
 = 70,

956 
	gCOLOR_HSV2RGB_FULL
 = 71,

957 
	gCOLOR_HLS2BGR_FULL
 = 72,

958 
	gCOLOR_HLS2RGB_FULL
 = 73,

960 
	gCOLOR_LBGR2Lab
 = 74,

961 
	gCOLOR_LRGB2Lab
 = 75,

962 
	gCOLOR_LBGR2Luv
 = 76,

963 
	gCOLOR_LRGB2Luv
 = 77,

965 
	gCOLOR_Lab2LBGR
 = 78,

966 
	gCOLOR_Lab2LRGB
 = 79,

967 
	gCOLOR_Luv2LBGR
 = 80,

968 
	gCOLOR_Luv2LRGB
 = 81,

970 
	gCOLOR_BGR2YUV
 = 82,

971 
	gCOLOR_RGB2YUV
 = 83,

972 
	gCOLOR_YUV2BGR
 = 84,

973 
	gCOLOR_YUV2RGB
 = 85,

975 
	gCOLOR_BayîBG2GRAY
 = 86,

976 
	gCOLOR_BayîGB2GRAY
 = 87,

977 
	gCOLOR_BayîRG2GRAY
 = 88,

978 
	gCOLOR_BayîGR2GRAY
 = 89,

981 
	gCOLOR_YUV2RGB_NV12
 = 90,

982 
	gCOLOR_YUV2BGR_NV12
 = 91,

983 
	gCOLOR_YUV2RGB_NV21
 = 92,

984 
	gCOLOR_YUV2BGR_NV21
 = 93,

985 
	gCOLOR_YUV420•2RGB
 = 
COLOR_YUV2RGB_NV21
,

986 
	gCOLOR_YUV420•2BGR
 = 
COLOR_YUV2BGR_NV21
,

988 
	gCOLOR_YUV2RGBA_NV12
 = 94,

989 
	gCOLOR_YUV2BGRA_NV12
 = 95,

990 
	gCOLOR_YUV2RGBA_NV21
 = 96,

991 
	gCOLOR_YUV2BGRA_NV21
 = 97,

992 
	gCOLOR_YUV420•2RGBA
 = 
COLOR_YUV2RGBA_NV21
,

993 
	gCOLOR_YUV420•2BGRA
 = 
COLOR_YUV2BGRA_NV21
,

995 
	gCOLOR_YUV2RGB_YV12
 = 98,

996 
	gCOLOR_YUV2BGR_YV12
 = 99,

997 
	gCOLOR_YUV2RGB_IYUV
 = 100,

998 
	gCOLOR_YUV2BGR_IYUV
 = 101,

999 
	gCOLOR_YUV2RGB_I420
 = 
COLOR_YUV2RGB_IYUV
,

1000 
	gCOLOR_YUV2BGR_I420
 = 
COLOR_YUV2BGR_IYUV
,

1001 
	gCOLOR_YUV420p2RGB
 = 
COLOR_YUV2RGB_YV12
,

1002 
	gCOLOR_YUV420p2BGR
 = 
COLOR_YUV2BGR_YV12
,

1004 
	gCOLOR_YUV2RGBA_YV12
 = 102,

1005 
	gCOLOR_YUV2BGRA_YV12
 = 103,

1006 
	gCOLOR_YUV2RGBA_IYUV
 = 104,

1007 
	gCOLOR_YUV2BGRA_IYUV
 = 105,

1008 
	gCOLOR_YUV2RGBA_I420
 = 
COLOR_YUV2RGBA_IYUV
,

1009 
	gCOLOR_YUV2BGRA_I420
 = 
COLOR_YUV2BGRA_IYUV
,

1010 
	gCOLOR_YUV420p2RGBA
 = 
COLOR_YUV2RGBA_YV12
,

1011 
	gCOLOR_YUV420p2BGRA
 = 
COLOR_YUV2BGRA_YV12
,

1013 
	gCOLOR_YUV2GRAY_420
 = 106,

1014 
	gCOLOR_YUV2GRAY_NV21
 = 
COLOR_YUV2GRAY_420
,

1015 
	gCOLOR_YUV2GRAY_NV12
 = 
COLOR_YUV2GRAY_420
,

1016 
	gCOLOR_YUV2GRAY_YV12
 = 
COLOR_YUV2GRAY_420
,

1017 
	gCOLOR_YUV2GRAY_IYUV
 = 
COLOR_YUV2GRAY_420
,

1018 
	gCOLOR_YUV2GRAY_I420
 = 
COLOR_YUV2GRAY_420
,

1019 
	gCOLOR_YUV420•2GRAY
 = 
COLOR_YUV2GRAY_420
,

1020 
	gCOLOR_YUV420p2GRAY
 = 
COLOR_YUV2GRAY_420
,

1023 
	gCOLOR_YUV2RGB_UYVY
 = 107,

1024 
	gCOLOR_YUV2BGR_UYVY
 = 108,

1027 
	gCOLOR_YUV2RGB_Y422
 = 
COLOR_YUV2RGB_UYVY
,

1028 
	gCOLOR_YUV2BGR_Y422
 = 
COLOR_YUV2BGR_UYVY
,

1029 
	gCOLOR_YUV2RGB_UYNV
 = 
COLOR_YUV2RGB_UYVY
,

1030 
	gCOLOR_YUV2BGR_UYNV
 = 
COLOR_YUV2BGR_UYVY
,

1032 
	gCOLOR_YUV2RGBA_UYVY
 = 111,

1033 
	gCOLOR_YUV2BGRA_UYVY
 = 112,

1036 
	gCOLOR_YUV2RGBA_Y422
 = 
COLOR_YUV2RGBA_UYVY
,

1037 
	gCOLOR_YUV2BGRA_Y422
 = 
COLOR_YUV2BGRA_UYVY
,

1038 
	gCOLOR_YUV2RGBA_UYNV
 = 
COLOR_YUV2RGBA_UYVY
,

1039 
	gCOLOR_YUV2BGRA_UYNV
 = 
COLOR_YUV2BGRA_UYVY
,

1041 
	gCOLOR_YUV2RGB_YUY2
 = 115,

1042 
	gCOLOR_YUV2BGR_YUY2
 = 116,

1043 
	gCOLOR_YUV2RGB_YVYU
 = 117,

1044 
	gCOLOR_YUV2BGR_YVYU
 = 118,

1045 
	gCOLOR_YUV2RGB_YUYV
 = 
COLOR_YUV2RGB_YUY2
,

1046 
	gCOLOR_YUV2BGR_YUYV
 = 
COLOR_YUV2BGR_YUY2
,

1047 
	gCOLOR_YUV2RGB_YUNV
 = 
COLOR_YUV2RGB_YUY2
,

1048 
	gCOLOR_YUV2BGR_YUNV
 = 
COLOR_YUV2BGR_YUY2
,

1050 
	gCOLOR_YUV2RGBA_YUY2
 = 119,

1051 
	gCOLOR_YUV2BGRA_YUY2
 = 120,

1052 
	gCOLOR_YUV2RGBA_YVYU
 = 121,

1053 
	gCOLOR_YUV2BGRA_YVYU
 = 122,

1054 
	gCOLOR_YUV2RGBA_YUYV
 = 
COLOR_YUV2RGBA_YUY2
,

1055 
	gCOLOR_YUV2BGRA_YUYV
 = 
COLOR_YUV2BGRA_YUY2
,

1056 
	gCOLOR_YUV2RGBA_YUNV
 = 
COLOR_YUV2RGBA_YUY2
,

1057 
	gCOLOR_YUV2BGRA_YUNV
 = 
COLOR_YUV2BGRA_YUY2
,

1059 
	gCOLOR_YUV2GRAY_UYVY
 = 123,

1060 
	gCOLOR_YUV2GRAY_YUY2
 = 124,

1062 
	gCOLOR_YUV2GRAY_Y422
 = 
COLOR_YUV2GRAY_UYVY
,

1063 
	gCOLOR_YUV2GRAY_UYNV
 = 
COLOR_YUV2GRAY_UYVY
,

1064 
	gCOLOR_YUV2GRAY_YVYU
 = 
COLOR_YUV2GRAY_YUY2
,

1065 
	gCOLOR_YUV2GRAY_YUYV
 = 
COLOR_YUV2GRAY_YUY2
,

1066 
	gCOLOR_YUV2GRAY_YUNV
 = 
COLOR_YUV2GRAY_YUY2
,

1069 
	gCOLOR_RGBA2mRGBA
 = 125,

1070 
	gCOLOR_mRGBA2RGBA
 = 126,

1072 
	gCOLOR_RGB2YUV_I420
 = 127,

1073 
	gCOLOR_BGR2YUV_I420
 = 128,

1074 
	gCOLOR_RGB2YUV_IYUV
 = 
COLOR_RGB2YUV_I420
,

1075 
	gCOLOR_BGR2YUV_IYUV
 = 
COLOR_BGR2YUV_I420
,

1077 
	gCOLOR_RGBA2YUV_I420
 = 129,

1078 
	gCOLOR_BGRA2YUV_I420
 = 130,

1079 
	gCOLOR_RGBA2YUV_IYUV
 = 
COLOR_RGBA2YUV_I420
,

1080 
	gCOLOR_BGRA2YUV_IYUV
 = 
COLOR_BGRA2YUV_I420
,

1081 
	gCOLOR_RGB2YUV_YV12
 = 131,

1082 
	gCOLOR_BGR2YUV_YV12
 = 132,

1083 
	gCOLOR_RGBA2YUV_YV12
 = 133,

1084 
	gCOLOR_BGRA2YUV_YV12
 = 134,

1086 
	gCOLOR_COLORCVT_MAX
 = 135

1091 
CV_EXPORTS_W
 
cvtCﬁ‹
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
code
, 
d°Cn
=0 );

1094 ˛as†
	cCV_EXPORTS_W_MAP
 
	gMomíts


1096 
	gpublic
:

1098 
Momíts
();

1100 
Momíts
(
m00
, 
m10
, 
m01
, 
m20
, 
m11
,

1101 
m02
, 
m30
, 
m21
, 
m12
, 
m03
 );

1103 
Momíts
–c⁄° 
CvMomíts
& 
momíts
 );

1105 
›î©‹
 
CvMomíts
() const;

1108 
CV_PROP_RW
 
	gm00
, 
	gm10
, 
	gm01
, 
	gm20
, 
	gm11
, 
	gm02
, 
	gm30
, 
	gm21
, 
	gm12
, 
	gm03
;

1110 
CV_PROP_RW
 
	gmu20
, 
	gmu11
, 
	gmu02
, 
	gmu30
, 
	gmu21
, 
	gmu12
, 
	gmu03
;

1112 
CV_PROP_RW
 
	gnu20
, 
	gnu11
, 
	gnu02
, 
	gnu30
, 
	gnu21
, 
	gnu12
, 
	gnu03
;

1116 
CV_EXPORTS_W
 
Momíts
 
momíts
–
I≈utAºay
 
¨øy
, 
boﬁ
 
bö¨yImage
=
Ál£
 );

1119 
CV_EXPORTS
 
HuMomíts
–c⁄° 
Momíts
& 
momíts
, 
hu
[7] );

1120 
CV_EXPORTS_W
 
HuMomíts
–c⁄° 
Momíts
& 
m
, 
CV_OUT
 
OuçutAºay
 
hu
 );

1123 íum { 
	gTM_SQDIFF
=0, 
	gTM_SQDIFF_NORMED
=1, 
	gTM_CCORR
=2, 
	gTM_CCORR_NORMED
=3, 
	gTM_CCOEFF
=4, 
	gTM_CCOEFF_NORMED
=5 };

1126 
CV_EXPORTS_W
 
m©chTem∂©e
–
I≈utAºay
 
image
, I≈utAºay 
ãm∂
,

1127 
OuçutAºay
 
ªsu…
, 
mëhod
 );

1132 
	gRETR_EXTERNAL
=
CV_RETR_EXTERNAL
,

1133 
	gRETR_LIST
=
CV_RETR_LIST
,

1134 
	gRETR_CCOMP
=
CV_RETR_CCOMP
,

1135 
	gRETR_TREE
=
CV_RETR_TREE
,

1136 
	gRETR_FLOODFILL
=
CV_RETR_FLOODFILL


1142 
	gCHAIN_APPROX_NONE
=
CV_CHAIN_APPROX_NONE
,

1143 
	gCHAIN_APPROX_SIMPLE
=
CV_CHAIN_APPROX_SIMPLE
,

1144 
	gCHAIN_APPROX_TC89_L1
=
CV_CHAIN_APPROX_TC89_L1
,

1145 
	gCHAIN_APPROX_TC89_KCOS
=
CV_CHAIN_APPROX_TC89_KCOS


1149 
CV_EXPORTS_W
 
födC⁄tours
–
I≈utOuçutAºay
 
image
, 
OuçutAºayOfAºays
 
c⁄tours
,

1150 
OuçutAºay
 
hõørchy
, 
mode
,

1151 
mëhod
, 
Poöt
 
off£t
=Point());

1154 
CV_EXPORTS
 
födC⁄tours
–
I≈utOuçutAºay
 
image
, 
OuçutAºayOfAºays
 
c⁄tours
,

1155 
mode
, 
mëhod
, 
Poöt
 
off£t
=Point());

1158 
CV_EXPORTS_W
 
døwC⁄tours
–
I≈utOuçutAºay
 
image
, 
I≈utAºayOfAºays
 
c⁄tours
,

1159 
c⁄tourIdx
, c⁄° 
Sˇœr
& 
cﬁ‹
,

1160 
thick√ss
=1, 
löeTy≥
=8,

1161 
I≈utAºay
 
hõørchy
=
noAºay
(),

1162 
maxLevñ
=
INT_MAX
, 
Poöt
 
off£t
=Point() );

1165 
CV_EXPORTS_W
 
≠¥oxPﬁyDP
–
I≈utAºay
 
curve
,

1166 
OuçutAºay
 
≠¥oxCurve
,

1167 
ïsû⁄
, 
boﬁ
 
˛o£d
 );

1170 
CV_EXPORTS_W
 
¨cLígth
–
I≈utAºay
 
curve
, 
boﬁ
 
˛o£d
 );

1172 
CV_EXPORTS_W
 
Re˘
 
boundögRe˘
–
I≈utAºay
 
poöts
 );

1174 
CV_EXPORTS_W
 
c⁄tourAªa
–
I≈utAºay
 
c⁄tour
, 
boﬁ
 
‹õ¡ed
=
Ál£
 );

1176 
CV_EXPORTS_W
 
RŸ©edRe˘
 
möAªaRe˘
–
I≈utAºay
 
poöts
 );

1178 
CV_EXPORTS_W
 
möEn˛osögCú˛e
–
I≈utAºay
 
poöts
,

1179 
CV_OUT
 
Poöt2f
& 
˚¡î
, CV_OUT & 
ødius
 );

1181 
CV_EXPORTS_W
 
m©chSh≠es
–
I≈utAºay
 
c⁄tour1
, I≈utAºay 
c⁄tour2
,

1182 
mëhod
, 
∑ømëî
 );

1184 
CV_EXPORTS_W
 
c⁄vexHuŒ
–
I≈utAºay
 
poöts
, 
OuçutAºay
 
huŒ
,

1185 
boﬁ
 
˛ockwi£
=
Ál£
, boﬁ 
ªtu∫Poöts
=
åue
 );

1187 
CV_EXPORTS_W
 
c⁄vexôyDe„˘s
–
I≈utAºay
 
c⁄tour
, I≈utAºay 
c⁄vexhuŒ
, 
OuçutAºay
 convexityDefects );

1190 
CV_EXPORTS_W
 
boﬁ
 
isC⁄tourC⁄vex
–
I≈utAºay
 
c⁄tour
 );

1193 
CV_EXPORTS_W
 
öãr£˘C⁄vexC⁄vex
–
I≈utAºay
 
_p1
, I≈utAºay 
_p2
,

1194 
OuçutAºay
 
_p12
, 
boﬁ
 
h™dÀNe°ed
=
åue
 );

1197 
CV_EXPORTS_W
 
RŸ©edRe˘
 
fôEŒù£
–
I≈utAºay
 
poöts
 );

1200 
CV_EXPORTS_W
 
fôLöe
–
I≈utAºay
 
poöts
, 
OuçutAºay
 
löe
, 
di°Ty≥
,

1201 
∑øm
, 
ªps
, 
´ps
 );

1203 
CV_EXPORTS_W
 
poötPﬁyg⁄Te°
–
I≈utAºay
 
c⁄tour
, 
Poöt2f
 
±
, 
boﬁ
 
mósuªDi°
 );

1206 ˛as†
	cCV_EXPORTS_W
 
	gSubdiv2D


1208 
	gpublic
:

1211 
PTLOC_ERROR
 = -2,

1212 
	gPTLOC_OUTSIDE_RECT
 = -1,

1213 
	gPTLOC_INSIDE
 = 0,

1214 
	gPTLOC_VERTEX
 = 1,

1215 
	gPTLOC_ON_EDGE
 = 2

1220 
	gNEXT_AROUND_ORG
 = 0x00,

1221 
	gNEXT_AROUND_DST
 = 0x22,

1222 
	gPREV_AROUND_ORG
 = 0x11,

1223 
	gPREV_AROUND_DST
 = 0x33,

1224 
	gNEXT_AROUND_LEFT
 = 0x13,

1225 
	gNEXT_AROUND_RIGHT
 = 0x31,

1226 
	gPREV_AROUND_LEFT
 = 0x20,

1227 
	gPREV_AROUND_RIGHT
 = 0x02

1230 
CV_WRAP
 
Subdiv2D
();

1231 
CV_WRAP
 
Subdiv2D
(
Re˘
 
ª˘
);

1232 
CV_WRAP
 
öôDñau«y
(
Re˘
 
ª˘
);

1234 
CV_WRAP
 
ö£π
(
Poöt2f
 
±
);

1235 
CV_WRAP
 
ö£π
(c⁄° 
ve˘‹
<
Poöt2f
>& 
±vec
);

1236 
CV_WRAP
 
loˇã
(
Poöt2f
 
±
, 
CV_OUT
 & 
edge
, CV_OUT & 
vîãx
);

1238 
CV_WRAP
 
födNóª°
(
Poöt2f
 
±
, 
CV_OUT
 Poöt2f* 
√¨e°Pt
=0);

1239 
CV_WRAP
 
gëEdgeLi°
(
CV_OUT
 
ve˘‹
<
Vec4f
>& 
edgeLi°
) const;

1240 
CV_WRAP
 
gëTrüngÀLi°
(
CV_OUT
 
ve˘‹
<
Vec6f
>& 
åüngÀLi°
) const;

1241 
CV_WRAP
 
gëV‹⁄oiFa˚tLi°
(c⁄° 
ve˘‹
<>& 
idx
, 
CV_OUT
 ve˘‹<ve˘‹<
Poöt2f
> >& 
Á˚tLi°
,

1242 
CV_OUT
 
ve˘‹
<
Poöt2f
>& 
Á˚tCíãrs
);

1244 
CV_WRAP
 
Poöt2f
 
gëVîãx
(
vîãx
, 
CV_OUT
 * 
fú°Edge
=0) const;

1246 
CV_WRAP
 
gëEdge
–
edge
, 
√xtEdgeTy≥
 ) const;

1247 
CV_WRAP
 
√xtEdge
(
edge
) const;

1248 
CV_WRAP
 
rŸ©eEdge
(
edge
, 
rŸ©e
) const;

1249 
CV_WRAP
 
symEdge
(
edge
) const;

1250 
CV_WRAP
 
edgeOrg
(
edge
, 
CV_OUT
 
Poöt2f
* 
‹g±
=0) const;

1251 
CV_WRAP
 
edgeD°
(
edge
, 
CV_OUT
 
Poöt2f
* 
d°±
=0) const;

1253 
	g¥Ÿe˘ed
:

1254 
√wEdge
();

1255 
dñëeEdge
(
edge
);

1256 
√wPoöt
(
Poöt2f
 
±
, 
boﬁ
 
isvútuÆ
, 
fú°Edge
=0);

1257 
dñëePoöt
(
vtx
);

1258 
£tEdgePoöts
–
edge
, 
‹gPt
, 
d°Pt
 );

1259 
•li˚
–
edgeA
, 
edgeB
 );

1260 
c⁄√˘Edges
–
edgeA
, 
edgeB
 );

1261 
sw≠Edges
–
edge
 );

1262 
isRightOf
(
Poöt2f
 
±
, 
edge
) const;

1263 
ˇlcV‹⁄oi
();

1264 
˛órV‹⁄oi
();

1265 
checkSubdiv
() const;

1267 
CV_EXPORTS
 
	gVîãx


1269 
Vîãx
();

1270 
Vîãx
(
Poöt2f
 
±
, 
boﬁ
 
_isvútuÆ
, 
_fú°Edge
=0);

1271 
boﬁ
 
isvútuÆ
() const;

1272 
boﬁ
 
is‰ì
() const;

1273 
	gfú°Edge
;

1274 
	gty≥
;

1275 
Poöt2f
 
	g±
;

1277 
CV_EXPORTS
 
	gQuadEdge


1279 
QuadEdge
();

1280 
QuadEdge
(
edgeidx
);

1281 
boﬁ
 
is‰ì
() const;

1282 
	g√xt
[4];

1283 
	g±
[4];

1286 
	gve˘‹
<
	gVîãx
> 
	gvtx
;

1287 
	gve˘‹
<
	gQuadEdge
> 
	gqedges
;

1288 
	g‰ìQEdge
;

1289 
	g‰ìPoöt
;

1290 
boﬁ
 
	gvÆidGeomëry
;

1292 
	gª˚¡Edge
;

1293 
Poöt2f
 
	gt›Le·
;

1294 
Poöt2f
 
	gbŸtomRight
;

	@/usr/include/opencv2/imgproc/imgproc_c.h

43 #i‚de‡
__OPENCV_IMGPROC_IMGPROC_C_H__


44 
	#__OPENCV_IMGPROC_IMGPROC_C_H__


	)

46 
	~"›ícv2/c‹e/c‹e_c.h
"

47 
	~"›ícv2/img¥oc/ty≥s_c.h
"

49 #ifde‡
__˝lu•lus


56 
CVAPI
(Ë
cvAcc
–c⁄° 
CvAº
* 
image
, CvAº* 
sum
,

57 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

60 
CVAPI
(Ë
cvSqu¨eAcc
–c⁄° 
CvAº
* 
image
, CvAº* 
sqsum
,

61 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

64 
CVAPI
(Ë
cvMu…ùlyAcc
–c⁄° 
CvAº
* 
image1
, c⁄° CvAº* 
image2
, CvAº* 
acc
,

65 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

68 
CVAPI
(Ë
cvRu¬ögAvg
–c⁄° 
CvAº
* 
image
, CvAº* 
acc
, 
Æpha
,

69 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

77 
CVAPI
(Ë
cvC›yMakeB‹dî
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
CvPoöt
 
off£t
,

78 
b‹dîty≥
, 
CvSˇœr
 
vÆue
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)));

81 
CVAPI
(Ë
cvSmoŸh
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

82 
smoŸhty≥
 
CV_DEFAULT
(
CV_GAUSSIAN
),

83 
size1
 
CV_DEFAULT
(3),

84 
size2
 
CV_DEFAULT
(0),

85 
sigma1
 
CV_DEFAULT
(0),

86 
sigma2
 
CV_DEFAULT
(0));

89 
CVAPI
(Ë
cvFûãr2D
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, c⁄° 
CvM©
* 
kî√l
,

90 
CvPoöt
 
™ch‹
 
CV_DEFAULT
(
cvPoöt
(-1,-1)));

93 
CVAPI
(Ë
cvI¡egøl
–c⁄° 
CvAº
* 
image
, CvAº* 
sum
,

94 
CvAº
* 
sqsum
 
CV_DEFAULT
(
NULL
),

95 
CvAº
* 
tûãd_sum
 
CV_DEFAULT
(
NULL
));

102 
CVAPI
(Ë
cvPyrDown
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

103 
fûãr
 
CV_DEFAULT
(
CV_GAUSSIAN_5x5
) );

110 
CVAPI
(Ë
cvPyrUp
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

111 
fûãr
 
CV_DEFAULT
(
CV_GAUSSIAN_5x5
) );

114 
CVAPI
(
CvM©
**Ë
cvCª©ePyømid
–c⁄° 
CvAº
* 
img
, 
exåa_œyîs
, 
øã
,

115 c⁄° 
CvSize
* 
œyî_sizes
 
CV_DEFAULT
(0),

116 
CvAº
* 
buÁº
 
CV_DEFAULT
(0),

117 
ˇlc
 
CV_DEFAULT
(1),

118 
fûãr
 
CV_DEFAULT
(
CV_GAUSSIAN_5x5
) );

121 
CVAPI
(Ë
cvRñó£Pyømid
–
CvM©
*** 
pyømid
, 
exåa_œyîs
 );

125 
CVAPI
(Ë
cvPyrMónShi·Fûãrög
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

126 
•
, 
§
, 
max_Àvñ
 
CV_DEFAULT
(1),

127 
CvTîmCrôîü
 
ãrm¸ô
 
CV_DEFAULT
(
cvTîmCrôîü
(
CV_TERMCRIT_ITER
+
CV_TERMCRIT_EPS
,5,1)));

130 
CVAPI
(Ë
cvW©îshed
–c⁄° 
CvAº
* 
image
, CvAº* 
m¨kîs
 );

135 
CVAPI
(Ë
cvSobñ
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

136 
x‹dî
, 
y‹dî
,

137 
≠îtuª_size
 
CV_DEFAULT
(3));

140 
CVAPI
(Ë
cvL≠œ˚
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

141 
≠îtuª_size
 
CV_DEFAULT
(3) );

144 
CVAPI
(Ë
cvCvtCﬁ‹
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
code
 );

148 
CVAPI
(Ë
cvResize
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

149 
öãΩﬁ©i⁄
 
CV_DEFAULT
–
CV_INTER_LINEAR
 ));

152 
CVAPI
(Ë
cvW¨pAfföe
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, c⁄° 
CvM©
* 
m≠_m©rix
,

153 
Êags
 
CV_DEFAULT
(
CV_INTER_LINEAR
+
CV_WARP_FILL_OUTLIERS
),

154 
CvSˇœr
 
fûlvÆ
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)) );

157 
CVAPI
(
CvM©
*Ë
cvGëAfföeTønsf‹m
–c⁄° 
CvPoöt2D32f
 * 
§c
,

158 c⁄° 
CvPoöt2D32f
 * 
d°
,

159 
CvM©
 * 
m≠_m©rix
 );

162 
CVAPI
(
CvM©
*Ë
cv2DRŸ©i⁄M©rix
–
CvPoöt2D32f
 
˚¡î
, 
™gÀ
,

163 
sˇÀ
, 
CvM©
* 
m≠_m©rix
 );

166 
CVAPI
(Ë
cvW¨pPî•e˘ive
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, c⁄° 
CvM©
* 
m≠_m©rix
,

167 
Êags
 
CV_DEFAULT
(
CV_INTER_LINEAR
+
CV_WARP_FILL_OUTLIERS
),

168 
CvSˇœr
 
fûlvÆ
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)) );

171 
CVAPI
(
CvM©
*Ë
cvGëPî•e˘iveTønsf‹m
–c⁄° 
CvPoöt2D32f
* 
§c
,

172 c⁄° 
CvPoöt2D32f
* 
d°
,

173 
CvM©
* 
m≠_m©rix
 );

176 
CVAPI
(Ë
cvRem≠
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

177 c⁄° 
CvAº
* 
m≠x
, c⁄° CvAº* 
m≠y
,

178 
Êags
 
CV_DEFAULT
(
CV_INTER_LINEAR
+
CV_WARP_FILL_OUTLIERS
),

179 
CvSˇœr
 
fûlvÆ
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)) );

182 
CVAPI
(Ë
cvC⁄vîtM≠s
–c⁄° 
CvAº
* 
m≠x
, c⁄° CvAº* 
m≠y
,

183 
CvAº
* 
m≠xy
, CvAº* 
m≠Æpha
 );

186 
CVAPI
(Ë
cvLogPﬁ¨
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

187 
CvPoöt2D32f
 
˚¡î
, 
M
,

188 
Êags
 
CV_DEFAULT
(
CV_INTER_LINEAR
+
CV_WARP_FILL_OUTLIERS
));

191 
CVAPI
(Ë
cvLöórPﬁ¨
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

192 
CvPoöt2D32f
 
˚¡î
, 
maxRadius
,

193 
Êags
 
CV_DEFAULT
(
CV_INTER_LINEAR
+
CV_WARP_FILL_OUTLIERS
));

196 
CVAPI
(Ë
cvUndi°‹t2
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

197 c⁄° 
CvM©
* 
ˇmîa_m©rix
,

198 c⁄° 
CvM©
* 
di°‹ti⁄_c€ffs
,

199 c⁄° 
CvM©
* 
√w_ˇmîa_m©rix
 
CV_DEFAULT
(0) );

203 
CVAPI
(Ë
cvInôUndi°‹tM≠
–c⁄° 
CvM©
* 
ˇmîa_m©rix
,

204 c⁄° 
CvM©
* 
di°‹ti⁄_c€ffs
,

205 
CvAº
* 
m≠x
, CvAº* 
m≠y
 );

208 
CVAPI
(Ë
cvInôUndi°‹tRe˘ifyM≠
–c⁄° 
CvM©
* 
ˇmîa_m©rix
,

209 c⁄° 
CvM©
* 
di°_c€ffs
,

210 c⁄° 
CvM©
 *
R
, c⁄° CvM©* 
√w_ˇmîa_m©rix
,

211 
CvAº
* 
m≠x
, CvAº* 
m≠y
 );

215 
CVAPI
(Ë
cvUndi°‹tPoöts
–c⁄° 
CvM©
* 
§c
, CvM©* 
d°
,

216 c⁄° 
CvM©
* 
ˇmîa_m©rix
,

217 c⁄° 
CvM©
* 
di°_c€ffs
,

218 c⁄° 
CvM©
* 
R
 
CV_DEFAULT
(0),

219 c⁄° 
CvM©
* 
P
 
CV_DEFAULT
(0));

222 
CVAPI
(
I∂C⁄vKî√l
*Ë
cvCª©eSåu˘urögEÀmítEx
(

223 
cﬁs
, 
rows
, 
™ch‹_x
, 
™ch‹_y
,

224 
sh≠e
, * 
vÆues
 
CV_DEFAULT
(
NULL
) );

227 
CVAPI
(Ë
cvRñó£Såu˘urögEÀmít
–
I∂C⁄vKî√l
** 
ñemít
 );

231 
CVAPI
(Ë
cvErode
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

232 
I∂C⁄vKî√l
* 
ñemít
 
CV_DEFAULT
(
NULL
),

233 
ôî©i⁄s
 
CV_DEFAULT
(1) );

237 
CVAPI
(Ë
cvDû©e
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

238 
I∂C⁄vKî√l
* 
ñemít
 
CV_DEFAULT
(
NULL
),

239 
ôî©i⁄s
 
CV_DEFAULT
(1) );

242 
CVAPI
(Ë
cvM‹phﬁogyEx
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

243 
CvAº
* 
ãmp
, 
I∂C⁄vKî√l
* 
ñemít
,

244 
›î©i⁄
, 
ôî©i⁄s
 
CV_DEFAULT
(1) );

247 
CVAPI
(Ë
cvMomíts
–c⁄° 
CvAº
* 
¨r
, 
CvMomíts
* 
momíts
, 
bö¨y
 
CV_DEFAULT
(0));

250 
CVAPI
(Ë
cvGëS∑tülMomít
–
CvMomíts
* 
momíts
, 
x_‹dî
, 
y_‹dî
 );

251 
CVAPI
(Ë
cvGëCíåÆMomít
–
CvMomíts
* 
momíts
, 
x_‹dî
, 
y_‹dî
 );

252 
CVAPI
(Ë
cvGëN‹mÆizedCíåÆMomít
–
CvMomíts
* 
momíts
,

253 
x_‹dî
, 
y_‹dî
 );

256 
CVAPI
(Ë
cvGëHuMomíts
–
CvMomíts
* 
momíts
, 
CvHuMomíts
* 
hu_momíts
 );

262 
CVAPI
(Ë
cvSam∂eLöe
–c⁄° 
CvAº
* 
image
, 
CvPoöt
 
±1
, CvPoöà
±2
, * 
buf„r
,

263 
c⁄√˘ivôy
 
CV_DEFAULT
(8));

268 
CVAPI
(Ë
cvGëRe˘SubPix
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
CvPoöt2D32f
 
˚¡î
 );

276 
CVAPI
(Ë
cvGëQuadøngÀSubPix
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

277 c⁄° 
CvM©
* 
m≠_m©rix
 );

281 
CVAPI
(Ë
cvM©chTem∂©e
–c⁄° 
CvAº
* 
image
, c⁄° CvAº* 
ãm∂
,

282 
CvAº
* 
ªsu…
, 
mëhod
 );

286 
CVAPI
(Ë
cvCÆcEMD2
–c⁄° 
CvAº
* 
sig«tuª1
,

287 c⁄° 
CvAº
* 
sig«tuª2
,

288 
di°™˚_ty≥
,

289 
CvDi°™˚Fun˘i⁄
 
di°™˚_func
 
CV_DEFAULT
(
NULL
),

290 c⁄° 
CvAº
* 
co°_m©rix
 
CV_DEFAULT
(
NULL
),

291 
CvAº
* 
Êow
 
CV_DEFAULT
(
NULL
),

292 * 
lowî_bound
 
CV_DEFAULT
(
NULL
),

293 * 
u£rd©a
 
CV_DEFAULT
(
NULL
));

301 
CVAPI
(Ë
cvFödC⁄tours
–
CvAº
* 
image
, 
CvMemSt‹age
* 
°‹age
, 
CvSeq
** 
fú°_c⁄tour
,

302 
hódî_size
 
CV_DEFAULT
((
CvC⁄tour
)),

303 
mode
 
CV_DEFAULT
(
CV_RETR_LIST
),

304 
mëhod
 
CV_DEFAULT
(
CV_CHAIN_APPROX_SIMPLE
),

305 
CvPoöt
 
off£t
 
CV_DEFAULT
(
cvPoöt
(0,0)));

312 
CVAPI
(
CvC⁄tourSˇ¬î
Ë
cvSèπFödC⁄tours
–
CvAº
* 
image
, 
CvMemSt‹age
* 
°‹age
,

313 
hódî_size
 
CV_DEFAULT
((
CvC⁄tour
)),

314 
mode
 
CV_DEFAULT
(
CV_RETR_LIST
),

315 
mëhod
 
CV_DEFAULT
(
CV_CHAIN_APPROX_SIMPLE
),

316 
CvPoöt
 
off£t
 
CV_DEFAULT
(
cvPoöt
(0,0)));

319 
CVAPI
(
CvSeq
*Ë
cvFödNextC⁄tour
–
CvC⁄tourSˇ¬î
 
sˇ¬î
 );

324 
CVAPI
(Ë
cvSub°ôuãC⁄tour
–
CvC⁄tourSˇ¬î
 
sˇ¬î
, 
CvSeq
* 
√w_c⁄tour
 );

328 
CVAPI
(
CvSeq
*Ë
cvEndFödC⁄tours
–
CvC⁄tourSˇ¬î
* 
sˇ¬î
 );

331 
CVAPI
(
CvSeq
*Ë
cvAµroxChaös
–CvSeq* 
§c_£q
, 
CvMemSt‹age
* 
°‹age
,

332 
mëhod
 
CV_DEFAULT
(
CV_CHAIN_APPROX_SIMPLE
),

333 
∑ømëî
 
CV_DEFAULT
(0),

334 
möimÆ_≥rimëî
 
CV_DEFAULT
(0),

335 
ªcursive
 
CV_DEFAULT
(0));

340 
CVAPI
(Ë
cvSèπRódChaöPoöts
–
CvChaö
* 
chaö
, 
CvChaöPtRódî
* 
ªadî
 );

343 
CVAPI
(
CvPoöt
Ë
cvRódChaöPoöt
–
CvChaöPtRódî
* 
ªadî
 );

352 
CVAPI
(
CvSeq
*Ë
cvAµroxPﬁy
–c⁄° * 
§c_£q
,

353 
hódî_size
, 
CvMemSt‹age
* 
°‹age
,

354 
mëhod
, 
ïs
,

355 
ªcursive
 
CV_DEFAULT
(0));

358 
CVAPI
(Ë
cvArcLígth
–c⁄° * 
curve
,

359 
CvSli˚
 
¶i˚
 
CV_DEFAULT
(
CV_WHOLE_SEQ
),

360 
is_˛o£d
 
CV_DEFAULT
(-1));

362 
CV_INLINE
 
cvC⁄tourPîimëî
–c⁄° * 
c⁄tour
 )

364  
cvArcLígth
–
c⁄tour
, 
CV_WHOLE_SEQ
, 1 );

370 
CVAPI
(
CvRe˘
Ë
cvBoundögRe˘
–
CvAº
* 
poöts
, 
upd©e
 
CV_DEFAULT
(0) );

373 
CVAPI
(Ë
cvC⁄tourAªa
–c⁄° 
CvAº
* 
c⁄tour
,

374 
CvSli˚
 
¶i˚
 
CV_DEFAULT
(
CV_WHOLE_SEQ
),

375 
‹õ¡ed
 
CV_DEFAULT
(0));

378 
CVAPI
(
CvBox2D
Ë
cvMöAªaRe˘2
–c⁄° 
CvAº
* 
poöts
,

379 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
));

382 
CVAPI
(Ë
cvMöEn˛osögCú˛e
–c⁄° 
CvAº
* 
poöts
,

383 
CvPoöt2D32f
* 
˚¡î
, * 
ødius
 );

386 
CVAPI
(Ë
cvM©chSh≠es
–c⁄° * 
obje˘1
, c⁄° * 
obje˘2
,

387 
mëhod
, 
∑ømëî
 
CV_DEFAULT
(0));

390 
CVAPI
(
CvSeq
*Ë
cvC⁄vexHuŒ2
–c⁄° 
CvAº
* 
öput
,

391 * 
huŒ_°‹age
 
CV_DEFAULT
(
NULL
),

392 
‹õ¡©i⁄
 
CV_DEFAULT
(
CV_CLOCKWISE
),

393 
ªtu∫_poöts
 
CV_DEFAULT
(0));

396 
CVAPI
(Ë
cvCheckC⁄tourC⁄vexôy
–c⁄° 
CvAº
* 
c⁄tour
 );

400 
CVAPI
(
CvSeq
*Ë
cvC⁄vexôyDe„˘s
–c⁄° 
CvAº
* 
c⁄tour
, c⁄° CvAº* 
c⁄vexhuŒ
,

401 
CvMemSt‹age
* 
°‹age
 
CV_DEFAULT
(
NULL
));

404 
CVAPI
(
CvBox2D
Ë
cvFôEŒù£2
–c⁄° 
CvAº
* 
poöts
 );

407 
CVAPI
(
CvRe˘
Ë
cvMaxRe˘
–c⁄° CvRe˘* 
ª˘1
, c⁄° CvRe˘* 
ª˘2
 );

410 
CVAPI
(Ë
cvBoxPoöts
–
CvBox2D
 
box
, 
CvPoöt2D32f
 
±
[4] );

414 
CVAPI
(
CvSeq
*Ë
cvPoötSeqFromM©
–
£q_köd
, c⁄° 
CvAº
* 
m©
,

415 
CvC⁄tour
* 
c⁄tour_hódî
,

416 
CvSeqBlock
* 
block
 );

422 
CVAPI
(Ë
cvPoötPﬁyg⁄Te°
–c⁄° 
CvAº
* 
c⁄tour
,

423 
CvPoöt2D32f
 
±
, 
mósuª_di°
 );

430 
CVAPI
(
CvHi°ogøm
*Ë
cvCª©eHi°
–
dims
, * 
sizes
, 
ty≥
,

431 ** 
ønges
 
CV_DEFAULT
(
NULL
),

432 
unif‹m
 
CV_DEFAULT
(1));

435 
CVAPI
(Ë
cvSëHi°BöR™ges
–
CvHi°ogøm
* 
hi°
, ** 
ønges
,

436 
unif‹m
 
CV_DEFAULT
(1));

439 
CVAPI
(
CvHi°ogøm
*Ë
cvMakeHi°HódîF‹Aºay
(

440 
dims
, * 
sizes
, 
CvHi°ogøm
* 
hi°
,

441 * 
d©a
, ** 
ønges
 
CV_DEFAULT
(
NULL
),

442 
unif‹m
 
CV_DEFAULT
(1));

445 
CVAPI
(Ë
cvRñó£Hi°
–
CvHi°ogøm
** 
hi°
 );

448 
CVAPI
(Ë
cvCÀ¨Hi°
–
CvHi°ogøm
* 
hi°
 );

451 
CVAPI
(Ë
cvGëMöMaxHi°VÆue
–c⁄° 
CvHi°ogøm
* 
hi°
,

452 * 
mö_vÆue
, * 
max_vÆue
,

453 * 
mö_idx
 
CV_DEFAULT
(
NULL
),

454 * 
max_idx
 
CV_DEFAULT
(
NULL
));

459 
CVAPI
(Ë
cvN‹mÆizeHi°
–
CvHi°ogøm
* 
hi°
, 
Á˘‹
 );

463 
CVAPI
(Ë
cvThªshHi°
–
CvHi°ogøm
* 
hi°
, 
thªshﬁd
 );

467 
CVAPI
(Ë
cvCom∑ªHi°
–c⁄° 
CvHi°ogøm
* 
hi°1
,

468 c⁄° 
CvHi°ogøm
* 
hi°2
,

469 
mëhod
);

473 
CVAPI
(Ë
cvC›yHi°
–c⁄° 
CvHi°ogøm
* 
§c
, CvHi°ogøm** 
d°
 );

478 
CVAPI
(Ë
cvCÆcBayesünProb
–
CvHi°ogøm
** 
§c
, 
numbî
,

479 
CvHi°ogøm
** 
d°
);

482 
CVAPI
(Ë
cvCÆcAºHi°
–
CvAº
** 
¨r
, 
CvHi°ogøm
* 
hi°
,

483 
accumuœã
 
CV_DEFAULT
(0),

484 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) );

486 
CV_INLINE
 
cvCÆcHi°
–
I∂Image
** 
image
, 
CvHi°ogøm
* 
hi°
,

487 
accumuœã
 
CV_DEFAULT
(0),

488 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
) )

490 
cvCÆcAºHi°
–(
CvAº
**)
image
, 
hi°
, 
accumuœã
, 
mask
 );

494 
CVAPI
(Ë
cvCÆcAºBackProje˘
–
CvAº
** 
image
, CvAº* 
d°
,

495 c⁄° 
CvHi°ogøm
* 
hi°
 );

496 
	#cvCÆcBackProje˘
(
image
, 
d°
, 
hi°
Ë
	`cvCÆcAºBackProje˘
((
CvAº
**)image, d°, hi°)

	)

501 
CVAPI
(Ë
cvCÆcAºBackProje˘P©ch
–
CvAº
** 
image
, CvAº* 
d°
, 
CvSize
 
ønge
,

502 
CvHi°ogøm
* 
hi°
, 
mëhod
,

503 
Á˘‹
 );

504 
	#cvCÆcBackProje˘P©ch
–
image
, 
d°
, 
ønge
, 
hi°
, 
mëhod
, 
Á˘‹
 ) \

505 
	`cvCÆcAºBackProje˘P©ch
–(
CvAº
**)
image
, 
d°
, 
ønge
, 
hi°
, 
mëhod
, 
Á˘‹
 )

	)

509 
CVAPI
(Ë
cvCÆcProbDísôy
–c⁄° 
CvHi°ogøm
* 
hi°1
, c⁄° CvHi°ogøm* 
hi°2
,

510 
CvHi°ogøm
* 
d°_hi°
, 
sˇÀ
 
CV_DEFAULT
(255) );

513 
CVAPI
(Ë
cvEquÆizeHi°
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
 );

517 
CVAPI
(Ë
cvDi°Tønsf‹m
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

518 
di°™˚_ty≥
 
CV_DEFAULT
(
CV_DIST_L2
),

519 
mask_size
 
CV_DEFAULT
(3),

520 c⁄° * 
mask
 
CV_DEFAULT
(
NULL
),

521 
CvAº
* 
œbñs
 
CV_DEFAULT
(
NULL
),

522 
œbñTy≥
 
CV_DEFAULT
(
CV_DIST_LABEL_CCOMP
));

527 
CVAPI
(Ë
cvThªshﬁd
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
,

528 
thªshﬁd
, 
max_vÆue
,

529 
thªshﬁd_ty≥
 );

536 
CVAPI
(Ë
cvAd≠tiveThªshﬁd
–c⁄° 
CvAº
* 
§c
, CvAº* 
d°
, 
max_vÆue
,

537 
ad≠tive_mëhod
 
CV_DEFAULT
(
CV_ADAPTIVE_THRESH_MEAN_C
),

538 
thªshﬁd_ty≥
 
CV_DEFAULT
(
CV_THRESH_BINARY
),

539 
block_size
 
CV_DEFAULT
(3),

540 
∑øm1
 
CV_DEFAULT
(5));

543 
CVAPI
(Ë
cvFloodFûl
–
CvAº
* 
image
, 
CvPoöt
 
£ed_poöt
,

544 
CvSˇœr
 
√w_vÆ
, CvSˇœ∏
lo_diff
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)),

545 
CvSˇœr
 
up_diff
 
CV_DEFAULT
(
cvSˇœrAŒ
(0)),

546 
CvC⁄√˘edComp
* 
comp
 
CV_DEFAULT
(
NULL
),

547 
Êags
 
CV_DEFAULT
(4),

548 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
));

555 
CVAPI
(Ë
cvC™ny
–c⁄° 
CvAº
* 
image
, CvAº* 
edges
, 
thªshﬁd1
,

556 
thªshﬁd2
, 
≠îtuª_size
 
CV_DEFAULT
(3) );

561 
CVAPI
(Ë
cvPªC‹√rDëe˘
–c⁄° 
CvAº
* 
image
, CvAº* 
c‹√rs
,

562 
≠îtuª_size
 
CV_DEFAULT
(3) );

566 
CVAPI
(Ë
cvC‹√rEigíVÆsAndVecs
–c⁄° 
CvAº
* 
image
, CvAº* 
eigívv
,

567 
block_size
, 
≠îtuª_size
 
CV_DEFAULT
(3) );

571 
CVAPI
(Ë
cvC‹√rMöEigíVÆ
–c⁄° 
CvAº
* 
image
, CvAº* 
eigívÆ
,

572 
block_size
, 
≠îtuª_size
 
CV_DEFAULT
(3) );

576 
CVAPI
(Ë
cvC‹√rH¨ris
–c⁄° 
CvAº
* 
image
, CvAº* 
h¨ris_ª•⁄£
,

577 
block_size
, 
≠îtuª_size
 
CV_DEFAULT
(3),

578 
k
 
CV_DEFAULT
(0.04) );

581 
CVAPI
(Ë
cvFödC‹√rSubPix
–c⁄° 
CvAº
* 
image
, 
CvPoöt2D32f
* 
c‹√rs
,

582 
cou¡
, 
CvSize
 
wö
, CvSizê
zîo_z⁄e
,

583 
CvTîmCrôîü
 
¸ôîü
 );

587 
CVAPI
(Ë
cvGoodFótuªsToTøck
–c⁄° 
CvAº
* 
image
, CvAº* 
eig_image
,

588 
CvAº
* 
ãmp_image
, 
CvPoöt2D32f
* 
c‹√rs
,

589 * 
c‹√r_cou¡
, 
quÆôy_Àvñ
,

590 
mö_di°™˚
,

591 c⁄° 
CvAº
* 
mask
 
CV_DEFAULT
(
NULL
),

592 
block_size
 
CV_DEFAULT
(3),

593 
u£_h¨ris
 
CV_DEFAULT
(0),

594 
k
 
CV_DEFAULT
(0.04) );

603 
CVAPI
(
CvSeq
*Ë
cvHoughLöes2
–
CvAº
* 
image
, * 
löe_°‹age
, 
mëhod
,

604 
rho
, 
thëa
, 
thªshﬁd
,

605 
∑øm1
 
CV_DEFAULT
(0), 
∑øm2
 CV_DEFAULT(0));

608 
CVAPI
(
CvSeq
*Ë
cvHoughCú˛es
–
CvAº
* 
image
, * 
cú˛e_°‹age
,

609 
mëhod
, 
dp
, 
mö_di°
,

610 
∑øm1
 
CV_DEFAULT
(100),

611 
∑øm2
 
CV_DEFAULT
(100),

612 
mö_ødius
 
CV_DEFAULT
(0),

613 
max_ødius
 
CV_DEFAULT
(0));

616 
CVAPI
(Ë
cvFôLöe
–c⁄° 
CvAº
* 
poöts
, 
di°_ty≥
, 
∑øm
,

617 
ªps
, 
´ps
, * 
löe
 );

619 #ifde‡
__˝lu•lus


	@/usr/include/opencv2/ml/ml.hpp

41 #i‚de‡
__OPENCV_ML_HPP__


42 
	#__OPENCV_ML_HPP__


	)

44 
	~"›ícv2/c‹e/c‹e.hµ
"

45 
	~<limôs.h
>

47 #ifde‡
__˝lu•lus


49 
	~<m≠
>

50 
	~<°rög
>

51 
	~<io°ªam
>

55 #unde‡
check


62 
	#CV_LOG2PI
 (1.8378770664093454835606594728112)

	)

65 
	#CV_COL_SAMPLE
 0

	)

68 
	#CV_ROW_SAMPLE
 1

	)

70 
	#CV_IS_ROW_SAMPLE
(
Êags
Ë((ÊagsË& 
CV_ROW_SAMPLE
)

	)

72 
	sCvVe˘‹s


74 
	mty≥
;

75 
	mdims
, 
	mcou¡
;

76 
CvVe˘‹s
* 
	m√xt
;

79 
uch¨
** 
	m±r
;

80 ** 
	mÊ
;

81 ** 
	mdb
;

82 } 
	md©a
;

89 
	sCvP¨amL©ti˚


91 
	mmö_vÆ
;

92 
	mmax_vÆ
;

93 
	m°ï
;

95 
	tCvP¨amL©ti˚
;

97 
CV_INLINE
 
CvP¨amL©ti˚
 
	$cvP¨amL©ti˚
–
mö_vÆ
, 
max_vÆ
,

98 
log_°ï
 )

100 
CvP¨amL©ti˚
 
∂
;

101 
∂
.
mö_vÆ
 = 
	`MIN
–mö_vÆ, 
max_vÆ
 );

102 
∂
.
max_vÆ
 = 
	`MAX
–
mö_vÆ
, max_val );

103 
∂
.
°ï
 = 
	`MAX
–
log_°ï
, 1. );

104  
∂
;

105 
	}
}

107 
CV_INLINE
 
CvP¨amL©ti˚
 
	$cvDeÁu…P¨amL©ti˚
( )

109 
CvP¨amL©ti˚
 
∂
 = {0,0,0};

110  
∂
;

111 
	}
}

115 
	#CV_VAR_NUMERICAL
 0

	)

116 
	#CV_VAR_ORDERED
 0

	)

117 
	#CV_VAR_CATEGORICAL
 1

	)

119 
	#CV_TYPE_NAME_ML_SVM
 "›ícv-ml-svm"

	)

120 
	#CV_TYPE_NAME_ML_KNN
 "›ícv-ml-k¬"

	)

121 
	#CV_TYPE_NAME_ML_NBAYES
 "›ícv-ml-bayesün"

	)

122 
	#CV_TYPE_NAME_ML_EM
 "›ícv-ml-em"

	)

123 
	#CV_TYPE_NAME_ML_BOOSTING
 "›ícv-ml-boo°-åì"

	)

124 
	#CV_TYPE_NAME_ML_TREE
 "›ícv-ml-åì"

	)

125 
	#CV_TYPE_NAME_ML_ANN_MLP
 "›ícv-ml-™n-mÕ"

	)

126 
	#CV_TYPE_NAME_ML_CNN
 "›ícv-ml-˙n"

	)

127 
	#CV_TYPE_NAME_ML_RTREES
 "›ícv-ml-øndom-åìs"

	)

128 
	#CV_TYPE_NAME_ML_ERTREES
 "›ícv-ml-exåemñy-øndomized-åìs"

	)

129 
	#CV_TYPE_NAME_ML_GBT
 "›ícv-ml-gødõ¡-boo°ög-åìs"

	)

131 
	#CV_TRAIN_ERROR
 0

	)

132 
	#CV_TEST_ERROR
 1

	)

134 ˛as†
	cCV_EXPORTS_W
 
	mCvSètModñ


136 
	mpublic
:

137 
CvSètModñ
();

138 
	mvútuÆ
 ~
CvSètModñ
();

140 
vútuÆ
 
˛ór
();

142 
CV_WRAP
 
vútuÆ
 
	$ßve
–c⁄° * 
fûíame
, c⁄° * 
«me
=0 ) const;

143 
CV_WRAP
 
vútuÆ
 
	`lﬂd
–c⁄° * 
fûíame
, c⁄° * 
«me
=0 );

145 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
°‹age
, c⁄° * 
«me
 ) const;

146 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
°‹age
, 
CvFûeNode
* 
node
 );

148 
¥Ÿe˘ed
:

149 c⁄° * 
deÁu…_modñ_«me
;

161 
˛ass
 
CvMLD©a
;

163 
CV_EXPORTS_W_MAP
 
CvP¨amGrid


166 íum { 
SVM_C
=0, 
SVM_GAMMA
=1, 
SVM_P
=2, 
SVM_NU
=3, 
SVM_COEF
=4, 
SVM_DEGREE
=5 };

168 
	`CvP¨amGrid
()

170 
mö_vÆ
 = 
max_vÆ
 = 
°ï
 = 0;

173 
	`CvP¨amGrid
–
mö_vÆ
, 
max_vÆ
, 
log_°ï
 );

175 
boﬁ
 
	`check
() const;

177 
CV_PROP_RW
 
mö_vÆ
;

178 
CV_PROP_RW
 
max_vÆ
;

179 
CV_PROP_RW
 
°ï
;

180 
	}
};

182 
ölöe
 
	gCvP¨amGrid
::
	$CvP¨amGrid
–
_mö_vÆ
, 
_max_vÆ
, 
_log_°ï
 )

184 
mö_vÆ
 = 
_mö_vÆ
;

185 
max_vÆ
 = 
_max_vÆ
;

186 
°ï
 = 
_log_°ï
;

187 
	}
}

189 ˛as†
	cCV_EXPORTS_W
 
	mCvN‹mÆBayesCœssifõr
 : 
public
 
CvSètModñ


191 
public
:

192 
CV_WRAP
 
CvN‹mÆBayesCœssifõr
();

193 
	mvútuÆ
 ~
CvN‹mÆBayesCœssifõr
();

195 
CvN‹mÆBayesCœssifõr
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

196 c⁄° 
CvM©
* 
v¨Idx
=0, c⁄° CvM©* 
ßm∂eIdx
=0 );

198 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

199 c⁄° 
CvM©
* 
v¨Idx
 = 0, c⁄° CvM©* 
ßm∂eIdx
=0, 
boﬁ
 
upd©e
=
Ál£
 );

201 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂es
, 
CV_OUT
 CvM©* 
ªsu…s
=0 ) const;

202 
CV_WRAP
 
vútuÆ
 
	`˛ór
();

204 
CV_WRAP
 
	`CvN‹mÆBayesCœssifõr
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

205 c⁄° 
cv
::
M©
& 
v¨Idx
=cv::
	`M©
(), c⁄° cv::M©& 
ßm∂eIdx
=cv::Mat() );

206 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

207 c⁄° 
cv
::
M©
& 
v¨Idx
 = cv::
	`M©
(), c⁄° cv::M©& 
ßm∂eIdx
=cv::Mat(),

208 
boﬁ
 
upd©e
=
Ál£
 );

209 
CV_WRAP
 
vútuÆ
 
	$¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂es
, 
CV_OUT
 cv::M©* 
ªsu…s
=0 ) const;

211 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
°‹age
, c⁄° * 
«me
 ) const;

212 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
°‹age
, 
CvFûeNode
* 
node
 );

214 
¥Ÿe˘ed
:

215 
v¨_cou¡
, 
v¨_Æl
;

216 
CvM©
* 
v¨_idx
;

217 
CvM©
* 
˛s_œbñs
;

218 
CvM©
** 
cou¡
;

219 
CvM©
** 
sum
;

220 
CvM©
** 
¥odu˘sum
;

221 
CvM©
** 
avg
;

222 
CvM©
** 
öv_eigí_vÆues
;

223 
CvM©
** 
cov_rŸ©e_m©s
;

224 
CvM©
* 
c
;

233 ˛as†
	cCV_EXPORTS_W
 
CvKNóª°
 : 
public
 
CvSètModñ


235 
public
:

237 
CV_WRAP
 
	`CvKNóª°
();

238 
vútuÆ
 ~
	`CvKNóª°
();

240 
	`CvKNóª°
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

241 c⁄° 
CvM©
* 
ßm∂eIdx
=0, 
boﬁ
 
isRegªssi⁄
=
Ál£
, 
max_k
=32 );

243 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

244 c⁄° 
CvM©
* 
ßm∂eIdx
=0, 
boﬁ
 
is_ªgªssi⁄
=
Ál£
,

245 
maxK
=32, 
boﬁ
 
upd©eBa£
=
Ál£
 );

247 
vútuÆ
 
	$föd_√¨e°
–c⁄° 
CvM©
* 
ßm∂es
, 
k
, 
CV_OUT
 CvM©* 
ªsu…s
=0,

248 c⁄° ** 
√ighb‹s
=0, 
CV_OUT
 
CvM©
* 
√ighb‹Re•⁄£s
=0, CV_OUT CvM©* 
di°
=0 ) const;

250 
CV_WRAP
 
	`CvKNóª°
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

251 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), 
boﬁ
 
isRegªssi⁄
=
Ál£
, 
max_k
=32 );

253 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

254 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), 
boﬁ
 
isRegªssi⁄
=
Ál£
,

255 
maxK
=32, 
boﬁ
 
upd©eBa£
=
Ál£
 );

257 
vútuÆ
 
	$föd_√¨e°
–c⁄° 
cv
::
M©
& 
ßm∂es
, 
k
, cv::M©* 
ªsu…s
=0,

258 c⁄° ** 
√ighb‹s
=0, 
cv
::
M©
* 
√ighb‹Re•⁄£s
=0,

259 
cv
::
M©
* 
di°
=0 ) const;

260 
CV_WRAP
 
vútuÆ
 
	$föd_√¨e°
–c⁄° 
cv
::
M©
& 
ßm∂es
, 
k
, 
CV_OUT
 cv::M©& 
ªsu…s
,

261 
CV_OUT
 
cv
::
M©
& 
√ighb‹Re•⁄£s
, CV_OUT cv::M©& 
di°s
) const;

263 
vútuÆ
 
	`˛ór
();

264 
	$gë_max_k
() const;

265 
	$gë_v¨_cou¡
() const;

266 
	$gë_ßm∂e_cou¡
() const;

267 
boﬁ
 
	$is_ªgªssi⁄
() const;

269 
vútuÆ
 
	$wrôe_ªsu…s
–
k
, 
k1
, 
°¨t
, 
íd
,

270 c⁄° * 
√ighb‹_ª•⁄£s
, c⁄° * 
di°
, 
CvM©
* 
_ªsu…s
,

271 
CvM©
* 
_√ighb‹_ª•⁄£s
, CvM©* 
_di°
, 
Cv32suf
* 
s‹t_buf
 ) const;

273 
vútuÆ
 
	$föd_√ighb‹s_dúe˘
–c⁄° 
CvM©
* 
_ßm∂es
, 
k
, 
°¨t
, 
íd
,

274 * 
√ighb‹_ª•⁄£s
, c⁄° ** 
√ighb‹s
, * 
di°
 ) const;

276 
¥Ÿe˘ed
:

278 
max_k
, 
v¨_cou¡
;

279 
tŸÆ
;

280 
boﬁ
 
ªgªssi⁄
;

281 
CvVe˘‹s
* 
ßm∂es
;

289 
CV_EXPORTS_W_MAP
 
CvSVMP¨ams


291 
	`CvSVMP¨ams
();

292 
	`CvSVMP¨ams
–
svm_ty≥
, 
kî√l_ty≥
,

293 
degªe
, 
gamma
, 
c€f0
,

294 
CvÆue
, 
nu
, 
p
,

295 
CvM©
* 
˛ass_weights
, 
CvTîmCrôîü
 
ãrm_¸ô
 );

297 
CV_PROP_RW
 
svm_ty≥
;

298 
CV_PROP_RW
 
kî√l_ty≥
;

299 
CV_PROP_RW
 
degªe
;

300 
CV_PROP_RW
 
gamma
;

301 
CV_PROP_RW
 
c€f0
;

303 
CV_PROP_RW
 
C
;

304 
CV_PROP_RW
 
nu
;

305 
CV_PROP_RW
 
p
;

306 
CvM©
* 
˛ass_weights
;

307 
CV_PROP_RW
 
CvTîmCrôîü
 
ãrm_¸ô
;

308 
	}
};

311 
CV_EXPORTS
 
	gCvSVMKî√l


313 (
	gCvSVMKî√l
::*
	tCÆc
)–
	tvec_cou¡
, 
	tvec_size
, c⁄° ** 
	tvecs
,

314 c⁄° * 
	t™Ÿhî
, * 
	tªsu…s
 );

315 
CvSVMKî√l
();

316 
CvSVMKî√l
–c⁄° 
CvSVMP¨ams
* 
∑øms
, 
CÆc
 
_ˇlc_func
 );

317 
vútuÆ
 
boﬁ
 
¸óã
–c⁄° 
CvSVMP¨ams
* 
∑øms
, 
CÆc
 
_ˇlc_func
 );

318 
	gvútuÆ
 ~
CvSVMKî√l
();

320 
vútuÆ
 
˛ór
();

321 
vútuÆ
 
ˇlc
–
vcou¡
, 
n
, c⁄° ** 
vecs
, c⁄° * 
™Ÿhî
, * 
ªsu…s
 );

323 c⁄° 
CvSVMP¨ams
* 
	g∑øms
;

324 
CÆc
 
	gˇlc_func
;

326 
vútuÆ
 
ˇlc_n⁄_rbf_ba£
–
vec_cou¡
, 
vec_size
, c⁄° ** 
vecs
,

327 c⁄° * 
™Ÿhî
, * 
ªsu…s
,

328 
Æpha
, 
bëa
 );

330 
vútuÆ
 
ˇlc_löór
–
vec_cou¡
, 
vec_size
, c⁄° ** 
vecs
,

331 c⁄° * 
™Ÿhî
, * 
ªsu…s
 );

332 
vútuÆ
 
ˇlc_rbf
–
vec_cou¡
, 
vec_size
, c⁄° ** 
vecs
,

333 c⁄° * 
™Ÿhî
, * 
ªsu…s
 );

334 
vútuÆ
 
ˇlc_pﬁy
–
vec_cou¡
, 
vec_size
, c⁄° ** 
vecs
,

335 c⁄° * 
™Ÿhî
, * 
ªsu…s
 );

336 
vútuÆ
 
ˇlc_sigmoid
–
vec_cou¡
, 
vec_size
, c⁄° ** 
vecs
,

337 c⁄° * 
™Ÿhî
, * 
ªsu…s
 );

341 
	sCvSVMKî√lRow


343 
CvSVMKî√lRow
* 
	m¥ev
;

344 
CvSVMKî√lRow
* 
	m√xt
;

345 * 
	md©a
;

349 
	sCvSVMSﬁuti⁄Info


351 
	mobj
;

352 
	mrho
;

353 
	muµî_bound_p
;

354 
	muµî_bound_n
;

355 
	mr
;

358 ˛as†
	cCV_EXPORTS
 
	mCvSVMSﬁvî


360 
	mpublic
:

361 
	$boﬁ
 (
	tCvSVMSﬁvî
::*
	tSñe˘W‹kögSë
)–& 
	ti
, & 
	tj
 );

362 * (
	tCvSVMSﬁvî
::*
	tGëRow
)–
	ti
, * 
	trow
, * 
	td°
, 
	tboﬁ
 
	texi°ed
 );

363 (
	tCvSVMSﬁvî
::*
	tCÆcRho
)–& 
	trho
, & 
	tr
 );

365 
	`CvSVMSﬁvî
();

367 
	`CvSVMSﬁvî
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, 
sch¨
* 
y
,

368 
Æpha_cou¡
, * 
Æpha
, 
Cp
, 
Cn
,

369 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
, 
GëRow
 
gë_row
,

370 
Sñe˘W‹kögSë
 
£À˘_w‹kög_£t
, 
CÆcRho
 
ˇlc_rho
 );

371 
vútuÆ
 
boﬁ
 
	`¸óã
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, 
sch¨
* 
y
,

372 
Æpha_cou¡
, * 
Æpha
, 
Cp
, 
Cn
,

373 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
, 
GëRow
 
gë_row
,

374 
Sñe˘W‹kögSë
 
£À˘_w‹kög_£t
, 
CÆcRho
 
ˇlc_rho
 );

375 
vútuÆ
 ~
	`CvSVMSﬁvî
();

377 
vútuÆ
 
	`˛ór
();

378 
vútuÆ
 
boﬁ
 
	`sﬁve_gíîic
–
CvSVMSﬁuti⁄Info
& 
si
 );

380 
vútuÆ
 
boﬁ
 
	`sﬁve_c_svc
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, 
sch¨
* 
y
,

381 
Cp
, 
Cn
, 
CvMemSt‹age
* 
°‹age
,

382 
CvSVMKî√l
* 
kî√l
, * 
Æpha
, 
CvSVMSﬁuti⁄Info
& 
si
 );

383 
vútuÆ
 
boﬁ
 
	`sﬁve_nu_svc
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, 
sch¨
* 
y
,

384 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
,

385 * 
Æpha
, 
CvSVMSﬁuti⁄Info
& 
si
 );

386 
vútuÆ
 
boﬁ
 
	`sﬁve_⁄e_˛ass
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
,

387 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
,

388 * 
Æpha
, 
CvSVMSﬁuti⁄Info
& 
si
 );

390 
vútuÆ
 
boﬁ
 
	`sﬁve_ïs_svr
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, c⁄° * 
y
,

391 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
,

392 * 
Æpha
, 
CvSVMSﬁuti⁄Info
& 
si
 );

394 
vútuÆ
 
boﬁ
 
	`sﬁve_nu_svr
–
cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
, c⁄° * 
y
,

395 
CvMemSt‹age
* 
°‹age
, 
CvSVMKî√l
* 
kî√l
,

396 * 
Æpha
, 
CvSVMSﬁuti⁄Info
& 
si
 );

398 
vútuÆ
 * 
	`gë_row_ba£
–
i
, 
boﬁ
* 
_exi°ed
 );

399 
vútuÆ
 * 
	`gë_row
–
i
, * 
d°
 );

401 
ßm∂e_cou¡
;

402 
v¨_cou¡
;

403 
ˇche_size
;

404 
ˇche_löe_size
;

405 c⁄° ** 
ßm∂es
;

406 c⁄° 
CvSVMP¨ams
* 
∑øms
;

407 
CvMemSt‹age
* 
°‹age
;

408 
CvSVMKî√lRow
 
Ãu_li°
;

409 
CvSVMKî√lRow
* 
rows
;

411 
Æpha_cou¡
;

413 * 
G
;

414 * 
Æpha
;

417 
sch¨
* 
Æpha_°©us
;

419 
sch¨
* 
y
;

420 * 
b
;

421 * 
buf
[2];

422 
ïs
;

423 
max_ôî
;

424 
C
[2];

425 
CvSVMKî√l
* 
kî√l
;

427 
Sñe˘W‹kögSë
 
£À˘_w‹kög_£t_func
;

428 
CÆcRho
 
ˇlc_rho_func
;

429 
GëRow
 
gë_row_func
;

431 
vútuÆ
 
boﬁ
 
	`£À˘_w‹kög_£t
–& 
i
, & 
j
 );

432 
vútuÆ
 
boﬁ
 
	`£À˘_w‹kög_£t_nu_svm
–& 
i
, & 
j
 );

433 
vútuÆ
 
	`ˇlc_rho
–& 
rho
, & 
r
 );

434 
vútuÆ
 
	`ˇlc_rho_nu_svm
–& 
rho
, & 
r
 );

436 
vútuÆ
 * 
	`gë_row_svc
–
i
, * 
row
, * 
d°
, 
boﬁ
 
exi°ed
 );

437 
vútuÆ
 * 
	`gë_row_⁄e_˛ass
–
i
, * 
row
, * 
d°
, 
boﬁ
 
exi°ed
 );

438 
vútuÆ
 * 
	`gë_row_svr
–
i
, * 
row
, * 
d°
, 
boﬁ
 
exi°ed
 );

442 
	sCvSVMDecisi⁄Func


444 
rho
;

445 
sv_cou¡
;

446 * 
Æpha
;

447 * 
sv_ödex
;

452 ˛as†
	cCV_EXPORTS_W
 
CvSVM
 : 
public
 
CvSètModñ


454 
public
:

456 íum { 
C_SVC
=100, 
NU_SVC
=101, 
ONE_CLASS
=102, 
EPS_SVR
=103, 
NU_SVR
=104 };

459 íum { 
LINEAR
=0, 
POLY
=1, 
RBF
=2, 
SIGMOID
=3 
	}
};

462 íum { 
	gC
=0, 
	gGAMMA
=1, 
	gP
=2, 
	gNU
=3, 
	gCOEF
=4, 
	gDEGREE
=5 };

464 
CV_WRAP
 
CvSVM
();

465 
	gvútuÆ
 ~
CvSVM
();

467 
CvSVM
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

468 c⁄° 
CvM©
* 
v¨Idx
=0, c⁄° CvM©* 
ßm∂eIdx
=0,

469 
CvSVMP¨ams
 
∑øms
=CvSVMParams() );

471 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

472 c⁄° 
CvM©
* 
v¨Idx
=0, c⁄° CvM©* 
ßm∂eIdx
=0,

473 
CvSVMP¨ams
 
∑øms
=CvSVMParams() );

475 
vútuÆ
 
boﬁ
 
åaö_auto
–c⁄° 
CvM©
* 
åaöD©a
, c⁄° CvM©* 
ª•⁄£s
,

476 c⁄° 
CvM©
* 
v¨Idx
, c⁄° CvM©* 
ßm∂eIdx
, 
CvSVMP¨ams
 
∑øms
,

477 
kfﬁd
 = 10,

478 
CvP¨amGrid
 
Cgrid
 = 
gë_deÁu…_grid
(
CvSVM
::
C
),

479 
CvP¨amGrid
 
gammaGrid
 = 
gë_deÁu…_grid
(
CvSVM
::
GAMMA
),

480 
CvP¨amGrid
 
pGrid
 = 
gë_deÁu…_grid
(
CvSVM
::
P
),

481 
CvP¨amGrid
 
nuGrid
 = 
gë_deÁu…_grid
(
CvSVM
::
NU
),

482 
CvP¨amGrid
 
c€ffGrid
 = 
gë_deÁu…_grid
(
CvSVM
::
COEF
),

483 
CvP¨amGrid
 
degªeGrid
 = 
gë_deÁu…_grid
(
CvSVM
::
DEGREE
),

484 
boﬁ
 
bÆ™˚d
=
Ál£
 );

486 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂e
, 
boﬁ
 
ªtu∫DFVÆ
=
Ál£
 ) const;

487 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂es
, 
CV_OUT
 CvM©* 
ªsu…s
 ) const;

489 
CV_WRAP
 
	`CvSVM
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

490 c⁄° 
cv
::
M©
& 
v¨Idx
=cv::
	`M©
(), c⁄° cv::M©& 
ßm∂eIdx
=cv::Mat(),

491 
CvSVMP¨ams
 
∑øms
=
	`CvSVMP¨ams
() );

493 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

494 c⁄° 
cv
::
M©
& 
v¨Idx
=cv::
	`M©
(), c⁄° cv::M©& 
ßm∂eIdx
=cv::Mat(),

495 
CvSVMP¨ams
 
∑øms
=
	`CvSVMP¨ams
() );

497 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö_auto
–c⁄° 
cv
::
M©
& 
åaöD©a
, c⁄° cv::M©& 
ª•⁄£s
,

498 c⁄° 
cv
::
M©
& 
v¨Idx
, c⁄° cv::M©& 
ßm∂eIdx
, 
CvSVMP¨ams
 
∑øms
,

499 
k_fﬁd
 = 10,

500 
CvP¨amGrid
 
Cgrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
C
),

501 
CvP¨amGrid
 
gammaGrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
GAMMA
),

502 
CvP¨amGrid
 
pGrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
P
),

503 
CvP¨amGrid
 
nuGrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
NU
),

504 
CvP¨amGrid
 
c€ffGrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
COEF
),

505 
CvP¨amGrid
 
degªeGrid
 = 
CvSVM
::
	`gë_deÁu…_grid
(CvSVM::
DEGREE
),

506 
boﬁ
 
bÆ™˚d
=
Ál£
);

507 
CV_WRAP
 
vútuÆ
 
	$¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂e
, 
boﬁ
 
ªtu∫DFVÆ
=
Ál£
 ) const;

508 
	$CV_WRAP_AS
(
¥edi˘_Æl
Ë
	$¥edi˘
–
cv
::
I≈utAºay
 
ßm∂es
, cv::
OuçutAºay
 
ªsu…s
 ) const;

510 
CV_WRAP
 
vútuÆ
 
	$gë_suµ‹t_ve˘‹_cou¡
() const;

511 
vútuÆ
 c⁄° * 
	$gë_suµ‹t_ve˘‹
(
i
) const;

512 
vútuÆ
 
CvSVMP¨ams
 
	$gë_∑øms
(Ëc⁄° {  
∑øms
; 
	}
};

513 
CV_WRAP
 
vútuÆ
 
˛ór
();

515 
CvP¨amGrid
 
gë_deÁu…_grid
–
∑øm_id
 );

517 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
°‹age
, c⁄° * 
«me
 ) const;

518 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
°‹age
, 
CvFûeNode
* 
node
 );

519 
CV_WRAP
 
	$gë_v¨_cou¡
(Ëc⁄° {  
v¨_idx
 ? v¨_idx->
cﬁs
 : 
v¨_Æl
; 
	}
}

521 
	g¥Ÿe˘ed
:

523 
vútuÆ
 
boﬁ
 
£t_∑øms
–c⁄° 
CvSVMP¨ams
& 
∑øms
 );

524 
vútuÆ
 
boﬁ
 
åaö1
–
ßm∂e_cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
,

525 c⁄° * 
ª•⁄£s
, 
Cp
, 
Cn
,

526 
CvMemSt‹age
* 
_°‹age
, * 
Æpha
, & 
rho
 );

527 
vútuÆ
 
boﬁ
 
do_åaö
–
svm_ty≥
, 
ßm∂e_cou¡
, 
v¨_cou¡
, c⁄° ** 
ßm∂es
,

528 c⁄° 
CvM©
* 
ª•⁄£s
, 
CvMemSt‹age
* 
_°‹age
, * 
Æpha
 );

529 
vútuÆ
 
¸óã_kî√l
();

530 
vútuÆ
 
¸óã_sﬁvî
();

532 
vútuÆ
 
	$¥edi˘
–c⁄° * 
row_ßm∂e
, 
row_Àn
, 
boﬁ
 
ªtu∫DFVÆ
=
Ál£
 ) const;

534 
vútuÆ
 
	$wrôe_∑øms
–
CvFûeSt‹age
* 
fs
 ) const;

535 
vútuÆ
 
	`ªad_∑øms
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

537 
	`›timize_löór_svm
();

539 
CvSVMP¨ams
 
∑øms
;

540 
CvM©
* 
˛ass_œbñs
;

541 
v¨_Æl
;

542 ** 
sv
;

543 
sv_tŸÆ
;

544 
CvM©
* 
v¨_idx
;

545 
CvM©
* 
˛ass_weights
;

546 
CvSVMDecisi⁄Func
* 
decisi⁄_func
;

547 
CvMemSt‹age
* 
°‹age
;

549 
CvSVMSﬁvî
* 
sﬁvî
;

550 
CvSVMKî√l
* 
kî√l
;

552 
¥iv©e
:

553 
	`CvSVM
(c⁄° 
CvSVM
&);

554 
CvSVM
& 
›î©‹
 = (const CvSVM&);

555 
	}
};

560 
«me•a˚
 
	gcv


562 ˛as†
	cCV_EXPORTS_W
 
	gEM
 : 
public
 
Alg‹ôhm


564 
public
:

566 íum {
COV_MAT_SPHERICAL
=0, 
	gCOV_MAT_DIAGONAL
=1, 
	gCOV_MAT_GENERIC
=2, 
	gCOV_MAT_DEFAULT
=
COV_MAT_DIAGONAL
};

569 íum {
	gDEFAULT_NCLUSTERS
=5, 
	gDEFAULT_MAX_ITERS
=100};

572 íum {
	gSTART_E_STEP
=1, 
	gSTART_M_STEP
=2, 
	gSTART_AUTO_STEP
=0};

574 
CV_WRAP
 
EM
(
n˛u°îs
=EM::
DEFAULT_NCLUSTERS
, 
covM©Ty≥
=EM::
COV_MAT_DIAGONAL
,

575 c⁄° 
TîmCrôîü
& 
ãrmCrô
=TîmCrôîü(TîmCrôîü::
COUNT
+TîmCrôîü::
EPS
,

576 
EM
::
DEFAULT_MAX_ITERS
, 
FLT_EPSILON
));

578 
	gvútuÆ
 ~
EM
();

579 
CV_WRAP
 
vútuÆ
 
˛ór
();

581 
CV_WRAP
 
vútuÆ
 
boﬁ
 
åaö
(
I≈utAºay
 
ßm∂es
,

582 
OuçutAºay
 
logLikñihoods
=
noAºay
(),

583 
OuçutAºay
 
œbñs
=
noAºay
(),

584 
OuçutAºay
 
¥obs
=
noAºay
());

586 
CV_WRAP
 
vútuÆ
 
boﬁ
 
åaöE
(
I≈utAºay
 
ßm∂es
,

587 
I≈utAºay
 
móns0
,

588 
I≈utAºay
 
covs0
=
noAºay
(),

589 
I≈utAºay
 
weights0
=
noAºay
(),

590 
OuçutAºay
 
logLikñihoods
=
noAºay
(),

591 
OuçutAºay
 
œbñs
=
noAºay
(),

592 
OuçutAºay
 
¥obs
=
noAºay
());

594 
CV_WRAP
 
vútuÆ
 
boﬁ
 
åaöM
(
I≈utAºay
 
ßm∂es
,

595 
I≈utAºay
 
¥obs0
,

596 
OuçutAºay
 
logLikñihoods
=
noAºay
(),

597 
OuçutAºay
 
œbñs
=
noAºay
(),

598 
OuçutAºay
 
¥obs
=
noAºay
());

600 
CV_WRAP
 
Vec2d
 
¥edi˘
(
I≈utAºay
 
ßm∂e
,

601 
OuçutAºay
 
¥obs
=
noAºay
()) const;

603 
CV_WRAP
 
boﬁ
 
isTøöed
() const;

605 
Alg‹ôhmInfo
* 
öfo
() const;

606 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
);

608 
	g¥Ÿe˘ed
:

610 
vútuÆ
 
£tTøöD©a
(
°¨tSãp
, c⁄° 
M©
& 
ßm∂es
,

611 c⁄° 
M©
* 
¥obs0
,

612 c⁄° 
M©
* 
móns0
,

613 c⁄° 
ve˘‹
<
M©
>* 
covs0
,

614 c⁄° 
M©
* 
weights0
);

616 
boﬁ
 
doTøö
(
°¨tSãp
,

617 
OuçutAºay
 
logLikñihoods
,

618 
OuçutAºay
 
œbñs
,

619 
OuçutAºay
 
¥obs
);

620 
vútuÆ
 
eSãp
();

621 
vútuÆ
 
mSãp
();

623 
˛u°îTøöSam∂es
();

624 
decompo£Covs
();

625 
compuãLogWeightDivDë
();

627 
Vec2d
 
compuãProbabûôõs
(c⁄° 
M©
& 
ßm∂e
, M©* 
¥obs
) const;

630 
CV_PROP_RW
 
	gn˛u°îs
;

631 
CV_PROP_RW
 
	gcovM©Ty≥
;

632 
CV_PROP_RW
 
	gmaxIãrs
;

633 
CV_PROP_RW
 
	gïsû⁄
;

635 
M©
 
	gåaöSam∂es
;

636 
M©
 
	gåaöProbs
;

637 
M©
 
	gåaöLogLikñihoods
;

638 
M©
 
	gåaöLabñs
;

640 
CV_PROP
 
M©
 
	gweights
;

641 
CV_PROP
 
M©
 
	gmóns
;

642 
CV_PROP
 
	gve˘‹
<
	gM©
> 
	gcovs
;

644 
	gve˘‹
<
	gM©
> 
	gcovsEigíVÆues
;

645 
	gve˘‹
<
	gM©
> 
	gcovsRŸ©eM©s
;

646 
	gve˘‹
<
	gM©
> 
	gövCovsEigíVÆues
;

647 
M©
 
	glogWeightDivDë
;

654 
	sCvPaú16u32s


656 * 
	mu
;

657 * 
	mi
;

661 
	#CV_DTREE_CAT_DIR
(
idx
,
sub£t
) \

662 (2*((
sub£t
[(
idx
)>>5]&(1 << ((idxË& 31)))==0)-1)

	)

664 
	sCvDTªeS∂ô


666 
	mv¨_idx
;

667 
	mc⁄dí£d_idx
;

668 
	mövî£d
;

669 
	mquÆôy
;

670 
CvDTªeS∂ô
* 
	m√xt
;

673 
	msub£t
[2];

676 
	mc
;

677 
	m•lô_poöt
;

679 
	m‹d
;

683 
	sCvDTªeNode


685 
	m˛ass_idx
;

686 
	mTn
;

687 
	mvÆue
;

689 
CvDTªeNode
* 
	m∑ª¡
;

690 
CvDTªeNode
* 
	mÀ·
;

691 
CvDTªeNode
* 
	mright
;

693 
CvDTªeS∂ô
* 
	m•lô
;

695 
	mßm∂e_cou¡
;

696 
	mdïth
;

697 * 
	mnum_vÆid
;

698 
	moff£t
;

699 
	mbuf_idx
;

700 
	mmaxÃ
;

703 
	mcom∂exôy
;

704 
	mÆpha
;

705 
	mnode_risk
, 
	måì_risk
, 
	måì_îr‹
;

708 * 
	mcv_Tn
;

709 * 
	mcv_node_risk
;

710 * 
	mcv_node_îr‹
;

712 
gë_num_vÆid
(
vi
Ë{  
	mnum_vÆid
 ?Çum_vÆid[vi] : 
ßm∂e_cou¡
; }

713 
£t_num_vÆid
(
vi
, 
n
Ë{ if–
	mnum_vÆid
 )Çum_valid[vi] =Ç; }

717 
CV_EXPORTS_W_MAP
 
	gCvDTªeP¨ams


719 
CV_PROP_RW
 
	gmax_ˇãg‹õs
;

720 
CV_PROP_RW
 
	gmax_dïth
;

721 
CV_PROP_RW
 
	gmö_ßm∂e_cou¡
;

722 
CV_PROP_RW
 
	gcv_fﬁds
;

723 
CV_PROP_RW
 
boﬁ
 
	gu£_suºog©es
;

724 
CV_PROP_RW
 
boﬁ
 
	gu£_1£_ruÀ
;

725 
CV_PROP_RW
 
boﬁ
 
	gåunˇã_¥u√d_åì
;

726 
CV_PROP_RW
 
	gªgªssi⁄_accuøcy
;

727 c⁄° * 
	g¥i‹s
;

729 
CvDTªeP¨ams
();

730 
CvDTªeP¨ams
–
max_dïth
, 
mö_ßm∂e_cou¡
,

731 
ªgªssi⁄_accuøcy
, 
boﬁ
 
u£_suºog©es
,

732 
max_ˇãg‹õs
, 
cv_fﬁds
,

733 
boﬁ
 
u£_1£_ruÀ
, boﬁ 
åunˇã_¥u√d_åì
,

734 c⁄° * 
¥i‹s
 );

738 
CV_EXPORTS
 
	gCvDTªeTøöD©a


740 
CvDTªeTøöD©a
();

741 
CvDTªeTøöD©a
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

742 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

743 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

744 c⁄° 
CvM©
* 
missögD©aMask
=0,

745 c⁄° 
CvDTªeP¨ams
& 
∑øms
=CvDTreeParams(),

746 
boﬁ
 
_sh¨ed
=
Ál£
, boﬁ 
_add_œbñs
=false );

747 
	gvútuÆ
 ~
CvDTªeTøöD©a
();

749 
vútuÆ
 
£t_d©a
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

750 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

751 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

752 c⁄° 
CvM©
* 
missögD©aMask
=0,

753 c⁄° 
CvDTªeP¨ams
& 
∑øms
=CvDTreeParams(),

754 
boﬁ
 
_sh¨ed
=
Ál£
, boﬁ 
_add_œbñs
=false,

755 
boﬁ
 
_upd©e_d©a
=
Ál£
 );

756 
vútuÆ
 
do_ª•⁄£s_c›y
();

758 
vútuÆ
 
gë_ve˘‹s
–c⁄° 
CvM©
* 
_subßm∂e_idx
,

759 * 
vÆues
, 
uch¨
* 
missög
, * 
ª•⁄£s
, 
boﬁ
 
gë_˛ass_idx
=
Ál£
 );

761 
vútuÆ
 
CvDTªeNode
* 
subßm∂e_d©a
–c⁄° 
CvM©
* 
_subßm∂e_idx
 );

763 
vútuÆ
 
wrôe_∑øms
–
CvFûeSt‹age
* 
fs
 ) const;

764 
vútuÆ
 
ªad_∑øms
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

767 
vútuÆ
 
˛ór
();

769 
gë_num_˛as£s
() const;

770 
gë_v¨_ty≥
(
vi
) const;

771 
gë_w‹k_v¨_cou¡
(Ëc⁄° { 
	gw‹k_v¨_cou¡
;}

773 
vútuÆ
 c⁄° * 
gë_‹d_ª•⁄£s
–
CvDTªeNode
* 
n
, * 
vÆues_buf
, * 
ßm∂e_ödi˚s_buf
 );

774 
vútuÆ
 c⁄° * 
gë_˛ass_œbñs
–
CvDTªeNode
* 
n
, * 
œbñs_buf
 );

775 
vútuÆ
 c⁄° * 
gë_cv_œbñs
–
CvDTªeNode
* 
n
, * 
œbñs_buf
 );

776 
vútuÆ
 c⁄° * 
gë_ßm∂e_ödi˚s
–
CvDTªeNode
* 
n
, * 
ödi˚s_buf
 );

777 
vútuÆ
 c⁄° * 
gë_ˇt_v¨_d©a
–
CvDTªeNode
* 
n
, 
vi
, * 
ˇt_vÆues_buf
 );

778 
vútuÆ
 
gë_‹d_v¨_d©a
–
CvDTªeNode
* 
n
, 
vi
, * 
‹d_vÆues_buf
, * 
s‹ãd_ödi˚s_buf
,

779 c⁄° ** 
‹d_vÆues
, c⁄° ** 
s‹ãd_ödi˚s
, * 
ßm∂e_ödi˚s_buf
 );

780 
vútuÆ
 
gë_chûd_buf_idx
–
CvDTªeNode
* 
n
 );

784 
vútuÆ
 
boﬁ
 
£t_∑øms
–c⁄° 
CvDTªeP¨ams
& 
∑øms
 );

785 
vútuÆ
 
CvDTªeNode
* 
√w_node
–CvDTªeNode* 
∑ª¡
, 
cou¡
,

786 
°‹age_idx
, 
off£t
 );

788 
vútuÆ
 
CvDTªeS∂ô
* 
√w_•lô_‹d
–
vi
, 
cmp_vÆ
,

789 
•lô_poöt
, 
övî£d
, 
quÆôy
 );

790 
vútuÆ
 
CvDTªeS∂ô
* 
√w_•lô_ˇt
–
vi
, 
quÆôy
 );

791 
vútuÆ
 
‰ì_node_d©a
–
CvDTªeNode
* 
node
 );

792 
vútuÆ
 
‰ì_åaö_d©a
();

793 
vútuÆ
 
‰ì_node
–
CvDTªeNode
* 
node
 );

795 
	gßm∂e_cou¡
, 
	gv¨_Æl
, 
	gv¨_cou¡
, 
	gmax_c_cou¡
;

796 
	g‹d_v¨_cou¡
, 
	gˇt_v¨_cou¡
, 
	gw‹k_v¨_cou¡
;

797 
boﬁ
 
	ghave_œbñs
, 
	ghave_¥i‹s
;

798 
boﬁ
 
	gis_˛assifõr
;

799 
	gtÊag
;

801 c⁄° 
CvM©
* 
	gåaö_d©a
;

802 c⁄° 
CvM©
* 
	gª•⁄£s
;

803 
CvM©
* 
	gª•⁄£s_c›y
;

805 
	gbuf_cou¡
, 
	gbuf_size
;

806 
boﬁ
 
	gsh¨ed
;

807 
	gis_buf_16u
;

809 
CvM©
* 
	gˇt_cou¡
;

810 
CvM©
* 
	gˇt_ofs
;

811 
CvM©
* 
	gˇt_m≠
;

813 
CvM©
* 
	gcou¡s
;

814 
CvM©
* 
	gbuf
;

815 
ölöe
 
size_t
 
gë_Àngth_subbuf
() const

817 
size_t
 
	gªs
 = (size_t)(
w‹k_v¨_cou¡
 + 1Ë* (size_t)
ßm∂e_cou¡
;

818  
	gªs
;

821 
CvM©
* 
	gdúe˘i⁄
;

822 
CvM©
* 
	g•lô_buf
;

824 
CvM©
* 
	gv¨_idx
;

825 
CvM©
* 
	gv¨_ty≥
;

828 
CvM©
* 
	g¥i‹s
;

829 
CvM©
* 
	g¥i‹s_mu…
;

831 
CvDTªeP¨ams
 
	g∑øms
;

833 
CvMemSt‹age
* 
	gåì_°‹age
;

834 
CvMemSt‹age
* 
	gãmp_°‹age
;

836 
CvDTªeNode
* 
	gd©a_roŸ
;

838 
CvSë
* 
	gnode_hóp
;

839 
CvSë
* 
	g•lô_hóp
;

840 
CvSë
* 
	gcv_hóp
;

841 
CvSë
* 
	gnv_hóp
;

843 
	gcv
::
RNG
* 
∫g
;

846 
˛ass
 
	gCvDTªe
;

847 
˛ass
 
	gCvF‹e°Tªe
;

849 
«me•a˚
 
	gcv


851 
	gDTªeBe°S∂ôFödî
;

852 
	gF‹e°TªeBe°S∂ôFödî
;

855 ˛as†
	cCV_EXPORTS_W
 
	mCvDTªe
 : 
public
 
CvSètModñ


857 
public
:

858 
CV_WRAP
 
CvDTªe
();

859 
	mvútuÆ
 ~
CvDTªe
();

861 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

862 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

863 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

864 c⁄° 
CvM©
* 
missögD©aMask
=0,

865 
CvDTªeP¨ams
 
∑øms
=CvDTreeParams() );

867 
vútuÆ
 
boﬁ
 
åaö
–
CvMLD©a
* 
åaöD©a
, 
CvDTªeP¨ams
 
∑øms
=CvDTreeParams() );

870 
vútuÆ
 
ˇlc_îr‹
–
CvMLD©a
* 
åaöD©a
, 
ty≥
, 
°d
::
ve˘‹
<> *
ª•
 = 0 );

872 
vútuÆ
 
boﬁ
 
åaö
–
CvDTªeTøöD©a
* 
åaöD©a
, c⁄° 
CvM©
* 
subßm∂eIdx
 );

874 
vútuÆ
 
CvDTªeNode
* 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missögD©aMask
=0,

875 
boﬁ
 
¥ïro˚s£dI≈ut
=
Ál£
 ) const;

877 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

878 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

879 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

880 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

881 
CvDTªeP¨ams
 
∑øms
=
	`CvDTªeP¨ams
() );

883 
CV_WRAP
 
vútuÆ
 
CvDTªeNode
* 
	`¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂e
, c⁄° cv::M©& 
missögD©aMask
=cv::
	`M©
(),

884 
boﬁ
 
¥ïro˚s£dI≈ut
=
Ál£
 ) const;

885 
CV_WRAP
 
vútuÆ
 
cv
::
M©
 
	`gëV¨Imp‹èn˚
();

887 
vútuÆ
 c⁄° 
CvM©
* 
	`gë_v¨_imp‹èn˚
();

888 
CV_WRAP
 
vútuÆ
 
	`˛ór
();

890 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

891 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
 ) const;

894 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

895 
CvDTªeTøöD©a
* 
d©a
 );

896 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
fs
 ) const;

898 c⁄° 
CvDTªeNode
* 
	$gë_roŸ
() const;

899 
	$gë_¥u√d_åì_idx
() const;

900 
CvDTªeTøöD©a
* 
	`gë_d©a
();

902 
¥Ÿe˘ed
:

903 
‰õnd
 
cv
::
DTªeBe°S∂ôFödî
;

905 
vútuÆ
 
boﬁ
 
	`do_åaö
–c⁄° 
CvM©
* 
_subßm∂e_idx
 );

907 
vútuÆ
 
	`åy_•lô_node
–
CvDTªeNode
* 
n
 );

908 
vútuÆ
 
	`•lô_node_d©a
–
CvDTªeNode
* 
n
 );

909 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_be°_•lô
–
CvDTªeNode
* 
n
 );

910 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_•lô_‹d_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

911 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

912 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_•lô_ˇt_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

913 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

914 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_•lô_‹d_ªg
–
CvDTªeNode
* 
n
, 
vi
,

915 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

916 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_•lô_ˇt_ªg
–
CvDTªeNode
* 
n
, 
vi
,

917 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

918 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_suºog©e_•lô_‹d
–
CvDTªeNode
* 
n
, 
vi
, 
uch¨
* 
ext_buf
 = 0 );

919 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_suºog©e_•lô_ˇt
–
CvDTªeNode
* 
n
, 
vi
, 
uch¨
* 
ext_buf
 = 0 );

920 
vútuÆ
 
	`ˇlc_node_dú
–
CvDTªeNode
* 
node
 );

921 
vútuÆ
 
	`com∂ëe_node_dú
–
CvDTªeNode
* 
node
 );

922 
vútuÆ
 
	`˛u°î_ˇãg‹õs
–c⁄° * 
ve˘‹s
, 
ve˘‹_cou¡
,

923 
v¨_cou¡
, * 
sums
, 
k
, * 
˛u°î_œbñs
 );

925 
vútuÆ
 
	`ˇlc_node_vÆue
–
CvDTªeNode
* 
node
 );

927 
vútuÆ
 
	`¥u√_cv
();

928 
vútuÆ
 
	`upd©e_åì_∫c
–
T
, 
fﬁd
 );

929 
vútuÆ
 
	`cut_åì
–
T
, 
fﬁd
, 
mö_Æpha
 );

930 
vútuÆ
 
	`‰ì_¥u√_d©a
(
boﬁ
 
cut_åì
);

931 
vútuÆ
 
	`‰ì_åì
();

933 
vútuÆ
 
	$wrôe_node
–
CvFûeSt‹age
* 
fs
, 
CvDTªeNode
* 
node
 ) const;

934 
vútuÆ
 
	$wrôe_•lô
–
CvFûeSt‹age
* 
fs
, 
CvDTªeS∂ô
* 
•lô
 ) const;

935 
vútuÆ
 
CvDTªeNode
* 
	`ªad_node
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
, CvDTªeNode* 
∑ª¡
 );

936 
vútuÆ
 
CvDTªeS∂ô
* 
	`ªad_•lô
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

937 
vútuÆ
 
	$wrôe_åì_nodes
–
CvFûeSt‹age
* 
fs
 ) const;

938 
vútuÆ
 
	`ªad_åì_nodes
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

940 
CvDTªeNode
* 
roŸ
;

941 
CvM©
* 
v¨_imp‹èn˚
;

942 
CvDTªeTøöD©a
* 
d©a
;

944 
public
:

945 
¥u√d_åì_idx
;

953 
˛ass
 
CvRTªes
;

955 ˛as†
	cCV_EXPORTS
 
CvF‹e°Tªe
: 
public
 
CvDTªe


957 
public
:

958 
	`CvF‹e°Tªe
();

959 
vútuÆ
 ~
	`CvF‹e°Tªe
();

961 
vútuÆ
 
boﬁ
 
	`åaö
–
CvDTªeTøöD©a
* 
åaöD©a
, c⁄° 
CvM©
* 
_subßm∂e_idx
, 
CvRTªes
* 
f‹e°
 );

963 
vútuÆ
 
	$gë_v¨_cou¡
(Ëc⁄° { 
d©a
 ? d©a->
v¨_cou¡
 : 0;}

964 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
, 
CvRTªes
* 
f‹e°
, 
CvDTªeTøöD©a
* 
_d©a
 );

967 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

968 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

969 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

970 c⁄° 
CvM©
* 
missögD©aMask
=0,

971 
CvDTªeP¨ams
 
∑øms
=
	`CvDTªeP¨ams
() );

973 
vútuÆ
 
boﬁ
 
	`åaö
–
CvDTªeTøöD©a
* 
åaöD©a
, c⁄° 
CvM©
* 
_subßm∂e_idx
 );

974 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

975 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

976 
CvDTªeTøöD©a
* 
d©a
 );

979 
¥Ÿe˘ed
:

980 
‰õnd
 
cv
::
F‹e°TªeBe°S∂ôFödî
;

982 
vútuÆ
 
CvDTªeS∂ô
* 
	`föd_be°_•lô
–
CvDTªeNode
* 
n
 );

983 
CvRTªes
* 
f‹e°
;

984 
	}
};

987 
CV_EXPORTS_W_MAP
 
	gCvRTP¨ams
 : 
public
 
CvDTªeP¨ams


990 
CV_PROP_RW
 
boﬁ
 
ˇlc_v¨_imp‹èn˚
;

991 
CV_PROP_RW
 
	g«˘ive_v¨s
;

992 
CV_PROP_RW
 
CvTîmCrôîü
 
	gãrm_¸ô
;

994 
CvRTP¨ams
();

995 
CvRTP¨ams
–
max_dïth
, 
mö_ßm∂e_cou¡
,

996 
ªgªssi⁄_accuøcy
, 
boﬁ
 
u£_suºog©es
,

997 
max_ˇãg‹õs
, c⁄° * 
¥i‹s
, 
boﬁ
 
ˇlc_v¨_imp‹èn˚
,

998 
«˘ive_v¨s
, 
max_num_of_åìs_ö_the_f‹e°
,

999 
f‹e°_accuøcy
, 
ãrm¸ô_ty≥
 );

1003 ˛as†
	cCV_EXPORTS_W
 
	mCvRTªes
 : 
public
 
CvSètModñ


1005 
public
:

1006 
CV_WRAP
 
CvRTªes
();

1007 
	mvútuÆ
 ~
CvRTªes
();

1008 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1009 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1010 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1011 c⁄° 
CvM©
* 
missögD©aMask
=0,

1012 
CvRTP¨ams
 
∑øms
=CvRTParams() );

1014 
vútuÆ
 
boﬁ
 
åaö
–
CvMLD©a
* 
d©a
, 
CvRTP¨ams
 
∑øms
=CvRTParams() );

1015 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missög
 = 0 ) const;

1016 
vútuÆ
 
	$¥edi˘_¥ob
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missög
 = 0 ) const;

1018 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1019 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

1020 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1021 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

1022 
CvRTP¨ams
 
∑øms
=
	`CvRTP¨ams
() );

1023 
CV_WRAP
 
vútuÆ
 
	`¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂e
, c⁄° cv::M©& 
missög
 = cv::
	$M©
() ) const;

1024 
CV_WRAP
 
vútuÆ
 
	`¥edi˘_¥ob
–c⁄° 
cv
::
M©
& 
ßm∂e
, c⁄° cv::M©& 
missög
 = cv::
	$M©
() ) const;

1025 
CV_WRAP
 
vútuÆ
 
cv
::
M©
 
	`gëV¨Imp‹èn˚
();

1027 
CV_WRAP
 
vútuÆ
 
	`˛ór
();

1029 
vútuÆ
 c⁄° 
CvM©
* 
	`gë_v¨_imp‹èn˚
();

1030 
vútuÆ
 
	$gë_¥oximôy
–c⁄° 
CvM©
* 
ßm∂e1
, c⁄° CvM©* 
ßm∂e2
,

1031 c⁄° 
CvM©
* 
missög1
 = 0, c⁄° CvM©* 
missög2
 = 0 ) const;

1033 
vútuÆ
 
	`ˇlc_îr‹
–
CvMLD©a
* 
d©a
, 
ty≥
 , 
°d
::
ve˘‹
<>* 
ª•
 = 0 );

1035 
vútuÆ
 
	`gë_åaö_îr‹
();

1037 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1038 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
 ) const;

1040 
CvM©
* 
	`gë_a˘ive_v¨_mask
();

1041 
CvRNG
* 
	`gë_∫g
();

1043 
	$gë_åì_cou¡
() const;

1044 
CvF‹e°Tªe
* 
	$gë_åì
(
i
) const;

1046 
¥Ÿe˘ed
:

1047 
vútuÆ
 
°d
::
°rög
 
	$gëName
() const;

1049 
vútuÆ
 
boﬁ
 
	`grow_f‹e°
–c⁄° 
CvTîmCrôîü
 
ãrm_¸ô
 );

1052 
CvF‹e°Tªe
** 
åìs
;

1053 
CvDTªeTøöD©a
* 
d©a
;

1054 
¡ªes
;

1055 
n˛as£s
;

1056 
oob_îr‹
;

1057 
CvM©
* 
v¨_imp‹èn˚
;

1058 
nßm∂es
;

1060 
cv
::
RNG
* 
∫g
;

1061 
CvM©
* 
a˘ive_v¨_mask
;

1067 
CV_EXPORTS
 
CvERTªeTøöD©a
 : 
public
 
CvDTªeTøöD©a


1069 
vútuÆ
 
	`£t_d©a
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1070 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1071 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1072 c⁄° 
CvM©
* 
missögD©aMask
=0,

1073 c⁄° 
CvDTªeP¨ams
& 
∑øms
=
	`CvDTªeP¨ams
(),

1074 
boﬁ
 
_sh¨ed
=
Ál£
, boﬁ 
_add_œbñs
=false,

1075 
boﬁ
 
_upd©e_d©a
=
Ál£
 );

1076 
vútuÆ
 
	`gë_‹d_v¨_d©a
–
CvDTªeNode
* 
n
, 
vi
, * 
‹d_vÆues_buf
, * 
missög_buf
,

1077 c⁄° ** 
‹d_vÆues
, c⁄° ** 
missög
, * 
ßm∂e_buf
 = 0 );

1078 
vútuÆ
 c⁄° * 
	`gë_ßm∂e_ödi˚s
–
CvDTªeNode
* 
n
, * 
ödi˚s_buf
 );

1079 
vútuÆ
 c⁄° * 
	`gë_cv_œbñs
–
CvDTªeNode
* 
n
, * 
œbñs_buf
 );

1080 
vútuÆ
 c⁄° * 
	`gë_ˇt_v¨_d©a
–
CvDTªeNode
* 
n
, 
vi
, * 
ˇt_vÆues_buf
 );

1081 
vútuÆ
 
	`gë_ve˘‹s
–c⁄° 
CvM©
* 
_subßm∂e_idx
, * 
vÆues
, 
uch¨
* 
missög
,

1082 * 
ª•⁄£s
, 
boﬁ
 
gë_˛ass_idx
=
Ál£
 );

1083 
vútuÆ
 
CvDTªeNode
* 
	`subßm∂e_d©a
–c⁄° 
CvM©
* 
_subßm∂e_idx
 );

1084 c⁄° 
CvM©
* 
missög_mask
;

1085 
	}
};

1087 ˛as†
	cCV_EXPORTS
 
	mCvF‹e°ERTªe
 : 
public
 
CvF‹e°Tªe


1089 
¥Ÿe˘ed
:

1090 
vútuÆ
 
ˇlc_node_dú
–
CvDTªeNode
* 
node
 );

1091 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_‹d_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

1092 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1093 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_ˇt_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

1094 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1095 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_‹d_ªg
–
CvDTªeNode
* 
n
, 
vi
,

1096 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1097 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_ˇt_ªg
–
CvDTªeNode
* 
n
, 
vi
,

1098 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1099 
vútuÆ
 
•lô_node_d©a
–
CvDTªeNode
* 
n
 );

1102 ˛as†
	cCV_EXPORTS_W
 
	mCvERTªes
 : 
public
 
CvRTªes


1104 
public
:

1105 
CV_WRAP
 
CvERTªes
();

1106 
	mvútuÆ
 ~
CvERTªes
();

1107 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1108 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1109 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1110 c⁄° 
CvM©
* 
missögD©aMask
=0,

1111 
CvRTP¨ams
 
∑øms
=CvRTParams());

1112 
CV_WRAP
 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1113 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::Mat(),

1114 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::M©(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1115 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::Mat(),

1116 
CvRTP¨ams
 
∑øms
=CvRTParams());

1117 
vútuÆ
 
boﬁ
 
åaö
–
CvMLD©a
* 
d©a
, 
CvRTP¨ams
 
∑øms
=CvRTParams() );

1118 
	m¥Ÿe˘ed
:

1119 
vútuÆ
 
°d
::
°rög
 
	$gëName
() const;

1120 
vútuÆ
 
boﬁ
 
	`grow_f‹e°
–c⁄° 
CvTîmCrôîü
 
ãrm_¸ô
 );

1128 
CV_EXPORTS_W_MAP
 
CvBoo°P¨ams
 : 
public
 
CvDTªeP¨ams


1130 
CV_PROP_RW
 
boo°_ty≥
;

1131 
CV_PROP_RW
 
wók_cou¡
;

1132 
CV_PROP_RW
 
•lô_¸ôîü
;

1133 
CV_PROP_RW
 
weight_åim_øã
;

1135 
	`CvBoo°P¨ams
();

1136 
	`CvBoo°P¨ams
–
boo°_ty≥
, 
wók_cou¡
, 
weight_åim_øã
,

1137 
max_dïth
, 
boﬁ
 
u£_suºog©es
, c⁄° * 
¥i‹s
 );

1138 
	}
};

1141 
˛ass
 
	gCvBoo°
;

1143 ˛as†
	cCV_EXPORTS
 
	mCvBoo°Tªe
: 
public
 
CvDTªe


1145 
public
:

1146 
CvBoo°Tªe
();

1147 
	mvútuÆ
 ~
CvBoo°Tªe
();

1149 
vútuÆ
 
boﬁ
 
åaö
–
CvDTªeTøöD©a
* 
åaöD©a
,

1150 c⁄° 
CvM©
* 
subßm∂e_idx
, 
CvBoo°
* 
í£mbÀ
 );

1152 
vútuÆ
 
sˇÀ
–
s
 );

1153 
vútuÆ
 
ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

1154 
CvBoo°
* 
í£mbÀ
, 
CvDTªeTøöD©a
* 
_d©a
 );

1155 
vútuÆ
 
˛ór
();

1158 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1159 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1160 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1161 c⁄° 
CvM©
* 
missögD©aMask
=0,

1162 
CvDTªeP¨ams
 
∑øms
=CvDTreeParams() );

1163 
vútuÆ
 
boﬁ
 
åaö
–
CvDTªeTøöD©a
* 
åaöD©a
, c⁄° 
CvM©
* 
_subßm∂e_idx
 );

1165 
vútuÆ
 
ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1166 
vútuÆ
 
ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
,

1167 
CvDTªeTøöD©a
* 
d©a
 );

1170 
	m¥Ÿe˘ed
:

1172 
vútuÆ
 
åy_•lô_node
–
CvDTªeNode
* 
n
 );

1173 
vútuÆ
 
CvDTªeS∂ô
* 
föd_suºog©e_•lô_‹d
–
CvDTªeNode
* 
n
, 
vi
, 
uch¨
* 
ext_buf
 = 0 );

1174 
vútuÆ
 
CvDTªeS∂ô
* 
föd_suºog©e_•lô_ˇt
–
CvDTªeNode
* 
n
, 
vi
, 
uch¨
* 
ext_buf
 = 0 );

1175 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_‹d_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

1176 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1177 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_ˇt_˛ass
–
CvDTªeNode
* 
n
, 
vi
,

1178 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1179 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_‹d_ªg
–
CvDTªeNode
* 
n
, 
vi
,

1180 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1181 
vútuÆ
 
CvDTªeS∂ô
* 
föd_•lô_ˇt_ªg
–
CvDTªeNode
* 
n
, 
vi
,

1182 
öô_quÆôy
 = 0, 
CvDTªeS∂ô
* 
_•lô
 = 0, 
uch¨
* 
ext_buf
 = 0 );

1183 
vútuÆ
 
ˇlc_node_vÆue
–
CvDTªeNode
* 
n
 );

1184 
vútuÆ
 
ˇlc_node_dú
–
CvDTªeNode
* 
n
 );

1186 
CvBoo°
* 
	mí£mbÀ
;

1190 ˛as†
	cCV_EXPORTS_W
 
	mCvBoo°
 : 
public
 
CvSètModñ


1192 
public
:

1194 íum { 
DISCRETE
=0, 
	mREAL
=1, 
	mLOGIT
=2, 
	mGENTLE
=3 };

1197 íum { 
	gDEFAULT
=0, 
	gGINI
=1, 
	gMISCLASS
=3, 
	gSQERR
=4 };

1199 
CV_WRAP
 
CvBoo°
();

1200 
	gvútuÆ
 ~
CvBoo°
();

1202 
CvBoo°
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1203 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1204 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1205 c⁄° 
CvM©
* 
missögD©aMask
=0,

1206 
CvBoo°P¨ams
 
∑øms
=CvBoostParams() );

1208 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1209 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1210 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1211 c⁄° 
CvM©
* 
missögD©aMask
=0,

1212 
CvBoo°P¨ams
 
∑øms
=CvBoostParams(),

1213 
boﬁ
 
upd©e
=
Ál£
 );

1215 
vútuÆ
 
boﬁ
 
åaö
–
CvMLD©a
* 
d©a
,

1216 
CvBoo°P¨ams
 
∑øms
=CvBoostParams(),

1217 
boﬁ
 
upd©e
=
Ál£
 );

1219 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missög
=0,

1220 
CvM©
* 
wók_ª•⁄£s
=0, 
CvSli˚
 
¶i˚
=
CV_WHOLE_SEQ
,

1221 
boﬁ
 
øw_mode
=
Ál£
, boﬁ 
ªtu∫_sum
=false ) const;

1223 
CV_WRAP
 
	`CvBoo°
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1224 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

1225 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1226 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

1227 
CvBoo°P¨ams
 
∑øms
=
	`CvBoo°P¨ams
() );

1229 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1230 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

1231 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1232 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

1233 
CvBoo°P¨ams
 
∑øms
=
	`CvBoo°P¨ams
(),

1234 
boﬁ
 
upd©e
=
Ál£
 );

1236 
CV_WRAP
 
vútuÆ
 
	`¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂e
, c⁄° cv::M©& 
missög
=cv::
	`M©
(),

1237 c⁄° 
cv
::
R™ge
& 
¶i˚
=cv::R™ge::
	`Æl
(), 
boﬁ
 
øwMode
=
Ál£
,

1238 
boﬁ
 
ªtu∫Sum
=
Ál£
 ) const;

1240 
vútuÆ
 
	`ˇlc_îr‹
–
CvMLD©a
* 
_d©a
, 
ty≥
 , 
°d
::
ve˘‹
<> *
ª•
 = 0 );

1242 
CV_WRAP
 
vútuÆ
 
	`¥u√
–
CvSli˚
 
¶i˚
 );

1244 
CV_WRAP
 
vútuÆ
 
	`˛ór
();

1246 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
°‹age
, c⁄° * 
«me
 ) const;

1247 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
°‹age
, 
CvFûeNode
* 
node
 );

1248 
vútuÆ
 c⁄° 
CvM©
* 
	`gë_a˘ive_v¨s
(
boﬁ
 
absﬁuã_idx
=
åue
);

1250 
CvSeq
* 
	`gë_wók_¥edi˘‹s
();

1252 
CvM©
* 
	`gë_weights
();

1253 
CvM©
* 
	`gë_subåì_weights
();

1254 
CvM©
* 
	`gë_wók_ª•⁄£
();

1255 c⁄° 
CvBoo°P¨ams
& 
	$gë_∑øms
() const;

1256 c⁄° 
CvDTªeTøöD©a
* 
	$gë_d©a
() const;

1258 
¥Ÿe˘ed
:

1260 
	`upd©e_weights_im∂
–
CvBoo°Tªe
* 
åì
, 
öôül_weights
[2] );

1262 
vútuÆ
 
boﬁ
 
	`£t_∑øms
–c⁄° 
CvBoo°P¨ams
& 
∑øms
 );

1263 
vútuÆ
 
	`upd©e_weights
–
CvBoo°Tªe
* 
åì
 );

1264 
vútuÆ
 
	`åim_weights
();

1265 
vútuÆ
 
	$wrôe_∑øms
–
CvFûeSt‹age
* 
fs
 ) const;

1266 
vútuÆ
 
	`ªad_∑øms
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1268 
CvDTªeTøöD©a
* 
d©a
;

1269 
CvBoo°P¨ams
 
∑øms
;

1270 
CvSeq
* 
wók
;

1272 
CvM©
* 
a˘ive_v¨s
;

1273 
CvM©
* 
a˘ive_v¨s_abs
;

1274 
boﬁ
 
have_a˘ive_ˇt_v¨s
;

1276 
CvM©
* 
‹ig_ª•⁄£
;

1277 
CvM©
* 
sum_ª•⁄£
;

1278 
CvM©
* 
wók_evÆ
;

1279 
CvM©
* 
subßm∂e_mask
;

1280 
CvM©
* 
weights
;

1281 
CvM©
* 
subåì_weights
;

1282 
boﬁ
 
have_subßm∂e
;

1283 
	}
};

1307 
CV_EXPORTS_W_MAP
 
	gCvGBTªesP¨ams
 : 
public
 
CvDTªeP¨ams


1309 
CV_PROP_RW
 
wók_cou¡
;

1310 
CV_PROP_RW
 
	gloss_fun˘i⁄_ty≥
;

1311 
CV_PROP_RW
 
	gsubßm∂e_p‹ti⁄
;

1312 
CV_PROP_RW
 
	gshrökage
;

1314 
CvGBTªesP¨ams
();

1315 
CvGBTªesP¨ams
–
loss_fun˘i⁄_ty≥
, 
wók_cou¡
, 
shrökage
,

1316 
subßm∂e_p‹ti⁄
, 
max_dïth
, 
boﬁ
 
u£_suºog©es
 );

1367 ˛as†
	cCV_EXPORTS_W
 
	mCvGBTªes
 : 
public
 
CvSètModñ


1369 
public
:

1394 íum {
SQUARED_LOSS
=0, 
	mABSOLUTE_LOSS
, 
	mHUBER_LOSS
=3, 
	mDEVIANCE_LOSS
};

1408 
CV_WRAP
 
CvGBTªes
();

1448 
CvGBTªes
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1449 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1450 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1451 c⁄° 
CvM©
* 
missögD©aMask
=0,

1452 
CvGBTªesP¨ams
 
∑øms
=CvGBTreesParams() );

1458 
	gvútuÆ
 ~
CvGBTªes
();

1500 
vútuÆ
 
boﬁ
 
åaö
–c⁄° 
CvM©
* 
åaöD©a
, 
tÊag
,

1501 c⁄° 
CvM©
* 
ª•⁄£s
, c⁄° CvM©* 
v¨Idx
=0,

1502 c⁄° 
CvM©
* 
ßm∂eIdx
=0, c⁄° CvM©* 
v¨Ty≥
=0,

1503 c⁄° 
CvM©
* 
missögD©aMask
=0,

1504 
CvGBTªesP¨ams
 
∑øms
=CvGBTreesParams(),

1505 
boﬁ
 
upd©e
=
Ál£
 );

1524 
vútuÆ
 
boﬁ
 
åaö
–
CvMLD©a
* 
d©a
,

1525 
CvGBTªesP¨ams
 
∑øms
=CvGBTreesParams(),

1526 
boﬁ
 
upd©e
=
Ál£
 );

1556 
vútuÆ
 
¥edi˘_£rül
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missög
=0,

1557 
CvM©
* 
wókRe•⁄£s
=0, 
CvSli˚
 
¶i˚
 = 
CV_WHOLE_SEQ
,

1558 
k
=-1 ) const;

1588 
vútuÆ
 
¥edi˘
–c⁄° 
CvM©
* 
ßm∂e
, c⁄° CvM©* 
missög
=0,

1589 
CvM©
* 
wókRe•⁄£s
=0, 
CvSli˚
 
¶i˚
 = 
CV_WHOLE_SEQ
,

1590 
k
=-1 ) const;

1606 
CV_WRAP
 
vútuÆ
 
˛ór
();

1624 
vútuÆ
 
ˇlc_îr‹
–
CvMLD©a
* 
_d©a
, 
ty≥
,

1625 
°d
::
ve˘‹
<> *
ª•
 = 0 );

1640 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
fs
, c⁄° * 
«me
 ) const;

1656 
vútuÆ
 
	`ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1660 
CV_WRAP
 
	`CvGBTªes
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1661 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

1662 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1663 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

1664 
CvGBTªesP¨ams
 
∑øms
=
	`CvGBTªesP¨ams
() );

1666 
CV_WRAP
 
vútuÆ
 
boﬁ
 
	`åaö
–c⁄° 
cv
::
M©
& 
åaöD©a
, 
tÊag
,

1667 c⁄° 
cv
::
M©
& 
ª•⁄£s
, c⁄° cv::M©& 
v¨Idx
=cv::
	`M©
(),

1668 c⁄° 
cv
::
M©
& 
ßm∂eIdx
=cv::
	`M©
(), c⁄° cv::M©& 
v¨Ty≥
=cv::Mat(),

1669 c⁄° 
cv
::
M©
& 
missögD©aMask
=cv::
	`M©
(),

1670 
CvGBTªesP¨ams
 
∑øms
=
	`CvGBTªesP¨ams
(),

1671 
boﬁ
 
upd©e
=
Ál£
 );

1673 
CV_WRAP
 
vútuÆ
 
	`¥edi˘
–c⁄° 
cv
::
M©
& 
ßm∂e
, c⁄° cv::M©& 
missög
=cv::
	`M©
(),

1674 c⁄° 
cv
::
R™ge
& 
¶i˚
 = cv::R™ge::
	`Æl
(),

1675 
k
=-1 ) const;

1677 
¥Ÿe˘ed
:

1694 
vútuÆ
 
	`föd_gødõ¡
–c⁄° 
k
 = 0);

1713 
vútuÆ
 
	`ch™ge_vÆues
(
CvDTªe
* 
åì
, c⁄° 
k
 = 0);

1732 
vútuÆ
 
	`föd_›timÆ_vÆue
–c⁄° 
CvM©
* 
_Idx
 );

1749 
vútuÆ
 
	`do_subßm∂e
();

1766 
	`Àaves_gë
–
CvDTªeNode
** 
Àaves
, & 
cou¡
, CvDTªeNode* 
node
 );

1783 
CvDTªeNode
** 
	`GëLóves
–c⁄° 
CvDTªe
* 
dåì
, & 
Àn
 );

1799 
vútuÆ
 
boﬁ
 
	$¥obÀm_ty≥
() const;

1814 
vútuÆ
 
	$wrôe_∑øms
–
CvFûeSt‹age
* 
fs
 ) const;

1834 
vútuÆ
 
	`ªad_∑øms
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
‚ode
 );

1835 
	$gë_Àn
(c⁄° 
CvM©
* 
m©
) const;

1838 
CvDTªeTøöD©a
* 
d©a
;

1839 
CvGBTªesP¨ams
 
∑øms
;

1841 
CvSeq
** 
wók
;

1842 
CvM©
* 
‹ig_ª•⁄£
;

1843 
CvM©
* 
sum_ª•⁄£
;

1844 
CvM©
* 
sum_ª•⁄£_tmp
;

1845 
CvM©
* 
ßm∂e_idx
;

1846 
CvM©
* 
subßm∂e_åaö
;

1847 
CvM©
* 
subßm∂e_ã°
;

1848 
CvM©
* 
missög
;

1849 
CvM©
* 
˛ass_œbñs
;

1851 
cv
::
RNG
* 
∫g
;

1853 
˛ass_cou¡
;

1854 
dñè
;

1855 
ba£_vÆue
;

1857 
	}
};

1867 
CV_EXPORTS_W_MAP
 
	gCvANN_MLP_TøöP¨ams


1869 
CvANN_MLP_TøöP¨ams
();

1870 
CvANN_MLP_TøöP¨ams
–
CvTîmCrôîü
 
ãrm_¸ô
, 
åaö_mëhod
,

1871 
∑øm1
, 
∑øm2
=0 );

1872 ~
CvANN_MLP_TøöP¨ams
();

1874 íum { 
	gBACKPROP
=0, 
	gRPROP
=1 };

1876 
CV_PROP_RW
 
CvTîmCrôîü
 
	gãrm_¸ô
;

1877 
CV_PROP_RW
 
	gåaö_mëhod
;

1880 
CV_PROP_RW
 
	gbp_dw_sˇÀ
, 
	gbp_momít_sˇÀ
;

1883 
CV_PROP_RW
 
	gΩ_dw0
, 
	gΩ_dw_∂us
, 
	gΩ_dw_möus
, 
	gΩ_dw_mö
, 
	gΩ_dw_max
;

1887 ˛as†
	cCV_EXPORTS_W
 
	mCvANN_MLP
 : 
public
 
CvSètModñ


1889 
public
:

1890 
CV_WRAP
 
CvANN_MLP
();

1891 
CvANN_MLP
–c⁄° 
CvM©
* 
œyîSizes
,

1892 
a˘iv©eFunc
=
CvANN_MLP
::
SIGMOID_SYM
,

1893 
Â¨am1
=0, 
Â¨am2
=0 );

1895 
	mvútuÆ
 ~
CvANN_MLP
();

1897 
vútuÆ
 
¸óã
–c⁄° 
CvM©
* 
œyîSizes
,

1898 
a˘iv©eFunc
=
CvANN_MLP
::
SIGMOID_SYM
,

1899 
Â¨am1
=0, 
Â¨am2
=0 );

1901 
vútuÆ
 
åaö
–c⁄° 
CvM©
* 
öputs
, c⁄° CvM©* 
ouçuts
,

1902 c⁄° 
CvM©
* 
ßm∂eWeights
, c⁄° CvM©* 
ßm∂eIdx
=0,

1903 
CvANN_MLP_TøöP¨ams
 
∑øms
 = CvANN_MLP_TrainParams(),

1904 
Êags
=0 );

1905 
vútuÆ
 
	$¥edi˘
–c⁄° 
CvM©
* 
öputs
, 
CV_OUT
 CvM©* 
ouçuts
 ) const;

1907 
CV_WRAP
 
	`CvANN_MLP
–c⁄° 
cv
::
M©
& 
œyîSizes
,

1908 
a˘iv©eFunc
=
CvANN_MLP
::
SIGMOID_SYM
,

1909 
Â¨am1
=0, 
Â¨am2
=0 );

1911 
CV_WRAP
 
vútuÆ
 
	`¸óã
–c⁄° 
cv
::
M©
& 
œyîSizes
,

1912 
a˘iv©eFunc
=
CvANN_MLP
::
SIGMOID_SYM
,

1913 
Â¨am1
=0, 
Â¨am2
=0 );

1915 
CV_WRAP
 
vútuÆ
 
	`åaö
–c⁄° 
cv
::
M©
& 
öputs
, c⁄° cv::M©& 
ouçuts
,

1916 c⁄° 
cv
::
M©
& 
ßm∂eWeights
, c⁄° cv::M©& 
ßm∂eIdx
=cv::
	`M©
(),

1917 
CvANN_MLP_TøöP¨ams
 
∑øms
 = 
	`CvANN_MLP_TøöP¨ams
(),

1918 
Êags
=0 );

1920 
CV_WRAP
 
vútuÆ
 
	$¥edi˘
–c⁄° 
cv
::
M©
& 
öputs
, 
CV_OUT
 cv::M©& 
ouçuts
 ) const;

1922 
CV_WRAP
 
vútuÆ
 
	`˛ór
();

1925 íum { 
IDENTITY
 = 0, 
SIGMOID_SYM
 = 1, 
GAUSSIAN
 = 2 };

1928 íum { 
UPDATE_WEIGHTS
 = 1, 
NO_INPUT_SCALE
 = 2, 
NO_OUTPUT_SCALE
 = 4 
	}
};

1930 
vútuÆ
 
ªad
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1931 
vútuÆ
 
	$wrôe
–
CvFûeSt‹age
* 
°‹age
, c⁄° * 
«me
 ) const;

1933 
	$gë_œyî_cou¡
(Ë{  
œyî_sizes
 ?Üayî_sizes->
cﬁs
 : 0; 
	}
}

1934 c⁄° 
CvM©
* 
	$gë_œyî_sizes
(Ë{  
œyî_sizes
; 
	}
}

1935 * 
	$gë_weights
(
œyî
)

1937  
œyî_sizes
 && 
weights
 &&

1938 ()
œyî
 <()
œyî_sizes
->
cﬁs
 ? 
weights
[layer] : 0;

1939 
	}
}

1941 
vútuÆ
 
	$ˇlc_a˘iv_func_dîiv
–
CvM©
* 
xf
, CvM©* 
dîiv
, c⁄° * 
büs
 ) const;

1943 
¥Ÿe˘ed
:

1945 
vútuÆ
 
boﬁ
 
	`¥ï¨e_to_åaö
–c⁄° 
CvM©
* 
_öputs
, c⁄° CvM©* 
_ouçuts
,

1946 c⁄° 
CvM©
* 
_ßm∂e_weights
, c⁄° CvM©* 
ßm∂eIdx
,

1947 
CvVe˘‹s
* 
_ivecs
, CvVe˘‹s* 
_ovecs
, ** 
_sw
, 
_Êags
 );

1950 
vútuÆ
 
	`åaö_back¥›
–
CvVe˘‹s
 
_ivecs
, CvVe˘‹†
_ovecs
, c⁄° * 
_sw
 );

1953 
vútuÆ
 
	`åaö_Ωr›
–
CvVe˘‹s
 
_ivecs
, CvVe˘‹†
_ovecs
, c⁄° * 
_sw
 );

1955 
vútuÆ
 
	$ˇlc_a˘iv_func
–
CvM©
* 
xf
, c⁄° * 
büs
 ) const;

1956 
vútuÆ
 
	`£t_a˘iv_func
–
_a˘iv_func
=
SIGMOID_SYM
,

1957 
_f_∑øm1
=0, 
_f_∑øm2
=0 );

1958 
vútuÆ
 
	`öô_weights
();

1959 
vútuÆ
 
	$sˇÀ_öput
–c⁄° 
CvM©
* 
_§c
, CvM©* 
_d°
 ) const;

1960 
vútuÆ
 
	$sˇÀ_ouçut
–c⁄° 
CvM©
* 
_§c
, CvM©* 
_d°
 ) const;

1961 
vútuÆ
 
	`ˇlc_öput_sˇÀ
–c⁄° 
CvVe˘‹s
* 
vecs
, 
Êags
 );

1962 
vútuÆ
 
	`ˇlc_ouçut_sˇÀ
–c⁄° 
CvVe˘‹s
* 
vecs
, 
Êags
 );

1964 
vútuÆ
 
	$wrôe_∑øms
–
CvFûeSt‹age
* 
fs
 ) const;

1965 
vútuÆ
 
	`ªad_∑øms
–
CvFûeSt‹age
* 
fs
, 
CvFûeNode
* 
node
 );

1967 
CvM©
* 
œyî_sizes
;

1968 
CvM©
* 
wbuf
;

1969 
CvM©
* 
ßm∂e_weights
;

1970 ** 
weights
;

1971 
f_∑øm1
, 
f_∑øm2
;

1972 
mö_vÆ
, 
max_vÆ
, 
mö_vÆ1
, 
max_vÆ1
;

1973 
a˘iv_func
;

1974 
max_cou¡
, 
max_buf_sz
;

1975 
CvANN_MLP_TøöP¨ams
 
∑øms
;

1976 
cv
::
RNG
* 
∫g
;

1977 
	}
};

1985 
	$CVAPI
(Ë
	`cvR™dMVN‹mÆ
–
CvM©
* 
món
, CvM©* 
cov
, CvM©* 
ßm∂e
,

1986 
CvRNG
* 
∫g
 
	`CV_DEFAULT
(0) );

1989 
	$CVAPI
(Ë
	`cvR™dGaussMixtuª
–
CvM©
* 
móns
[],

1990 
CvM©
* 
covs
[],

1991 
weights
[],

1992 
˛¢um
,

1993 
CvM©
* 
ßm∂e
,

1994 
CvM©
* 
ßmpCœs£s
 
	`CV_DEFAULT
(0) );

1996 
	#CV_TS_CONCENTRIC_SPHERES
 0

	)

1999 
	$CVAPI
(Ë
	`cvCª©eTe°Së
–
ty≥
, 
CvM©
** 
ßm∂es
,

2000 
num_ßm∂es
,

2001 
num_„©uªs
,

2002 
CvM©
** 
ª•⁄£s
,

2003 
num_˛as£s
, ... );

2009 
	#CV_COUNT
 0

	)

2010 
	#CV_PORTION
 1

	)

2012 
CV_EXPORTS
 
CvTøöTe°S∂ô


2014 
	`CvTøöTe°S∂ô
();

2015 
	`CvTøöTe°S∂ô
–
åaö_ßm∂e_cou¡
, 
boﬁ
 
mix
 = 
åue
);

2016 
	`CvTøöTe°S∂ô
–
åaö_ßm∂e_p‹ti⁄
, 
boﬁ
 
mix
 = 
åue
);

2020 
cou¡
;

2021 
p‹ti⁄
;

2022 } 
åaö_ßm∂e_∑π
;

2023 
åaö_ßm∂e_∑π_mode
;

2025 
boﬁ
 
mix
;

2026 
	}
};

2028 ˛as†
	cCV_EXPORTS
 
	mCvMLD©a


2030 
	mpublic
:

2031 
CvMLD©a
();

2032 
	mvútuÆ
 ~
CvMLD©a
();

2037 
ªad_csv
–c⁄° * 
fûíame
 );

2039 c⁄° 
CvM©
* 
	$gë_vÆues
() const;

2040 c⁄° 
CvM©
* 
	`gë_ª•⁄£s
();

2041 c⁄° 
CvM©
* 
	$gë_missög
() const;

2043 
	`£t_ª•⁄£_idx
–
idx
 );

2045 
	$gë_ª•⁄£_idx
() const;

2047 
	`£t_åaö_ã°_•lô
–c⁄° 
CvTøöTe°S∂ô
 * 
•l
 );

2048 c⁄° 
CvM©
* 
	$gë_åaö_ßm∂e_idx
() const;

2049 c⁄° 
CvM©
* 
	$gë_ã°_ßm∂e_idx
() const;

2050 
	`mix_åaö_™d_ã°_idx
();

2052 c⁄° 
CvM©
* 
	`gë_v¨_idx
();

2053 
	`chahge_v¨_idx
–
vi
, 
boﬁ
 
°©e
 );

2055 
	`ch™ge_v¨_idx
–
vi
, 
boﬁ
 
°©e
 );

2057 c⁄° 
CvM©
* 
	`gë_v¨_ty≥s
();

2058 
	$gë_v¨_ty≥
–
v¨_idx
 ) const;

2062 
	`£t_v¨_ty≥s
–c⁄° * 
°r
 );

2065 
	`ch™ge_v¨_ty≥
–
v¨_idx
, 
ty≥
);

2067 
	`£t_dñimôî
–
ch
 );

2068 
	$gë_dñimôî
() const;

2070 
	`£t_miss_ch
–
ch
 );

2071 
	$gë_miss_ch
() const;

2073 c⁄° 
°d
::
m≠
<°d::
°rög
, >& 
	$gë_˛ass_œbñs_m≠
() const;

2075 
¥Ÿe˘ed
:

2076 
vútuÆ
 
	`˛ór
();

2078 
	`°r_to_Êt_ñem
–c⁄° * 
tokí
, & 
Êt_ñem
, & 
ty≥
);

2079 
	`‰ì_åaö_ã°_idx
();

2081 
dñimôî
;

2082 
miss_ch
;

2085 
CvM©
* 
vÆues
;

2086 
CvM©
* 
missög
;

2087 
CvM©
* 
v¨_ty≥s
;

2088 
CvM©
* 
v¨_idx_mask
;

2090 
CvM©
* 
ª•⁄£_out
;

2091 
CvM©
* 
v¨_idx_out
;

2092 
CvM©
* 
v¨_ty≥s_out
;

2094 
ª•⁄£_idx
;

2096 
åaö_ßm∂e_cou¡
;

2097 
boﬁ
 
mix
;

2099 
tŸÆ_˛ass_cou¡
;

2100 
°d
::
m≠
<°d::
°rög
, > 
˛ass_m≠
;

2102 
CvM©
* 
åaö_ßm∂e_idx
;

2103 
CvM©
* 
ã°_ßm∂e_idx
;

2104 * 
ßm∂e_idx
;

2106 
cv
::
RNG
* 
∫g
;

2110 
«me•a˚
 
cv


2113 
CvSètModñ
 
	tSètModñ
;

2114 
CvP¨amGrid
 
	tP¨amGrid
;

2115 
CvN‹mÆBayesCœssifõr
 
	tN‹mÆBayesCœssifõr
;

2116 
CvKNóª°
 
	tKNóª°
;

2117 
CvSVMP¨ams
 
	tSVMP¨ams
;

2118 
CvSVMKî√l
 
	tSVMKî√l
;

2119 
CvSVMSﬁvî
 
	tSVMSﬁvî
;

2120 
CvSVM
 
	tSVM
;

2121 
CvDTªeP¨ams
 
	tDTªeP¨ams
;

2122 
CvMLD©a
 
	tTøöD©a
;

2123 
CvDTªe
 
	tDecisi⁄Tªe
;

2124 
CvF‹e°Tªe
 
	tF‹e°Tªe
;

2125 
CvRTP¨ams
 
	tR™domTªeP¨ams
;

2126 
CvRTªes
 
	tR™domTªes
;

2127 
CvERTªeTøöD©a
 
	tERTªeTRaöD©a
;

2128 
CvF‹e°ERTªe
 
	tERTªe
;

2129 
CvERTªes
 
	tERTªes
;

2130 
CvBoo°P¨ams
 
	tBoo°P¨ams
;

2131 
CvBoo°Tªe
 
	tBoo°Tªe
;

2132 
CvBoo°
 
	tBoo°
;

2133 
CvANN_MLP_TøöP¨ams
 
	tANN_MLP_TøöP¨ams
;

2134 
CvANN_MLP
 
	tNeuølNë_MLP
;

2135 
CvGBTªesP¨ams
 
	tGødõ¡Boo°ögTªeP¨ams
;

2136 
CvGBTªes
 
	tGødõ¡Boo°ögTªes
;

2138 
ãm∂©e
<> 
CV_EXPORTS
 
På
<
CvDTªeS∂ô
>::
	`dñëe_obj
();

2140 
CV_EXPORTS
 
boﬁ
 
	`öôModuÀ_ml
();

2142 
	}
}

	@/usr/include/opencv2/objdetect/objdetect.hpp

43 #i‚de‡
__OPENCV_OBJDETECT_HPP__


44 
	#__OPENCV_OBJDETECT_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

48 #ifde‡
__˝lu•lus


49 
	~<m≠
>

50 
	~<deque
>

59 
	#CV_HAAR_MAGIC_VAL
 0x42500000

	)

60 
	#CV_TYPE_NAME_HAAR
 "›ícv-hØr-˛assifõr"

	)

62 
	#CV_IS_HAAR_CLASSIFIER
–
hØr
 ) \

63 ((
hØr
Ë!
NULL
 && \

64 (((c⁄° 
CvHØrCœssifõrCasˇde
*)(
hØr
))->
Êags
 & 
CV_MAGIC_MASK
)==
CV_HAAR_MAGIC_VAL
)

	)

66 
	#CV_HAAR_FEATURE_MAX
 3

	)

68 
	sCvHØrFótuª


70 
tûãd
;

73 
CvRe˘
 
r
;

74 
weight
;

75 } 
ª˘
[
CV_HAAR_FEATURE_MAX
];

76 } 
	tCvHØrFótuª
;

78 
	sCvHØrCœssifõr


80 
cou¡
;

81 
CvHØrFótuª
* 
hØr_„©uª
;

82 * 
thªshﬁd
;

83 * 
À·
;

84 * 
right
;

85 * 
Æpha
;

86 } 
	tCvHØrCœssifõr
;

88 
	sCvHØrSègeCœssifõr


90 
cou¡
;

91 
thªshﬁd
;

92 
CvHØrCœssifõr
* 
˛assifõr
;

94 
√xt
;

95 
chûd
;

96 
∑ª¡
;

97 } 
	tCvHØrSègeCœssifõr
;

99 
CvHidHØrCœssifõrCasˇde
 
	tCvHidHØrCœssifõrCasˇde
;

101 
	sCvHØrCœssifõrCasˇde


103 
Êags
;

104 
cou¡
;

105 
CvSize
 
‹ig_wödow_size
;

106 
CvSize
 
ªÆ_wödow_size
;

107 
sˇÀ
;

108 
CvHØrSègeCœssifõr
* 
°age_˛assifõr
;

109 
CvHidHØrCœssifõrCasˇde
* 
hid_ˇsˇde
;

110 } 
	tCvHØrCœssifõrCasˇde
;

112 
	sCvAvgComp


114 
CvRe˘
 
ª˘
;

115 
√ighb‹s
;

116 } 
	tCvAvgComp
;

120 
CVAPI
(
CvHØrCœssifõrCasˇde
*Ë
cvLﬂdHØrCœssifõrCasˇde
(

121 c⁄° * 
dúe˘‹y
, 
CvSize
 
‹ig_wödow_size
);

123 
CVAPI
(Ë
cvRñó£HØrCœssifõrCasˇde
–
CvHØrCœssifõrCasˇde
** 
ˇsˇde
 );

125 
	#CV_HAAR_DO_CANNY_PRUNING
 1

	)

126 
	#CV_HAAR_SCALE_IMAGE
 2

	)

127 
	#CV_HAAR_FIND_BIGGEST_OBJECT
 4

	)

128 
	#CV_HAAR_DO_ROUGH_SEARCH
 8

	)

139 
CVAPI
(
CvSeq
*Ë
cvHØrDëe˘Obje˘s
–c⁄° 
CvAº
* 
image
,

140 
CvHØrCœssifõrCasˇde
* 
ˇsˇde
, 
CvMemSt‹age
* 
°‹age
,

141 
sˇÀ_Á˘‹
 
CV_DEFAULT
(1.1),

142 
mö_√ighb‹s
 
CV_DEFAULT
(3), 
Êags
 CV_DEFAULT(0),

143 
CvSize
 
mö_size
 
CV_DEFAULT
(
cvSize
(0,0)), CvSizê
max_size
 CV_DEFAULT(cvSize(0,0)));

146 
CVAPI
(Ë
cvSëImagesF‹HØrCœssifõrCasˇde
–
CvHØrCœssifõrCasˇde
* 
ˇsˇde
,

147 c⁄° 
CvAº
* 
sum
, c⁄° CvAº* 
sqsum
,

148 c⁄° 
CvAº
* 
tûãd_sum
, 
sˇÀ
 );

151 
CVAPI
(Ë
cvRunHØrCœssifõrCasˇde
–c⁄° 
CvHØrCœssifõrCasˇde
* 
ˇsˇde
,

152 
CvPoöt
 
±
, 
°¨t_°age
 
CV_DEFAULT
(0));

163 
	sCvLSVMFûãrPosôi⁄


165 
x
;

166 
y
;

167 
l
;

168 } 
	tCvLSVMFûãrPosôi⁄
;

184 
	sCvLSVMFûãrObje˘
{

185 
CvLSVMFûãrPosôi⁄
 
V
;

186 
föeFun˘i⁄
[4];

187 
sizeX
;

188 
sizeY
;

189 
numFótuªs
;

190 *
H
;

191 } 
	tCvLSVMFûãrObje˘
;

201 
	sCvL©ítSvmDëe˘‹


203 
num_fûãrs
;

204 
num_comp⁄íts
;

205 * 
num_∑π_fûãrs
;

206 
CvLSVMFûãrObje˘
** 
fûãrs
;

207 * 
b
;

208 
sc‹e_thªshﬁd
;

210 
	tCvL©ítSvmDëe˘‹
;

216 
	sCvObje˘Dëe˘i⁄


218 
CvRe˘
 
ª˘
;

219 
sc‹e
;

220 } 
	tCvObje˘Dëe˘i⁄
;

236 
CVAPI
(
CvL©ítSvmDëe˘‹
*Ë
cvLﬂdL©ítSvmDëe˘‹
(c⁄° * 
fûíame
);

247 
CVAPI
(Ë
cvRñó£L©ítSvmDëe˘‹
(
CvL©ítSvmDëe˘‹
** 
dëe˘‹
);

269 
CVAPI
(
CvSeq
*Ë
cvL©ítSvmDëe˘Obje˘s
(
I∂Image
* 
image
,

270 
CvL©ítSvmDëe˘‹
* 
dëe˘‹
,

271 
CvMemSt‹age
* 
°‹age
,

272 
ovîœp_thªshﬁd
 
CV_DEFAULT
(0.5f),

273 
numThªads
 
CV_DEFAULT
(-1));

275 #ifde‡
__˝lu•lus


278 
CV_EXPORTS
 
CvSeq
* 
cvHØrDëe˘Obje˘sF‹ROC
–c⁄° 
CvAº
* 
image
,

279 
CvHØrCœssifõrCasˇde
* 
ˇsˇde
, 
CvMemSt‹age
* 
°‹age
,

280 
°d
::
ve˘‹
<>& 
ªje˘Levñs
, std::ve˘‹<>& 
ÀvñWeightds
,

281 
sˇÀ_Á˘‹
 
CV_DEFAULT
(1.1),

282 
mö_√ighb‹s
 
CV_DEFAULT
(3), 
Êags
 CV_DEFAULT(0),

283 
CvSize
 
mö_size
 
CV_DEFAULT
(
cvSize
(0,0)), CvSizê
max_size
 CV_DEFAULT(cvSize(0,0)),

284 
boﬁ
 
ouçutReje˘Levñs
 = 
Ál£
 );

286 
«me•a˚
 
	gcv


297 ˛as†
	cCV_EXPORTS
 
	gL©ítSvmDëe˘‹


299 
	gpublic
:

300 
CV_EXPORTS
 
Obje˘Dëe˘i⁄


302 
Obje˘Dëe˘i⁄
();

303 
Obje˘Dëe˘i⁄
–c⁄° 
Re˘
& 
ª˘
, 
sc‹e
, 
˛assID
=-1 );

304 
Re˘
 
	gª˘
;

305 
	gsc‹e
;

306 
	g˛assID
;

309 
L©ítSvmDëe˘‹
();

310 
L©ítSvmDëe˘‹
–c⁄° 
ve˘‹
<
°rög
>& 
fûíames
, c⁄° ve˘‹<°rög>& 
˛assNames
=vector<string>() );

311 
	gvútuÆ
 ~
L©ítSvmDëe˘‹
();

313 
vútuÆ
 
˛ór
();

314 
vútuÆ
 
boﬁ
 
em±y
() const;

315 
boﬁ
 
lﬂd
–c⁄° 
ve˘‹
<
°rög
>& 
fûíames
, c⁄° ve˘‹<°rög>& 
˛assNames
=vector<string>() );

317 
vútuÆ
 
dëe˘
–c⁄° 
M©
& 
image
,

318 
ve˘‹
<
Obje˘Dëe˘i⁄
>& 
obje˘Dëe˘i⁄s
,

319 
ovîœpThªshﬁd
=0.5f,

320 
numThªads
=-1 );

322 c⁄° 
	gve˘‹
<
	g°rög
>& 
gëCœssNames
() const;

323 
size_t
 
gëCœssCou¡
() const;

325 
	g¥iv©e
:

326 
ve˘‹
<
CvL©ítSvmDëe˘‹
*> 
dëe˘‹s
;

327 
	gve˘‹
<
	g°rög
> 
	g˛assNames
;

332 ˛as†
	cCV_EXPORTS
 
	gSimû¨Re˘s


334 
	gpublic
:

335 
Simû¨Re˘s
(
_ïs
Ë: 
ïs
(_eps) {}

336 
ölöe
 
boﬁ
 
›î©‹
()(c⁄° 
Re˘
& 
r1
, c⁄° 
	gRe˘
& 
	gr2
) const

338 
	gdñè
 = 
ïs
*(
°d
::
mö
(
r1
.
width
, 
r2
.widthË+ 
	g°d
::mö‘1.
height
,Ñ2.height))*0.5;

339  
	g°d
::
abs
(
r1
.
x
 - 
r2
.xË<
dñè
 &&

340 
°d
::
abs
(
r1
.
y
 - 
r2
.yË<
dñè
 &&

341 
°d
::
abs
(
r1
.
x
 +Ñ1.
width
 - 
r2
.x -Ñ2.widthË<
dñè
 &&

342 
°d
::
abs
(
r1
.
y
 +Ñ1.
height
 - 
r2
.y -Ñ2.heightË<
dñè
;

344 
	gïs
;

347 
CV_EXPORTS
 
groupRe˘™gÀs
(
CV_OUT
 
CV_IN_OUT
 
ve˘‹
<
Re˘
>& 
ª˘Li°
, 
groupThªshﬁd
, 
ïs
=0.2);

348 
CV_EXPORTS_W
 
groupRe˘™gÀs
(
CV_OUT
 
CV_IN_OUT
 
ve˘‹
<
Re˘
>& 
ª˘Li°
, CV_OUT ve˘‹<>& 
weights
, 
groupThªshﬁd
, 
ïs
=0.2);

349 
CV_EXPORTS
 
groupRe˘™gÀs
–
ve˘‹
<
Re˘
>& 
ª˘Li°
, 
groupThªshﬁd
, 
ïs
, ve˘‹<>* 
weights
, ve˘‹<>* 
ÀvñWeights
 );

350 
CV_EXPORTS
 
groupRe˘™gÀs
(
ve˘‹
<
Re˘
>& 
ª˘Li°
, ve˘‹<>& 
ªje˘Levñs
,

351 
ve˘‹
<>& 
ÀvñWeights
, 
groupThªshﬁd
, 
ïs
=0.2);

352 
CV_EXPORTS
 
groupRe˘™gÀs_mónshi·
(
ve˘‹
<
Re˘
>& 
ª˘Li°
, ve˘‹<>& 
foundWeights
, ve˘‹<>& 
foundSˇÀs
,

353 
dëe˘Thªshﬁd
 = 0.0, 
Size
 
wöDëSize
 = Size(64, 128));

356 ˛as†
	cCV_EXPORTS
 
	gFótuªEvÆu©‹


358 
	gpublic
:

359 íum { 
HAAR
 = 0, 
	gLBP
 = 1, 
	gHOG
 = 2 };

360 
	gvútuÆ
 ~
FótuªEvÆu©‹
();

362 
vútuÆ
 
boﬁ
 
ªad
(c⁄° 
FûeNode
& 
node
);

363 
vútuÆ
 
	gPå
<
	gFótuªEvÆu©‹
> 
˛⁄e
() const;

364 
vútuÆ
 
gëFótuªTy≥
() const;

366 
vútuÆ
 
boﬁ
 
£tImage
(c⁄° 
M©
& 
img
, 
Size
 
‹igWöSize
);

367 
vútuÆ
 
boﬁ
 
£tWödow
(
Poöt
 
p
);

369 
vútuÆ
 
ˇlcOrd
(
„©uªIdx
) const;

370 
vútuÆ
 
ˇlcC©
(
„©uªIdx
) const;

372 
	gPå
<
	gFótuªEvÆu©‹
> 
¸óã
(
ty≥
);

375 
	gãm∂©e
<> 
CV_EXPORTS
 
	gPå
<
	gCvHØrCœssifõrCasˇde
>::
dñëe_obj
();

379 
	gCASCADE_DO_CANNY_PRUNING
=1,

380 
	gCASCADE_SCALE_IMAGE
=2,

381 
	gCASCADE_FIND_BIGGEST_OBJECT
=4,

382 
	gCASCADE_DO_ROUGH_SEARCH
=8

385 ˛as†
	cCV_EXPORTS_W
 
	gCasˇdeCœssifõr


387 
	gpublic
:

388 
CV_WRAP
 
CasˇdeCœssifõr
();

389 
CV_WRAP
 
CasˇdeCœssifõr
–c⁄° 
°rög
& 
fûíame
 );

390 
	gvútuÆ
 ~
CasˇdeCœssifõr
();

392 
CV_WRAP
 
vútuÆ
 
boﬁ
 
em±y
() const;

393 
CV_WRAP
 
boﬁ
 
lﬂd
–c⁄° 
°rög
& 
fûíame
 );

394 
vútuÆ
 
boﬁ
 
ªad
–c⁄° 
FûeNode
& 
node
 );

395 
CV_WRAP
 
vútuÆ
 
dëe˘Mu…iSˇÀ
–c⁄° 
M©
& 
image
,

396 
CV_OUT
 
ve˘‹
<
Re˘
>& 
obje˘s
,

397 
sˇÀFa˘‹
=1.1,

398 
möNeighb‹s
=3, 
Êags
=0,

399 
Size
 
möSize
=Size(),

400 
Size
 
maxSize
=Size() );

402 
CV_WRAP
 
vútuÆ
 
dëe˘Mu…iSˇÀ
–c⁄° 
M©
& 
image
,

403 
CV_OUT
 
ve˘‹
<
Re˘
>& 
obje˘s
,

404 
ve˘‹
<>& 
ªje˘Levñs
,

405 
ve˘‹
<>& 
ÀvñWeights
,

406 
sˇÀFa˘‹
=1.1,

407 
möNeighb‹s
=3, 
Êags
=0,

408 
Size
 
möSize
=Size(),

409 
Size
 
maxSize
=Size(),

410 
boﬁ
 
ouçutReje˘Levñs
=
Ál£
 );

413 
boﬁ
 
isOldF‹m©Casˇde
() const;

414 
vútuÆ
 
Size
 
gëOrigöÆWödowSize
() const;

415 
gëFótuªTy≥
() const;

416 
boﬁ
 
£tImage
–c⁄° 
M©
& );

418 
	g¥Ÿe˘ed
:

422 
vútuÆ
 
boﬁ
 
dëe˘SögÀSˇÀ
–c⁄° 
M©
& 
image
, 
°rùCou¡
, 
Size
 
¥o˚ssögRe˘Size
,

423 
°rùSize
, 
ySãp
, 
Á˘‹
, 
ve˘‹
<
Re˘
>& 
ˇndid©es
,

424 
ve˘‹
<>& 
ªje˘Levñs
, ve˘‹<>& 
ÀvñWeights
, 
boﬁ
 
ouçutReje˘Levñs
=
Ál£
);

426 
	g¥Ÿe˘ed
:

427 íum { 
BOOST
 = 0 };

428 íum { 
	gDO_CANNY_PRUNING
 = 1, 
	gSCALE_IMAGE
 = 2,

429 
	gFIND_BIGGEST_OBJECT
 = 4, 
	gDO_ROUGH_SEARCH
 = 8 };

431 
‰õnd
 
˛ass
 
	gCasˇdeCœssifõrInvokî
;

433 
	gãm∂©e
<
˛ass
 
	gFEvÆ
>

434 
‰õnd
 
¥edi˘Ordîed
–
CasˇdeCœssifõr
& 
ˇsˇde
, 
På
<
FótuªEvÆu©‹
> &
„©uªEvÆu©‹
, & 
weight
);

436 
	gãm∂©e
<
˛ass
 
	gFEvÆ
>

437 
‰õnd
 
¥edi˘C©eg‹iˇl
–
CasˇdeCœssifõr
& 
ˇsˇde
, 
På
<
FótuªEvÆu©‹
> &
„©uªEvÆu©‹
, & 
weight
);

439 
	gãm∂©e
<
˛ass
 
	gFEvÆ
>

440 
‰õnd
 
¥edi˘OrdîedStump
–
CasˇdeCœssifõr
& 
ˇsˇde
, 
På
<
FótuªEvÆu©‹
> &
„©uªEvÆu©‹
, & 
weight
);

442 
	gãm∂©e
<
˛ass
 
	gFEvÆ
>

443 
‰õnd
 
¥edi˘C©eg‹iˇlStump
–
CasˇdeCœssifõr
& 
ˇsˇde
, 
På
<
FótuªEvÆu©‹
> &
„©uªEvÆu©‹
, & 
weight
);

445 
boﬁ
 
£tImage
–
På
<
FótuªEvÆu©‹
>& 
„vÆ
, c⁄° 
M©
& 
image
);

446 
vútuÆ
 
runAt
–
På
<
FótuªEvÆu©‹
>& 
„vÆ
, 
Poöt
 
±
, & 
weight
 );

448 ˛as†
	cD©a


450 
	gpublic
:

451 
CV_EXPORTS
 
DTªeNode


453 
„©uªIdx
;

454 
	gthªshﬁd
;

455 
	gÀ·
;

456 
	gright
;

459 
CV_EXPORTS
 
	gDTªe


461 
	gnodeCou¡
;

464 
CV_EXPORTS
 
	gSège


466 
	gfú°
;

467 
	g¡ªes
;

468 
	gthªshﬁd
;

471 
boﬁ
 
ªad
(c⁄° 
FûeNode
 &
node
);

473 
boﬁ
 
	gisStumpBa£d
;

475 
	g°ageTy≥
;

476 
	g„©uªTy≥
;

477 
	gnˇãg‹õs
;

478 
Size
 
	g‹igWöSize
;

480 
	gve˘‹
<
	gSège
> 
	g°ages
;

481 
	gve˘‹
<
	gDTªe
> 
	g˛assifõrs
;

482 
	gve˘‹
<
	gDTªeNode
> 
	gnodes
;

483 
	gve˘‹
<> 
	gÀaves
;

484 
	gve˘‹
<> 
	gsub£ts
;

487 
D©a
 
	gd©a
;

488 
	gPå
<
	gFótuªEvÆu©‹
> 
	g„©uªEvÆu©‹
;

489 
	gPå
<
	gCvHØrCœssifõrCasˇde
> 
	gﬁdCasˇde
;

491 
	gpublic
:

492 ˛as†
	cCV_EXPORTS
 
MaskGíî©‹


494 
public
:

495 
vútuÆ
 ~
MaskGíî©‹
() {}

496 
vútuÆ
 
cv
::
M©
 
gíî©eMask
(c⁄° cv::M©& 
§c
)=0;

497 
vútuÆ
 
öôülizeMask
(c⁄° 
cv
::
M©
& ) {};

499 
£tMaskGíî©‹
(
På
<
MaskGíî©‹
> 
maskGíî©‹
);

500 
	gPå
<
	gMaskGíî©‹
> 
gëMaskGíî©‹
();

502 
£tFa˚Dëe˘i⁄MaskGíî©‹
();

504 
	g¥Ÿe˘ed
:

505 
På
<
MaskGíî©‹
> 
maskGíî©‹
;

512 
	sDëe˘i⁄ROI


515 
	gsˇÀ
;

517 
	gve˘‹
<
	gcv
::
Poöt
> 
loˇti⁄s
;

519 
	gve˘‹
<> 
	gc⁄fidí˚s
;

522 
CV_EXPORTS_W
 
	gHOGDes¸ùt‹


524 
	gpublic
:

525 íum { 
L2Hys
=0 };

526 íum { 
	gDEFAULT_NLEVELS
=64 };

528 
CV_WRAP
 
HOGDes¸ùt‹
(Ë: 
wöSize
(64,128), 
blockSize
(16,16), 
blockSåide
(8,8),

529 
˚ŒSize
(8,8), 
nbös
(9), 
dîivA≥πuª
(1), 
wöSigma
(-1),

530 
hi°ogømN‹mTy≥
(
HOGDes¸ùt‹
::
L2Hys
), 
L2HysThªshﬁd
(0.2), 
gammaC‹ª˘i⁄
(
åue
),

531 
∆evñs
(
HOGDes¸ùt‹
::
DEFAULT_NLEVELS
)

534 
CV_WRAP
 
HOGDes¸ùt‹
(
Size
 
_wöSize
, Sizê
_blockSize
, Sizê
_blockSåide
,

535 
Size
 
_˚ŒSize
, 
_nbös
, 
_dîivA≥πuª
=1, 
_wöSigma
=-1,

536 
_hi°ogømN‹mTy≥
=
HOGDes¸ùt‹
::
L2Hys
,

537 
_L2HysThªshﬁd
=0.2, 
boﬁ
 
_gammaC‹ª˘i⁄
=
Ál£
,

538 
_∆evñs
=
HOGDes¸ùt‹
::
DEFAULT_NLEVELS
)

539 : 
wöSize
(
_wöSize
), 
blockSize
(
_blockSize
), 
blockSåide
(
_blockSåide
), 
˚ŒSize
(
_˚ŒSize
),

540 
nbös
(
_nbös
), 
dîivA≥πuª
(
_dîivA≥πuª
), 
wöSigma
(
_wöSigma
),

541 
hi°ogømN‹mTy≥
(
_hi°ogømN‹mTy≥
), 
L2HysThªshﬁd
(
_L2HysThªshﬁd
),

542 
gammaC‹ª˘i⁄
(
_gammaC‹ª˘i⁄
), 
∆evñs
(
_∆evñs
)

545 
CV_WRAP
 
HOGDes¸ùt‹
(c⁄° 
Såög
& 
fûíame
)

547 
lﬂd
(
fûíame
);

550 
HOGDes¸ùt‹
(c⁄° HOGDes¸ùt‹& 
d
)

552 
	gd
.
c›yTo
(*
this
);

555 
	gvútuÆ
 ~
HOGDes¸ùt‹
() {}

557 
CV_WRAP
 
size_t
 
gëDes¸ùt‹Size
() const;

558 
CV_WRAP
 
boﬁ
 
checkDëe˘‹Size
() const;

559 
CV_WRAP
 
gëWöSigma
() const;

561 
CV_WRAP
 
vútuÆ
 
£tSVMDëe˘‹
(
I≈utAºay
 
_svmdëe˘‹
);

563 
vútuÆ
 
boﬁ
 
ªad
(
FûeNode
& 
‚
);

564 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
, c⁄° 
Såög
& 
obj«me
) const;

566 
CV_WRAP
 
vútuÆ
 
boﬁ
 
lﬂd
(c⁄° 
Såög
& 
fûíame
, c⁄° Såög& 
obj«me
=String());

567 
CV_WRAP
 
vútuÆ
 
ßve
(c⁄° 
Såög
& 
fûíame
, c⁄° Såög& 
obj«me
=String()) const;

568 
vútuÆ
 
c›yTo
(
HOGDes¸ùt‹
& 
c
) const;

570 
CV_WRAP
 
vútuÆ
 
compuã
(c⁄° 
M©
& 
img
,

571 
CV_OUT
 
ve˘‹
<>& 
des¸ùt‹s
,

572 
Size
 
wöSåide
=Size(), Sizê
∑ddög
=Size(),

573 c⁄° 
ve˘‹
<
Poöt
>& 
loˇti⁄s
=vector<Point>()) const;

575 
CV_WRAP
 
vútuÆ
 
dëe˘
(c⁄° 
M©
& 
img
, 
CV_OUT
 
ve˘‹
<
Poöt
>& 
foundLoˇti⁄s
,

576 
CV_OUT
 
ve˘‹
<>& 
weights
,

577 
hôThªshﬁd
=0, 
Size
 
wöSåide
=Size(),

578 
Size
 
∑ddög
=Size(),

579 c⁄° 
ve˘‹
<
Poöt
>& 
£¨chLoˇti⁄s
=vector<Point>()) const;

581 
vútuÆ
 
dëe˘
(c⁄° 
M©
& 
img
, 
CV_OUT
 
ve˘‹
<
Poöt
>& 
foundLoˇti⁄s
,

582 
hôThªshﬁd
=0, 
Size
 
wöSåide
=Size(),

583 
Size
 
∑ddög
=Size(),

584 c⁄° 
ve˘‹
<
Poöt
>& 
£¨chLoˇti⁄s
=vector<Point>()) const;

586 
CV_WRAP
 
vútuÆ
 
dëe˘Mu…iSˇÀ
(c⁄° 
M©
& 
img
, 
CV_OUT
 
ve˘‹
<
Re˘
>& 
foundLoˇti⁄s
,

587 
CV_OUT
 
ve˘‹
<>& 
foundWeights
, 
hôThªshﬁd
=0,

588 
Size
 
wöSåide
=Size(), Sizê
∑ddög
=Size(), 
sˇÀ
=1.05,

589 
föÆThªshﬁd
=2.0,
boﬁ
 
u£Mónshi·Groupög
 = 
Ál£
) const;

591 
vútuÆ
 
dëe˘Mu…iSˇÀ
(c⁄° 
M©
& 
img
, 
CV_OUT
 
ve˘‹
<
Re˘
>& 
foundLoˇti⁄s
,

592 
hôThªshﬁd
=0, 
Size
 
wöSåide
=Size(),

593 
Size
 
∑ddög
=Size(), 
sˇÀ
=1.05,

594 
föÆThªshﬁd
=2.0, 
boﬁ
 
u£Mónshi·Groupög
 = 
Ál£
) const;

596 
CV_WRAP
 
vútuÆ
 
compuãGødõ¡
(c⁄° 
M©
& 
img
, 
CV_OUT
 M©& 
gød
, CV_OUT M©& 
™gÀOfs
,

597 
Size
 
∑ddögTL
=Size(), Sizê
∑ddögBR
=Size()) const;

599 
CV_WRAP
 
	gve˘‹
<> 
gëDeÁu…Pe›ÀDëe˘‹
();

600 
CV_WRAP
 
	gve˘‹
<> 
gëDaimÀrPe›ÀDëe˘‹
();

602 
CV_PROP
 
Size
 
	gwöSize
;

603 
CV_PROP
 
Size
 
	gblockSize
;

604 
CV_PROP
 
Size
 
	gblockSåide
;

605 
CV_PROP
 
Size
 
	g˚ŒSize
;

606 
CV_PROP
 
	gnbös
;

607 
CV_PROP
 
	gdîivA≥πuª
;

608 
CV_PROP
 
	gwöSigma
;

609 
CV_PROP
 
	ghi°ogømN‹mTy≥
;

610 
CV_PROP
 
	gL2HysThªshﬁd
;

611 
CV_PROP
 
boﬁ
 
	ggammaC‹ª˘i⁄
;

612 
CV_PROP
 
	gve˘‹
<> 
	gsvmDëe˘‹
;

613 
CV_PROP
 
	g∆evñs
;

617 
dëe˘ROI
(c⁄° 
cv
::
M©
& 
img
, c⁄° 
ve˘‹
<cv::
Poöt
> &
loˇti⁄s
,

618 
CV_OUT
 
°d
::
ve˘‹
<
cv
::
Poöt
>& 
foundLoˇti⁄s
, CV_OUT std::ve˘‹<>& 
c⁄fidí˚s
,

619 
hôThªshﬁd
 = 0, 
cv
::
Size
 
wöSåide
 = Size(),

620 
cv
::
Size
 
∑ddög
 = Size()) const;

623 
dëe˘Mu…iSˇÀROI
(c⁄° 
cv
::
M©
& 
img
,

624 
CV_OUT
 
°d
::
ve˘‹
<
cv
::
Re˘
>& 
foundLoˇti⁄s
,

625 
°d
::
ve˘‹
<
Dëe˘i⁄ROI
>& 
loˇti⁄s
,

626 
hôThªshﬁd
 = 0,

627 
groupThªshﬁd
 = 0) const;

630 
ªadALTModñ
(
°d
::
°rög
 
modñfûe
);

631 
groupRe˘™gÀs
(
ve˘‹
<
cv
::
Re˘
>& 
ª˘Li°
, ve˘‹<>& 
weights
, 
groupThªshﬁd
, 
ïs
) const;

635 
CV_EXPORTS_W
 
födD©aM©rix
(
I≈utAºay
 
image
,

636 
CV_OUT
 
ve˘‹
<
°rög
>& 
codes
,

637 
OuçutAºay
 
c‹√rs
=
noAºay
(),

638 
OuçutAºayOfAºays
 
dmtx
=
noAºay
());

639 
CV_EXPORTS_W
 
døwD©aM©rixCodes
(
I≈utOuçutAºay
 
image
,

640 c⁄° 
ve˘‹
<
°rög
>& 
codes
,

641 
I≈utAºay
 
c‹√rs
);

648 
CV_EXPORTS
 
	gCvD©aM©rixCode
 {

649 
	gmsg
[4];

650 
CvM©
 *
	g‹igöÆ
;

651 
CvM©
 *
	gc‹√rs
;

654 
CV_EXPORTS
 
	g°d
::
deque
<
CvD©aM©rixCode
> 
cvFödD©aM©rix
(
CvM©
 *
im
);

660 
«me•a˚
 
	gcv
 {

661 
«me•a˚
 
	glöemod
 {

663 
usög
 
	gcv
::
FûeNode
;

664 
usög
 
	gcv
::
FûeSt‹age
;

665 
usög
 
	gcv
::
M©
;

666 
usög
 
	gcv
::
noAºay
;

667 
usög
 
	gcv
::
OuçutAºayOfAºays
;

668 
usög
 
	gcv
::
Poöt
;

669 
usög
 
	gcv
::
På
;

670 
usög
 
	gcv
::
Re˘
;

671 
usög
 
	gcv
::
Size
;

678 
CV_EXPORTS
 
	gFótuª


680 
	gx
;

681 
	gy
;

682 
	gœbñ
;

684 
Fótuª
(Ë: 
x
(0), 
y
(0), 
œbñ
(0) {}

685 
Fótuª
(
x
, 
y
, 
œbñ
);

687 
ªad
(c⁄° 
FûeNode
& 
‚
);

688 
wrôe
(
FûeSt‹age
& 
fs
) const;

691 
ölöe
 
	gFótuª
::
Fótuª
(
_x
, 
_y
, 
_œbñ
Ë: 
x
(_x), 
y
(_y), 
œbñ
(_label) {}

693 
CV_EXPORTS
 
	gTem∂©e


695 
	gwidth
;

696 
	gheight
;

697 
	gpyømid_Àvñ
;

698 
	g°d
::
ve˘‹
<
Fótuª
> 
„©uªs
;

700 
ªad
(c⁄° 
FûeNode
& 
‚
);

701 
wrôe
(
FûeSt‹age
& 
fs
) const;

707 ˛as†
	cQu™tizedPyømid


709 
	gpublic
:

711 
vútuÆ
 ~
Qu™tizedPyømid
() {}

719 
vútuÆ
 
qu™tize
(
M©
& 
d°
) const =0;

726 
vútuÆ
 
boﬁ
 
exåa˘Tem∂©e
(
Tem∂©e
& 
ãm∂
) const =0;

733 
vútuÆ
 
pyrDown
() =0;

735 
	g¥Ÿe˘ed
:

737 
	sC™did©e


739 
C™did©e
(
x
, 
y
, 
œbñ
, 
sc‹e
);

742 
boﬁ
 
	g›î©‹
<(c⁄° 
	gC™did©e
& 
	grhs
) const

744  
	gsc‹e
 > 
	grhs
.score;

747 
Fótuª
 
	gf
;

748 
	gsc‹e
;

759 
£À˘SˇâîedFótuªs
(c⁄° 
°d
::
ve˘‹
<
C™did©e
>& 
ˇndid©es
,

760 
°d
::
ve˘‹
<
Fótuª
>& 
„©uªs
,

761 
size_t
 
num_„©uªs
, 
di°™˚
);

764 
ölöe
 
	gQu™tizedPyømid
::
C™did©e
::C™did©e(
x
, 
y
, 
œbñ
, 
_sc‹e
Ë: 
f
(x, y,Üabñ), 
sc‹e
(_score) {}

771 ˛as†
	cCV_EXPORTS
 
	gModÆôy


773 
	gpublic
:

775 
vútuÆ
 ~
ModÆôy
() {}

784 
På
<
Qu™tizedPyømid
> 
¥o˚ss
(c⁄° 
M©
& 
§c
,

785 c⁄° 
M©
& 
mask
 = Mat()) const

787  
¥o˚ssIm∂
(
§c
, 
mask
);

790 
vútuÆ
 
	g°d
::
°rög
 
«me
() const =0;

792 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
) =0;

793 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
) const =0;

802 
	gPå
<
	gModÆôy
> 
¸óã
(c⁄° 
°d
::
°rög
& 
modÆôy_ty≥
);

807 
	gPå
<
	gModÆôy
> 
¸óã
(c⁄° 
FûeNode
& 
‚
);

809 
	g¥Ÿe˘ed
:

811 
vútuÆ
 
På
<
Qu™tizedPyømid
> 
¥o˚ssIm∂
(c⁄° 
M©
& 
§c
,

812 c⁄° 
M©
& 
mask
) const =0;

818 ˛as†
	cCV_EXPORTS
 
	gCﬁ‹Gødõ¡
 : 
public
 
ModÆôy


820 
public
:

824 
Cﬁ‹Gødõ¡
();

834 
Cﬁ‹Gødõ¡
(
wók_thªshﬁd
, 
size_t
 
num_„©uªs
, 
°r⁄g_thªshﬁd
);

836 
vútuÆ
 
	g°d
::
°rög
 
«me
() const;

838 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
);

839 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
) const;

841 
	gwók_thªshﬁd
;

842 
size_t
 
	gnum_„©uªs
;

843 
	g°r⁄g_thªshﬁd
;

845 
	g¥Ÿe˘ed
:

846 
vútuÆ
 
På
<
Qu™tizedPyømid
> 
¥o˚ssIm∂
(c⁄° 
M©
& 
§c
,

847 c⁄° 
M©
& 
mask
) const;

853 ˛as†
	cCV_EXPORTS
 
	gDïthN‹mÆ
 : 
public
 
ModÆôy


855 
public
:

859 
DïthN‹mÆ
();

871 
DïthN‹mÆ
(
di°™˚_thªshﬁd
, 
dif„ªn˚_thªshﬁd
, 
size_t
 
num_„©uªs
,

872 
exåa˘_thªshﬁd
);

874 
vútuÆ
 
	g°d
::
°rög
 
«me
() const;

876 
vútuÆ
 
ªad
(c⁄° 
FûeNode
& 
‚
);

877 
vútuÆ
 
wrôe
(
FûeSt‹age
& 
fs
) const;

879 
	gdi°™˚_thªshﬁd
;

880 
	gdif„ªn˚_thªshﬁd
;

881 
size_t
 
	gnum_„©uªs
;

882 
	gexåa˘_thªshﬁd
;

884 
	g¥Ÿe˘ed
:

885 
vútuÆ
 
På
<
Qu™tizedPyømid
> 
¥o˚ssIm∂
(c⁄° 
M©
& 
§c
,

886 c⁄° 
M©
& 
mask
) const;

892 
cﬁ‹m≠
(c⁄° 
M©
& 
qu™tized
, M©& 
d°
);

897 
CV_EXPORTS
 
	gM©ch


899 
M©ch
()

903 
M©ch
(
x
, 
y
, 
simû¨ôy
, c⁄° 
°d
::
°rög
& 
˛ass_id
, 
ãm∂©e_id
);

906 
boﬁ
 
	g›î©‹
<(c⁄° 
	gM©ch
& 
	grhs
) const

909 i‡(
	gsimû¨ôy
 !
rhs
.
simû¨ôy
)

910  
simû¨ôy
 > 
rhs
.similarity;

912  
	gãm∂©e_id
 < 
	grhs
.template_id;

915 
boﬁ
 
	g›î©‹
==(c⁄° 
M©ch
& 
rhs
) const

917  
x
 =
rhs
.x && 
y
 =rhs.y && 
simû¨ôy
 =rhs.simû¨ôy && 
˛ass_id
 ==Ñhs.class_id;

920 
	gx
;

921 
	gy
;

922 
	gsimû¨ôy
;

923 
	g°d
::
°rög
 
˛ass_id
;

924 
	gãm∂©e_id
;

927 
ölöe
 
	gM©ch
::
M©ch
(
_x
, 
_y
, 
_simû¨ôy
, c⁄° 
°d
::
°rög
& 
_˛ass_id
, 
_ãm∂©e_id
)

928 : 
x
(
_x
), 
y
(
_y
), 
simû¨ôy
(
_simû¨ôy
), 
˛ass_id
(
_˛ass_id
), 
ãm∂©e_id
(
_ãm∂©e_id
)

936 ˛as†
	cCV_EXPORTS
 
	gDëe˘‹


938 
	gpublic
:

942 
Dëe˘‹
();

951 
Dëe˘‹
(c⁄° 
°d
::
ve˘‹
< 
På
<
ModÆôy
> >& 
modÆôõs
, c⁄° std::ve˘‹<>& 
T_pyømid
);

968 
m©ch
(c⁄° 
°d
::
ve˘‹
<
M©
>& 
sour˚s
, 
thªshﬁd
, std::ve˘‹<
M©ch
>& 
m©ches
,

969 c⁄° 
°d
::
ve˘‹
<°d::
°rög
>& 
˛ass_ids
 = std::vector<std::string>(),

970 
OuçutAºayOfAºays
 
qu™tized_images
 = 
noAºay
(),

971 c⁄° 
°d
::
ve˘‹
<
M©
>& 
masks
 = std::vector<Mat>()) const;

983 
addTem∂©e
(c⁄° 
°d
::
ve˘‹
<
M©
>& 
sour˚s
, c⁄° std::
°rög
& 
˛ass_id
,

984 c⁄° 
M©
& 
obje˘_mask
, 
Re˘
* 
boundög_box
 = 
NULL
);

989 
addSy¡hëicTem∂©e
(c⁄° 
°d
::
ve˘‹
<
Tem∂©e
>& 
ãm∂©es
, c⁄° std::
°rög
& 
˛ass_id
);

997 c⁄° 
	g°d
::
ve˘‹
< 
På
<
ModÆôy
> >& 
gëModÆôõs
(Ëc⁄° {  
modÆôõs
; }

1002 
gëT
(
pyømid_Àvñ
Ëc⁄° {  
	gT_©_Àvñ
[pyramid_level]; }

1007 
pyømidLevñs
(Ëc⁄° {  
	gpyømid_Àvñs
; }

1015 c⁄° 
	g°d
::
ve˘‹
<
Tem∂©e
>& 
gëTem∂©es
(c⁄° 
°d
::
°rög
& 
˛ass_id
, 
ãm∂©e_id
) const;

1017 
numTem∂©es
() const;

1018 
numTem∂©es
(c⁄° 
°d
::
°rög
& 
˛ass_id
) const;

1019 
numCœs£s
(Ëc⁄° {  
	g°©ic_ˇ°
<>(
	g˛ass_ãm∂©es
.
size
()); }

1021 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
˛assIds
() const;

1023 
ªad
(c⁄° 
FûeNode
& 
‚
);

1024 
wrôe
(
FûeSt‹age
& 
fs
) const;

1026 
	g°d
::
°rög
 
ªadCœss
(c⁄° 
FûeNode
& 
‚
, c⁄° 
°d
::°rög &
˛ass_id_ovîride
 = "");

1027 
wrôeCœss
(c⁄° 
°d
::
°rög
& 
˛ass_id
, 
FûeSt‹age
& 
fs
) const;

1029 
ªadCœs£s
(c⁄° 
°d
::
ve˘‹
<°d::
°rög
>& 
˛ass_ids
,

1030 c⁄° 
°d
::
°rög
& 
f‹m©
 = "templates_%s.yml.gz");

1031 
wrôeCœs£s
(c⁄° 
°d
::
°rög
& 
f‹m©
 = "templates_%s.yml.gz") const;

1033 
	g¥Ÿe˘ed
:

1034 
°d
::
ve˘‹
< 
På
<
ModÆôy
> > 
modÆôõs
;

1035 
	gpyømid_Àvñs
;

1036 
	g°d
::
ve˘‹
<> 
T_©_Àvñ
;

1038 
	g°d
::
	tve˘‹
<
	tTem∂©e
> 
	tTem∂©ePyømid
;

1039 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::
	tve˘‹
<
	tTem∂©ePyømid
> > 
	tTem∂©esM≠
;

1040 
Tem∂©esM≠
 
	g˛ass_ãm∂©es
;

1042 
	g°d
::
	tve˘‹
<
	tM©
> 
	tLöórMem‹õs
;

1044 
	g°d
::
	tve˘‹
< 
	t°d
::ve˘‹<
	tLöórMem‹õs
> > 
	tLöórMem‹yPyømid
;

1046 
m©chCœss
(c⁄° 
LöórMem‹yPyømid
& 
lm_pyømid
,

1047 c⁄° 
°d
::
ve˘‹
<
Size
>& 
sizes
,

1048 
thªshﬁd
, 
°d
::
ve˘‹
<
M©ch
>& 
m©ches
,

1049 c⁄° 
°d
::
°rög
& 
˛ass_id
,

1050 c⁄° 
°d
::
ve˘‹
<
Tem∂©ePyømid
>& 
ãm∂©e_pyømids
) const;

1058 
CV_EXPORTS
 
	gPå
<
	gDëe˘‹
> 
gëDeÁu…LINE
();

1066 
CV_EXPORTS
 
	gPå
<
	gDëe˘‹
> 
gëDeÁu…LINEMOD
();

	@/usr/include/opencv2/photo/photo.hpp

43 #i‚de‡
__OPENCV_PHOTO_HPP__


44 
	#__OPENCV_PHOTO_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~"›ícv2/img¥oc/img¥oc.hµ
"

49 
	~"›ícv2/phŸo/phŸo_c.h
"

51 #ifde‡
__˝lu•lus


56 
«me•a˚
 
	gcv


62 
	gINPAINT_NS
=
CV_INPAINT_NS
,

63 
	gINPAINT_TELEA
=
CV_INPAINT_TELEA


67 
CV_EXPORTS_W
 
ö∑öt
–
I≈utAºay
 
§c
, I≈utAºay 
ö∑ötMask
,

68 
OuçutAºay
 
d°
, 
ö∑ötRadius
, 
Êags
 );

71 
CV_EXPORTS_W
 
Á°NlMónsDíoisög
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
, 
h
 = 3,

72 
ãm∂©eWödowSize
 = 7, 
£¨chWödowSize
 = 21);

74 
CV_EXPORTS_W
 
Á°NlMónsDíoisögCﬁ‹ed
–
I≈utAºay
 
§c
, 
OuçutAºay
 
d°
,

75 
h
 = 3, 
hCﬁ‹
 = 3,

76 
ãm∂©eWödowSize
 = 7, 
£¨chWödowSize
 = 21);

78 
CV_EXPORTS_W
 
Á°NlMónsDíoisögMu…i
–
I≈utAºayOfAºays
 
§cImgs
, 
OuçutAºay
 
d°
,

79 
imgToDíoi£Index
, 
ãmp‹ÆWödowSize
,

80 
h
 = 3, 
ãm∂©eWödowSize
 = 7, 
£¨chWödowSize
 = 21);

82 
CV_EXPORTS_W
 
Á°NlMónsDíoisögCﬁ‹edMu…i
–
I≈utAºayOfAºays
 
§cImgs
, 
OuçutAºay
 
d°
,

83 
imgToDíoi£Index
, 
ãmp‹ÆWödowSize
,

84 
h
 = 3, 
hCﬁ‹
 = 3,

85 
ãm∂©eWödowSize
 = 7, 
£¨chWödowSize
 = 21);

	@/usr/include/opencv2/video/video.hpp

43 #i‚de‡
__OPENCV_VIDEO_HPP__


44 
	#__OPENCV_VIDEO_HPP__


	)

46 
	~"›ícv2/video/åackög.hµ
"

47 
	~"›ícv2/video/background_£gm.hµ
"

49 #ifde‡
__˝lu•lus


50 
«me•a˚
 
	gcv


53 
CV_EXPORTS
 
boﬁ
 
öôModuÀ_video
();

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


81 
	#NL_NMAX
 
INT_MAX


	)

85 
	#NL_SETMAX
 
INT_MAX


	)

88 
	#NL_TEXTMAX
 
INT_MAX


	)

91 
	#NZERO
 20

	)

95 #ifde‡
INT_MAX


96 #i‡
INT_MAX
 == 32767

97 
	#WORD_BIT
 16

	)

99 #i‡
INT_MAX
 == 2147483647

100 
	#WORD_BIT
 32

	)

103 
	#WORD_BIT
 64

	)

106 #ñi‡
deföed
 
__INT_MAX__


107 #i‡
__INT_MAX__
 == 32767

108 
	#WORD_BIT
 16

	)

110 #i‡
__INT_MAX__
 == 2147483647

111 
	#WORD_BIT
 32

	)

114 
	#WORD_BIT
 64

	)

118 
	#WORD_BIT
 32

	)

122 #ifde‡
LONG_MAX


123 #i‡
LONG_MAX
 == 2147483647

124 
	#LONG_BIT
 32

	)

127 
	#LONG_BIT
 64

	)

129 #ñi‡
deföed
 
__LONG_MAX__


130 #i‡
__LONG_MAX__
 == 2147483647

131 
	#LONG_BIT
 32

	)

134 
	#LONG_BIT
 64

	)

137 
	~<bôs/w‹dsize.h
>

138 #i‡
__WORDSIZE
 == 64

139 
	#LONG_BIT
 64

	)

141 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 \

228 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

229 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

230 
	#_POSIX_SOURCE
 1

	)

231 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

232 
	#_POSIX_C_SOURCE
 2

	)

233 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

234 
	#_POSIX_C_SOURCE
 199506L

	)

235 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

236 
	#_POSIX_C_SOURCE
 200112L

	)

238 
	#_POSIX_C_SOURCE
 200809L

	)

240 
	#__USE_POSIX_IMPLICITLY
 1

	)

243 #i‡(
deföed
 
_POSIX_SOURCE
 \

244 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

245 || 
deföed
 
_XOPEN_SOURCE
)

246 
	#__USE_POSIX
 1

	)

249 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


250 
	#__USE_POSIX2
 1

	)

253 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

254 
	#__USE_POSIX199309
 1

	)

257 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

258 
	#__USE_POSIX199506
 1

	)

261 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

262 
	#__USE_XOPEN2K
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

270 
	#__USE_XOPEN2K8
 1

	)

271 #unde‡
_ATFILE_SOURCE


272 
	#_ATFILE_SOURCE
 1

	)

275 #ifdef 
_XOPEN_SOURCE


276 
	#__USE_XOPEN
 1

	)

277 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

278 
	#__USE_XOPEN_EXTENDED
 1

	)

279 
	#__USE_UNIX98
 1

	)

280 #unde‡
_LARGEFILE_SOURCE


281 
	#_LARGEFILE_SOURCE
 1

	)

282 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

283 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

284 
	#__USE_XOPEN2K8
 1

	)

285 
	#__USE_XOPEN2K8XSI
 1

	)

287 
	#__USE_XOPEN2K
 1

	)

288 
	#__USE_XOPEN2KXSI
 1

	)

289 #unde‡
__USE_ISOC95


290 
	#__USE_ISOC95
 1

	)

291 #unde‡
__USE_ISOC99


292 
	#__USE_ISOC99
 1

	)

295 #ifde‡
_XOPEN_SOURCE_EXTENDED


296 
	#__USE_XOPEN_EXTENDED
 1

	)

301 #ifde‡
_LARGEFILE_SOURCE


302 
	#__USE_LARGEFILE
 1

	)

305 #ifde‡
_LARGEFILE64_SOURCE


306 
	#__USE_LARGEFILE64
 1

	)

309 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

310 
	#__USE_FILE_OFFSET64
 1

	)

313 #i‡
deföed
 
_DEFAULT_SOURCE


314 
	#__USE_MISC
 1

	)

317 #ifdef 
_ATFILE_SOURCE


318 
	#__USE_ATFILE
 1

	)

321 #ifdef 
_GNU_SOURCE


322 
	#__USE_GNU
 1

	)

325 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


326 
	#__USE_REENTRANT
 1

	)

329 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

330 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

331 #i‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 
	#__USE_FORTIFY_LEVEL
 0

	)

342 
	~<°dc-¥edef.h
>

350 #unde‡
__GNU_LIBRARY__


351 
	#__GNU_LIBRARY__
 6

	)

355 
	#__GLIBC__
 2

	)

356 
	#__GLIBC_MINOR__
 24

	)

358 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

359 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

362 #i‚de‡
__ASSEMBLER__


363 #i‚de‡
_SYS_CDEFS_H


364 
	~<sys/cdefs.h
>

369 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


370 
	#__USE_LARGEFILE
 1

	)

371 
	#__USE_LARGEFILE64
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/opencv2/contrib/openfabmap.hpp

52 #i‚de‡
__OPENCV_OPENFABMAP_H_


53 
	#__OPENCV_OPENFABMAP_H_


	)

55 
	~"›ícv2/c‹e/c‹e.hµ
"

56 
	~"›ícv2/„©uªs2d/„©uªs2d.hµ
"

58 
	~<ve˘‹
>

59 
	~<li°
>

60 
	~<m≠
>

61 
	~<£t
>

62 
	~<vÆ¨øy
>

64 
«me•a˚
 
	gcv
 {

66 
«me•a˚
 
	gof2
 {

68 
usög
 
	g°d
::
li°
;

69 
usög
 
	g°d
::
m≠
;

70 
usög
 
	g°d
::
mu…i£t
;

75 
CV_EXPORTS
 
	gIM©ch
 {

77 
IM©ch
() :

78 
quîyIdx
(-1), 
imgIdx
(-1), 
likñihood
(-
DBL_MAX
), 
m©ch
(-DBL_MAX) {

80 
IM©ch
(
_quîyIdx
, 
_imgIdx
, 
_likñihood
, 
_m©ch
) :

81 
quîyIdx
(
_quîyIdx
), 
imgIdx
(
_imgIdx
), 
likñihood
(
_likñihood
), 
m©ch
(

82 
_m©ch
) {

85 
	gquîyIdx
;

86 
	gimgIdx
;

88 
	glikñihood
;

89 
	gm©ch
;

91 
boﬁ
 
	g›î©‹
<(c⁄° 
	gIM©ch
& 
	gm
) const {

92  
	gm©ch
 < 
	gm
.match;

100 ˛as†
	cCV_EXPORTS
 
	gFabM≠
 {

101 
	gpublic
:

105 
MEAN_FIELD
 = 1,

106 
	gSAMPLED
 = 2,

107 
	gNAIVE_BAYES
 = 4,

108 
	gCHOW_LIU
 = 8,

109 
	gMOTION_MODEL
 = 16

112 
FabM≠
(c⁄° 
M©
& 
˛Tªe
, 
PzGe
, 
PzGNe
, 
Êags
,

113 
numSam∂es
 = 0);

114 
	gvútuÆ
 ~
FabM≠
();

117 
vútuÆ
 
addTøöög
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
);

118 
vútuÆ
 
addTøöög
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
);

121 
vútuÆ
 
add
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
);

122 
vútuÆ
 
add
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
);

125 c⁄° 
	gve˘‹
<
	gM©
>& 
gëTøöögImgDes¸ùt‹s
() const;

126 c⁄° 
	gve˘‹
<
	gM©
>& 
gëTe°ImgDes¸ùt‹s
() const;

129 
com∑ª
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

130 
ve˘‹
<
IM©ch
>& 
m©ches
, 
boﬁ
 
addQuîy
 = 
Ál£
,

131 c⁄° 
M©
& 
mask
 = Mat());

132 
com∑ª
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

133 c⁄° 
M©
& 
ã°ImgDes¸ùt‹s
, 
ve˘‹
<
IM©ch
>& 
m©ches
,

134 c⁄° 
M©
& 
mask
 = Mat());

135 
com∑ª
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

136 c⁄° 
ve˘‹
<
M©
>& 
ã°ImgDes¸ùt‹s
,

137 
ve˘‹
<
IM©ch
>& 
m©ches
, c⁄° 
M©
& 
mask
 = Mat());

138 
com∑ª
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
, vector<

139 
IM©ch
>& 
m©ches
, 
boﬁ
 
addQuîy
 = 
Ál£
, c⁄° 
M©
& 
mask
 =

140 
M©
());

141 
com∑ª
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
,

142 c⁄° 
ve˘‹
<
M©
>& 
ã°ImgDes¸ùt‹s
,

143 
ve˘‹
<
IM©ch
>& 
m©ches
, c⁄° 
M©
& 
mask
 = Mat());

145 
	g¥Ÿe˘ed
:

147 
com∑ªImgDes¸ùt‹
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

148 
quîyIndex
, c⁄° 
ve˘‹
<
M©
>& 
ã°ImgDes¸ùt‹s
,

149 
ve˘‹
<
IM©ch
>& 
m©ches
);

151 
addImgDes¸ùt‹
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
);

155 
vútuÆ
 
gëLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

156 c⁄° 
ve˘‹
<
M©
>& 
ã°ImgDes¸ùt‹s
,

157 
ve˘‹
<
IM©ch
>& 
m©ches
);

158 
vútuÆ
 
gëNewPœ˚Likñihood
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
);

161 
n‹mÆi£Di°ributi⁄
(
ve˘‹
<
IM©ch
>& 
m©ches
);

164 
pq
(
q
);

165 
Pzq
(
q
, 
boﬁ
 
zq
);

166 
PzqGzpq
(
q
, 
boﬁ
 
zq
, boﬁ 
zpq
);

169 
PzqGeq
(
boﬁ
 
zq
, boﬁ 
eq
);

170 
PeqGL
(
q
, 
boﬁ
 
Lzq
, boﬁ 
eq
);

171 
PzqGL
(
q
, 
boﬁ
 
zq
, boﬁ 
zpq
, boﬁ 
Lzq
);

172 
PzqGzpqL
(
q
, 
boﬁ
 
zq
, boﬁ 
zpq
, boﬁ 
Lzq
);

173 (
	gFabM≠
::*
PzGL
)(
q
, 
boﬁ
 
	gzq
, boﬁ 
	gzpq
, boﬁ 
	gLzq
);

176 
M©
 
	g˛Tªe
;

177 
	gve˘‹
<
	gM©
> 
	gåaöögImgDes¸ùt‹s
;

178 
	gve˘‹
<
	gM©
> 
	gã°ImgDes¸ùt‹s
;

179 
	gve˘‹
<
	gIM©ch
> 
	g¥i‹M©ches
;

182 
	gPzGe
;

183 
	gPzGNe
;

184 
	gP√w
;

186 
	gmBüs
;

187 
	gsFa˘‹
;

189 
	gÊags
;

190 
	gnumSam∂es
;

198 ˛as†
	cCV_EXPORTS
 
	gFabM≠1
: 
public
 
FabM≠
 {

199 
public
:

200 
FabM≠1
(c⁄° 
M©
& 
˛Tªe
, 
PzGe
, 
PzGNe
, 
Êags
,

201 
numSam∂es
 = 0);

202 
	gvútuÆ
 ~
FabM≠1
();

203 
	g¥Ÿe˘ed
:

206 
gëLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, c⁄° 
ve˘‹
<

207 
M©
>& 
ã°ImgDes¸ùt‹s
, 
ve˘‹
<
IM©ch
>& 
m©ches
);

214 ˛as†
	cCV_EXPORTS
 
	gFabM≠LUT
: 
public
 
FabM≠
 {

215 
public
:

216 
FabM≠LUT
(c⁄° 
M©
& 
˛Tªe
, 
PzGe
, 
PzGNe
,

217 
Êags
, 
numSam∂es
 = 0, 
¥ecisi⁄
 = 6);

218 
	gvútuÆ
 ~
FabM≠LUT
();

219 
	g¥Ÿe˘ed
:

222 
gëLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, c⁄° 
ve˘‹
<

223 
M©
>& 
ã°ImgDes¸ùt‹s
, 
ve˘‹
<
IM©ch
>& 
m©ches
);

226 (*
	gèbÀ
)[8];

229 
	g¥ecisi⁄
;

236 ˛as†
	cCV_EXPORTS
 
	gFabM≠FBO
: 
public
 
FabM≠
 {

237 
public
:

238 
FabM≠FBO
(c⁄° 
M©
& 
˛Tªe
, 
PzGe
, 
PzGNe
, 
Êags
,

239 
numSam∂es
 = 0, 
ªje˘i⁄Thªshﬁd
 = 1e-8, 
PsGd
 =

240 1e-8, 
bi£˘i⁄Sèπ
 = 512, 
bi£˘i⁄Its
 = 9);

241 
	gvútuÆ
 ~
FabM≠FBO
();

243 
	g¥Ÿe˘ed
:

246 
gëLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, c⁄° 
ve˘‹
<

247 
M©
>& 
ã°ImgDes¸ùt‹s
, 
ve˘‹
<
IM©ch
>& 
m©ches
);

250 
	sW‹dSèts
 {

251 
W‹dSèts
() :

252 
q
(0), 
öfo
(0), 
V
(0), 
M
(0) {

255 
W‹dSèts
(
_q
, 
_öfo
) :

256 
q
(
_q
), 
öfo
(
_öfo
), 
V
(0), 
M
(0) {

259 
	gq
;

260 
	göfo
;

261 
muèbÀ
 
	gV
;

262 
muèbÀ
 
	gM
;

264 
boﬁ
 
	g›î©‹
<(c⁄° 
	gW‹dSèts
& 
	gw
) const {

265  
	göfo
 < 
	gw
.info;

271 
£tW‹dSèti°ics
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, 
mu…i£t
<
W‹dSèts
>& 
w‹dD©a
);

272 
limôbi£˘i⁄
(
v
, 
m
);

273 
bí√âI√quÆôy
(
v
, 
m
, 
dñè
);

274 
boﬁ
 
compInfo
(c⁄° 
W‹dSèts
& 
fú°
, c⁄° W‹dSèts& 
£c⁄d
);

277 
	gPsGd
;

278 
	gªje˘i⁄Thªshﬁd
;

279 
	gbi£˘i⁄Sèπ
;

280 
	gbi£˘i⁄Its
;

287 ˛as†
	cCV_EXPORTS
 
	gFabM≠2
: 
public
 
FabM≠
 {

288 
public
:

290 
FabM≠2
(c⁄° 
M©
& 
˛Tªe
, 
PzGe
, 
PzGNe
, 
Êags
);

291 
	gvútuÆ
 ~
FabM≠2
();

295 
addTøöög
(c⁄° 
M©
& 
quîyImgDes¸ùt‹s
) {

296 
	gFabM≠
::
addTøöög
(
quîyImgDes¸ùt‹s
);

298 
addTøöög
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
);

300 
add
(c⁄° 
M©
& 
quîyImgDes¸ùt‹s
) {

301 
	gFabM≠
::
add
(
quîyImgDes¸ùt‹s
);

303 
add
(c⁄° 
ve˘‹
<
M©
>& 
quîyImgDes¸ùt‹s
);

305 
	g¥Ÿe˘ed
:

308 
gëLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, c⁄° 
ve˘‹
<

309 
M©
>& 
ã°ImgDes¸ùt‹s
, 
ve˘‹
<
IM©ch
>& 
m©ches
);

310 
gëNewPœ˚Likñihood
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
);

313 
gëIndexLikñihoods
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
, 
ve˘‹
<

314 >& 
deÁu…s
, 
m≠
<, 
ve˘‹
<> >& 
övîãdM≠
,

315 
ve˘‹
<
IM©ch
>& 
m©ches
);

316 
addToIndex
(c⁄° 
M©
& 
quîyImgDes¸ùt‹
,

317 
ve˘‹
<>& 
deÁu…s
,

318 
m≠
<, 
ve˘‹
<> >& 
övîãdM≠
);

321 
	gve˘‹
<> 
	gd1
, 
	gd2
, 
	gd3
, 
	gd4
;

322 
	gve˘‹
<ve˘‹<> > 
	gchûdªn
;

326 
	gve˘‹
<> 
	gåaöögDeÁu…s
;

327 
	gm≠
<, 
	gve˘‹
<> > 
	gåaöögInvîãdM≠
;

329 
	gve˘‹
<> 
	gã°DeÁu…s
;

330 
	gm≠
<, 
	gve˘‹
<> > 
	gã°InvîãdM≠
;

338 ˛as†
	cCV_EXPORTS
 
	gChowLiuTªe
 {

339 
	gpublic
:

340 
ChowLiuTªe
();

341 
	gvútuÆ
 ~
ChowLiuTªe
();

344 
add
(c⁄° 
M©
& 
imgDes¸ùt‹
);

345 
add
(c⁄° 
ve˘‹
<
M©
>& 
imgDes¸ùt‹s
);

347 c⁄° 
	gve˘‹
<
	gM©
>& 
gëImgDes¸ùt‹s
() const;

349 
M©
 
make
(
öfoThªshﬁd
 = 0.0);

351 
	g¥iv©e
:

352 
ve˘‹
<
M©
> 
imgDes¸ùt‹s
;

353 
M©
 
	gmîgedImgDes¸ùt‹s
;

355 
	söfo
 {

356 
	gsc‹e
;

357 
	gw‹d1
;

358 
	gw‹d2
;

359 } 
	töfo
;

362 
P
(
a
, 
boﬁ
 
za
);

363 
JP
(
a
, 
boﬁ
 
za
, 
b
, boﬁ 
zb
);

364 
CP
(
a
, 
boﬁ
 
za
, 
b
, boﬁ 
zb
);

367 
¸óãBa£Edges
(
li°
<
öfo
>& 
edges
, 
öfoThªshﬁd
);

368 
ˇlcMutInfo
(
w‹d1
, 
w‹d2
);

369 
boﬁ
 
s‹tInfoSc‹es
(c⁄° 
öfo
& 
fú°
, c⁄° info& 
£c⁄d
);

372 
boﬁ
 
ªdu˚EdgesToMöS∑n
(
li°
<
öfo
>& 
edges
);

375 
M©
 
buûdTªe
(
roŸ_w‹d
, 
li°
<
öfo
> &
edges
);

376 
ªcAddToTªe
(
M©
 &
˛åì
, 
q
, 
pq
,

377 
li°
<
öfo
> &
ªmaöög_edges
);

378 
	gve˘‹
<> 
exåa˘Chûdªn
(
li°
<
öfo
> &
ªmaöög_edges
, 
q
);

386 ˛as†
	cCV_EXPORTS
 
	gBOWMSCTøöî
: 
public
 
BOWTøöî
 {

387 
public
:

388 
BOWMSCTøöî
(
˛u°îSize
 = 0.4);

389 
	gvútuÆ
 ~
BOWMSCTøöî
();

392 
vútuÆ
 
M©
 
˛u°î
() const;

393 
vútuÆ
 
M©
 
˛u°î
(c⁄° M©& 
des¸ùt‹s
) const;

395 
	g¥Ÿe˘ed
:

397 
˛u°îSize
;

	@/usr/include/opencv2/contrib/retina.hpp

65 #i‚de‡
__OPENCV_CONTRIB_RETINA_HPP__


66 
	#__OPENCV_CONTRIB_RETINA_HPP__


	)

75 
	~"›ícv2/c‹e/c‹e.hµ
"

76 
	~<vÆ¨øy
>

78 
«me•a˚
 
	gcv


81 
	eRETINA_COLORSAMPLINGMETHOD


83 
	gRETINA_COLOR_RANDOM
,

84 
	gRETINA_COLOR_DIAGONAL
,

85 
	gRETINA_COLOR_BAYER


88 
˛ass
 
	gRëöaFûãr
;

113 ˛as†
	cCV_EXPORTS
 
	gRëöa
 {

115 
	gpublic
:

118 
	sRëöaP¨amëîs
{

119 
	sOPL™dI∂P¨voP¨amëîs
{

120 
OPL™dI∂P¨voP¨amëîs
():
cﬁ‹Mode
(
åue
),

121 
n‹mÆi£Ouçut
(
åue
),

122 
phŸ‹e˚±‹sLoˇlAd≠èti⁄Sísôivôy
(0.7f),

123 
phŸ‹e˚±‹sTemp‹ÆC⁄°™t
(0.5f),

124 
phŸ‹e˚±‹sS∑tülC⁄°™t
(0.53f),

125 
h‹iz⁄èlCñlsGaö
(0.0f),

126 
h˚ŒsTemp‹ÆC⁄°™t
(1.f),

127 
h˚ŒsS∑tülC⁄°™t
(7.f),

128 
g™gli⁄CñlsSísôivôy
(0.7f){};

129 
boﬁ
 
	gcﬁ‹Mode
, 
	gn‹mÆi£Ouçut
;

130 
	gphŸ‹e˚±‹sLoˇlAd≠èti⁄Sísôivôy
, 
	gphŸ‹e˚±‹sTemp‹ÆC⁄°™t
, 
	gphŸ‹e˚±‹sS∑tülC⁄°™t
, 
	gh‹iz⁄èlCñlsGaö
, 
	gh˚ŒsTemp‹ÆC⁄°™t
, 
	gh˚ŒsS∑tülC⁄°™t
, 
	gg™gli⁄CñlsSísôivôy
;

132 
	sI∂MagnoP¨amëîs
{

133 
I∂MagnoP¨amëîs
():

134 
n‹mÆi£Ouçut
(
åue
),

135 
∑øsﬁCñls_bëa
(0.f),

136 
∑øsﬁCñls_èu
(0.f),

137 
∑øsﬁCñls_k
(7.f),

138 
ama¸öCñlsTemp‹ÆCutFªquícy
(1.2f),

139 
V0Com¥essi⁄P¨amëî
(0.95f),

140 
loˇlAd≠töãgøti⁄_èu
(0.f),

141 
loˇlAd≠töãgøti⁄_k
(7.f){};

142 
boﬁ
 
	gn‹mÆi£Ouçut
;

143 
	g∑øsﬁCñls_bëa
, 
	g∑øsﬁCñls_èu
, 
	g∑øsﬁCñls_k
, 
	gama¸öCñlsTemp‹ÆCutFªquícy
, 
	gV0Com¥essi⁄P¨amëî
, 
	gloˇlAd≠töãgøti⁄_èu
, 
	gloˇlAd≠töãgøti⁄_k
;

145 
OPL™dI∂P¨voP¨amëîs
 
	gOPL™dI∂P¨vo
;

146 
I∂MagnoP¨amëîs
 
	gI∂Magno
;

153 
Rëöa
(
Size
 
öputSize
);

164 
Rëöa
(
Size
 
öputSize
, c⁄° 
boﬁ
 
cﬁ‹Mode
, 
RETINA_COLORSAMPLINGMETHOD
 
cﬁ‹Sam∂ögMëhod
=
RETINA_COLOR_BAYER
, c⁄° boﬁ 
u£RëöaLogSam∂ög
=
Ál£
, c⁄° 
ªdu˘i⁄Fa˘‹
=1.0, c⁄° 
ßm∂ögSåíght
=10.0);

166 
	gvútuÆ
 ~
Rëöa
();

171 
Size
 
öputSize
();

176 
Size
 
ouçutSize
();

185 
£tup
(
°d
::
°rög
 
ªtöaP¨amëîFûe
="", c⁄° 
boﬁ
 
≠∂yDeÁu…SëupOnFaûuª
=
åue
);

195 
£tup
(
cv
::
FûeSt‹age
 &
fs
, c⁄° 
boﬁ
 
≠∂yDeÁu…SëupOnFaûuª
=
åue
);

204 
£tup
(
RëöaP¨amëîs
 
√wP¨amëîs
);

209 
	gRëöa
::
RëöaP¨amëîs
 
gëP¨amëîs
();

215 c⁄° 
	g°d
::
°rög
 
¥ötSëup
();

221 
vútuÆ
 
wrôe
–
°d
::
°rög
 
fs
 ) const;

228 
vútuÆ
 
wrôe
–
FûeSt‹age
& 
fs
 ) const;

245 
£tupOPL™dIPLP¨voCh™√l
(c⁄° 
boﬁ
 
cﬁ‹Mode
=
åue
, c⁄° boﬁ 
n‹mÆi£Ouçut
 =Årue, c⁄° 
phŸ‹e˚±‹sLoˇlAd≠èti⁄Sísôivôy
=0.7, c⁄° 
phŸ‹e˚±‹sTemp‹ÆC⁄°™t
=0.5, c⁄° 
phŸ‹e˚±‹sS∑tülC⁄°™t
=0.53, c⁄° 
h‹iz⁄èlCñlsGaö
=0, c⁄° 
H˚ŒsTemp‹ÆC⁄°™t
=1, c⁄° 
H˚ŒsS∑tülC⁄°™t
=7, c⁄° 
g™gli⁄CñlsSísôivôy
=0.7);

259 
£tupIPLMagnoCh™√l
(c⁄° 
boﬁ
 
n‹mÆi£Ouçut
 = 
åue
, c⁄° 
∑øsﬁCñls_bëa
=0, c⁄° 
∑øsﬁCñls_èu
=0, c⁄° 
∑øsﬁCñls_k
=7, c⁄° 
ama¸öCñlsTemp‹ÆCutFªquícy
=1.2, c⁄° 
V0Com¥essi⁄P¨amëî
=0.95, c⁄° 
loˇlAd≠töãgøti⁄_èu
=0, c⁄° 
loˇlAd≠töãgøti⁄_k
=7);

265 
run
(c⁄° 
M©
 &
öputImage
);

271 
gëP¨vo
(
M©
 &
ªtöaOuçut_∑rvo
);

277 
gëP¨vo
(
°d
::
vÆ¨øy
<> &
ªtöaOuçut_∑rvo
);

283 
gëMagno
(
M©
 &
ªtöaOuçut_magno
);

289 
gëMagno
(
°d
::
vÆ¨øy
<> &
ªtöaOuçut_magno
);

292 c⁄° 
	g°d
::
vÆ¨øy
<> & 
gëMagno
() const;

293 c⁄° 
	g°d
::
vÆ¨øy
<> & 
gëP¨vo
() const;

301 
£tCﬁ‹S©uøti⁄
(c⁄° 
boﬁ
 
ßtuøãCﬁ‹s
=
åue
, c⁄° 
cﬁ‹S©uøti⁄VÆue
=4.0);

306 
˛órBuf„rs
();

312 
a˘iv©eMovögC⁄toursPro˚ssög
(c⁄° 
boﬁ
 
a˘iv©e
);

318 
a˘iv©eC⁄toursPro˚ssög
(c⁄° 
boﬁ
 
a˘iv©e
);

320 
	g¥Ÿe˘ed
:

322 
RëöaP¨amëîs
 
_ªtöaP¨amëîs
;

325 
	g°d
::
vÆ¨øy
<> 
_öputBuf„r
;

328 
RëöaFûãr
* 
	g_ªtöaFûãr
;

338 
_c⁄vîtVÆ¨øyBuf„r2cvM©
(c⁄° 
°d
::
vÆ¨øy
<> &
gøyM©rixToC⁄vît
, c⁄° 
nbRows
, c⁄° 
nbCﬁumns
, c⁄° 
boﬁ
 
cﬁ‹Mode
, 
M©
 &
outBuf„r
);

346 
boﬁ
 
_c⁄vîtCvM©2VÆ¨øyBuf„r
(c⁄° 
cv
::
M©
 
öputM©ToC⁄vît
, 
°d
::
vÆ¨øy
<> &
ouçutVÆ¨øyM©rix
);

349 
_öô
(c⁄° 
Size
 
öputSize
, c⁄° 
boﬁ
 
cﬁ‹Mode
, 
RETINA_COLORSAMPLINGMETHOD
 
cﬁ‹Sam∂ögMëhod
=
RETINA_COLOR_BAYER
, c⁄° boﬁ 
u£RëöaLogSam∂ög
=
Ál£
, c⁄° 
ªdu˘i⁄Fa˘‹
=1.0, c⁄° 
ßm∂ögSåíght
=10.0);

	@/usr/include/opencv2/flann/defines.h

30 #i‚de‡
OPENCV_FLANN_DEFINES_H_


31 
	#OPENCV_FLANN_DEFINES_H_


	)

33 
	~"c⁄fig.h
"

35 #ifde‡
FLANN_EXPORT


36 #unde‡
FLANN_EXPORT


38 #ifde‡
WIN32


40 #ifde‡
FLANN_EXPORTS


41 
	#FLANN_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

42 #ñi‡
deföed
(
FLANN_STATIC
)

43 
	#FLANN_EXPORT


	)

45 
	#FLANN_EXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

49 
	#FLANN_EXPORT


	)

53 #ifde‡
FLANN_DEPRECATED


54 #unde‡
FLANN_DEPRECATED


56 #ifde‡
__GNUC__


57 
	#FLANN_DEPRECATED
 
	`__©åibuã__
 ((
dïªˇãd
))

	)

58 #ñi‡
deföed
(
_MSC_VER
)

59 
	#FLANN_DEPRECATED
 
	`__de˛•ec
(
dïªˇãd
)

	)

61 #¥agm®
mesßge
("WARNING: YouÇeedÅo implement FLANN_DEPRECATED forÅhis compiler")

62 
	#FLANN_DEPRECATED


	)

66 #unde‡
FLANN_PLATFORM_32_BIT


67 #unde‡
FLANN_PLATFORM_64_BIT


68 #i‡
deföed
 
__amd64__
 || deföed 
__x86_64__
 || deföed 
_WIN64
 || deföed 
_M_X64


69 
	#FLANN_PLATFORM_64_BIT


	)

71 
	#FLANN_PLATFORM_32_BIT


	)

75 #unde‡
FLANN_ARRAY_LEN


76 
	#FLANN_ARRAY_LEN
(
a
Ë(◊)/◊[0]))

	)

78 
«me•a˚
 
	gcvÊ™n
 {

81 
	eÊ™n_Æg‹ôhm_t


83 
	gFLANN_INDEX_LINEAR
 = 0,

84 
	gFLANN_INDEX_KDTREE
 = 1,

85 
	gFLANN_INDEX_KMEANS
 = 2,

86 
	gFLANN_INDEX_COMPOSITE
 = 3,

87 
	gFLANN_INDEX_KDTREE_SINGLE
 = 4,

88 
	gFLANN_INDEX_HIERARCHICAL
 = 5,

89 
	gFLANN_INDEX_LSH
 = 6,

90 
	gFLANN_INDEX_SAVED
 = 254,

91 
	gFLANN_INDEX_AUTOTUNED
 = 255,

94 
	gLINEAR
 = 0,

95 
	gKDTREE
 = 1,

96 
	gKMEANS
 = 2,

97 
	gCOMPOSITE
 = 3,

98 
	gKDTREE_SINGLE
 = 4,

99 
	gSAVED
 = 254,

100 
	gAUTOTUNED
 = 255

105 
	eÊ™n_˚¡îs_öô_t


107 
	gFLANN_CENTERS_RANDOM
 = 0,

108 
	gFLANN_CENTERS_GONZALES
 = 1,

109 
	gFLANN_CENTERS_KMEANSPP
 = 2,

112 
	gCENTERS_RANDOM
 = 0,

113 
	gCENTERS_GONZALES
 = 1,

114 
	gCENTERS_KMEANSPP
 = 2

117 
	eÊ™n_log_Àvñ_t


119 
	gFLANN_LOG_NONE
 = 0,

120 
	gFLANN_LOG_FATAL
 = 1,

121 
	gFLANN_LOG_ERROR
 = 2,

122 
	gFLANN_LOG_WARN
 = 3,

123 
	gFLANN_LOG_INFO
 = 4

126 
	eÊ™n_di°™˚_t


128 
	gFLANN_DIST_EUCLIDEAN
 = 1,

129 
	gFLANN_DIST_L2
 = 1,

130 
	gFLANN_DIST_MANHATTAN
 = 2,

131 
	gFLANN_DIST_L1
 = 2,

132 
	gFLANN_DIST_MINKOWSKI
 = 3,

133 
	gFLANN_DIST_MAX
 = 4,

134 
	gFLANN_DIST_HIST_INTERSECT
 = 5,

135 
	gFLANN_DIST_HELLINGER
 = 6,

136 
	gFLANN_DIST_CHI_SQUARE
 = 7,

137 
	gFLANN_DIST_CS
 = 7,

138 
	gFLANN_DIST_KULLBACK_LEIBLER
 = 8,

139 
	gFLANN_DIST_KL
 = 8,

140 
	gFLANN_DIST_HAMMING
 = 9,

143 
	gEUCLIDEAN
 = 1,

144 
	gMANHATTAN
 = 2,

145 
	gMINKOWSKI
 = 3,

146 
	gMAX_DIST
 = 4,

147 
	gHIST_INTERSECT
 = 5,

148 
	gHELLINGER
 = 6,

149 
	gCS
 = 7,

150 
	gKL
 = 8,

151 
	gKULLBACK_LEIBLER
 = 8

154 
	eÊ™n_d©©y≥_t


156 
	gFLANN_INT8
 = 0,

157 
	gFLANN_INT16
 = 1,

158 
	gFLANN_INT32
 = 2,

159 
	gFLANN_INT64
 = 3,

160 
	gFLANN_UINT8
 = 4,

161 
	gFLANN_UINT16
 = 5,

162 
	gFLANN_UINT32
 = 6,

163 
	gFLANN_UINT64
 = 7,

164 
	gFLANN_FLOAT32
 = 8,

165 
	gFLANN_FLOAT64
 = 9

170 
	gFLANN_CHECKS_UNLIMITED
 = -1,

171 
	gFLANN_CHECKS_AUTOTUNED
 = -2

	@/usr/include/opencv2/imgproc/types_c.h

43 #i‚de‡
__OPENCV_IMGPROC_TYPES_C_H__


44 
	#__OPENCV_IMGPROC_TYPES_C_H__


	)

46 
	~"›ícv2/c‹e/c‹e_c.h
"

48 #ifde‡
__˝lu•lus


53 
	sCvC⁄√˘edComp


55 
¨ó
;

56 
CvSˇœr
 
vÆue
;

57 
CvRe˘
 
ª˘
;

58 
CvSeq
* 
c⁄tour
;

61 
	tCvC⁄√˘edComp
;

66 
CV_BLUR_NO_SCALE
 =0,

67 
CV_BLUR
 =1,

68 
CV_GAUSSIAN
 =2,

69 
CV_MEDIAN
 =3,

70 
CV_BILATERAL
 =4

76 
CV_GAUSSIAN_5x5
 = 7

82 
CV_SCHARR
 =-1,

83 
CV_MAX_SOBEL_KSIZE
 =7

89 
CV_BGR2BGRA
 =0,

90 
CV_RGB2RGBA
 =
CV_BGR2BGRA
,

92 
CV_BGRA2BGR
 =1,

93 
CV_RGBA2RGB
 =
CV_BGRA2BGR
,

95 
CV_BGR2RGBA
 =2,

96 
CV_RGB2BGRA
 =
CV_BGR2RGBA
,

98 
CV_RGBA2BGR
 =3,

99 
CV_BGRA2RGB
 =
CV_RGBA2BGR
,

101 
CV_BGR2RGB
 =4,

102 
CV_RGB2BGR
 =
CV_BGR2RGB
,

104 
CV_BGRA2RGBA
 =5,

105 
CV_RGBA2BGRA
 =
CV_BGRA2RGBA
,

107 
CV_BGR2GRAY
 =6,

108 
CV_RGB2GRAY
 =7,

109 
CV_GRAY2BGR
 =8,

110 
CV_GRAY2RGB
 =
CV_GRAY2BGR
,

111 
CV_GRAY2BGRA
 =9,

112 
CV_GRAY2RGBA
 =
CV_GRAY2BGRA
,

113 
CV_BGRA2GRAY
 =10,

114 
CV_RGBA2GRAY
 =11,

116 
CV_BGR2BGR565
 =12,

117 
CV_RGB2BGR565
 =13,

118 
CV_BGR5652BGR
 =14,

119 
CV_BGR5652RGB
 =15,

120 
CV_BGRA2BGR565
 =16,

121 
CV_RGBA2BGR565
 =17,

122 
CV_BGR5652BGRA
 =18,

123 
CV_BGR5652RGBA
 =19,

125 
CV_GRAY2BGR565
 =20,

126 
CV_BGR5652GRAY
 =21,

128 
CV_BGR2BGR555
 =22,

129 
CV_RGB2BGR555
 =23,

130 
CV_BGR5552BGR
 =24,

131 
CV_BGR5552RGB
 =25,

132 
CV_BGRA2BGR555
 =26,

133 
CV_RGBA2BGR555
 =27,

134 
CV_BGR5552BGRA
 =28,

135 
CV_BGR5552RGBA
 =29,

137 
CV_GRAY2BGR555
 =30,

138 
CV_BGR5552GRAY
 =31,

140 
CV_BGR2XYZ
 =32,

141 
CV_RGB2XYZ
 =33,

142 
CV_XYZ2BGR
 =34,

143 
CV_XYZ2RGB
 =35,

145 
CV_BGR2YCrCb
 =36,

146 
CV_RGB2YCrCb
 =37,

147 
CV_YCrCb2BGR
 =38,

148 
CV_YCrCb2RGB
 =39,

150 
CV_BGR2HSV
 =40,

151 
CV_RGB2HSV
 =41,

153 
CV_BGR2Lab
 =44,

154 
CV_RGB2Lab
 =45,

156 
CV_BayîBG2BGR
 =46,

157 
CV_BayîGB2BGR
 =47,

158 
CV_BayîRG2BGR
 =48,

159 
CV_BayîGR2BGR
 =49,

161 
CV_BayîBG2RGB
 =
CV_BayîRG2BGR
,

162 
CV_BayîGB2RGB
 =
CV_BayîGR2BGR
,

163 
CV_BayîRG2RGB
 =
CV_BayîBG2BGR
,

164 
CV_BayîGR2RGB
 =
CV_BayîGB2BGR
,

166 
CV_BGR2Luv
 =50,

167 
CV_RGB2Luv
 =51,

168 
CV_BGR2HLS
 =52,

169 
CV_RGB2HLS
 =53,

171 
CV_HSV2BGR
 =54,

172 
CV_HSV2RGB
 =55,

174 
CV_Lab2BGR
 =56,

175 
CV_Lab2RGB
 =57,

176 
CV_Luv2BGR
 =58,

177 
CV_Luv2RGB
 =59,

178 
CV_HLS2BGR
 =60,

179 
CV_HLS2RGB
 =61,

181 
CV_BayîBG2BGR_VNG
 =62,

182 
CV_BayîGB2BGR_VNG
 =63,

183 
CV_BayîRG2BGR_VNG
 =64,

184 
CV_BayîGR2BGR_VNG
 =65,

186 
CV_BayîBG2RGB_VNG
 =
CV_BayîRG2BGR_VNG
,

187 
CV_BayîGB2RGB_VNG
 =
CV_BayîGR2BGR_VNG
,

188 
CV_BayîRG2RGB_VNG
 =
CV_BayîBG2BGR_VNG
,

189 
CV_BayîGR2RGB_VNG
 =
CV_BayîGB2BGR_VNG
,

191 
CV_BGR2HSV_FULL
 = 66,

192 
CV_RGB2HSV_FULL
 = 67,

193 
CV_BGR2HLS_FULL
 = 68,

194 
CV_RGB2HLS_FULL
 = 69,

196 
CV_HSV2BGR_FULL
 = 70,

197 
CV_HSV2RGB_FULL
 = 71,

198 
CV_HLS2BGR_FULL
 = 72,

199 
CV_HLS2RGB_FULL
 = 73,

201 
CV_LBGR2Lab
 = 74,

202 
CV_LRGB2Lab
 = 75,

203 
CV_LBGR2Luv
 = 76,

204 
CV_LRGB2Luv
 = 77,

206 
CV_Lab2LBGR
 = 78,

207 
CV_Lab2LRGB
 = 79,

208 
CV_Luv2LBGR
 = 80,

209 
CV_Luv2LRGB
 = 81,

211 
CV_BGR2YUV
 = 82,

212 
CV_RGB2YUV
 = 83,

213 
CV_YUV2BGR
 = 84,

214 
CV_YUV2RGB
 = 85,

216 
CV_BayîBG2GRAY
 = 86,

217 
CV_BayîGB2GRAY
 = 87,

218 
CV_BayîRG2GRAY
 = 88,

219 
CV_BayîGR2GRAY
 = 89,

222 
CV_YUV2RGB_NV12
 = 90,

223 
CV_YUV2BGR_NV12
 = 91,

224 
CV_YUV2RGB_NV21
 = 92,

225 
CV_YUV2BGR_NV21
 = 93,

226 
CV_YUV420•2RGB
 = 
CV_YUV2RGB_NV21
,

227 
CV_YUV420•2BGR
 = 
CV_YUV2BGR_NV21
,

229 
CV_YUV2RGBA_NV12
 = 94,

230 
CV_YUV2BGRA_NV12
 = 95,

231 
CV_YUV2RGBA_NV21
 = 96,

232 
CV_YUV2BGRA_NV21
 = 97,

233 
CV_YUV420•2RGBA
 = 
CV_YUV2RGBA_NV21
,

234 
CV_YUV420•2BGRA
 = 
CV_YUV2BGRA_NV21
,

236 
CV_YUV2RGB_YV12
 = 98,

237 
CV_YUV2BGR_YV12
 = 99,

238 
CV_YUV2RGB_IYUV
 = 100,

239 
CV_YUV2BGR_IYUV
 = 101,

240 
CV_YUV2RGB_I420
 = 
CV_YUV2RGB_IYUV
,

241 
CV_YUV2BGR_I420
 = 
CV_YUV2BGR_IYUV
,

242 
CV_YUV420p2RGB
 = 
CV_YUV2RGB_YV12
,

243 
CV_YUV420p2BGR
 = 
CV_YUV2BGR_YV12
,

245 
CV_YUV2RGBA_YV12
 = 102,

246 
CV_YUV2BGRA_YV12
 = 103,

247 
CV_YUV2RGBA_IYUV
 = 104,

248 
CV_YUV2BGRA_IYUV
 = 105,

249 
CV_YUV2RGBA_I420
 = 
CV_YUV2RGBA_IYUV
,

250 
CV_YUV2BGRA_I420
 = 
CV_YUV2BGRA_IYUV
,

251 
CV_YUV420p2RGBA
 = 
CV_YUV2RGBA_YV12
,

252 
CV_YUV420p2BGRA
 = 
CV_YUV2BGRA_YV12
,

254 
CV_YUV2GRAY_420
 = 106,

255 
CV_YUV2GRAY_NV21
 = 
CV_YUV2GRAY_420
,

256 
CV_YUV2GRAY_NV12
 = 
CV_YUV2GRAY_420
,

257 
CV_YUV2GRAY_YV12
 = 
CV_YUV2GRAY_420
,

258 
CV_YUV2GRAY_IYUV
 = 
CV_YUV2GRAY_420
,

259 
CV_YUV2GRAY_I420
 = 
CV_YUV2GRAY_420
,

260 
CV_YUV420•2GRAY
 = 
CV_YUV2GRAY_420
,

261 
CV_YUV420p2GRAY
 = 
CV_YUV2GRAY_420
,

264 
CV_YUV2RGB_UYVY
 = 107,

265 
CV_YUV2BGR_UYVY
 = 108,

268 
CV_YUV2RGB_Y422
 = 
CV_YUV2RGB_UYVY
,

269 
CV_YUV2BGR_Y422
 = 
CV_YUV2BGR_UYVY
,

270 
CV_YUV2RGB_UYNV
 = 
CV_YUV2RGB_UYVY
,

271 
CV_YUV2BGR_UYNV
 = 
CV_YUV2BGR_UYVY
,

273 
CV_YUV2RGBA_UYVY
 = 111,

274 
CV_YUV2BGRA_UYVY
 = 112,

277 
CV_YUV2RGBA_Y422
 = 
CV_YUV2RGBA_UYVY
,

278 
CV_YUV2BGRA_Y422
 = 
CV_YUV2BGRA_UYVY
,

279 
CV_YUV2RGBA_UYNV
 = 
CV_YUV2RGBA_UYVY
,

280 
CV_YUV2BGRA_UYNV
 = 
CV_YUV2BGRA_UYVY
,

282 
CV_YUV2RGB_YUY2
 = 115,

283 
CV_YUV2BGR_YUY2
 = 116,

284 
CV_YUV2RGB_YVYU
 = 117,

285 
CV_YUV2BGR_YVYU
 = 118,

286 
CV_YUV2RGB_YUYV
 = 
CV_YUV2RGB_YUY2
,

287 
CV_YUV2BGR_YUYV
 = 
CV_YUV2BGR_YUY2
,

288 
CV_YUV2RGB_YUNV
 = 
CV_YUV2RGB_YUY2
,

289 
CV_YUV2BGR_YUNV
 = 
CV_YUV2BGR_YUY2
,

291 
CV_YUV2RGBA_YUY2
 = 119,

292 
CV_YUV2BGRA_YUY2
 = 120,

293 
CV_YUV2RGBA_YVYU
 = 121,

294 
CV_YUV2BGRA_YVYU
 = 122,

295 
CV_YUV2RGBA_YUYV
 = 
CV_YUV2RGBA_YUY2
,

296 
CV_YUV2BGRA_YUYV
 = 
CV_YUV2BGRA_YUY2
,

297 
CV_YUV2RGBA_YUNV
 = 
CV_YUV2RGBA_YUY2
,

298 
CV_YUV2BGRA_YUNV
 = 
CV_YUV2BGRA_YUY2
,

300 
CV_YUV2GRAY_UYVY
 = 123,

301 
CV_YUV2GRAY_YUY2
 = 124,

303 
CV_YUV2GRAY_Y422
 = 
CV_YUV2GRAY_UYVY
,

304 
CV_YUV2GRAY_UYNV
 = 
CV_YUV2GRAY_UYVY
,

305 
CV_YUV2GRAY_YVYU
 = 
CV_YUV2GRAY_YUY2
,

306 
CV_YUV2GRAY_YUYV
 = 
CV_YUV2GRAY_YUY2
,

307 
CV_YUV2GRAY_YUNV
 = 
CV_YUV2GRAY_YUY2
,

310 
CV_RGBA2mRGBA
 = 125,

311 
CV_mRGBA2RGBA
 = 126,

313 
CV_RGB2YUV_I420
 = 127,

314 
CV_BGR2YUV_I420
 = 128,

315 
CV_RGB2YUV_IYUV
 = 
CV_RGB2YUV_I420
,

316 
CV_BGR2YUV_IYUV
 = 
CV_BGR2YUV_I420
,

318 
CV_RGBA2YUV_I420
 = 129,

319 
CV_BGRA2YUV_I420
 = 130,

320 
CV_RGBA2YUV_IYUV
 = 
CV_RGBA2YUV_I420
,

321 
CV_BGRA2YUV_IYUV
 = 
CV_BGRA2YUV_I420
,

322 
CV_RGB2YUV_YV12
 = 131,

323 
CV_BGR2YUV_YV12
 = 132,

324 
CV_RGBA2YUV_YV12
 = 133,

325 
CV_BGRA2YUV_YV12
 = 134,

327 
CV_COLORCVT_MAX
 = 135

334 
CV_INTER_NN
 =0,

335 
CV_INTER_LINEAR
 =1,

336 
CV_INTER_CUBIC
 =2,

337 
CV_INTER_AREA
 =3,

338 
CV_INTER_LANCZOS4
 =4

344 
CV_WARP_FILL_OUTLIERS
 =8,

345 
CV_WARP_INVERSE_MAP
 =16

351 
CV_SHAPE_RECT
 =0,

352 
CV_SHAPE_CROSS
 =1,

353 
CV_SHAPE_ELLIPSE
 =2,

354 
CV_SHAPE_CUSTOM
 =100

360 
CV_MOP_ERODE
 =0,

361 
CV_MOP_DILATE
 =1,

362 
CV_MOP_OPEN
 =2,

363 
CV_MOP_CLOSE
 =3,

364 
CV_MOP_GRADIENT
 =4,

365 
CV_MOP_TOPHAT
 =5,

366 
CV_MOP_BLACKHAT
 =6

370 
	sCvMomíts


372 
m00
, 
m10
, 
m01
, 
m20
, 
m11
, 
m02
, 
m30
, 
m21
, 
m12
, 
m03
;

373 
mu20
, 
mu11
, 
mu02
, 
mu30
, 
mu21
, 
mu12
, 
mu03
;

374 
öv_sqπ_m00
;

376 
	tCvMomíts
;

379 
	sCvHuMomíts


381 
hu1
, 
hu2
, 
hu3
, 
hu4
, 
hu5
, 
hu6
, 
hu7
;

383 
	tCvHuMomíts
;

388 
CV_TM_SQDIFF
 =0,

389 
CV_TM_SQDIFF_NORMED
 =1,

390 
CV_TM_CCORR
 =2,

391 
CV_TM_CCORR_NORMED
 =3,

392 
CV_TM_CCOEFF
 =4,

393 
CV_TM_CCOEFF_NORMED
 =5

396 (
CV_CDECL
 * 
	tCvDi°™˚Fun˘i⁄
)–c⁄° * 
	ta
, c⁄° * 
	tb
, * 
	tu£r_∑øm
 );

401 
CV_RETR_EXTERNAL
=0,

402 
CV_RETR_LIST
=1,

403 
CV_RETR_CCOMP
=2,

404 
CV_RETR_TREE
=3,

405 
CV_RETR_FLOODFILL
=4

411 
CV_CHAIN_CODE
=0,

412 
CV_CHAIN_APPROX_NONE
=1,

413 
CV_CHAIN_APPROX_SIMPLE
=2,

414 
CV_CHAIN_APPROX_TC89_L1
=3,

415 
CV_CHAIN_APPROX_TC89_KCOS
=4,

416 
CV_LINK_RUNS
=5

423 
_CvC⁄tourSˇ¬î
* 
	tCvC⁄tourSˇ¬î
;

426 
	sCvChaöPtRódî


428 
CV_SEQ_READER_FIELDS
()

429 
code
;

430 
CvPoöt
 
±
;

431 
sch¨
 
dñès
[8][2];

433 
	tCvChaöPtRódî
;

436 
	#CV_INIT_3X3_DELTAS
–
dñès
, 
°ï
, 
nch
 ) \

437 ((
dñès
)[0] = (
nch
), (dñès)[1] = -(
°ï
) + (nch), \

438 (
dñès
)[2] = -(
°ï
), (dñès)[3] = -(°ïË- (
nch
), \

439 (
dñès
)[4] = -(
nch
), (dñès)[5] = (
°ï
) - (nch), \

440 (
dñès
)[6] = (
°ï
), (dñès)[7] = (°ïË+ (
nch
))

	)

447 
size_t
 
	tCvSubdiv2DEdge
;

449 
	#CV_QUADEDGE2D_FIELDS
() \

450 
Êags
; \

451 
CvSubdiv2DPoöt
* 
±
[4]; \

452 
CvSubdiv2DEdge
 
√xt
[4];

	)

454 
	#CV_SUBDIV2D_POINT_FIELDS
()\

455 
Êags
; \

456 
CvSubdiv2DEdge
 
fú°
; \

457 
CvPoöt2D32f
 
±
; \

458 
id
;

	)

460 
	#CV_SUBDIV2D_VIRTUAL_POINT_FLAG
 (1 << 30)

	)

462 
	sCvQuadEdge2D


464 
CV_QUADEDGE2D_FIELDS
()

466 
	tCvQuadEdge2D
;

468 
	sCvSubdiv2DPoöt


470 
CV_SUBDIV2D_POINT_FIELDS
()

472 
	tCvSubdiv2DPoöt
;

474 
	#CV_SUBDIV2D_FIELDS
() \

475 
	`CV_GRAPH_FIELDS
() \

476 
quad_edges
; \

477 
is_geomëry_vÆid
; \

478 
CvSubdiv2DEdge
 
ª˚¡_edge
; \

479 
CvPoöt2D32f
 
t›À·
; \

480 
CvPoöt2D32f
 
bŸtomright
;

	)

482 
	sCvSubdiv2D


484 
CV_SUBDIV2D_FIELDS
()

486 
	tCvSubdiv2D
;

489 
	eCvSubdiv2DPoötLoˇti⁄


491 
CV_PTLOC_ERROR
 = -2,

492 
CV_PTLOC_OUTSIDE_RECT
 = -1,

493 
CV_PTLOC_INSIDE
 = 0,

494 
CV_PTLOC_VERTEX
 = 1,

495 
CV_PTLOC_ON_EDGE
 = 2

497 
	tCvSubdiv2DPoötLoˇti⁄
;

499 
	eCvNextEdgeTy≥


501 
CV_NEXT_AROUND_ORG
 = 0x00,

502 
CV_NEXT_AROUND_DST
 = 0x22,

503 
CV_PREV_AROUND_ORG
 = 0x11,

504 
CV_PREV_AROUND_DST
 = 0x33,

505 
CV_NEXT_AROUND_LEFT
 = 0x13,

506 
CV_NEXT_AROUND_RIGHT
 = 0x31,

507 
CV_PREV_AROUND_LEFT
 = 0x20,

508 
CV_PREV_AROUND_RIGHT
 = 0x02

510 
	tCvNextEdgeTy≥
;

513 
	#CV_SUBDIV2D_NEXT_EDGE
–
edge
 ) (((
CvQuadEdge2D
*)(”dgeË& ~3))->
√xt
[”dge)&3])

	)

519 
CV_POLY_APPROX_DP
 = 0

525 
CV_CONTOURS_MATCH_I1
 =1,

526 
CV_CONTOURS_MATCH_I2
 =2,

527 
CV_CONTOURS_MATCH_I3
 =3

533 
CV_CLOCKWISE
 =1,

534 
CV_COUNTER_CLOCKWISE
 =2

539 
	sCvC⁄vexôyDe„˘


541 
CvPoöt
* 
°¨t
;

542 
CvPoöt
* 
íd
;

543 
CvPoöt
* 
dïth_poöt
;

544 
dïth
;

545 } 
	tCvC⁄vexôyDe„˘
;

551 
CV_COMP_CORREL
 =0,

552 
CV_COMP_CHISQR
 =1,

553 
CV_COMP_INTERSECT
 =2,

554 
CV_COMP_BHATTACHARYYA
 =3,

555 
CV_COMP_HELLINGER
 =
CV_COMP_BHATTACHARYYA


561 
CV_DIST_MASK_3
 =3,

562 
CV_DIST_MASK_5
 =5,

563 
CV_DIST_MASK_PRECISE
 =0

569 
CV_DIST_LABEL_CCOMP
 = 0,

570 
CV_DIST_LABEL_PIXEL
 = 1

576 
CV_DIST_USER
 =-1,

577 
CV_DIST_L1
 =1,

578 
CV_DIST_L2
 =2,

579 
CV_DIST_C
 =3,

580 
CV_DIST_L12
 =4,

581 
CV_DIST_FAIR
 =5,

582 
CV_DIST_WELSCH
 =6,

583 
CV_DIST_HUBER
 =7

590 
CV_THRESH_BINARY
 =0,

591 
CV_THRESH_BINARY_INV
 =1,

592 
CV_THRESH_TRUNC
 =2,

593 
CV_THRESH_TOZERO
 =3,

594 
CV_THRESH_TOZERO_INV
 =4,

595 
CV_THRESH_MASK
 =7,

596 
CV_THRESH_OTSU
 =8

603 
CV_ADAPTIVE_THRESH_MEAN_C
 =0,

604 
CV_ADAPTIVE_THRESH_GAUSSIAN_C
 =1

610 
CV_FLOODFILL_FIXED_RANGE
 =(1 << 16),

611 
CV_FLOODFILL_MASK_ONLY
 =(1 << 17)

618 
CV_CANNY_L2_GRADIENT
 =(1 << 31)

624 
CV_HOUGH_STANDARD
 =0,

625 
CV_HOUGH_PROBABILISTIC
 =1,

626 
CV_HOUGH_MULTI_SCALE
 =2,

627 
CV_HOUGH_GRADIENT
 =3

632 
CvFótuªTªe
;

633 
CvLSH
;

634 
CvLSHO≥øti⁄s
;

636 #ifde‡
__˝lu•lus


	@/usr/include/opencv2/photo/photo_c.h

43 #i‚de‡
__OPENCV_PHOTO_C_H__


44 
	#__OPENCV_PHOTO_C_H__


	)

46 
	~"›ícv2/c‹e/c‹e_c.h
"

48 #ifde‡
__˝lu•lus


55 
CV_INPAINT_NS
 =0,

56 
CV_INPAINT_TELEA
 =1

61 
CVAPI
(Ë
cvI≈aöt
–c⁄° 
CvAº
* 
§c
, c⁄° CvAº* 
ö∑öt_mask
,

62 
CvAº
* 
d°
, 
ö∑ötR™ge
, 
Êags
 );

65 #ifde‡
__˝lu•lus


	@/usr/include/opencv2/video/background_segm.hpp

43 #i‚de‡
__OPENCV_BACKGROUND_SEGM_HPP__


44 
	#__OPENCV_BACKGROUND_SEGM_HPP__


	)

46 
	~"›ícv2/c‹e/c‹e.hµ
"

47 
	~<li°
>

48 
«me•a˚
 
	gcv


57 ˛as†
	cCV_EXPORTS_W
 
	gBackgroundSubåa˘‹
 : 
public
 
Alg‹ôhm


59 
public
:

61 
vútuÆ
 ~
BackgroundSubåa˘‹
();

63 
CV_WRAP_AS
(
≠∂y
Ë
vútuÆ
 
›î©‹
()(
I≈utAºay
 
	gimage
, 
OuçutAºay
 
	gfgmask
,

64 
	gÀ¨nögR©e
=0);

67 
vútuÆ
 
gëBackgroundImage
(
OuçutAºay
 
backgroundImage
) const;

81 ˛as†
	cCV_EXPORTS_W
 
	gBackgroundSubåa˘‹MOG
 : 
public
 
BackgroundSubåa˘‹


83 
public
:

85 
CV_WRAP
 
BackgroundSubåa˘‹MOG
();

87 
CV_WRAP
 
BackgroundSubåa˘‹MOG
(
hi°‹y
, 
nmixtuªs
, 
backgroundR©io
, 
noi£Sigma
=0);

89 
	gvútuÆ
 ~
BackgroundSubåa˘‹MOG
();

91 
vútuÆ
 
›î©‹
()(
I≈utAºay
 
	gimage
, 
OuçutAºay
 
	gfgmask
, 
	gÀ¨nögR©e
=0);

94 
vútuÆ
 
öôülize
(
Size
 
‰ameSize
, 
‰ameTy≥
);

96 
vútuÆ
 
Alg‹ôhmInfo
* 
öfo
() const;

98 
	g¥Ÿe˘ed
:

99 
Size
 
‰ameSize
;

100 
	g‰ameTy≥
;

101 
M©
 
	gbgmodñ
;

102 
	gn‰ames
;

103 
	ghi°‹y
;

104 
	gnmixtuªs
;

105 
	gv¨Thªshﬁd
;

106 
	gbackgroundR©io
;

107 
	gnoi£Sigma
;

118 ˛as†
	cCV_EXPORTS_W
 
	gBackgroundSubåa˘‹MOG2
 : 
public
 
BackgroundSubåa˘‹


120 
public
:

122 
CV_WRAP
 
BackgroundSubåa˘‹MOG2
();

124 
CV_WRAP
 
BackgroundSubåa˘‹MOG2
(
hi°‹y
, 
v¨Thªshﬁd
, 
boﬁ
 
bShadowDëe˘i⁄
=
åue
);

126 
	gvútuÆ
 ~
BackgroundSubåa˘‹MOG2
();

128 
vútuÆ
 
›î©‹
()(
I≈utAºay
 
	gimage
, 
OuçutAºay
 
	gfgmask
, 
	gÀ¨nögR©e
=-1);

131 
vútuÆ
 
gëBackgroundImage
(
OuçutAºay
 
backgroundImage
) const;

134 
vútuÆ
 
öôülize
(
Size
 
‰ameSize
, 
‰ameTy≥
);

136 
vútuÆ
 
Alg‹ôhmInfo
* 
öfo
() const;

138 
	g¥Ÿe˘ed
:

139 
Size
 
‰ameSize
;

140 
	g‰ameTy≥
;

141 
M©
 
	gbgmodñ
;

142 
M©
 
	gbgmodñU£dModes
;

143 
	gn‰ames
;

144 
	ghi°‹y
;

145 
	gnmixtuªs
;

148 
	gv¨Thªshﬁd
;

157 
	gbackgroundR©io
;

164 
	gv¨ThªshﬁdGí
;

170 
	gfV¨Inô
;

171 
	gfV¨Mö
;

172 
	gfV¨Max
;

178 
	gfCT
;

184 
boﬁ
 
	gbShadowDëe˘i⁄
;

185 
	gnShadowDëe˘i⁄
;

186 
	gfTau
;

200 ˛as†
	cCV_EXPORTS
 
	gBackgroundSubåa˘‹GMG
: 
public
 
cv
::
BackgroundSubåa˘‹


202 
public
:

203 
BackgroundSubåa˘‹GMG
();

204 
	gvútuÆ
 ~
BackgroundSubåa˘‹GMG
();

205 
vútuÆ
 
Alg‹ôhmInfo
* 
öfo
() const;

214 
öôülize
(
cv
::
Size
 
‰ameSize
, 
mö
, 
max
);

222 
vútuÆ
 
›î©‹
()(
I≈utAºay
 
	gimage
, 
OuçutAºay
 
	gfgmask
, 
	gÀ¨nögR©e
=-1.0);

227 
ªÀa£
();

230 
	gmaxFótuªs
;

232 
	gÀ¨nögR©e
;

234 
	gnumInôüliz©i⁄Fømes
;

236 
	gqu™tiz©i⁄Levñs
;

238 
	gbackgroundPri‹
;

240 
	gdecisi⁄Thªshﬁd
;

242 
	gsmoŸhögRadius
;

244 
boﬁ
 
	gupd©eBackgroundModñ
;

246 
	g¥iv©e
:

247 
maxVÆ_
;

248 
	gmöVÆ_
;

250 
	gcv
::
Size
 
‰ameSize_
;

251 
	g‰ameNum_
;

253 
	gcv
::
M©_
<> 
n„©uªs_
;

254 
	gcv
::
M©_
<> 
cﬁ‹s_
;

255 
	gcv
::
M©_
<> 
weights_
;

257 
	gcv
::
M©
 
buf_
;

	@/usr/include/opencv2/video/tracking.hpp

47 #i‚de‡
__OPENCV_TRACKING_HPP__


48 
	#__OPENCV_TRACKING_HPP__


	)

50 
	~"›ícv2/c‹e/c‹e.hµ
"

51 
	~"›ícv2/img¥oc/img¥oc.hµ
"

53 #ifde‡
__˝lu•lus


63 
	#CV_LKFLOW_PYR_A_READY
 1

	)

64 
	#CV_LKFLOW_PYR_B_READY
 2

	)

65 
	#CV_LKFLOW_INITIAL_GUESSES
 4

	)

66 
	#CV_LKFLOW_GET_MIN_EIGENVALS
 8

	)

73 
CVAPI
(Ë
cvCÆcO±iˇlFlowPyrLK
–c⁄° 
CvAº
* 
¥ev
, c⁄° CvAº* 
cuº
,

74 
CvAº
* 
¥ev_pyr
, CvAº* 
cuº_pyr
,

75 c⁄° 
CvPoöt2D32f
* 
¥ev_„©uªs
,

76 
CvPoöt2D32f
* 
cuº_„©uªs
,

77 
cou¡
,

78 
CvSize
 
wö_size
,

79 
Àvñ
,

80 * 
°©us
,

81 * 
åack_îr‹
,

82 
CvTîmCrôîü
 
¸ôîü
,

83 
Êags
 );

88 
CVAPI
(Ë
cvCÆcAfföeFlowPyrLK
–c⁄° 
CvAº
* 
¥ev
, c⁄° CvAº* 
cuº
,

89 
CvAº
* 
¥ev_pyr
, CvAº* 
cuº_pyr
,

90 c⁄° 
CvPoöt2D32f
* 
¥ev_„©uªs
,

91 
CvPoöt2D32f
* 
cuº_„©uªs
,

92 * 
m©ri˚s
, 
cou¡
,

93 
CvSize
 
wö_size
, 
Àvñ
,

94 * 
°©us
, * 
åack_îr‹
,

95 
CvTîmCrôîü
 
¸ôîü
, 
Êags
 );

98 
CVAPI
(Ë
cvE°im©eRigidTønsf‹m
–c⁄° 
CvAº
* 
A
, c⁄° CvAº* 
B
,

99 
CvM©
* 
M
, 
fuŒ_afföe
 );

102 
CVAPI
(Ë
cvCÆcO±iˇlFlowF¨√back
–c⁄° 
CvAº
* 
¥ev
, c⁄° CvAº* 
√xt
,

103 
CvAº
* 
Êow
, 
pyr_sˇÀ
, 
Àvñs
,

104 
wösize
, 
ôî©i⁄s
, 
pﬁy_n
,

105 
pﬁy_sigma
, 
Êags
 );

120 
CVAPI
(Ë
cvUpd©eMŸi⁄Hi°‹y
–c⁄° 
CvAº
* 
sûhouëã
, CvAº* 
mhi
,

121 
time°amp
, 
duøti⁄
 );

125 
CVAPI
(Ë
cvCÆcMŸi⁄Gødõ¡
–c⁄° 
CvAº
* 
mhi
, CvAº* 
mask
, CvAº* 
‹õ¡©i⁄
,

126 
dñè1
, 
dñè2
,

127 
≠îtuª_size
 
CV_DEFAULT
(3));

132 
CVAPI
(Ë
cvCÆcGlobÆOrõ¡©i⁄
–c⁄° 
CvAº
* 
‹õ¡©i⁄
, c⁄° CvAº* 
mask
,

133 c⁄° 
CvAº
* 
mhi
, 
time°amp
,

134 
duøti⁄
 );

138 
CVAPI
(
CvSeq
*Ë
cvSegmítMŸi⁄
–c⁄° 
CvAº
* 
mhi
, CvAº* 
£g_mask
,

139 
CvMemSt‹age
* 
°‹age
,

140 
time°amp
, 
£g_thªsh
 );

148 
CVAPI
(Ë
cvCamShi·
–c⁄° 
CvAº
* 
¥ob_image
, 
CvRe˘
 
wödow
,

149 
CvTîmCrôîü
 
¸ôîü
, 
CvC⁄√˘edComp
* 
comp
,

150 
CvBox2D
* 
box
 
CV_DEFAULT
(
NULL
) );

154 
CVAPI
(Ë
cvMónShi·
–c⁄° 
CvAº
* 
¥ob_image
, 
CvRe˘
 
wödow
,

155 
CvTîmCrôîü
 
¸ôîü
, 
CvC⁄√˘edComp
* 
comp
 );

163 
	sCvKÆm™


165 
MP
;

166 
DP
;

167 
CP
;

171 * 
Po°îSèã
;

172 * 
Pri‹Sèã
;

173 * 
Dy«mM©r
;

174 * 
MósuªmítM©r
;

175 * 
MNCov¨ün˚
;

176 * 
PNCov¨ün˚
;

177 * 
KÆmGaöM©r
;

178 * 
Pri‹Eº‹Cov¨ün˚
;

179 * 
Po°îEº‹Cov¨ün˚
;

180 * 
Temp1
;

181 * 
Temp2
;

184 
CvM©
* 
°©e_¥e
;

186 
CvM©
* 
°©e_po°
;

188 
CvM©
* 
å™sôi⁄_m©rix
;

189 
CvM©
* 
c⁄åﬁ_m©rix
;

191 
CvM©
* 
mósuªmít_m©rix
;

192 
CvM©
* 
¥o˚ss_noi£_cov
;

193 
CvM©
* 
mósuªmít_noi£_cov
;

194 
CvM©
* 
îr‹_cov_¥e
;

196 
CvM©
* 
gaö
;

198 
CvM©
* 
îr‹_cov_po°
;

200 
CvM©
* 
ãmp1
;

201 
CvM©
* 
ãmp2
;

202 
CvM©
* 
ãmp3
;

203 
CvM©
* 
ãmp4
;

204 
CvM©
* 
ãmp5
;

205 } 
	tCvKÆm™
;

208 
CVAPI
(
CvKÆm™
*Ë
cvCª©eKÆm™
–
dy«m_∑øms
, 
mósuª_∑øms
,

209 
c⁄åﬁ_∑øms
 
CV_DEFAULT
(0));

212 
CVAPI
(Ë
cvRñó£KÆm™
–
CvKÆm™
** 
kÆm™
);

215 
CVAPI
(c⁄° 
CvM©
*Ë
cvKÆm™Pªdi˘
–
CvKÆm™
* 
kÆm™
,

216 c⁄° 
CvM©
* 
c⁄åﬁ
 
CV_DEFAULT
(
NULL
));

220 
CVAPI
(c⁄° 
CvM©
*Ë
cvKÆm™C‹ª˘
–
CvKÆm™
* 
kÆm™
, c⁄° CvM©* 
mósuªmít
 );

222 
	#cvKÆm™Upd©eByTime
 
cvKÆm™Pªdi˘


	)

223 
	#cvKÆm™Upd©eByMósuªmít
 
cvKÆm™C‹ª˘


	)

225 #ifde‡
__˝lu•lus


228 
«me•a˚
 
cv


232 
CV_EXPORTS_W
 
upd©eMŸi⁄Hi°‹y
–
I≈utAºay
 
sûhouëã
, 
I≈utOuçutAºay
 
mhi
,

233 
time°amp
, 
duøti⁄
 );

236 
CV_EXPORTS_W
 
ˇlcMŸi⁄Gødõ¡
–
I≈utAºay
 
mhi
, 
OuçutAºay
 
mask
,

237 
OuçutAºay
 
‹õ¡©i⁄
,

238 
dñè1
, 
dñè2
,

239 
≠îtuªSize
=3 );

242 
CV_EXPORTS_W
 
ˇlcGlobÆOrõ¡©i⁄
–
I≈utAºay
 
‹õ¡©i⁄
, I≈utAºay 
mask
,

243 
I≈utAºay
 
mhi
, 
time°amp
,

244 
duøti⁄
 );

246 
CV_EXPORTS_W
 
£gmítMŸi⁄
(
I≈utAºay
 
mhi
, 
OuçutAºay
 
£gmask
,

247 
CV_OUT
 
ve˘‹
<
Re˘
>& 
boundögRe˘s
,

248 
time°amp
, 
£gThªsh
);

251 
CV_EXPORTS_W
 
RŸ©edRe˘
 
CamShi·
–
I≈utAºay
 
¥obImage
, 
CV_OUT
 
CV_IN_OUT
 
Re˘
& 
wödow
,

252 
TîmCrôîü
 
¸ôîü
 );

255 
CV_EXPORTS_W
 
mónShi·
–
I≈utAºay
 
¥obImage
, 
CV_OUT
 
CV_IN_OUT
 
Re˘
& 
wödow
,

256 
TîmCrôîü
 
¸ôîü
 );

265 ˛as†
	cCV_EXPORTS_W
 
KÆm™Fûãr


267 
public
:

269 
CV_WRAP
 
KÆm™Fûãr
();

271 
CV_WRAP
 
KÆm™Fûãr
(
dy«mP¨ams
, 
mósuªP¨ams
, 
c⁄åﬁP¨ams
=0, 
ty≥
=
CV_32F
);

273 
öô
(
dy«mP¨ams
, 
mósuªP¨ams
, 
c⁄åﬁP¨ams
=0, 
ty≥
=
CV_32F
);

276 
CV_WRAP
 c⁄° 
M©
& 
¥edi˘
(c⁄° M©& 
c⁄åﬁ
=Mat());

278 
CV_WRAP
 c⁄° 
M©
& 
c‹ª˘
(c⁄° M©& 
mósuªmít
);

280 
M©
 
°©ePª
;

281 
M©
 
°©ePo°
;

282 
M©
 
å™sôi⁄M©rix
;

283 
M©
 
c⁄åﬁM©rix
;

284 
M©
 
mósuªmítM©rix
;

285 
M©
 
¥o˚ssNoi£Cov
;

286 
M©
 
mósuªmítNoi£Cov
;

287 
M©
 
îr‹CovPª
;

288 
M©
 
gaö
;

289 
M©
 
îr‹CovPo°
;

292 
M©
 
ãmp1
;

293 
M©
 
ãmp2
;

294 
M©
 
ãmp3
;

295 
M©
 
ãmp4
;

296 
M©
 
ãmp5
;

301 
OPTFLOW_USE_INITIAL_FLOW
 = 
CV_LKFLOW_INITIAL_GUESSES
,

302 
OPTFLOW_LK_GET_MIN_EIGENVALS
 = 
CV_LKFLOW_GET_MIN_EIGENVALS
,

303 
OPTFLOW_FARNEBACK_GAUSSIAN
 = 256

307 
CV_EXPORTS_W
 
buûdO±iˇlFlowPyømid
(
I≈utAºay
 
img
, 
OuçutAºayOfAºays
 
pyømid
,

308 
Size
 
wöSize
, 
maxLevñ
, 
boﬁ
 
wôhDîiv©ives
 = 
åue
,

309 
pyrB‹dî
 = 
BORDER_REFLECT_101
, 
dîivB‹dî
 = 
BORDER_CONSTANT
,

310 
boﬁ
 
åyReu£I≈utImage
 = 
åue
);

313 
CV_EXPORTS_W
 
ˇlcO±iˇlFlowPyrLK
–
I≈utAºay
 
¥evImg
, I≈utAºay 
√xtImg
,

314 
I≈utAºay
 
¥evPts
, 
CV_OUT
 
I≈utOuçutAºay
 
√xtPts
,

315 
OuçutAºay
 
°©us
, OuçutAºay 
îr
,

316 
Size
 
wöSize
=Size(21,21), 
maxLevñ
=3,

317 
TîmCrôîü
 
¸ôîü
=TîmCrôîü(TîmCrôîü::
COUNT
+TîmCrôîü::
EPS
, 30, 0.01),

318 
Êags
=0, 
möEigThªshﬁd
=1e-4);

321 
CV_EXPORTS_W
 
ˇlcO±iˇlFlowF¨√back
–
I≈utAºay
 
¥ev
, I≈utAºay 
√xt
,

322 
CV_OUT
 
I≈utOuçutAºay
 
Êow
, 
pyr_sˇÀ
, 
Àvñs
, 
wösize
,

323 
ôî©i⁄s
, 
pﬁy_n
, 
pﬁy_sigma
, 
Êags
 );

327 
CV_EXPORTS_W
 
M©
 
e°im©eRigidTønsf‹m
–
I≈utAºay
 
§c
, I≈utAºay 
d°
,

328 
boﬁ
 
fuŒAfföe
);

331 
CV_EXPORTS_W
 
ˇlcO±iˇlFlowSF
(
M©
& 
‰om
,

332 
M©
& 
to
,

333 
M©
& 
Êow
,

334 
œyîs
,

335 
avîagög_block_size
,

336 
max_Êow
);

338 
CV_EXPORTS_W
 
ˇlcO±iˇlFlowSF
(
M©
& 
‰om
,

339 
M©
& 
to
,

340 
M©
& 
Êow
,

341 
œyîs
,

342 
avîagög_block_size
,

343 
max_Êow
,

344 
sigma_di°
,

345 
sigma_cﬁ‹
,

346 
po°¥o˚ss_wödow
,

347 
sigma_di°_fix
,

348 
sigma_cﬁ‹_fix
,

349 
occ_thr
,

350 
upsˇÀ_avîagög_ødius
,

351 
upsˇÀ_sigma_di°
,

352 
upsˇÀ_sigma_cﬁ‹
,

353 
•ìd_up_thr
);

355 ˛as†
	cCV_EXPORTS
 
Dí£O±iˇlFlow
 : 
public
 
Alg‹ôhm


357 
public
:

358 
vútuÆ
 
ˇlc
(
I≈utAºay
 
I0
, I≈utAºay 
I1
, 
I≈utOuçutAºay
 
Êow
) = 0;

359 
vútuÆ
 
cﬁÀ˘G¨bage
() = 0;

367 
CV_EXPORTS
 
På
<
Dí£O±iˇlFlow
> 
¸óãO±Flow_DuÆTVL1
();

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

45 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

46 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

47 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

48 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

49 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

50 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

51 #ifde‡
__WIFCONTINUED


52 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
__BEGIN_NAMESPACE_STD


60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

73 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__BEGIN_NAMESPACE_C99


78 
__exãnsi⁄__
 struct

80 
	mquŸ
;

81 
	mªm
;

82 } 
	tŒdiv_t
;

83 
	#__Œdiv_t_deföed
 1

	)

84 
	g__END_NAMESPACE_C99


89 
	#RAND_MAX
 2147483647

	)

94 
	#EXIT_FAILURE
 1

	)

95 
	#EXIT_SUCCESS
 0

	)

99 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

100 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

103 
__BEGIN_NAMESPACE_STD


105 
	$©of
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©oi
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 
	$©ﬁ
 (c⁄° *
__≈å
)

112 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_ISOC99


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

119 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

120 
__END_NAMESPACE_C99


123 
__BEGIN_NAMESPACE_STD


125 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

126 **
__ª°ri˘
 
__íd±r
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1));

128 
__END_NAMESPACE_STD


130 #ifdef 
__USE_ISOC99


131 
__BEGIN_NAMESPACE_C99


133 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

134 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

136 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

137 **
__ª°ri˘
 
__íd±r
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 
__END_NAMESPACE_C99


142 
__BEGIN_NAMESPACE_STD


144 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

145 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

149 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 
__END_NAMESPACE_STD


153 #ifde‡
__USE_MISC


155 
__exãnsi⁄__


156 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

157 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

158 
__THROW
 
	`__n⁄nuŒ
 ((1));

160 
__exãnsi⁄__


161 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

162 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__exãnsi⁄__


170 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

174 
__exãnsi⁄__


175 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


182 #ifde‡
__USE_GNU


196 
	~<xloˇÀ.h
>

200 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

202 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

204 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

205 **
__ª°ri˘
 
__íd±r
,

206 
__ba£
, 
__loˇÀ_t
 
__loc
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

209 
__exãnsi⁄__


210 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

212 
__loˇÀ_t
 
__loc
)

213 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

215 
__exãnsi⁄__


216 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

217 **
__ª°ri˘
 
__íd±r
,

218 
__ba£
, 
__loˇÀ_t
 
__loc
)

219 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

221 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

222 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

223 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

225 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

226 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

227 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

229 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

230 **
__ª°ri˘
 
__íd±r
,

231 
__loˇÀ_t
 
__loc
)

232 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

236 #ifde‡
__USE_EXTERN_INLINES


237 
__BEGIN_NAMESPACE_STD


238 
__exã∫_ölöe
 

239 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

241  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

242 
	}
}

243 
__exã∫_ölöe
 

244 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

246  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

247 
	}
}

248 
	g__END_NAMESPACE_STD


250 #ifde‡
__USE_ISOC99


251 
__BEGIN_NAMESPACE_C99


252 
__exãnsi⁄__
 
__exã∫_ölöe
 

253 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

255  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

256 
	}
}

257 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


266 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

269 
	$a64l
 (c⁄° *
__s
)

270 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

274 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


275 
	~<sys/ty≥s.h
>

282 
	$øndom
 (Ë
__THROW
;

285 
	$§™dom
 (
__£ed
Ë
__THROW
;

291 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

292 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

296 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

299 #ifde‡
__USE_MISC


304 
	søndom_d©a


306 
öt32_t
 *
Âå
;

307 
öt32_t
 *
Ωå
;

308 
öt32_t
 *
°©e
;

309 
ønd_ty≥
;

310 
ønd_deg
;

311 
ønd_£p
;

312 
öt32_t
 *
íd_±r
;

315 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

316 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

319 
__THROW
 
	`__n⁄nuŒ
 ((2));

321 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

322 
size_t
 
__°©ñí
,

323 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

324 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

326 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

327 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
__BEGIN_NAMESPACE_STD


335 
	$ønd
 (Ë
__THROW
;

337 
	$§™d
 (
__£ed
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifde‡
__USE_POSIX199506


342 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

346 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


350 
	$dønd48
 (Ë
__THROW
;

351 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$Ã™d48
 (Ë
__THROW
;

355 
	$ƒ™d48
 (
__xsubi
[3])

356 
__THROW
 
	`__n⁄nuŒ
 ((1));

359 
	$mønd48
 (Ë
__THROW
;

360 
	$jønd48
 (
__xsubi
[3])

361 
__THROW
 
	`__n⁄nuŒ
 ((1));

364 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

365 *
	$£ed48
 (
__£ed16v
[3])

366 
__THROW
 
	`__n⁄nuŒ
 ((1));

367 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

369 #ifde‡
__USE_MISC


373 
	sdønd48_d©a


375 
__x
[3];

376 
__ﬁd_x
[3];

377 
__c
;

378 
__öô
;

379 
__exãnsi⁄__
 
__a
;

384 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

385 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$î™d48_r
 (
__xsubi
[3],

387 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

388 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

392 *
__ª°ri˘
 
__ªsu…
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

394 
	$ƒ™d48_r
 (
__xsubi
[3],

395 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

396 *
__ª°ri˘
 
__ªsu…
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

401 *
__ª°ri˘
 
__ªsu…
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

403 
	$jønd48_r
 (
__xsubi
[3],

404 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

405 *
__ª°ri˘
 
__ªsu…
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

409 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

410 
__THROW
 
	`__n⁄nuŒ
 ((2));

412 
	$£ed48_r
 (
__£ed16v
[3],

413 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

415 
	$lc⁄g48_r
 (
__∑øm
[7],

416 
dønd48_d©a
 *
__buf„r
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

423 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


424 
	#__mÆloc_™d_ˇŒoc_deföed


	)

425 
__BEGIN_NAMESPACE_STD


427 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

429 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

430 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

431 
__END_NAMESPACE_STD


434 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


435 
__BEGIN_NAMESPACE_STD


441 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

442 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

444 
	$‰ì
 (*
__±r
Ë
__THROW
;

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_MISC


449 
	$c‰ì
 (*
__±r
Ë
__THROW
;

452 #ifde‡
__USE_MISC


453 
	~<Æloˇ.h
>

456 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

457 || 
deföed
 
__USE_MISC


459 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

462 #ifde‡
__USE_XOPEN2K


464 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

465 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

468 #ifde‡
__USE_ISOC11


470 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

471 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

474 
__BEGIN_NAMESPACE_STD


476 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

480 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

482 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


484 #ifde‡
__˝lu•lus


485 "C++" 
	$©_quick_exô
 ((*
__func
) ())

486 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

488 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 
__END_NAMESPACE_STD


493 #ifdef 
__USE_MISC


496 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

497 
__THROW
 
	`__n⁄nuŒ
 ((1));

500 
__BEGIN_NAMESPACE_STD


504 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

506 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


510 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

512 
__END_NAMESPACE_STD


514 #ifde‡
__USE_ISOC99


515 
__BEGIN_NAMESPACE_C99


518 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
__END_NAMESPACE_C99


523 
__BEGIN_NAMESPACE_STD


525 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

526 
__END_NAMESPACE_STD


528 #ifde‡
__USE_GNU


531 *
	$£cuª_gëív
 (c⁄° *
__«me
)

532 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

535 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


539 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

542 #ifde‡
__USE_XOPEN2K


545 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

546 
__THROW
 
	`__n⁄nuŒ
 ((2));

549 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

552 #ifdef 
__USE_MISC


556 
	$˛óªnv
 (Ë
__THROW
;

560 #i‡
deföed
 
__USE_MISC
 \

561 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

567 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

570 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


579 #i‚de‡
__USE_FILE_OFFSET64


580 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

582 #ifde‡
__REDIRECT


583 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

584 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

586 
	#mk°emp
 
mk°emp64


	)

589 #ifde‡
__USE_LARGEFILE64


590 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

594 #ifde‡
__USE_MISC


601 #i‚de‡
__USE_FILE_OFFSET64


602 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

604 #ifde‡
__REDIRECT


605 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

606 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 
	#mk°emps
 
mk°emps64


	)

611 #ifde‡
__USE_LARGEFILE64


612 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

613 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_XOPEN2K8


623 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 #ifde‡
__USE_GNU


633 #i‚de‡
__USE_FILE_OFFSET64


634 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__REDIRECT


637 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

638 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
	#mko°emp
 
mko°emp64


	)

643 #ifde‡
__USE_LARGEFILE64


644 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

653 #i‚de‡
__USE_FILE_OFFSET64


654 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

655 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #ifde‡
__REDIRECT


658 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

659 
__Êags
), 
mko°emps64
)

660 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

662 
	#mko°emps
 
mko°emps64


	)

665 #ifde‡
__USE_LARGEFILE64


666 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

667 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

672 
__BEGIN_NAMESPACE_STD


677 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

678 
__END_NAMESPACE_STD


681 #ifdef 
__USE_GNU


684 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

685 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


694 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

695 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

700 #i‚de‡
__COMPAR_FN_T


701 
	#__COMPAR_FN_T


	)

702 (*
	t__com∑r_‚_t
) (const *, const *);

704 #ifdef 
__USE_GNU


705 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

708 #ifde‡
__USE_GNU


709 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

712 
__BEGIN_NAMESPACE_STD


715 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

716 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

717 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

719 #ifde‡
__USE_EXTERN_INLINES


720 
	~<bôs/°dlib-b£¨ch.h
>

725 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

726 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

727 #ifde‡
__USE_GNU


728 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

729 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

730 
	`__n⁄nuŒ
 ((1, 4));

735 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

736 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

737 
__END_NAMESPACE_STD


739 #ifde‡
__USE_ISOC99


740 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

741 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

745 
__BEGIN_NAMESPACE_STD


749 
div_t
 
	$div
 (
__numî
, 
__díom
)

750 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

751 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

752 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

753 
__END_NAMESPACE_STD


755 #ifde‡
__USE_ISOC99


756 
__BEGIN_NAMESPACE_C99


757 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

758 
__díom
)

759 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

760 
__END_NAMESPACE_C99


764 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

765 || 
deföed
 
__USE_MISC


772 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

773 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

778 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

779 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

784 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

785 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

788 #ifde‡
__USE_MISC


790 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

791 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

792 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

793 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

794 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

795 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

796 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

797 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

802 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

804 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

805 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

806 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

807 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

809 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

810 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

811 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

812 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

813 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

814 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

815 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

816 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

820 
__BEGIN_NAMESPACE_STD


823 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

826 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

827 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

830 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

834 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

835 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

837 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

838 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

839 
__THROW
;

840 
__END_NAMESPACE_STD


843 #ifde‡
__USE_MISC


848 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

852 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


859 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

860 *c⁄° *
__ª°ri˘
 
__tokís
,

861 **
__ª°ri˘
 
__vÆuï
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

866 #ifde‡
__USE_XOPEN


868 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #ifde‡
__USE_XOPEN2KXSI


876 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

879 #ifde‡
__USE_XOPEN_EXTENDED


884 
	$gø¡±
 (
__fd
Ë
__THROW
;

888 
	$u∆ock±
 (
__fd
Ë
__THROW
;

893 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

896 #ifde‡
__USE_GNU


900 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

901 
__THROW
 
	`__n⁄nuŒ
 ((2));

904 
	`gë±
 ();

907 #ifde‡
__USE_MISC


911 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

915 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


918 
	$ây¶Ÿ
 (Ë
__THROW
;

921 
	~<bôs/°dlib-Êﬂt.h
>

924 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


925 
	~<bôs/°dlib.h
>

927 #ifde‡
__LDBL_COMPAT


928 
	~<bôs/°dlib-ldbl.h
>

932 #unde‡
__√ed_mÆloc_™d_ˇŒoc


934 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
	`__GNUC_PREREQ
 (3,4)

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

644 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
__exã∫_Æways_ölöe
 *

647 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

648 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

650  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

651 
	}
}

656 
	g__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 #ifde‡
__USE_ISOC99


26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 #ifde‡
__NO_LONG_DOUBLE_MATH


29 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

31 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

36 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


38 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

40 #ifde‡
__USE_ISOC99


41 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

42 #ifde‡
__MATH_DECLARE_LDOUBLE


43 #ifde‡
__NO_LONG_DOUBLE_MATH


44 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

46 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

52 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

53 #ifde‡
__USE_ISOC99


54 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

55 #ifde‡
__MATH_DECLARE_LDOUBLE


56 #ifde‡
__NO_LONG_DOUBLE_MATH


57 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

59 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

65 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

66 #ifde‡
__USE_ISOC99


67 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

68 #ifde‡
__MATH_DECLARE_LDOUBLE


69 #ifde‡
__NO_LONG_DOUBLE_MATH


70 
__REDIRECT_NTH
 (
©™2l
, (, ),

71 
__©™2_föôe
);

73 
__REDIRECT_NTH
 (
©™2l
, (, ),

74 
__©™2l_föôe
);

79 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


81 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

83 #ifde‡
__USE_ISOC99


84 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

85 #ifde‡
__MATH_DECLARE_LDOUBLE


86 #ifde‡
__NO_LONG_DOUBLE_MATH


87 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

89 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

95 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

96 #ifde‡
__USE_ISOC99


97 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

102 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

108 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

109 #ifde‡
__USE_ISOC99


110 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

111 #ifde‡
__MATH_DECLARE_LDOUBLE


112 #ifde‡
__NO_LONG_DOUBLE_MATH


113 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

115 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

120 #ifde‡
__USE_GNU


122 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

123 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

124 #ifde‡
__MATH_DECLARE_LDOUBLE


125 #ifde‡
__NO_LONG_DOUBLE_MATH


126 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

128 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

133 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

134 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

135 #ifde‡
__MATH_DECLARE_LDOUBLE


136 #ifde‡
__NO_LONG_DOUBLE_MATH


137 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

139 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

144 #ifde‡
__USE_ISOC99


146 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

147 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

148 #ifde‡
__MATH_DECLARE_LDOUBLE


149 #ifde‡
__NO_LONG_DOUBLE_MATH


150 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

152 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

158 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

159 #ifde‡
__USE_ISOC99


160 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

161 #ifde‡
__MATH_DECLARE_LDOUBLE


162 #ifde‡
__NO_LONG_DOUBLE_MATH


163 
__REDIRECT_NTH
 (
fmodl
, (, ),

164 
__fmod_föôe
);

166 
__REDIRECT_NTH
 (
fmodl
, (, ),

167 
__fmodl_föôe
);

172 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


174 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

176 #ifde‡
__USE_ISOC99


177 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

178 #ifde‡
__MATH_DECLARE_LDOUBLE


179 #ifde‡
__NO_LONG_DOUBLE_MATH


180 
__REDIRECT_NTH
 (
hypŸl
, (, ),

181 
__hypŸ_föôe
);

183 
__REDIRECT_NTH
 (
hypŸl
, (, ),

184 
__hypŸl_föôe
);

189 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


191 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

193 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


194 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 #ifde‡
__NO_LONG_DOUBLE_MATH


197 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

199 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

204 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


206 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

208 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


209 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

210 #ifde‡
__MATH_DECLARE_LDOUBLE


211 #ifde‡
__NO_LONG_DOUBLE_MATH


212 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

214 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


221 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

223 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


224 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

225 #ifde‡
__MATH_DECLARE_LDOUBLE


226 #ifde‡
__NO_LONG_DOUBLE_MATH


227 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

229 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

238 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


239 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

240 #ifde‡
__MATH_DECLARE_LDOUBLE


241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

244 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


251 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

253 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


254 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

255 #ifde‡
__MATH_DECLARE_LDOUBLE


256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

259 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

268 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


269 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

270 #ifde‡
__MATH_DECLARE_LDOUBLE


271 #ifde‡
__NO_LONG_DOUBLE_MATH


272 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

274 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

279 #ifde‡
__USE_MISC


281 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

282 #ifde‡
__USE_ISOC99


283 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 #ifde‡
__NO_LONG_DOUBLE_MATH


286 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

287 
__lgamma_r_föôe
);

289 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

290 
__lgammÆ_r_föôe
);

296 
__lgamma_r_föôe
 (, *);

297 
__lgammaf_r_föôe
 (, *);

298 #ifde‡
__NO_LONG_DOUBLE_MATH


299 
__REDIRECT_NTH
 (
__lgammÆ_r_föôe
, (, *),

300 
__lgamma_r_föôe
);

302 
__lgammÆ_r_föôe
 (, *);

305 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

306 && 
deföed
 
	g__exã∫_Æways_ölöe
)

308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

310 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


311  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

313 
__loˇl_signgam
 = 0;

314  
	`__lgamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

316 
	}
}

318 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


319 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

321 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


322  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

324 
__loˇl_signgam
 = 0;

325  
	`__lgammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

327 
	}
}

328 #ifde‡
__MATH_DECLARE_LDOUBLE


329 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


332  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

334 
__loˇl_signgam
 = 0;

335  
	`__lgammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

337 
	}
}

341 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

342 && 
deföed
 
	g__exã∫_Æways_ölöe
)

344 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

346  
	`__lgamma_r_föôe
 (
__d
, &
signgam
);

347 
	}
}

348 #ifde‡
__USE_ISOC99


349 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

351  
	`__lgammaf_r_föôe
 (
__d
, &
signgam
);

352 
	}
}

353 #ifde‡
__MATH_DECLARE_LDOUBLE


354 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

356  
	`__lgammÆ_r_föôe
 (
__d
, &
signgam
);

357 
	}
}

363 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

364 #ifde‡
__USE_ISOC99


365 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

366 #ifde‡
__MATH_DECLARE_LDOUBLE


367 #ifde‡
__NO_LONG_DOUBLE_MATH


368 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

370 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

376 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

377 #ifde‡
__USE_ISOC99


378 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

379 #ifde‡
__MATH_DECLARE_LDOUBLE


380 #ifde‡
__NO_LONG_DOUBLE_MATH


381 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

383 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

388 #ifde‡
__USE_ISOC99


390 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

391 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

396 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

402 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

403 #ifde‡
__USE_ISOC99


404 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

405 #ifde‡
__MATH_DECLARE_LDOUBLE


406 #ifde‡
__NO_LONG_DOUBLE_MATH


407 
__REDIRECT_NTH
 (
powl
, (, ),

408 
__pow_föôe
);

410 
__REDIRECT_NTH
 (
powl
, (, ),

411 
__powl_föôe
);

416 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


418 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

420 #ifde‡
__USE_ISOC99


421 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

422 #ifde‡
__MATH_DECLARE_LDOUBLE


423 #ifde‡
__NO_LONG_DOUBLE_MATH


424 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

425 
__ªmaödî_föôe
);

427 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

428 
__ªmaödîl_föôe
);

433 #i‡(
deföed
 
__USE_MISC
 \

434 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))

436 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

438 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_ISOC99


439 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

440 #ifde‡
__MATH_DECLARE_LDOUBLE


441 #ifde‡
__NO_LONG_DOUBLE_MATH


442 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

443 
__sˇlb_föôe
);

445 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

446 
__sˇlbl_föôe
);

452 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

453 #ifde‡
__USE_ISOC99


454 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

455 #ifde‡
__MATH_DECLARE_LDOUBLE


456 #ifde‡
__NO_LONG_DOUBLE_MATH


457 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

459 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

465 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

466 #ifde‡
__USE_ISOC99


467 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

468 #ifde‡
__MATH_DECLARE_LDOUBLE


469 #ifde‡
__NO_LONG_DOUBLE_MATH


470 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

472 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

477 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


479 
__gamma_r_föôe
 (, *);

480 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

482 
__loˇl_signgam
 = 0;

483 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

484  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

485 
	}
}

486 
__gammaf_r_föôe
 (, *);

487 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

489 
__loˇl_signgam
 = 0;

490 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

491  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

492 
	}
}

493 #ifde‡
__MATH_DECLARE_LDOUBLE


494 
__gammÆ_r_föôe
 (, *);

495 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

497 
__loˇl_signgam
 = 0;

498 #ifde‡
__NO_LONG_DOUBLE_MATH


499 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

501 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

503  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

504 
	}
}

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL_VEC
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


199 #i‡(!
deföed
 
__˝lu•lus
 \

200 || 
	g__˝lu•lus
 < 201103L \

201 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

204 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

211 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

215 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

218 #ifde‡
__USE_ISOC99


219 
__BEGIN_NAMESPACE_C99


221 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

222 
	g__END_NAMESPACE_C99


225 #ifde‡
__USE_ISOC99


226 
__BEGIN_NAMESPACE_C99


228 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

229 
	g__END_NAMESPACE_C99


234 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

236 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

237 #i‡(!
deföed
 
__˝lu•lus
 \

238 || 
	g__˝lu•lus
 < 201103L \

239 || 
	g__MATH_DECLARING_DOUBLE
 == 0)

241 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

245 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

247 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

248 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

249 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

250 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

256 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

260 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

261 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

262 
	g__END_NAMESPACE_C99


265 #ifde‡
__USE_ISOC99


266 
__BEGIN_NAMESPACE_C99


268 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

269 
	g__END_NAMESPACE_C99


272 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

274 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

277 #ifde‡
__USE_MISC


281 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

285 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


286 
__BEGIN_NAMESPACE_C99


289 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

292 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

293 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


294 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

297 #ifde‡
__USE_GNU


299 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

301 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

305 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

307 #ifde‡
__USE_ISOC99


309 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

313 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

316 #ifde‡
__USE_ISOC99


318 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

322 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

330 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

335 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

342 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

343 
__exãnsi⁄__


344 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

348 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

349 
__exãnsi⁄__


350 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

354 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

357 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

360 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

364 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

365 
__©åibuã__
 ((
__c⁄°__
));

368 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

369 
__©åibuã__
 ((
__c⁄°__
));

373 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

376 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


377 
	g__END_NAMESPACE_C99


380 #ifde‡
__USE_GNU


382 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

383 
__©åibuã__
 ((
__c⁄°__
));

386 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

387 && 
	g__MATH_DECLARING_DOUBLE
 \

388 && !
deföed
 
	g__USE_XOPEN2K8
)

390 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #ifde‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #ifde‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #ifde‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


390 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


391 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

392 && 
deföed
 
	g__OPTIMIZE__
)

396 #unde‡
m©h_îrh™dlög


405 #ifde‡
__USE_ISOC99


406 
	#__ölöe_m©h›
(
func
, 
›
) \

407 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

408 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

409 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›NP
(
func
, 
›
) \

411 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

412 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

415 
	#__ölöe_m©h›
(
func
, 
›
) \

416 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

417 
	#__ölöe_m©h›NP
(
func
, 
›
) \

418 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

421 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

422 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

423 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

424 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

427 #ifde‡
__USE_ISOC99


428 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

429 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

434 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

437 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

438 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

439 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

440 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

443 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

444 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

445 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

447 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

448 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

450 
Êﬂt_ty≥
 
__ªsu…
; \

451 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

452  
__ªsu…
; \

453 }

	)

456 #ifde‡
__USE_ISOC99


457 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

460 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

461 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

462 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

463 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

464 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

465 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

469 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

470 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

471 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

472 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

473 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

478 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

479 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

480 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

482 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

483 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

484 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

485 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

486 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

487 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

488 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

489 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

490 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

491 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

492 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

493 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

496 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

497 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

498 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

500 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

501 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

503 
code
; \

504 }

	)

507 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

508 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

509 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

511 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

512 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

514 
code
; \

515 }

	)

517 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

518 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

519 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

521 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

522 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

523 
Êﬂt_ty≥
 
¨g3
)) \

525 
code
; \

526 }

	)

530 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


534 #ifde‡
__FAST_MATH__


535 #ifde‡
__USE_GNU


536 
	#__söcos_code
 \

537 
__co§
; \

538 
__sör
; \

539 
__swtmp
; \

540 
__asm
 
__vﬁ©ûe__
 \

555 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

556 *
__söx
 = 
__sör
; \

557 *
__cosx
 = 
__co§


	)

559 
__MATH_INLINE
 

560 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

562 
__söcos_code
;

563 
	}
}

565 
__MATH_INLINE
 

566 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

568 
__söcos_code
;

569 
	}
}

571 
__MATH_INLINE
 

572 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

574 
__söcos_code
;

575 
	}
}

582 #i‡
__GNUC_PREREQ
 (3, 5)

583 
	#__expm1_code
 \

584 
__ãmp
; \

585 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

586  
__ãmp
 ? __ãm∞: 
__x


	)

588 
	#__expm1_code
 \

589 
__vÆue
; \

590 
__exp⁄ít
; \

591 
__ãmp
; \

592 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

602 
__asm
 
__vﬁ©ûe__
 \

604 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

605 
__ãmp
 -= 1.0; \

606 
__ãmp
 +
__vÆue
; \

607  
__ãmp
 ? __ãm∞: 
__x


	)

609 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

611 #i‡
	`__GNUC_PREREQ
 (3, 4)

612 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

614 
	#__exp_code
 \

615 
__vÆue
; \

616 
__exp⁄ít
; \

617 
__asm
 
__vﬁ©ûe__
 \

625 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

626 
__vÆue
 += 1.0; \

627 
__asm
 
__vﬁ©ûe__
 \

629 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

630  
__vÆue


	)

631 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

632 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

636 #i‡!
	`__GNUC_PREREQ
 (3, 5)

637 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

638 
__vÆue
; \

639 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

643  
__vÆue
)

648 #i‡
	`__GNUC_PREREQ
 (3, 4)

649 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

650  
	$__buûtö_©™2l
 (
__y
, 
__x
))

652 
	#__©™2_code
 \

653 
__vÆue
; \

654 
__asm
 
__vﬁ©ûe__
 \

656 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

657  
__vÆue


	)

658 #ifde‡
__FAST_MATH__


659 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

661 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

665 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

666 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

667 
__vÆue
; \

668 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

674  
__vÆue
)

678 #ifde‡
__FAST_MATH__


679 #i‡!
	`__GNUC_PREREQ
 (3,3)

680 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

681 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

682 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

684 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

688 #i‡
	`__GNUC_PREREQ
 (2, 8)

689 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

690 #ifde‡
__USE_ISOC99


691 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

692 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

694 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

696 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

697 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

700 #ifde‡
__FAST_MATH__


701 #i‡!
	`__GNUC_PREREQ
 (3, 4)

703 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

705 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

707 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 #i‡!
	`__GNUC_PREREQ
 (3, 5)

711 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

713 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

714 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

717 #i‡!
	`__GNUC_PREREQ
 (3, 4)

718 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

722 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

723 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

724 { 
__xld
: 
__x
 
	}
}; \

725 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

726 
	g__n
.
	g__xi
[1] = 0x80000000; \

727 
	g__n
.
	g__xi
[0] = 0; \

728  
	g__n
.
	g__xld
)

731 #ifde‡
__FAST_MATH__


733 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

734 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

735  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

737 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

738 
__ex
 = 
	`__ex∂
 (
__x
); \

739  0.5 * (
__ex
 + 1.0 / __ex))

741 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

742 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

743  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

746 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

747 
__vÆue
; \

748 
__ign‹e
; \

749 
__cw
; \

750 
__cwtmp
; \

751 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

759 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

760 "=m" (
__cw
) \

761 : "0" (
__x
)); \

762  
__vÆue
)

764 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

765 
__vÆue
; \

766 
__ign‹e
; \

767 
__cw
; \

768 
__cwtmp
; \

769 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

777 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

778 "=m" (
__cw
) \

779 : "0" (
__x
)); \

780  
__vÆue
)

782 #ifde‡
__FAST_MATH__


783 
	#__ldexp_code
 \

784 
__vÆue
; \

785 
__asm
 
__vﬁ©ûe__
 \

787 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

788  
__vÆue


	)

790 
__MATH_INLINE
 

791 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

793 
__ldexp_code
;

794 
	}
}

799 #ifde‡
__USE_ISOC99


801 #ifde‡
__FAST_MATH__


802 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

806 
	#__M_SQRT2
 1.41421356237309504880L

	)

808 #i‡!
	`__GNUC_PREREQ
 (3, 5)

809 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

810 
__vÆue
; \

811 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

812 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

814 
__asm
 
__vﬁ©ûe__
 \

818 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

819  
__vÆue
)

824 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

825 
__y
 = 
	`__Áb¶
 (
__x
); \

826  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

827 * 
	$__sgn1l
 (
__x
)))

829 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

830  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

832 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

833 
__y
 = 
	`__Áb¶
 (
__x
); \

834  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

837 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

838  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

840 #i‡!
	`__GNUC_PREREQ
 (3, 5)

841 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

842 
__vÆue
; \

843 
__junk
; \

844 
__asm
 
__vﬁ©ûe__
 \

846 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

847  
__vÆue
)

853 #ifde‡
__USE_ISOC99


854 #ifde‡
__FAST_MATH__


856 #i‡!
	`__GNUC_PREREQ
 (3, 5)

857 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

860 
__MATH_INLINE
 

861 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

863 
__ldexp_code
;

864 
	}
}

866 
__MATH_INLINE
 

867 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

869 
__ldexp_code
;

870 
	}
}

872 
__ölöe_m©h›NP
 (
röt
, "frndint")

875 
	#__Ãöt_code
 \

876 
__Ãöåes
; \

877 
__asm__
 
__vﬁ©ûe__
 \

879 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

880  
__Ãöåes


	)

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãötf
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöt
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 
__MATH_INLINE
 

892 
__NTH
 (
	$Ãöé
 (
__x
))

894 
__Ãöt_code
;

895 
	}
}

896 #unde‡
__Ãöt_code


898 
	#__Œröt_code
 \

899 
__Œröåes
; \

900 
__asm__
 
__vﬁ©ûe__
 \

902 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

903  
__Œröåes


	)

904 
__exãnsi⁄__


905 
__MATH_INLINE
 

906 
__NTH
 (
	$Œrötf
 (
__x
))

908 
__Œröt_code
;

909 
	}
}

910 
__exãnsi⁄__


911 
__MATH_INLINE
 

912 
__NTH
 (
	$Œröt
 (
__x
))

914 
__Œröt_code
;

915 
	}
}

916 
__exãnsi⁄__


917 
__MATH_INLINE
 

918 
__NTH
 (
	$Œröé
 (
__x
))

920 
__Œröt_code
;

921 
	}
}

922 #unde‡
__Œröt_code


927 #ifde‡
__USE_MISC


929 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

930 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

931 
__vÆue
; \

932 
__˛obbîed
; \

933 
__asm
 
__vﬁ©ûe__
 \

938 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

939  
__vÆue
)

944 
__MATH_INLINE
 

945 
__NTH
 (
	$__föôe
 (
__x
))

947  (
__exãnsi⁄__


948 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

950 
	}
}

955 #unde‡
__©™2_code


956 #ifde‡
__FAST_MATH__


957 #unde‡
__expm1_code


958 #unde‡
__exp_code


959 #unde‡
__söcos_code


966 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


967 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

968 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

969 
__vÆue
;

970 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

971 : "Ò" (
__vÆue
)

972 : "0" (
__x
), "u" (
__y
) : "st(1)");

973  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_INLINE_u«lig√d
 1

	)

27 
	#_HAVE_STRING_ARCH_memp˝y
 1

	)

31 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

32 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

33 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

34 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

35 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

36 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

37 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

38 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

39 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

40 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

41 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

42 || 
deföed
 
	g__btvî2__
)

46 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

47 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

49 #i‚de‡
__STRING_INLINE


50 #i‚de‡
__exã∫_ölöe


51 
	#__STRING_INLINE
 
ölöe


	)

53 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

58 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

59 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

60 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

62 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

63 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

64 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

65 | ((c⁄° *Ë(
§c
))[
idx
])

	)

69 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

70 
	#mem˝y
(
de°
, 
§c
, 
n
) \

71 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

72 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

73 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

74 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

75 ((
n
) == 0 \

76 ? (
de°
) \

77 : (((
n
) % 4 == 0) \

78 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

79 : (((
n
) % 2 == 0) \

80 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

81 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

83 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

84 
size_t
 
__n
);

86 
__STRING_INLINE
 *

87 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

89 
__d0
, 
__d1
;

90 *
__tmp
 = 
__de°
;

91 
__asm__
 
__vﬁ©ûe__


99 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

100 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

102  
__de°
;

103 
	}
}

105 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

106 
size_t
 
__n
);

108 
__STRING_INLINE
 *

109 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

111 
__d0
, 
__d1
;

112 *
__tmp
 = 
__de°
;

113 
__asm__
 
__vﬁ©ûe__


126 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

127 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

129  
__de°
;

130 
	}
}

132 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

134 
__STRING_INLINE
 *

135 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

137 
__d0
, 
__d1
, 
__d2
;

138 *
__tmp
 = 
__de°
;

139 
__asm__
 
__vﬁ©ûe__


150 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

151 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

152 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

153 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

155  
__de°
;

156 
	}
}

158 
	#_HAVE_STRING_ARCH_memmove
 1

	)

159 #i‚de‡
_FORCE_INLINES


162 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

164 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

165 
	`__asm__
 ("memmove");

167 
__STRING_INLINE
 *

168 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

170 
__d0
, 
__d1
, 
__d2
;

171 *
__tmp
 = 
__de°
;

172 i‡(
__de°
 < 
__§c
)

173 
__asm__
 
__vﬁ©ûe__


176 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

177 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

178 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

179 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

181 
__asm__
 
__vﬁ©ûe__


187 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

188 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

189 : "0" (
__n
), "1" (__¿+ (c⁄° *Ë
__§c
),

190 "2" (
__n
 + (*Ë
__tmp
),

191 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

192  
__de°
;

193 
	}
}

197 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

198 #i‚de‡
_FORCE_INLINES


199 #i‚de‡
__PIC__


201 
__STRING_INLINE
 

202 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

204 
__d0
, 
__d1
, 
__d2
;

205 
__ªs
;

206 
__asm__
 
__vﬁ©ûe__


214 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

215 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

216 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

217 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

219  
__ªs
;

220 
	}
}

225 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

226 
	#_USE_STRING_ARCH_mem£t
 1

	)

227 
	#mem£t
(
s
, 
c
, 
n
) \

228 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

229 ? ((
n
) == 1 \

230 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

231 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

232 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

233 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

234 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

235 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

236 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

237 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

238 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

240 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

241 *((*Ë
__s
Ë(Ë(
c
); \

242 
__s
; })

	)

244 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

245 ({ *
__s
 = (
s
); \

247 
__ui
; \

248 
__usi
; \

249 
__uc
; \

250 } *
__u
 = 
__s
; \

251 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

257 i‡((
n
) == 3 || (n) >= 5) \

258 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

261 
n
) \

264 
__u
->
__ui
 = 
__c
; \

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

267 
__u
->
__ui
 = 
__c
; \

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

270 
__u
->
__ui
 = 
__c
; \

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

273 
__u
->
__usi
 = (Ë
__c
; \

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

275 
__u
->
__uc
 = (Ë
__c
; \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__usi
 = (Ë
__c
; \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__uc
 = (Ë
__c
; \

305 
__u
->
__ui
 = 
__c
; \

306 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

308 
__u
->
__ui
 = 
__c
; \

309 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

311 
__u
->
__ui
 = 
__c
; \

312 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

314 
__u
->
__ui
 = 
__c
; \

319 
__s
; })

	)

321 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

322 (((
n
) % 4 == 0) \

323 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

324 
n
) \

325 : (((
n
) % 2 == 0) \

326 ? 
	`__mem£t_c˙_by2
 (
s
, \

327 ((Ë((Ë(
c
))) * 0x01010101,\

328 
n
) \

329 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

331 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

332 
size_t
 
__n
);

334 
__STRING_INLINE
 *

335 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

337 *
__tmp
 = 
__s
;

338 
__d0
;

339 #ifde‡
__i686__


340 
__asm__
 
__vﬁ©ûe__


343 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

344 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

345 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

348 
__asm__
 
__vﬁ©ûe__


354 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

355 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

356 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

359  
__s
;

360 
	}
}

362 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

363 
size_t
 
__n
);

365 
__STRING_INLINE
 *

366 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

368 
__d0
, 
__d1
;

369 *
__tmp
 = 
__s
;

370 #ifde‡
__i686__


371 
__asm__
 
__vﬁ©ûe__


375 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

376 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

377 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

380 
__asm__
 
__vﬁ©ûe__


386 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

387 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

388 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

391  
__s
;

392 
	}
}

394 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

395 (((
n
) % 4 == 0) \

396 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

397 : (((
n
) % 2 == 0) \

398 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

399 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

401 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

403 
__STRING_INLINE
 *

404 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

406 *
__tmp
 = 
__s
;

407 
__d0
;

408 
__asm__
 
__vﬁ©ûe__


418 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

419 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

420 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

422  
__s
;

423 
	}
}

425 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

427 
__STRING_INLINE
 *

428 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
;

431 *
__tmp
 = 
__s
;

432 
__asm__
 
__vﬁ©ûe__


443 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

444 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

445 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

447  
__s
;

448 
	}
}

452 
	#_HAVE_STRING_ARCH_memchr
 1

	)

453 #i‚de‡
_FORCE_INLINES


454 
__STRING_INLINE
 *

455 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

457 
__d0
;

458 #ifde‡
__i686__


459 
__d1
;

461 *
__ªs
;

462 i‡(
__n
 == 0)

463  
NULL
;

464 #ifde‡
__i686__


465 
__asm__
 
__vﬁ©ûe__


469 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

470 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

471 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

474 
__asm__
 
__vﬁ©ûe__


480 : "=D" (
__ªs
), "=&c" (
__d0
)

481 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

482 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

485  
__ªs
 - 1;

486 
	}
}

489 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

490 #i‚de‡
_FORCE_INLINES


491 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

493 
__STRING_INLINE
 *

494 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

496 
__d0
;

497 #ifde‡
__i686__


498 
__d1
;

500 *
__ªs
;

501 i‡(
__n
 == 0)

502  
NULL
;

503 #ifde‡
__i686__


504 
__asm__
 
__vﬁ©ûe__


510 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

511 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

512 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

515 
__asm__
 
__vﬁ©ûe__


522 : "=D" (
__ªs
), "=&c" (
__d0
)

523 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

524 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

527  
__ªs
;

528 
	}
}

529 #ifde‡
__USE_GNU


530 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

535 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

536 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

538 #i‚de‡
_FORCE_INLINES


539 
__STRING_INLINE
 *

540 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

542 
__d0
;

543 *
__ªs
;

544 
__asm__
 
__vﬁ©ûe__


547 : "=D" (
__ªs
), "=&c" (
__d0
)

548 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

549 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

551  
__ªs
 - 1;

552 
	}
}

553 #ifde‡
__USE_GNU


554 
__STRING_INLINE
 *

555 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

557  
	`__øwmemchr
 (
__s
, 
__c
);

558 
	}
}

564 
	#_HAVE_STRING_ARCH_°æí
 1

	)

565 
	#°æí
(
°r
) \

566 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

567 ? 
	`__buûtö_°æí
 (
°r
) \

568 : 
	`__°æí_g
 (
°r
)))

	)

569 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

571 
__STRING_INLINE
 
size_t


572 
	$__°æí_g
 (c⁄° *
__°r
)

574 
__dummy
;

575 c⁄° *
__tmp
 = 
__°r
;

576 
__asm__
 
__vﬁ©ûe__


582 : "Ù" (
__tmp
), "=&q" (
__dummy
)

583 : "0" (
__°r
),

584 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

586  
__tmp
 - 
__°r
 - 1;

587 
	}
}

591 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

592 
	#°r˝y
(
de°
, 
§c
) \

593 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

594 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

595 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

596 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

597 (c⁄° *Ë(
§c
), \

598 
	`°æí
 (
§c
) + 1)) \

599 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

601 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

602 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

604 
__ui
; \

605 
__usi
; \

606 
__uc
; \

607 
__c
; \

608 } *
__u
 = (*Ë
__de°
; \

609 
§˛í
) \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

618 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

619 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

620 
__u
->
__uc
 = '\0'; \

623 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__uc
 = '\0'; \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

636 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

637 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

638 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

640 
__u
->
__uc
 = '\0'; \

643 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

645 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

648 (*Ë
__de°
; }))

	)

650 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

652 
__STRING_INLINE
 *

653 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

655 *
__tmp
 = 
__de°
;

656 
__dummy
;

657 
__asm__
 
__vﬁ©ûe__


666 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

667 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

668 : "0" (
__§c
), "1" (
__tmp
),

669 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

671  
__de°
;

672 
	}
}

675 #ifde‡
__USE_GNU


676 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

678 
	#__°p˝y
(
de°
, 
§c
) \

679 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

680 ? (
	`°æí
 (
§c
) + 1 <= 8 \

681 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

682 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

683 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

684 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

685 ((
§˛í
) % 4 == 0 \

686 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

687 : ((
§˛í
) % 2 == 0 \

688 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

689 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

692 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

694 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

695 (
	`__exãnsi⁄__
 ({ union { \

696 
__ui
; \

697 
__usi
; \

698 
__uc
; \

699 
__c
; \

700 } *
__u
 = (*Ë(
de°
); \

701 
§˛í
) \

704 
__u
->
__uc
 = '\0'; \

707 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

708 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

713 
__u
->
__uc
 = '\0'; \

716 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

717 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__uc
 = '\0'; \

725 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

726 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

727 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

728 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

731 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

732 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

733 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

735 
__u
->
__uc
 = '\0'; \

738 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

739 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

740 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

741 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

744 (*Ë
__u
; }))

	)

746 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

747 
size_t
 
__§˛í
);

749 
__STRING_INLINE
 *

750 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

752 *
__tmp
 = 
__de°
;

753 
__d0
, 
__d1
;

754 
__asm__
 
__vﬁ©ûe__


762 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

763 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

765  
__tmp
;

766 
	}
}

768 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

769 
size_t
 
__§˛í
);

771 
__STRING_INLINE
 *

772 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

774 *
__tmp
 = 
__de°
;

775 
__d0
, 
__d1
;

776 
__asm__
 
__vﬁ©ûe__


789 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

790 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

791 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

792 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

794  
__tmp
 + 2;

795 
	}
}

797 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

798 
size_t
 
__§˛í
);

800 
__STRING_INLINE
 *

801 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

803 
__d0
, 
__d1
;

804 *
__tmp
 = 
__de°
;

805 
__asm__
 
__vﬁ©ûe__


816 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

817 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

818 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

819 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

821  
__tmp
;

822 
	}
}

824 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

826 
__STRING_INLINE
 *

827 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

829 *
__tmp
 = 
__de°
;

830 
__dummy
;

831 
__asm__
 
__vﬁ©ûe__


840 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

841 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

842 : "0" (
__§c
), "1" (
__tmp
),

843 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

845  
__tmp
 - 1;

846 
	}
}

851 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

852 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

853 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

854 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

855 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

856 (c⁄° *Ë(
§c
), 
n
) \

857 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

858 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

859 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

860 (((
§˛í
) % 4 == 0) \

861 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

862 : (((
§˛í
) % 2 == 0) \

863 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

864 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

866 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

867 
size_t
 
__§˛í
, size_à
__n
);

869 
__STRING_INLINE
 *

870 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

872 *
__tmp
 = 
__de°
;

873 
__dummy1
, 
__dummy2
;

874 
__asm__
 
__vﬁ©ûe__


882 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

883 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

884 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

885 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

887 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

888  
__de°
;

889 
	}
}

891 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

892 
size_t
 
__§˛í
, size_à
__n
);

894 
__STRING_INLINE
 *

895 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

897 *
__tmp
 = 
__de°
;

898 
__dummy1
, 
__dummy2
;

899 
__asm__
 
__vﬁ©ûe__


912 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

913 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

914 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

915 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

917 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

918  
__de°
;

919 
	}
}

921 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

922 
size_t
 
__§˛í
, size_à
__n
);

924 
__STRING_INLINE
 *

925 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

927 
__d0
, 
__d1
;

928 *
__tmp
 = 
__de°
;

929 
__asm__
 
__vﬁ©ûe__


940 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

941 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

942 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

943 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

945 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

946  
__de°
;

947 
	}
}

949 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

950 
size_t
 
__n
);

952 
__STRING_INLINE
 *

953 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

955 *
__tmp
 = 
__de°
;

956 
__dummy
;

957 i‡(
__n
 > 0)

958 
__asm__
 
__vﬁ©ûe__


974 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

975 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

978  
__de°
;

979 
	}
}

983 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

984 
	#°rˇt
(
de°
, 
§c
) \

985 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

986 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

987 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

989 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

990 
size_t
 
__§˛í
);

992 
__STRING_INLINE
 *

993 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

995 #ifde‡
__i686__


996 
__d0
;

997 *
__tmp
;

998 
__asm__
 
__vﬁ©ûe__


1000 : "=D" (
__tmp
), "=&c" (
__d0
),

1001 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1002 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

1003 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1005 --
__tmp
;

1007 *
__tmp
 = 
__de°
;

1008 
__asm__
 
__vﬁ©ûe__


1014 : "Ù" (
__tmp
),

1015 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1016 : "0" (
__tmp
),

1017 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1020 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1021  
__de°
;

1022 
	}
}

1024 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1026 
__STRING_INLINE
 *

1027 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1029 *
__tmp
 = 
__de°
;

1030 
__dummy
;

1031 
__asm__
 
__vﬁ©ûe__


1044 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1045 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1046 : "1" (
__tmp
), "2" (
__§c
),

1047 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1049  
__de°
;

1050 
	}
}

1054 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1055 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1056 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1057 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1058 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1059 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1060 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1061 (c⁄° *Ë(
§c
), \

1062 (
n
)Ë0, 
__de°
)) \

1063 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1065 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1066 
size_t
 
__n
);

1068 
__STRING_INLINE
 *

1069 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1071 *
__tmp
 = 
__de°
;

1072 
__dummy
;

1073 #ifde‡
__i686__


1074 
__asm__
 
__vﬁ©ûe__


1088 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1089 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1092 
__asm__
 
__vﬁ©ûe__


1109 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1110 : "1" ((Ë
__tmp
 - 1), "2" (
__§c
), "3" (
__n
)

1113  
__de°
;

1114 
	}
}

1118 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1119 
	#°rcmp
(
s1
, 
s2
) \

1120 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1121 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1122 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1123 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1124 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1125 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1126 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1127 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1128 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1129 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1130 (c⁄° *Ë(
s2
), \

1131 
	`°æí
 (
s1
)) \

1132 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1133 (c⁄° *Ë(
s2
), \

1134 
	`°æí
 (
s1
))) \

1135 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1136 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1137 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1138 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1139 (c⁄° *Ë(
s2
), \

1140 
	`°æí
 (
s2
)) \

1141 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1142 (c⁄° *Ë(
s2
), \

1143 
	`°æí
 (
s2
))) \

1144 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1146 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1147 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1148 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1150 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1151 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1154 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1155 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1158 
__ªsu…
; }))

	)

1160 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1161 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1162 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1163 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1165 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1166 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1169 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1170 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1173 
__ªsu…
; }))

	)

1175 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1176 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1177 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1178 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1180 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1181 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1183 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1184 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1185 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1188 
__ªsu…
; }))

	)

1190 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1192 
__STRING_INLINE
 

1193 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1195 
__ªs
;

1196 
__asm__
 
__vﬁ©ûe__


1212 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1213 : "1" (
__s1
), "2" (
__s2
),

1214 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1215 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1217  
__ªs
;

1218 
	}
}

1222 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1223 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1224 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1225 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1226 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1227 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1228 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1230 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1231 
size_t
 
__n
);

1233 
__STRING_INLINE
 

1234 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1236 
__ªs
;

1237 
__asm__
 
__vﬁ©ûe__


1256 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1257 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1258 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1259 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1261  
__ªs
;

1262 
	}
}

1266 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1267 
	#_USE_STRING_ARCH_°rchr
 1

	)

1268 
	#°rchr
(
s
, 
c
) \

1269 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1270 ? ((
c
) == '\0' \

1271 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1272 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1273 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1275 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1277 
__STRING_INLINE
 *

1278 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1280 
__d0
;

1281 *
__ªs
;

1282 
__asm__
 
__vﬁ©ûe__


1292 : "Ù" (
__ªs
), "=&a" (
__d0
)

1293 : "0" (
__s
), "1" (
__c
),

1294 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1296  
__ªs
;

1297 
	}
}

1299 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1301 
__STRING_INLINE
 *

1302 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1304 
__d0
;

1305 *
__ªs
;

1306 
__asm__
 
__vﬁ©ûe__


1317 : "Ù" (
__ªs
), "=&a" (
__d0
)

1318 : "0" (
__s
), "1" (
__c
),

1319 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1321  
__ªs
;

1322 
	}
}

1326 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1327 
	#__°rch∫ul
(
s
, 
c
) \

1328 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1329 ? ((
c
) == '\0' \

1330 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1331 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1332 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1334 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1336 
__STRING_INLINE
 *

1337 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1339 
__d0
;

1340 *
__ªs
;

1341 
__asm__
 
__vﬁ©ûe__


1351 : "Ù" (
__ªs
), "=&a" (
__d0
)

1352 : "0" (
__s
), "1" (
__c
),

1353 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1355  
__ªs
;

1356 
	}
}

1358 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1360 
__STRING_INLINE
 *

1361 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1363 
__d0
;

1364 *
__ªs
;

1365 
__asm__
 
__vﬁ©ûe__


1376 : "Ù" (
__ªs
), "=&a" (
__d0
)

1377 : "0" (
__s
), "1" (
__c
),

1378 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1380  
__ªs
;

1381 
	}
}

1382 #ifde‡
__USE_GNU


1383 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1387 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1389 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1390 
	#ödex
(
s
, 
c
) \

1391 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1392 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1393 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1398 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1399 
	#°ºchr
(
s
, 
c
) \

1400 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1401 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1402 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1404 #ifde‡
__i686__


1405 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1407 
__STRING_INLINE
 *

1408 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1410 
__d0
, 
__d1
;

1411 *
__ªs
;

1412 
__asm__
 
__vﬁ©ûe__


1420 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1421 : "0" (1), "1" (
__s
), "2" (
__c
),

1422 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1424  
__ªs
 - 1;

1425 
	}
}

1427 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1429 
__STRING_INLINE
 *

1430 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1432 
__d0
, 
__d1
;

1433 *
__ªs
;

1434 
__asm__
 
__vﬁ©ûe__


1443 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1444 : "0" (1), "1" (
__s
), "2" (
__c
),

1445 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1447  
__ªs
 - 1;

1448 
	}
}

1450 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1452 
__STRING_INLINE
 *

1453 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1455 
__d0
, 
__d1
;

1456 *
__ªs
;

1457 
__asm__
 
__vﬁ©ûe__


1467 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1468 : "0" (0), "1" (
__s
), "2" (
__c
),

1469 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1471  
__ªs
;

1472 
	}
}

1474 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1476 
__STRING_INLINE
 *

1477 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1479 
__d0
, 
__d1
;

1480 *
__ªs
;

1481 
__asm__
 
__vﬁ©ûe__


1492 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1493 : "0" (0), "1" (
__s
), "2" (
__c
),

1494 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1496  
__ªs
;

1497 
	}
}

1501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1503 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1504 
	#rödex
(
s
, 
c
) \

1505 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1506 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1507 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1513 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1514 
	#°rc•n
(
s
, 
ªje˘
) \

1515 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1516 ? ((
ªje˘
)[0] == '\0' \

1517 ? 
	`°æí
 (
s
) \

1518 : ((
ªje˘
)[1] == '\0' \

1519 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1520 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1521 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1523 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1525 #i‚de‡
_FORCE_INLINES


1526 
__STRING_INLINE
 
size_t


1527 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1529 
__d0
;

1530 *
__ªs
;

1531 
__asm__
 
__vﬁ©ûe__


1540 : "Ù" (
__ªs
), "=&a" (
__d0
)

1541 : "0" (
__s
), "1" (
__ªje˘
),

1542 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1544  (
__ªs
 - 1Ë- 
__s
;

1545 
	}
}

1548 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1549 
size_t
 
__ªje˘_Àn
);

1551 
__STRING_INLINE
 
size_t


1552 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1554 
__d0
, 
__d1
, 
__d2
;

1555 c⁄° *
__ªs
;

1556 
__asm__
 
__vﬁ©ûe__


1567 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1568 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1570  (
__ªs
 - 1Ë- 
__s
;

1571 
	}
}

1573 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1574 #ifde‡
__PIC__


1576 
__STRING_INLINE
 
size_t


1577 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1579 
__d0
, 
__d1
, 
__d2
;

1580 c⁄° *
__ªs
;

1581 
__asm__
 
__vﬁ©ûe__


1598 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1599 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1601  (
__ªs
 - 1Ë- 
__s
;

1602 
	}
}

1604 
__STRING_INLINE
 
size_t


1605 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1607 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1608 c⁄° *
__ªs
;

1609 
__asm__
 
__vﬁ©ûe__


1623 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1624 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1627  (
__ªs
 - 1Ë- 
__s
;

1628 
	}
}

1634 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1635 
	#°r•n
(
s
, 
ac˚±
) \

1636 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1637 ? ((
ac˚±
)[0] == '\0' \

1638 ? ((Ë(
s
), 0) \

1639 : ((
ac˚±
)[1] == '\0' \

1640 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1641 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1642 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1644 #i‚de‡
_FORCE_INLINES


1645 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1647 
__STRING_INLINE
 
size_t


1648 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1650 
__d0
;

1651 *
__ªs
;

1653 
__asm__
 
__vﬁ©ûe__


1659 : "Ù" (
__ªs
), "=&q" (
__d0
)

1660 : "0" (
__s
), "1" (
__ac˚±
),

1661 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1663  (
__ªs
 - 1Ë- 
__s
;

1664 
	}
}

1667 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1668 
size_t
 
__ac˚±_Àn
);

1670 
__STRING_INLINE
 
size_t


1671 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1673 
__d0
, 
__d1
, 
__d2
;

1674 c⁄° *
__ªs
;

1675 
__asm__
 
__vﬁ©ûe__


1686 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1687 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1690 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1691 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1693  (
__ªs
 - 1Ë- 
__s
;

1694 
	}
}

1696 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1697 #ifde‡
__PIC__


1699 
__STRING_INLINE
 
size_t


1700 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1702 
__d0
, 
__d1
, 
__d2
;

1703 c⁄° *
__ªs
;

1704 
__asm__
 
__vﬁ©ûe__


1720 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1721 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1723  (
__ªs
 - 1Ë- 
__s
;

1724 
	}
}

1726 
__STRING_INLINE
 
size_t


1727 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1729 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1730 c⁄° *
__ªs
;

1731 
__asm__
 
__vﬁ©ûe__


1745 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1746 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1748  (
__ªs
 - 1Ë- 
__s
;

1749 
	}
}

1754 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1755 
	#°Ωbrk
(
s
, 
ac˚±
) \

1756 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1757 ? ((
ac˚±
)[0] == '\0' \

1758 ? ((Ë(
s
), (*) 0) \

1759 : ((
ac˚±
)[1] == '\0' \

1760 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1761 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1762 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1764 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1765 
size_t
 
__ac˚±_Àn
);

1767 
__STRING_INLINE
 *

1768 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1770 
__d0
, 
__d1
, 
__d2
;

1771 *
__ªs
;

1772 
__asm__
 
__vﬁ©ûe__


1787 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1788 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1790  
__ªs
;

1791 
	}
}

1793 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1794 #ifde‡
__PIC__


1796 
__STRING_INLINE
 *

1797 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1799 
__d0
, 
__d1
, 
__d2
;

1800 *
__ªs
;

1801 
__asm__
 
__vﬁ©ûe__


1822 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1823 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1825  
__ªs
;

1826 
	}
}

1828 
__STRING_INLINE
 *

1829 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1831 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1832 *
__ªs
;

1833 
__asm__
 
__vﬁ©ûe__


1852 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1853 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1855  
__ªs
;

1856 
	}
}

1861 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1862 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1863 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1864 ? ((
√edÀ
)[0] == '\0' \

1865 ? (
hay°ack
) \

1866 : ((
√edÀ
)[1] == '\0' \

1867 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1868 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1869 
	`°æí
 (
√edÀ
)))) \

1870 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1874 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1875 c⁄° 
__√edÀ
[],

1876 
size_t
 
__√edÀ_Àn
);

1878 
__STRING_INLINE
 *

1879 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1880 
size_t
 
__√edÀ_Àn
)

1882 
__d0
, 
__d1
, 
__d2
;

1883 *
__ªs
;

1884 
__asm__
 
__vﬁ©ûe__


1897 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1898 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1900  
__ªs
;

1901 
	}
}

1903 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1904 c⁄° *
__√edÀ
);

1905 #ifde‡
__PIC__


1907 
__STRING_INLINE
 *

1908 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1910 
__d0
, 
__d1
, 
__d2
;

1911 *
__ªs
;

1912 
__asm__
 
__vﬁ©ûe__


1931 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1932 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1933 "d" (
__√edÀ
)

1935  
__ªs
;

1936 
	}
}

1938 
__STRING_INLINE
 *

1939 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1941 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1942 *
__ªs
;

1943 
__asm__
 
__vﬁ©ûe__


1960 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1961 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1962 "b" (
__√edÀ
)

1964  
__ªs
;

1965 
	}
}

1971 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1972 #ifde‡
__i686__


1973 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1974 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1975 ? 
	`__buûtö_ffs
 (
w‹d
) \

1976 : ({ 
__˙t
, 
__tmp
; \

1977 
__asm__
 
__vﬁ©ûe__
 \

1980 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1981 : "rm" (
w‹d
), "1" (-1)); \

1982 
__˙t
 + 1; }))

	)

1984 #i‚de‡
ff¶


1985 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1990 #i‚de‡
_FORCE_INLINES


1991 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

52 
	#__°rög2_1b±r_p
(
__x
) \

53 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

56 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


57 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

61 #i‚de‡
_HAVE_STRING_ARCH_°rchr


62 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

63 
	#°rchr
(
s
, 
c
) \

64 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

65 && (
c
) == '\0' \

66 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

67 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

72 #ifde‡
__USE_GNU


73 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


74 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

77 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

83 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


84 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

89 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


90 #ifde‡
_USE_STRING_ARCH_°rchr


91 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

92 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

93 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

94 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

95 ? 
	`°rˇt
 (
__de°
, 
§c
) \

96 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

97 
§c
, 
n
)Ë'\0', 
__de°
)) \

98 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

100 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

106 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


107 
	#°rcmp
(
s1
, 
s2
) \

108 
__exãnsi⁄__
 \

109 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

110 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

111 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

112 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

113 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

114 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

115 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

116 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

118 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

119 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

120 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

121 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

122 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

123 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

124 : -
	`__°rcmp_cg
 (
s2
, 
s1
, 
__s2_Àn
)) \

125 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

127 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

128 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

129 (c⁄° *Ë(c⁄° *Ë(
s2
); \

130 
__ªsu…
 = \

131 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

132 - 
__s2
[0]); \

133 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

135 
__ªsu…
 = (((const *) \

136 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

137 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

139 
__ªsu…
 = (((const *) \

140 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

141 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

142 
__ªsu…
 = (((const *) \

143 (c⁄° *Ë(
s1
))[3] \

144 - 
__s2
[3]); \

147 
__ªsu…
; }))

	)

152 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


153 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

154 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

155 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

156 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

157 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

158 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

159 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

165 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


166 
	#°rc•n
(
s
, 
ªje˘
Ë
	`__buûtö_°rc•n
 (s,Ñeje˘)

	)

172 #i‚de‡
_HAVE_STRING_ARCH_°r•n


173 
	#°r•n
(
s
, 
ac˚±
Ë
	`__buûtö_°r•n
 (s,ác˚±)

	)

178 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


179 
	#°Ωbrk
(
s
, 
ac˚±
Ë
	`__buûtö_°Ωbrk
 (s,ác˚±)

	)

183 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


184 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


185 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

186 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

187 && ((c⁄° *Ë(
£p
))[0] != '\0' \

188 && ((c⁄° *Ë(
£p
))[1] == '\0' \

189 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

190 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

193 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

194 
__STRING_INLINE
 *

195 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

197 *
__ªsu…
;

198 i‡(
__s
 =
NULL
)

199 
__s
 = *
__√xç
;

200 *
__s
 =
__£p
)

201 ++
__s
;

202 
__ªsu…
 = 
NULL
;

203 i‡(*
__s
 != '\0')

205 
__ªsu…
 = 
__s
++;

206 *
__s
 != '\0')

207 i‡(*
__s
++ =
__£p
)

209 
__s
[-1] = '\0';

213 *
__√xç
 = 
__s
;

214  
__ªsu…
;

215 
	}
}

216 #ifde‡
__USE_POSIX


217 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

222 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


223 #i‚de‡
_HAVE_STRING_ARCH_°r£p


225 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

226 
	#__°r£p
(
s
, 
ªje˘
) \

227 
__exãnsi⁄__
 \

228 ({ 
__r0
, 
__r1
, 
__r2
; \

229 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

230 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

231 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

232 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

233 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

234 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

235 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

236 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

237 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

238 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

239 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

240 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

243 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

244 
__STRING_INLINE
 *

245 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

247 *
__ªtvÆ
 = *
__s
;

248 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

249 *(*
__s
)++ = '\0';

250  
__ªtvÆ
;

251 
	}
}

253 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

254 
__STRING_INLINE
 *

255 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

257 *
__ªtvÆ
 = *
__s
;

258 i‡(
__ªtvÆ
 !
NULL
)

260 *
__˝
 = 
__ªtvÆ
;

263 i‡(*
__˝
 == '\0')

265 
__˝
 = 
NULL
;

268 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

270 *
__˝
++ = '\0';

273 ++
__˝
;

275 *
__s
 = 
__˝
;

277  
__ªtvÆ
;

278 
	}
}

280 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

281 
__ªje˘3
);

282 
__STRING_INLINE
 *

283 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

285 *
__ªtvÆ
 = *
__s
;

286 i‡(
__ªtvÆ
 !
NULL
)

288 *
__˝
 = 
__ªtvÆ
;

291 i‡(*
__˝
 == '\0')

293 
__˝
 = 
NULL
;

296 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

298 *
__˝
++ = '\0';

301 ++
__˝
;

303 *
__s
 = 
__˝
;

305  
__ªtvÆ
;

306 
	}
}

307 #ifde‡
__USE_MISC


308 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

315 #ifde‡
__USE_MISC


317 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


318 
	#__√ed_mÆloc_™d_ˇŒoc


	)

319 
	~<°dlib.h
>

322 #i‚de‡
_HAVE_STRING_ARCH_°rdup


324 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

325 
	#__°rdup
(
s
) \

326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

327 ? (((c⁄° *Ë(
s
))[0] == '\0' \

328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

330 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

331 i‡(
__ªtvÆ
 !
NULL
) \

332 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

333 
__ªtvÆ
; 
	}
})) \

334 : 
	`__°rdup
 (
s
)))

	)

336 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


337 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

341 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


343 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

344 
__THROW
 
__©åibuã_mÆloc__
;

345 
	#__°∫dup
(
s
, 
n
) \

346 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

347 ? (((c⁄° *Ë(
s
))[0] == '\0' \

348 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

349 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

350 
size_t
 
__n
 = (
n
); \

351 *
__ªtvÆ
; \

352 i‡(
__n
 < 
__Àn
) \

353 
__Àn
 = 
__n
 + 1; \

354 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

355 i‡(
__ªtvÆ
 !
NULL
) \

357 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

358 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

359 
__Àn
 - 1); \

361 
__ªtvÆ
; 
	}
})) \

362 : 
	`__°∫dup
 (
s
, 
n
)))

	)

364 #ifde‡
__USE_XOPEN2K8


365 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

371 #i‚de‡
_FORCE_INLINES


372 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

57 
	#__STDC_ISO_10646__
 201605L

	)

60 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

310 #unde‡
__Æways_ölöe


311 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

313 #unde‡
__Æways_ölöe


314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡
__GNUC_PREREQ
 (4,3)

320 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

322 
	#__©åibuã_¨tificül__


	)

334 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

335 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

336 || 
deföed
 
__GNUC_GNU_INLINE__
)))

337 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


338 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

339 
	#__exã∫_Æways_ölöe
 \

340 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

342 
	#__exã∫_ölöe
 
__ölöe


	)

343 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

347 #ifde‡
__exã∫_Æways_ölöe


348 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

353 #i‡
__GNUC_PREREQ
 (4,3)

354 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

355 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

362 #i‡!
__GNUC_PREREQ
 (2,8)

363 
	#__exãnsi⁄__


	)

367 #i‡!
__GNUC_PREREQ
 (2,92)

368 
	#__ª°ri˘


	)

374 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


375 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

377 #ifde‡
__GNUC__


378 
	#__ª°ri˘_¨r


	)

380 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

381 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

384 
	#__ª°ri˘_¨r


	)

389 #i‡
__GNUC__
 >= 3

390 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

391 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

393 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

394 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

397 #i‡(!
deföed
 
_N‹ëu∫
 \

398 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

399 && !
	$__GNUC_PREREQ
 (4,7))

400 #i‡
	`__GNUC_PREREQ
 (2,8)

401 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

403 
	#_N‹ëu∫


	)

407 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

408 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

409 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

410 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

411 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

412 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

415 
	~<bôs/w‹dsize.h
>

417 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


418 
	#__LDBL_COMPAT
 1

	)

419 #ifde‡
__REDIRECT


420 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

422 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

423 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

424 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

425 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

426 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

427 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

428 
	#__LDBL_REDIR_DECL
(
«me
) \

429 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

430 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

431 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

432 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

433 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

436 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


437 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

438 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

439 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

440 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

441 
	#__LDBL_REDIR_DECL
(
«me
)

	)

442 #ifde‡
__REDIRECT


443 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

444 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

445 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

40 
	#__DECL_SIMD_sö


	)

41 
	#__DECL_SIMD_söf


	)

42 
	#__DECL_SIMD_söl


	)

44 
	#__DECL_SIMD_söcos


	)

45 
	#__DECL_SIMD_söcosf


	)

46 
	#__DECL_SIMD_söco¶


	)

48 
	#__DECL_SIMD_log


	)

49 
	#__DECL_SIMD_logf


	)

50 
	#__DECL_SIMD_logl


	)

52 
	#__DECL_SIMD_exp


	)

53 
	#__DECL_SIMD_expf


	)

54 
	#__DECL_SIMD_ex∂


	)

56 
	#__DECL_SIMD_pow


	)

57 
	#__DECL_SIMD_powf


	)

58 
	#__DECL_SIMD_powl


	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 #ifde‡
__USE_XOPEN2K


43 
	#__√ed_time•ec


	)

45 
	~<time.h
>

46 
	#__√ed_timevÆ


	)

47 
	~<bôs/time.h
>

49 #i‚de‡
__su£c⁄ds_t_deföed


50 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

51 
	#__su£c⁄ds_t_deföed


	)

56 
	t__fd_mask
;

59 #unde‡
__NFDBITS


61 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

62 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

63 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

70 #ifde‡
__USE_XOPEN


71 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

72 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

74 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

75 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

77 } 
	tfd_£t
;

80 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

82 #ifde‡
__USE_MISC


84 
__fd_mask
 
	tfd_mask
;

87 
	#NFDBITS
 
__NFDBITS


	)

92 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

93 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

94 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

95 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

98 
__BEGIN_DECLS


108 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

109 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

110 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

111 
timevÆ
 *
__ª°ri˘
 
__timeout
);

113 #ifde‡
__USE_XOPEN2K


120 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

121 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

122 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

123 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

124 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

129 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


130 
	~<bôs/£À˘2.h
>

133 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_SETOFFSET
 0x0100

	)

64 
	#ADJ_MICRO
 0x1000

	)

65 
	#ADJ_NANO
 0x2000

	)

66 
	#ADJ_TICK
 0x4000

	)

67 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

68 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

71 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

72 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

73 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

74 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

75 
	#MOD_STATUS
 
ADJ_STATUS


	)

76 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

77 
	#MOD_CLKB
 
ADJ_TICK


	)

78 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

79 
	#MOD_TAI
 
ADJ_TAI


	)

80 
	#MOD_MICRO
 
ADJ_MICRO


	)

81 
	#MOD_NANO
 
ADJ_NANO


	)

85 
	#STA_PLL
 0x0001

	)

86 
	#STA_PPSFREQ
 0x0002

	)

87 
	#STA_PPSTIME
 0x0004

	)

88 
	#STA_FLL
 0x0008

	)

90 
	#STA_INS
 0x0010

	)

91 
	#STA_DEL
 0x0020

	)

92 
	#STA_UNSYNC
 0x0040

	)

93 
	#STA_FREQHOLD
 0x0080

	)

95 
	#STA_PPSSIGNAL
 0x0100

	)

96 
	#STA_PPSJITTER
 0x0200

	)

97 
	#STA_PPSWANDER
 0x0400

	)

98 
	#STA_PPSERROR
 0x0800

	)

100 
	#STA_CLOCKERR
 0x1000

	)

101 
	#STA_NANO
 0x2000

	)

102 
	#STA_MODE
 0x4000

	)

103 
	#STA_CLK
 0x8000

	)

106 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

107 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@
1
.
1
/usr/include
127
4247
/users/info/etu-s4/royetju/Jimpe/DoubleBuffer.cpp
/users/info/etu-s4/royetju/Jimpe/DoubleBuffer.h
/users/info/etu-s4/royetju/Jimpe/GeneratePaletteThread.cpp
/users/info/etu-s4/royetju/Jimpe/GeneratePaletteThread.h
/users/info/etu-s4/royetju/Jimpe/KDTree.cpp
/users/info/etu-s4/royetju/Jimpe/KDTree.h
/users/info/etu-s4/royetju/Jimpe/MyFrame.cpp
/users/info/etu-s4/royetju/Jimpe/MyFrame.h
/users/info/etu-s4/royetju/Jimpe/MyImage.cpp
/users/info/etu-s4/royetju/Jimpe/MyImage.h
/users/info/etu-s4/royetju/Jimpe/MyPanel.cpp
/users/info/etu-s4/royetju/Jimpe/MyPanel.h
/users/info/etu-s4/royetju/Jimpe/MyPosterizeDialog.cpp
/users/info/etu-s4/royetju/Jimpe/MyPosterizeDialog.h
/users/info/etu-s4/royetju/Jimpe/MyRotateDialog.cpp
/users/info/etu-s4/royetju/Jimpe/MyRotateDialog.h
/users/info/etu-s4/royetju/Jimpe/MyThresholdDialog.cpp
/users/info/etu-s4/royetju/Jimpe/MyThresholdDialog.h
/users/info/etu-s4/royetju/Jimpe/QuantizationPanel.cpp
/users/info/etu-s4/royetju/Jimpe/QuantizationPanel.h
/users/info/etu-s4/royetju/Jimpe/RotatePanel.cpp
/users/info/etu-s4/royetju/Jimpe/RotatePanel.h
/users/info/etu-s4/royetju/Jimpe/VideoStream.cpp
/users/info/etu-s4/royetju/Jimpe/VideoStream.h
/users/info/etu-s4/royetju/Jimpe/oldFunctions.cpp
/users/info/etu-s4/royetju/Jimpe/tp2App.cpp
/users/info/etu-s4/royetju/Jimpe/tp2App.h
/users/info/etu-s4/royetju/Jimpe/tp2Main.cpp
/users/info/etu-s4/royetju/Jimpe/tp2Main.h
/usr/include/opencv2/core/core.hpp
/usr/include/opencv2/opencv.hpp
DoubleBuffer.h
GeneratePaletteThread.h
KDTree.h
MyFrame.h
MyImage.h
MyPanel.h
MyPosterizeDialog.h
MyRotateDialog.h
MyThresholdDialog.h
QuantizationPanel.h
RotatePanel.h
VideoStream.h
tp2App.h
/usr/include/limits.h
/usr/include/opencv2/calib3d/calib3d.hpp
/usr/include/opencv2/contrib/contrib.hpp
/usr/include/opencv2/core/core_c.h
/usr/include/opencv2/core/mat.hpp
/usr/include/opencv2/core/operations.hpp
/usr/include/opencv2/core/types_c.h
/usr/include/opencv2/core/version.hpp
/usr/include/opencv2/features2d/features2d.hpp
/usr/include/opencv2/flann/miniflann.hpp
/usr/include/opencv2/highgui/highgui.hpp
/usr/include/opencv2/highgui/highgui_c.h
/usr/include/opencv2/imgproc/imgproc.hpp
/usr/include/opencv2/imgproc/imgproc_c.h
/usr/include/opencv2/ml/ml.hpp
/usr/include/opencv2/objdetect/objdetect.hpp
/usr/include/opencv2/photo/photo.hpp
/usr/include/opencv2/video/video.hpp
/usr/include/assert.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/math.h
/usr/include/opencv2/contrib/openfabmap.hpp
/usr/include/opencv2/contrib/retina.hpp
/usr/include/opencv2/flann/defines.h
/usr/include/opencv2/imgproc/types_c.h
/usr/include/opencv2/photo/photo_c.h
/usr/include/opencv2/video/background_segm.hpp
/usr/include/opencv2/video/tracking.hpp
/usr/include/stdint.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/local_lim.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/types.h
/usr/include/endian.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/timex.h
